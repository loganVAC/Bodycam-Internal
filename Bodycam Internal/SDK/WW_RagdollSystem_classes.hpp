#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WW_RagdollSystem

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass WW_RagdollSystem.WW_RagdollSystem_C
// 0x0100 (0x01A0 - 0x00A0)
class UWW_RagdollSystem_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class ACharacter*                             Character;                                         // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 Mesh;                                              // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	double                                        Vacuum_Limit;                                      // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                GroundLocation;                                    // 0x00C0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         GroundDistance;                                    // 0x00D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Allow_Wind;                                        // 0x00DC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Allow_RagdollOnLegde;                              // 0x00DD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Ragdoll_On_Ground__;                               // 0x00DE(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DF[0x1];                                       // 0x00DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Socket_Hit_Ragdoll;                                // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   Allowed_Hit_Bone;                                  // 0x00E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UNiagaraComponent*>              BloodSquirt;                                       // 0x00F0(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)
	struct FVector                                NewLastRagdollVelocity;                            // 0x0100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LastRagdollVelocity;                               // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RagdollState;                                      // 0x0130(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                RagdollLocation;                                   // 0x0138(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ServerRagdollPull;                                 // 0x0150(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RagdollFaceUp;                                     // 0x0158(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FullyRagdoll_;                                     // 0x0159(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	bool                                          HandCoverInjuries_;                                // 0x015A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_15B[0x5];                                      // 0x015B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      BloodPool;                                         // 0x0160(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxBloodSquirt;                                    // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          AllowBloodTrail;                                   // 0x016C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          UpdateCapsuleLocation;                             // 0x016D(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_16E[0x2];                                      // 0x016E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UWW_SurvivorStatus_C*                   Survivor_Componant;                                // 0x0170(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanStandUp_;                                       // 0x0178(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Burned;                                            // 0x0179(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17A[0x6];                                      // 0x017A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UNiagaraComponent*                      FIre;                                              // 0x0180(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 Hit_Actor;                                         // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        MaxMuscularStrenght;                               // 0x0190(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        SpeedRagdoll;                                      // 0x0198(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Add_Impulse(const struct FVector& Impulse, const struct FVector& Location, class FName BoneName);
	void Add_Impulse__Multicast_(const struct FVector& Impulse, const struct FVector& Location, class FName BoneName);
	void Add_Impulse__Server_(const struct FVector& Impulse, const struct FVector& Location, class FName BoneName);
	void BloodPool__Multicast_();
	void Burned__Server_(bool Burned_0);
	void ExecuteUbergraph_WW_RagdollSystem(int32 EntryPoint);
	void HandRagdollLocation();
	void Init(class ACharacter* Character_0);
	void InRagdoll();
	void OnRep_Burned();
	void OnRep_FullyRagdoll_();
	void Ragdoll_End__Multicast_();
	void Ragdoll_End__Replicated_();
	void Ragdoll_Start__Multicast_();
	void Ragdoll_Start__Replicated_(double Delay);
	void Ragdoll_Tick();
	void RagdollEnd();
	void RagdollFix();
	void RagdollStart();
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void SpawnSmokeCharacter();
	void UpdateRagdollLocationRotation();
	void Wind();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WW_RagdollSystem_C">();
	}
	static class UWW_RagdollSystem_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWW_RagdollSystem_C>();
	}
};
static_assert(alignof(UWW_RagdollSystem_C) == 0x000008, "Wrong alignment on UWW_RagdollSystem_C");
static_assert(sizeof(UWW_RagdollSystem_C) == 0x0001A0, "Wrong size on UWW_RagdollSystem_C");
static_assert(offsetof(UWW_RagdollSystem_C, UberGraphFrame) == 0x0000A0, "Member 'UWW_RagdollSystem_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Character) == 0x0000A8, "Member 'UWW_RagdollSystem_C::Character' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Mesh) == 0x0000B0, "Member 'UWW_RagdollSystem_C::Mesh' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Vacuum_Limit) == 0x0000B8, "Member 'UWW_RagdollSystem_C::Vacuum_Limit' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, GroundLocation) == 0x0000C0, "Member 'UWW_RagdollSystem_C::GroundLocation' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, GroundDistance) == 0x0000D8, "Member 'UWW_RagdollSystem_C::GroundDistance' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Allow_Wind) == 0x0000DC, "Member 'UWW_RagdollSystem_C::Allow_Wind' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Allow_RagdollOnLegde) == 0x0000DD, "Member 'UWW_RagdollSystem_C::Allow_RagdollOnLegde' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Ragdoll_On_Ground__) == 0x0000DE, "Member 'UWW_RagdollSystem_C::Ragdoll_On_Ground__' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Socket_Hit_Ragdoll) == 0x0000E0, "Member 'UWW_RagdollSystem_C::Socket_Hit_Ragdoll' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Allowed_Hit_Bone) == 0x0000E8, "Member 'UWW_RagdollSystem_C::Allowed_Hit_Bone' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, BloodSquirt) == 0x0000F0, "Member 'UWW_RagdollSystem_C::BloodSquirt' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, NewLastRagdollVelocity) == 0x000100, "Member 'UWW_RagdollSystem_C::NewLastRagdollVelocity' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, LastRagdollVelocity) == 0x000118, "Member 'UWW_RagdollSystem_C::LastRagdollVelocity' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, RagdollState) == 0x000130, "Member 'UWW_RagdollSystem_C::RagdollState' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, RagdollLocation) == 0x000138, "Member 'UWW_RagdollSystem_C::RagdollLocation' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, ServerRagdollPull) == 0x000150, "Member 'UWW_RagdollSystem_C::ServerRagdollPull' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, RagdollFaceUp) == 0x000158, "Member 'UWW_RagdollSystem_C::RagdollFaceUp' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, FullyRagdoll_) == 0x000159, "Member 'UWW_RagdollSystem_C::FullyRagdoll_' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, HandCoverInjuries_) == 0x00015A, "Member 'UWW_RagdollSystem_C::HandCoverInjuries_' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, BloodPool) == 0x000160, "Member 'UWW_RagdollSystem_C::BloodPool' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, MaxBloodSquirt) == 0x000168, "Member 'UWW_RagdollSystem_C::MaxBloodSquirt' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, AllowBloodTrail) == 0x00016C, "Member 'UWW_RagdollSystem_C::AllowBloodTrail' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, UpdateCapsuleLocation) == 0x00016D, "Member 'UWW_RagdollSystem_C::UpdateCapsuleLocation' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Survivor_Componant) == 0x000170, "Member 'UWW_RagdollSystem_C::Survivor_Componant' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, CanStandUp_) == 0x000178, "Member 'UWW_RagdollSystem_C::CanStandUp_' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Burned) == 0x000179, "Member 'UWW_RagdollSystem_C::Burned' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, FIre) == 0x000180, "Member 'UWW_RagdollSystem_C::FIre' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, Hit_Actor) == 0x000188, "Member 'UWW_RagdollSystem_C::Hit_Actor' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, MaxMuscularStrenght) == 0x000190, "Member 'UWW_RagdollSystem_C::MaxMuscularStrenght' has a wrong offset!");
static_assert(offsetof(UWW_RagdollSystem_C, SpeedRagdoll) == 0x000198, "Member 'UWW_RagdollSystem_C::SpeedRagdoll' has a wrong offset!");

}

