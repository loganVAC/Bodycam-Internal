#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CameraControlTable

#include "Basic.hpp"

#include "ALS_OverlayState_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CameraControlTable.CameraControlTable_C.CanInterract
// 0x0001 (0x0001 - 0x0000)
struct CameraControlTable_C_CanInterract final
{
public:
	bool                                          Interract_;                                        // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_CanInterract) == 0x000001, "Wrong alignment on CameraControlTable_C_CanInterract");
static_assert(sizeof(CameraControlTable_C_CanInterract) == 0x000001, "Wrong size on CameraControlTable_C_CanInterract");
static_assert(offsetof(CameraControlTable_C_CanInterract, Interract_) == 0x000000, "Member 'CameraControlTable_C_CanInterract::Interract_' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.CanPickup
// 0x0010 (0x0010 - 0x0000)
struct CameraControlTable_C_CanPickup final
{
public:
	class AALS_AnimMan_CharacterBP_C*             Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Pickup_;                                           // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_CanPickup) == 0x000008, "Wrong alignment on CameraControlTable_C_CanPickup");
static_assert(sizeof(CameraControlTable_C_CanPickup) == 0x000010, "Wrong size on CameraControlTable_C_CanPickup");
static_assert(offsetof(CameraControlTable_C_CanPickup, Player) == 0x000000, "Member 'CameraControlTable_C_CanPickup::Player' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_CanPickup, Pickup_) == 0x000008, "Member 'CameraControlTable_C_CanPickup::Pickup_' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.CanSwap?
// 0x0001 (0x0001 - 0x0000)
struct CameraControlTable_C_CanSwap_ final
{
public:
	bool                                          IsItemSwap_;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_CanSwap_) == 0x000001, "Wrong alignment on CameraControlTable_C_CanSwap_");
static_assert(sizeof(CameraControlTable_C_CanSwap_) == 0x000001, "Wrong size on CameraControlTable_C_CanSwap_");
static_assert(offsetof(CameraControlTable_C_CanSwap_, IsItemSwap_) == 0x000000, "Member 'CameraControlTable_C_CanSwap_::IsItemSwap_' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.Drop
// 0x0008 (0x0008 - 0x0000)
struct CameraControlTable_C_Drop final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_Drop) == 0x000008, "Wrong alignment on CameraControlTable_C_Drop");
static_assert(sizeof(CameraControlTable_C_Drop) == 0x000008, "Wrong size on CameraControlTable_C_Drop");
static_assert(offsetof(CameraControlTable_C_Drop, Delay) == 0x000000, "Member 'CameraControlTable_C_Drop::Delay' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.ExecuteUbergraph_CameraControlTable
// 0x0110 (0x0110 - 0x0000)
struct CameraControlTable_C_ExecuteUbergraph_CameraControlTable final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetListOfPlayer_PlayersReturn;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_CustomEvent_Target;                         // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            CallFunc_GetController_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0040(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACamera_C*                              CallFunc_Update_Nearest_Camera_to_Player_Camera;   // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x6];                                       // 0x008A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_Owner_1;                              // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AController*                            CallFunc_GetController_ReturnValue_1;              // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_Event_Owner;                                // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Z_Angle;                              // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_ResetDoor;                            // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHUD_ItemDetection_C*                   K2Node_DynamicCast_AsHUD_Item_Detection;           // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3[0x5];                                       // 0x00D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraTransititon_C*                   CallFunc_Create_ReturnValue;                       // 0x00D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_IsDead_self_CastInput;                    // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Zombie_C*                           K2Node_DynamicCast_AsPC_Zombie;                    // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable) == 0x000008, "Wrong alignment on CameraControlTable_C_ExecuteUbergraph_CameraControlTable");
static_assert(sizeof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable) == 0x000110, "Wrong size on CameraControlTable_C_ExecuteUbergraph_CameraControlTable");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, EntryPoint) == 0x000000, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::EntryPoint' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_GetListOfPlayer_PlayersReturn) == 0x000008, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_GetListOfPlayer_PlayersReturn' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_CustomEvent_Target) == 0x000020, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x000028, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_GetController_ReturnValue) == 0x000038, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_GetController_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Conv_IntToString_ReturnValue) == 0x000040, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_CustomEvent_Index) == 0x000050, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Greater_IntInt_ReturnValue) == 0x000054, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_SelectInt_ReturnValue) == 0x000058, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Greater_IntInt_ReturnValue_1) == 0x00005D, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_BooleanOR_ReturnValue) == 0x00005E, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000060, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Array_Get_Item) == 0x000078, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Update_Nearest_Camera_to_Player_Camera) == 0x000080, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Update_Nearest_Camera_to_Player_Camera' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, Temp_bool_Has_Been_Initd_Variable) == 0x000088, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000089, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_Event_Owner_1) == 0x000090, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_Event_Owner_1' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_Event_Delay) == 0x000098, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_GetController_ReturnValue_1) == 0x0000A0, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_GetController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_Event_Owner) == 0x0000A8, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_Event_Owner' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_Event_Z_Angle) == 0x0000B0, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_Event_Z_Angle' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_Event_ResetDoor) == 0x0000B8, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_Event_ResetDoor' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_GetWidget_ReturnValue) == 0x0000C0, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_DynamicCast_AsHUD_Item_Detection) == 0x0000C8, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_DynamicCast_AsHUD_Item_Detection' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_DynamicCast_bSuccess_1) == 0x0000D0, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, Temp_bool_IsClosed_Variable) == 0x0000D1, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_IsValid_ReturnValue_1) == 0x0000D2, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_Create_ReturnValue) == 0x0000D8, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_IsValid_ReturnValue_2) == 0x0000E0, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_IsDead_self_CastInput) == 0x0000E8, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, CallFunc_IsDead_Dead_) == 0x0000F8, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_DynamicCast_AsPC_Zombie) == 0x000100, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_DynamicCast_AsPC_Zombie' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_ExecuteUbergraph_CameraControlTable, K2Node_DynamicCast_bSuccess_2) == 0x000108, "Member 'CameraControlTable_C_ExecuteUbergraph_CameraControlTable::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.GetItemPriority
// 0x0004 (0x0004 - 0x0000)
struct CameraControlTable_C_GetItemPriority final
{
public:
	int32                                         Priority;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_GetItemPriority) == 0x000004, "Wrong alignment on CameraControlTable_C_GetItemPriority");
static_assert(sizeof(CameraControlTable_C_GetItemPriority) == 0x000004, "Wrong size on CameraControlTable_C_GetItemPriority");
static_assert(offsetof(CameraControlTable_C_GetItemPriority, Priority) == 0x000000, "Member 'CameraControlTable_C_GetItemPriority::Priority' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.GetListOfPlayer
// 0x0060 (0x0060 - 0x0000)
struct CameraControlTable_C_GetListOfPlayer final
{
public:
	TArray<class AALS_AnimMan_CharacterBP_C*>     PlayersReturn;                                     // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AALS_AnimMan_CharacterBP_C*>     Players;                                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_GetListOfPlayer) == 0x000008, "Wrong alignment on CameraControlTable_C_GetListOfPlayer");
static_assert(sizeof(CameraControlTable_C_GetListOfPlayer) == 0x000060, "Wrong size on CameraControlTable_C_GetListOfPlayer");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, PlayersReturn) == 0x000000, "Member 'CameraControlTable_C_GetListOfPlayer::PlayersReturn' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, Players) == 0x000010, "Member 'CameraControlTable_C_GetListOfPlayer::Players' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'CameraControlTable_C_GetListOfPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, Temp_int_Array_Index_Variable) == 0x000024, "Member 'CameraControlTable_C_GetListOfPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'CameraControlTable_C_GetListOfPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'CameraControlTable_C_GetListOfPlayer::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, CallFunc_Array_Get_Item) == 0x000040, "Member 'CameraControlTable_C_GetListOfPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, CallFunc_K2_GetPawn_ReturnValue) == 0x000048, "Member 'CameraControlTable_C_GetListOfPlayer::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, CallFunc_Array_AddUnique_ReturnValue) == 0x000050, "Member 'CameraControlTable_C_GetListOfPlayer::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000054, "Member 'CameraControlTable_C_GetListOfPlayer::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'CameraControlTable_C_GetListOfPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_GetListOfPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'CameraControlTable_C_GetListOfPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.GetOffset
// 0x0060 (0x0060 - 0x0000)
struct CameraControlTable_C_GetOffset final
{
public:
	struct FTransform                             Offset;                                            // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_GetOffset) == 0x000010, "Wrong alignment on CameraControlTable_C_GetOffset");
static_assert(sizeof(CameraControlTable_C_GetOffset) == 0x000060, "Wrong size on CameraControlTable_C_GetOffset");
static_assert(offsetof(CameraControlTable_C_GetOffset, Offset) == 0x000000, "Member 'CameraControlTable_C_GetOffset::Offset' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.GetOverlay
// 0x0001 (0x0001 - 0x0000)
struct CameraControlTable_C_GetOverlay final
{
public:
	EALS_OverlayState                             Overlay;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_GetOverlay) == 0x000001, "Wrong alignment on CameraControlTable_C_GetOverlay");
static_assert(sizeof(CameraControlTable_C_GetOverlay) == 0x000001, "Wrong size on CameraControlTable_C_GetOverlay");
static_assert(offsetof(CameraControlTable_C_GetOverlay, Overlay) == 0x000000, "Member 'CameraControlTable_C_GetOverlay::Overlay' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.GetSocketToAttach
// 0x0008 (0x0008 - 0x0000)
struct CameraControlTable_C_GetSocketToAttach final
{
public:
	class FName                                   SocketToAttach;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_GetSocketToAttach) == 0x000004, "Wrong alignment on CameraControlTable_C_GetSocketToAttach");
static_assert(sizeof(CameraControlTable_C_GetSocketToAttach) == 0x000008, "Wrong size on CameraControlTable_C_GetSocketToAttach");
static_assert(offsetof(CameraControlTable_C_GetSocketToAttach, SocketToAttach) == 0x000000, "Member 'CameraControlTable_C_GetSocketToAttach::SocketToAttach' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.Interract
// 0x0008 (0x0008 - 0x0000)
struct CameraControlTable_C_Interract final
{
public:
	class APawn*                                  Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_Interract) == 0x000008, "Wrong alignment on CameraControlTable_C_Interract");
static_assert(sizeof(CameraControlTable_C_Interract) == 0x000008, "Wrong size on CameraControlTable_C_Interract");
static_assert(offsetof(CameraControlTable_C_Interract, Owner_0) == 0x000000, "Member 'CameraControlTable_C_Interract::Owner_0' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.InterractDoor
// 0x0010 (0x0010 - 0x0000)
struct CameraControlTable_C_InterractDoor final
{
public:
	double                                        Z_Angle;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ResetDoor;                                         // 0x0008(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_InterractDoor) == 0x000008, "Wrong alignment on CameraControlTable_C_InterractDoor");
static_assert(sizeof(CameraControlTable_C_InterractDoor) == 0x000010, "Wrong size on CameraControlTable_C_InterractDoor");
static_assert(offsetof(CameraControlTable_C_InterractDoor, Z_Angle) == 0x000000, "Member 'CameraControlTable_C_InterractDoor::Z_Angle' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_InterractDoor, ResetDoor) == 0x000008, "Member 'CameraControlTable_C_InterractDoor::ResetDoor' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.Interreact (Server)
// 0x0008 (0x0008 - 0x0000)
struct CameraControlTable_C_Interreact__Server_ final
{
public:
	class APawn*                                  Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_Interreact__Server_) == 0x000008, "Wrong alignment on CameraControlTable_C_Interreact__Server_");
static_assert(sizeof(CameraControlTable_C_Interreact__Server_) == 0x000008, "Wrong size on CameraControlTable_C_Interreact__Server_");
static_assert(offsetof(CameraControlTable_C_Interreact__Server_, Target) == 0x000000, "Member 'CameraControlTable_C_Interreact__Server_::Target' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.IsDefaultHandle
// 0x0001 (0x0001 - 0x0000)
struct CameraControlTable_C_IsDefaultHandle final
{
public:
	bool                                          IsDefaultHandle_;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_IsDefaultHandle) == 0x000001, "Wrong alignment on CameraControlTable_C_IsDefaultHandle");
static_assert(sizeof(CameraControlTable_C_IsDefaultHandle) == 0x000001, "Wrong size on CameraControlTable_C_IsDefaultHandle");
static_assert(offsetof(CameraControlTable_C_IsDefaultHandle, IsDefaultHandle_) == 0x000000, "Member 'CameraControlTable_C_IsDefaultHandle::IsDefaultHandle_' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.Pickup
// 0x0008 (0x0008 - 0x0000)
struct CameraControlTable_C_Pickup final
{
public:
	class AALS_AnimMan_CharacterBP_C*             Owner_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_Pickup) == 0x000008, "Wrong alignment on CameraControlTable_C_Pickup");
static_assert(sizeof(CameraControlTable_C_Pickup) == 0x000008, "Wrong size on CameraControlTable_C_Pickup");
static_assert(offsetof(CameraControlTable_C_Pickup, Owner_0) == 0x000000, "Member 'CameraControlTable_C_Pickup::Owner_0' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.SwitchAnimation
// 0x0020 (0x0020 - 0x0000)
struct CameraControlTable_C_SwitchAnimation final
{
public:
	class UAnimMontage*                           In;                                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              InSound;                                           // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USoundCue*                              OutSound;                                          // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_SwitchAnimation) == 0x000008, "Wrong alignment on CameraControlTable_C_SwitchAnimation");
static_assert(sizeof(CameraControlTable_C_SwitchAnimation) == 0x000020, "Wrong size on CameraControlTable_C_SwitchAnimation");
static_assert(offsetof(CameraControlTable_C_SwitchAnimation, In) == 0x000000, "Member 'CameraControlTable_C_SwitchAnimation::In' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_SwitchAnimation, Out) == 0x000008, "Member 'CameraControlTable_C_SwitchAnimation::Out' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_SwitchAnimation, InSound) == 0x000010, "Member 'CameraControlTable_C_SwitchAnimation::InSound' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_SwitchAnimation, OutSound) == 0x000018, "Member 'CameraControlTable_C_SwitchAnimation::OutSound' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.SwitchCamera
// 0x0004 (0x0004 - 0x0000)
struct CameraControlTable_C_SwitchCamera final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_SwitchCamera) == 0x000004, "Wrong alignment on CameraControlTable_C_SwitchCamera");
static_assert(sizeof(CameraControlTable_C_SwitchCamera) == 0x000004, "Wrong size on CameraControlTable_C_SwitchCamera");
static_assert(offsetof(CameraControlTable_C_SwitchCamera, Index_0) == 0x000000, "Member 'CameraControlTable_C_SwitchCamera::Index_0' has a wrong offset!");

// Function CameraControlTable.CameraControlTable_C.Update Nearest Camera to Player
// 0x0278 (0x0278 - 0x0000)
struct CameraControlTable_C_Update_Nearest_Camera_to_Player final
{
public:
	class APawn*                                  Player;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACamera_C*                              Camera_0;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CameraNearestByDistance;                           // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0048(0x0010)(ConstParm, ReferenceParm)
	float                                         CallFunc_FindNearestActor_Distance;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FindNearestActor_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ACamera_C*>                      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	class ACamera_C*                              K2Node_DynamicCast_AsCamera;                       // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACamera_C*                              CallFunc_Array_Get_Item;                           // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00B8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0220(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0248(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(CameraControlTable_C_Update_Nearest_Camera_to_Player) == 0x000008, "Wrong alignment on CameraControlTable_C_Update_Nearest_Camera_to_Player");
static_assert(sizeof(CameraControlTable_C_Update_Nearest_Camera_to_Player) == 0x000278, "Wrong size on CameraControlTable_C_Update_Nearest_Camera_to_Player");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, Player) == 0x000000, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::Player' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, Camera_0) == 0x000008, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::Camera_0' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CameraNearestByDistance) == 0x000010, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CameraNearestByDistance' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000020, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, Temp_int_Array_Index_Variable) == 0x000038, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, Temp_object_Variable) == 0x000048, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_FindNearestActor_Distance) == 0x000058, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_FindNearestActor_Distance' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_FindNearestActor_ReturnValue) == 0x000060, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_FindNearestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_GetAllActorsOfClass_OutActors) == 0x000068, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, K2Node_DynamicCast_AsCamera) == 0x000078, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::K2Node_DynamicCast_AsCamera' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_Array_Get_Item) == 0x000088, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_Array_AddUnique_ReturnValue) == 0x000090, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000098, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_LineTraceSingle_OutHit) == 0x0000B8, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_LineTraceSingle_ReturnValue) == 0x0001A0, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_Less_IntInt_ReturnValue) == 0x0001A1, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_bBlockingHit) == 0x0001A2, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001A3, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_Time) == 0x0001A4, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_Distance) == 0x0001A8, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_Location) == 0x0001B0, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_ImpactPoint) == 0x0001C8, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_Normal) == 0x0001E0, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_ImpactNormal) == 0x0001F8, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_PhysMat) == 0x000210, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_HitActor) == 0x000218, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_HitComponent) == 0x000220, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_HitBoneName) == 0x000228, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_BoneName) == 0x000230, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_HitItem) == 0x000238, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_ElementIndex) == 0x00023C, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_FaceIndex) == 0x000240, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_TraceStart) == 0x000248, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(CameraControlTable_C_Update_Nearest_Camera_to_Player, CallFunc_BreakHitResult_TraceEnd) == 0x000260, "Member 'CameraControlTable_C_Update_Nearest_Camera_to_Player::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");

}

