#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Vhs

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_Vhs.WBP_Vhs_C
// 0x01E0 (0x0460 - 0x0280)
class UWBP_Vhs_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UTextBlock*                             OneND;                                             // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             TwoND;                                             // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             ThreeND;                                           // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FourND;                                            // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             FiveND;                                            // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SixND;                                             // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 BATTERIE;                                          // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Compass;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 CompassArrow;                                      // 0x02C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             CurrentPlayer_TXT;                                 // 0x02D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Date;                                              // 0x02D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EarlyAccess;                                       // 0x02E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             EarlyAccess_1;                                     // 0x02E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Weapon;                                      // 0x02F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_Weapon_FireSelect;                           // 0x02F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Minimap;                                           // 0x0300(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Nickname;                                          // 0x0308(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ProgressBarSegmented_C*            ProgressBar_Dosimeter;                             // 0x0310(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ProgressBarSegmented_C*            ProgressBar_Environment;                           // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_ProgressBarSegmented_C*            ProgressBar_Oxygen;                                // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UHorizontalBox*                         RECBOX;                                            // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class URetainerBox*                           RetainerBox_1;                                     // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                Status_EKG;                                        // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusIcon_C*                      StatusIcon_Dosimeter;                              // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusIcon_C*                      StatusIcon_Health;                                 // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusIcon_C*                      StatusIcon_Oxygen;                                 // 0x0350(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusIcon_C*                      StatusIcon_Radiation;                              // 0x0358(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusIcon_C*                      StatusIcon_Radio;                                  // 0x0360(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_StatusIcon_C*                      StatusIcon_Temperature;                            // 0x0368(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             SteamID;                                           // 0x0370(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 TalkIMG;                                           // 0x0378(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_AmmoGrenade;                                  // 0x0380(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_AmmoInventoryTotal;                           // 0x0388(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_AmmoMagazineCapacity;                         // 0x0390(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_AmmoMagazineRemain;                           // 0x0398(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Text_CompassHeading;                               // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextLabel_C*                       TextLabel_Dosimeter;                               // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextLabel_C*                       TextLabel_EKG;                                     // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextLabel_C*                       TextLabel_Environment;                             // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextLabel_C*                       TextLabel_Oxygen;                                  // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextLabel_C*                       TextLabel_Radiation;                               // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_TextLabel_C*                       TextLabel_Radio;                                   // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             Version;                                           // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class FText                                   TitleText;                                         // 0x03E0(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   TwondTitleText;                                    // 0x03F8(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Threend_Tiltle_Text;                               // 0x0410(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	class FText                                   Fournd_Title_Text;                                 // 0x0428(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	ESlateVisibility                              REC_visibility;                                    // 0x0440(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	ESlateVisibility                              BATTERIE_Visibility;                               // 0x0441(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_442[0x6];                                      // 0x0442(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Fivend_Title_Text_0;                               // 0x0448(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)

public:
	void Construct();
	void ExecuteUbergraph_WBP_Vhs(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_Vhs_C">();
	}
	static class UWBP_Vhs_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_Vhs_C>();
	}
};
static_assert(alignof(UWBP_Vhs_C) == 0x000008, "Wrong alignment on UWBP_Vhs_C");
static_assert(sizeof(UWBP_Vhs_C) == 0x000460, "Wrong size on UWBP_Vhs_C");
static_assert(offsetof(UWBP_Vhs_C, UberGraphFrame) == 0x000280, "Member 'UWBP_Vhs_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, OneND) == 0x000288, "Member 'UWBP_Vhs_C::OneND' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TwoND) == 0x000290, "Member 'UWBP_Vhs_C::TwoND' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, ThreeND) == 0x000298, "Member 'UWBP_Vhs_C::ThreeND' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, FourND) == 0x0002A0, "Member 'UWBP_Vhs_C::FourND' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, FiveND) == 0x0002A8, "Member 'UWBP_Vhs_C::FiveND' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, SixND) == 0x0002B0, "Member 'UWBP_Vhs_C::SixND' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, BATTERIE) == 0x0002B8, "Member 'UWBP_Vhs_C::BATTERIE' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Compass) == 0x0002C0, "Member 'UWBP_Vhs_C::Compass' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, CompassArrow) == 0x0002C8, "Member 'UWBP_Vhs_C::CompassArrow' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, CurrentPlayer_TXT) == 0x0002D0, "Member 'UWBP_Vhs_C::CurrentPlayer_TXT' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Date) == 0x0002D8, "Member 'UWBP_Vhs_C::Date' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, EarlyAccess) == 0x0002E0, "Member 'UWBP_Vhs_C::EarlyAccess' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, EarlyAccess_1) == 0x0002E8, "Member 'UWBP_Vhs_C::EarlyAccess_1' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Image_Weapon) == 0x0002F0, "Member 'UWBP_Vhs_C::Image_Weapon' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Image_Weapon_FireSelect) == 0x0002F8, "Member 'UWBP_Vhs_C::Image_Weapon_FireSelect' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Minimap) == 0x000300, "Member 'UWBP_Vhs_C::Minimap' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Nickname) == 0x000308, "Member 'UWBP_Vhs_C::Nickname' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, ProgressBar_Dosimeter) == 0x000310, "Member 'UWBP_Vhs_C::ProgressBar_Dosimeter' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, ProgressBar_Environment) == 0x000318, "Member 'UWBP_Vhs_C::ProgressBar_Environment' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, ProgressBar_Oxygen) == 0x000320, "Member 'UWBP_Vhs_C::ProgressBar_Oxygen' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, RECBOX) == 0x000328, "Member 'UWBP_Vhs_C::RECBOX' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, RetainerBox_1) == 0x000330, "Member 'UWBP_Vhs_C::RetainerBox_1' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Status_EKG) == 0x000338, "Member 'UWBP_Vhs_C::Status_EKG' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, StatusIcon_Dosimeter) == 0x000340, "Member 'UWBP_Vhs_C::StatusIcon_Dosimeter' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, StatusIcon_Health) == 0x000348, "Member 'UWBP_Vhs_C::StatusIcon_Health' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, StatusIcon_Oxygen) == 0x000350, "Member 'UWBP_Vhs_C::StatusIcon_Oxygen' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, StatusIcon_Radiation) == 0x000358, "Member 'UWBP_Vhs_C::StatusIcon_Radiation' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, StatusIcon_Radio) == 0x000360, "Member 'UWBP_Vhs_C::StatusIcon_Radio' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, StatusIcon_Temperature) == 0x000368, "Member 'UWBP_Vhs_C::StatusIcon_Temperature' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, SteamID) == 0x000370, "Member 'UWBP_Vhs_C::SteamID' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TalkIMG) == 0x000378, "Member 'UWBP_Vhs_C::TalkIMG' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Text_AmmoGrenade) == 0x000380, "Member 'UWBP_Vhs_C::Text_AmmoGrenade' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Text_AmmoInventoryTotal) == 0x000388, "Member 'UWBP_Vhs_C::Text_AmmoInventoryTotal' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Text_AmmoMagazineCapacity) == 0x000390, "Member 'UWBP_Vhs_C::Text_AmmoMagazineCapacity' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Text_AmmoMagazineRemain) == 0x000398, "Member 'UWBP_Vhs_C::Text_AmmoMagazineRemain' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Text_CompassHeading) == 0x0003A0, "Member 'UWBP_Vhs_C::Text_CompassHeading' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TextLabel_Dosimeter) == 0x0003A8, "Member 'UWBP_Vhs_C::TextLabel_Dosimeter' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TextLabel_EKG) == 0x0003B0, "Member 'UWBP_Vhs_C::TextLabel_EKG' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TextLabel_Environment) == 0x0003B8, "Member 'UWBP_Vhs_C::TextLabel_Environment' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TextLabel_Oxygen) == 0x0003C0, "Member 'UWBP_Vhs_C::TextLabel_Oxygen' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TextLabel_Radiation) == 0x0003C8, "Member 'UWBP_Vhs_C::TextLabel_Radiation' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TextLabel_Radio) == 0x0003D0, "Member 'UWBP_Vhs_C::TextLabel_Radio' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Version) == 0x0003D8, "Member 'UWBP_Vhs_C::Version' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TitleText) == 0x0003E0, "Member 'UWBP_Vhs_C::TitleText' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, TwondTitleText) == 0x0003F8, "Member 'UWBP_Vhs_C::TwondTitleText' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Threend_Tiltle_Text) == 0x000410, "Member 'UWBP_Vhs_C::Threend_Tiltle_Text' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Fournd_Title_Text) == 0x000428, "Member 'UWBP_Vhs_C::Fournd_Title_Text' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, REC_visibility) == 0x000440, "Member 'UWBP_Vhs_C::REC_visibility' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, BATTERIE_Visibility) == 0x000441, "Member 'UWBP_Vhs_C::BATTERIE_Visibility' has a wrong offset!");
static_assert(offsetof(UWBP_Vhs_C, Fivend_Title_Text_0) == 0x000448, "Member 'UWBP_Vhs_C::Fivend_Title_Text_0' has a wrong offset!");

}

