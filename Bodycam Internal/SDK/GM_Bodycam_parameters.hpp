#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GM_Bodycam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_Team_structs.hpp"
#include "STR_TEST_structs.hpp"
#include "STR_PCInfo_structs.hpp"
#include "STR_Score_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"
#include "GM_Statue_structs.hpp"
#include "STR_KickVote_structs.hpp"
#include "STR_Actor_structs.hpp"
#include "GameMode_structs.hpp"
#include "E_Emote_structs.hpp"


namespace SDK::Params
{

// Function GM_Bodycam.GM_Bodycam_C.CalcTeamKillTotal
// 0x0158 (0x0158 - 0x0000)
struct GM_Bodycam_C_CalcTeamKillTotal final
{
public:
	int32                                         MilitaryKill_Return;                               // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristKill_Return;                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Team_Win;                                          // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TerroristKill;                                     // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MilitaryKill;                                      // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0040(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_NoneIndex_Return;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_MilitaryIndex_Return;           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_TerroristIndex_Return;          // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamIndex_TeamNeedPlayer;                 // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeamIndex_TeamEmpty_;                     // 0x008D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E[0x2];                                       // 0x008E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Military_Return;                // 0x0090(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Terrorist_Return;               // 0x00A0(0x0010)(ReferenceParm)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x00B0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_1;                         // 0x00F8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x013C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x013D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x013E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x013F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default;                             // 0x0142(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0143(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_CalcTeamKillTotal) == 0x000008, "Wrong alignment on GM_Bodycam_C_CalcTeamKillTotal");
static_assert(sizeof(GM_Bodycam_C_CalcTeamKillTotal) == 0x000158, "Wrong size on GM_Bodycam_C_CalcTeamKillTotal");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, MilitaryKill_Return) == 0x000000, "Member 'GM_Bodycam_C_CalcTeamKillTotal::MilitaryKill_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, TerroristKill_Return) == 0x000004, "Member 'GM_Bodycam_C_CalcTeamKillTotal::TerroristKill_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, Team_Win) == 0x000008, "Member 'GM_Bodycam_C_CalcTeamKillTotal::Team_Win' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, TerroristKill) == 0x00000C, "Member 'GM_Bodycam_C_CalcTeamKillTotal::TerroristKill' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, MilitaryKill) == 0x000010, "Member 'GM_Bodycam_C_CalcTeamKillTotal::MilitaryKill' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, Temp_int_Array_Index_Variable) == 0x000014, "Member 'GM_Bodycam_C_CalcTeamKillTotal::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, Temp_byte_Variable) == 0x000018, "Member 'GM_Bodycam_C_CalcTeamKillTotal::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'GM_Bodycam_C_CalcTeamKillTotal::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, Temp_int_Array_Index_Variable_1) == 0x000024, "Member 'GM_Bodycam_C_CalcTeamKillTotal::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_GetGameState_ReturnValue) == 0x000028, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, K2Node_DynamicCast_AsGT_Bodycam) == 0x000030, "Member 'GM_Bodycam_C_CalcTeamKillTotal::K2Node_DynamicCast_AsGT_Bodycam' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'GM_Bodycam_C_CalcTeamKillTotal::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000040, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_TeamIndex_NoneIndex_Return) == 0x000080, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_TeamIndex_NoneIndex_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_TeamIndex_MilitaryIndex_Return) == 0x000084, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_TeamIndex_MilitaryIndex_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_TeamIndex_TerroristIndex_Return) == 0x000088, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_TeamIndex_TerroristIndex_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_TeamIndex_TeamNeedPlayer) == 0x00008C, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_TeamIndex_TeamNeedPlayer' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_TeamIndex_TeamEmpty_) == 0x00008D, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_TeamIndex_TeamEmpty_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_TeamIndex_Military_Return) == 0x000090, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_TeamIndex_Military_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_TeamIndex_Terrorist_Return) == 0x0000A0, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_TeamIndex_Terrorist_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Array_Length_ReturnValue) == 0x0000F0, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Array_Get_Item_1) == 0x0000F8, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Array_Length_ReturnValue_1) == 0x000138, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Less_IntInt_ReturnValue) == 0x00013C, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, Temp_byte_Variable_1) == 0x00013D, "Member 'GM_Bodycam_C_CalcTeamKillTotal::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Greater_IntInt_ReturnValue) == 0x00013E, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00013F, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, Temp_bool_Variable) == 0x000140, "Member 'GM_Bodycam_C_CalcTeamKillTotal::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000141, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, K2Node_Select_Default) == 0x000142, "Member 'GM_Bodycam_C_CalcTeamKillTotal::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_BooleanOR_ReturnValue) == 0x000143, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Add_IntInt_ReturnValue_1) == 0x000144, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, Temp_int_Loop_Counter_Variable_1) == 0x000148, "Member 'GM_Bodycam_C_CalcTeamKillTotal::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Less_IntInt_ReturnValue_1) == 0x00014C, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Add_IntInt_ReturnValue_2) == 0x000150, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CalcTeamKillTotal, CallFunc_Add_IntInt_ReturnValue_3) == 0x000154, "Member 'GM_Bodycam_C_CalcTeamKillTotal::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.CanCreateKickVote
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_CanCreateKickVote final
{
public:
	bool                                          CanCreateKickVote_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_CanCreateKickVote) == 0x000001, "Wrong alignment on GM_Bodycam_C_CanCreateKickVote");
static_assert(sizeof(GM_Bodycam_C_CanCreateKickVote) == 0x000001, "Wrong size on GM_Bodycam_C_CanCreateKickVote");
static_assert(offsetof(GM_Bodycam_C_CanCreateKickVote, CanCreateKickVote_) == 0x000000, "Member 'GM_Bodycam_C_CanCreateKickVote::CanCreateKickVote_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.CanKickThisPlayer?
// 0x0018 (0x0018 - 0x0000)
struct GM_Bodycam_C_CanKickThisPlayer_ final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          True_;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_CanKickThisPlayer_) == 0x000008, "Wrong alignment on GM_Bodycam_C_CanKickThisPlayer_");
static_assert(sizeof(GM_Bodycam_C_CanKickThisPlayer_) == 0x000018, "Wrong size on GM_Bodycam_C_CanKickThisPlayer_");
static_assert(offsetof(GM_Bodycam_C_CanKickThisPlayer_, PlayerID) == 0x000000, "Member 'GM_Bodycam_C_CanKickThisPlayer_::PlayerID' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_CanKickThisPlayer_, True_) == 0x000010, "Member 'GM_Bodycam_C_CanKickThisPlayer_::True_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.Choose Team
// 0x0048 (0x0048 - 0x0000)
struct GM_Bodycam_C_Choose_Team final
{
public:
	E_Team                                        Postion;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_2;                              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_3;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TeamIndex_NoneIndex_Return;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_MilitaryIndex_Return;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_TerroristIndex_Return;          // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamIndex_TeamNeedPlayer;                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeamIndex_TeamEmpty_;                     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Military_Return;                // 0x0018(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Terrorist_Return;               // 0x0028(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default;                             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_1;                           // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_Choose_Team) == 0x000008, "Wrong alignment on GM_Bodycam_C_Choose_Team");
static_assert(sizeof(GM_Bodycam_C_Choose_Team) == 0x000048, "Wrong size on GM_Bodycam_C_Choose_Team");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, Postion) == 0x000000, "Member 'GM_Bodycam_C_Choose_Team::Postion' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, Temp_byte_Variable) == 0x000001, "Member 'GM_Bodycam_C_Choose_Team::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, Temp_byte_Variable_1) == 0x000002, "Member 'GM_Bodycam_C_Choose_Team::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, Temp_bool_Variable) == 0x000003, "Member 'GM_Bodycam_C_Choose_Team::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, Temp_byte_Variable_2) == 0x000004, "Member 'GM_Bodycam_C_Choose_Team::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, Temp_byte_Variable_3) == 0x000005, "Member 'GM_Bodycam_C_Choose_Team::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_RandomBool_ReturnValue) == 0x000006, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_TeamIndex_NoneIndex_Return) == 0x000008, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_TeamIndex_NoneIndex_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_TeamIndex_MilitaryIndex_Return) == 0x00000C, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_TeamIndex_MilitaryIndex_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_TeamIndex_TerroristIndex_Return) == 0x000010, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_TeamIndex_TerroristIndex_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_TeamIndex_TeamNeedPlayer) == 0x000014, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_TeamIndex_TeamNeedPlayer' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_TeamIndex_TeamEmpty_) == 0x000015, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_TeamIndex_TeamEmpty_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_TeamIndex_Military_Return) == 0x000018, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_TeamIndex_Military_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_TeamIndex_Terrorist_Return) == 0x000028, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_TeamIndex_Terrorist_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, Temp_bool_Variable_1) == 0x000038, "Member 'GM_Bodycam_C_Choose_Team::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_Array_Length_ReturnValue) == 0x00003C, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_Array_Length_ReturnValue_1) == 0x000040, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, K2Node_Select_Default) == 0x000044, "Member 'GM_Bodycam_C_Choose_Team::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000045, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, CallFunc_Greater_IntInt_ReturnValue) == 0x000046, "Member 'GM_Bodycam_C_Choose_Team::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_Choose_Team, K2Node_Select_Default_1) == 0x000047, "Member 'GM_Bodycam_C_Choose_Team::K2Node_Select_Default_1' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.EndGame
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_EndGame final
{
public:
	E_Team                                        Team_Win;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_EndGame) == 0x000001, "Wrong alignment on GM_Bodycam_C_EndGame");
static_assert(sizeof(GM_Bodycam_C_EndGame) == 0x000001, "Wrong size on GM_Bodycam_C_EndGame");
static_assert(offsetof(GM_Bodycam_C_EndGame, Team_Win) == 0x000000, "Member 'GM_Bodycam_C_EndGame::Team_Win' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.EndRound
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_EndRound final
{
public:
	bool                                          ForceEndGame;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_EndRound) == 0x000001, "Wrong alignment on GM_Bodycam_C_EndRound");
static_assert(sizeof(GM_Bodycam_C_EndRound) == 0x000001, "Wrong size on GM_Bodycam_C_EndRound");
static_assert(offsetof(GM_Bodycam_C_EndRound, ForceEndGame) == 0x000000, "Member 'GM_Bodycam_C_EndRound::ForceEndGame' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.ExecuteUbergraph_GM_Bodycam
// 0x0A38 (0x0A38 - 0x0000)
struct GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_1;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_String;                               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TimeCount;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_NewParam;                             // 0x00A0(0x0018)()
	E_Team                                        K2Node_Event_Team;                                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Selected_Level_Name;                  // 0x00BC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team_PlayerKilled_;                   // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MilitaryIndex;                        // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TerroristIndex;                       // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_WiiningTeam;                          // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_Event_Score;                                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Win_;                                 // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Slomo;                                // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_Event_PlayerInfo;                           // 0x00F0(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_SteamID;                              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target_2;                             // 0x0148(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes_;                                 // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target_1;                             // 0x0190(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target;                               // 0x01D0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Event_Gamemode;                             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReady_;                             // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsTalking;                            // 0x0212(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Emote                                       K2Node_Event_EmoteToPlay;                          // 0x0213(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_2;                 // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_ExitingController_1;                  // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AALS_Base_CharacterBP_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0238(0x0010)(ReferenceParm)
	class AALS_Base_CharacterBP_C*                CallFunc_Array_Get_Item;                           // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_Array_Get_Item_1;                         // 0x0260(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ForceEndGame;                   // 0x026E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26F[0x1];                                      // 0x026F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam;                   // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0288(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x3];                                      // 0x02D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_1;                 // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x7];                                      // 0x0309(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_1;                 // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_339[0x3];                                      // 0x0339(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return; // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexTeamAlive_IndexTerroristAlive_Return; // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_IndexTeamAlive_WinningTeam;               // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_345[0x3];                                      // 0x0345(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_MilitaryTeam_Return;       // 0x0348(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_TerroristTeam_Return;      // 0x0358(0x0010)(ReferenceParm)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0368(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_Score                             K2Node_MakeStruct_STR_Score;                       // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_Score                             K2Node_MakeStruct_STR_Score_1;                     // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSTR_PCInfo>                    CallFunc_WinningTeam_WinningTeam_Return;           // 0x0380(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_WinningTeam_LoosingTeam_Return;           // 0x0390(0x0010)(ReferenceParm)
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_ClearMap_self_CastInput;                  // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_2;                         // 0x03B0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x03F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F5[0x3];                                      // 0x03F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_3;                 // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_401[0x7];                                      // 0x0401(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_4;                 // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_SelectTeam_ReturnValue;                   // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412[0x6];                                      // 0x0412(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x0418(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_2;                 // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_1;           // 0x0430(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0474(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0475(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team_Win;                       // 0x0476(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0477(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_2;           // 0x0480(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     Temp_byte_Variable;                                // 0x04C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default;                             // 0x04CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4CB[0x1];                                      // 0x04CB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_3;                         // 0x04D8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_3;           // 0x0518(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_5;                 // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_TopScore_TopScorePcArray_Result;          // 0x0570(0x0010)(ReferenceParm)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_4;                         // 0x0580(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x3];                                      // 0x05C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x05CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_5;                         // 0x05D8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_6;                         // 0x0618(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_1;          // 0x0658(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0668(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_669[0x7];                                      // 0x0669(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_2;          // 0x0670(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_681[0x3];                                      // 0x0681(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0684(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x068C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x068D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68E[0x2];                                      // 0x068E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_4;           // 0x0690(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_3;          // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E1[0x7];                                      // 0x06E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_3;                 // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x06F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F9[0x7];                                      // 0x06F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_2;                 // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0710(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_711[0x7];                                      // 0x0711(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_7;                         // 0x0718(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75D[0x3];                                      // 0x075D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0764(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0765(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_766[0x2];                                      // 0x0766(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_4;          // 0x0768(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_779[0x7];                                      // 0x0779(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer_1;                          // 0x0780(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_5;          // 0x0788(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0798(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0799(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79A[0x6];                                      // 0x079A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSteamID_SteamID;                       // 0x07A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_ExitingController;                    // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue_1;           // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable;                                // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x07CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message;                        // 0x07D8(0x0018)()
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x07F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_isMatchEnd_MatchEnd_;                     // 0x07F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F2[0x2];                                      // 0x07F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x07F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APC_Bodycam_C*>                  CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x07F8(0x0010)(ReferenceParm)
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_3;                              // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0814(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0815(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_816[0x2];                                      // 0x0816(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_4;                              // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Select_Default_1;                           // 0x081C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x081D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81E[0x2];                                      // 0x081E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_5;                              // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_824[0x4];                                      // 0x0824(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_8;                         // 0x0828(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x086C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x086D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x086E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGM_Statue                                    Temp_byte_Variable_1;                              // 0x086F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0870(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_4;                 // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x3];                                      // 0x0881(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcTeamKillTotal_MilitaryKill_Return;    // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_CalcTeamKillTotal_TerroristKill_Return;   // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_CalcTeamKillTotal_Team_Win;               // 0x0890(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0891(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_892[0x6];                                      // 0x0892(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_6;          // 0x0898(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x08A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A9[0x3];                                      // 0x08A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_MakeStruct_STR_Score_2;                     // 0x08AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x08B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B5[0x3];                                      // 0x08B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x08B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_3;                 // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_9;                         // 0x08D8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0918(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0920(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_921[0x7];                                      // 0x0921(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_4;                 // 0x0928(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_931[0x3];                                      // 0x0931(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_939[0x3];                                      // 0x0939(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_941[0x7];                                      // 0x0941(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_7;          // 0x0948(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0958(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_959[0x7];                                      // 0x0959(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_5;           // 0x0960(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_5;                 // 0x09A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x09B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B1[0x7];                                      // 0x09B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_6;           // 0x09B8(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class ARandomCover_C*>                 CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x09F8(0x0010)(ReferenceParm)
	class ARandomCover_C*                         CallFunc_Array_Get_Item_10;                        // 0x0A08(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0A10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0A11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0A12(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0A13(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0A14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0A15(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0A16(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A17[0x1];                                      // 0x0A17(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x0A18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0A20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A21[0x7];                                      // 0x0A21(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_6;                 // 0x0A28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0A30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam) == 0x000008, "Wrong alignment on GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam");
static_assert(sizeof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam) == 0x000A38, "Wrong size on GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, EntryPoint) == 0x000000, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::EntryPoint' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_PC) == 0x000008, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsPC_Bodycam) == 0x000010, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsPC_Bodycam' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_1) == 0x000020, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_1) == 0x000028, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_True_if_break_was_hit_Variable) == 0x000030, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable_1) == 0x000040, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable_2) == 0x000048, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable_2) == 0x000050, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable_3) == 0x000054, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000058, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable_3) == 0x00005C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_3) == 0x000060, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable_4) == 0x000064, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_Has_Been_Initd_Variable) == 0x000068, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_IsClosed_Variable) == 0x000069, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable_4) == 0x00006C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_4) == 0x000070, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000074, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable_5) == 0x000078, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Not_PreBool_ReturnValue_1) == 0x00007C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_HasAuthority_ReturnValue) == 0x00007D, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_String) == 0x000080, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Delay) == 0x000090, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_TimeCount) == 0x000098, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_TimeCount' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_NewParam) == 0x0000A0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Team) == 0x0000B8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Selected_Level_Name) == 0x0000BC, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Index) == 0x0000C4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Team_PlayerKilled_) == 0x0000C8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_MilitaryIndex) == 0x0000CC, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_TerroristIndex) == 0x0000D0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_TerroristIndex' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_WiiningTeam) == 0x0000D4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_WiiningTeam' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Score) == 0x0000D8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Win_) == 0x0000E0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Win_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Slomo) == 0x0000E8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Slomo' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_PlayerInfo) == 0x0000F0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_SteamID) == 0x000138, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_SteamID' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Target_2) == 0x000148, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Yes_) == 0x000188, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Yes_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Target_1) == 0x000190, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Target) == 0x0001D0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_Gamemode) == 0x000210, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_Gamemode' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_IsReady_) == 0x000211, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_IsReady_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_IsTalking) == 0x000212, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_IsTalking' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_EmoteToPlay) == 0x000213, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_EmoteToPlay' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetPlayerController_ReturnValue) == 0x000218, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_2) == 0x000220, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_2) == 0x000228, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_ExitingController_1) == 0x000230, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_ExitingController_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetAllActorsOfClass_OutActors) == 0x000238, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item) == 0x000248, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue) == 0x000250, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue) == 0x000254, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_AddUnique_ReturnValue) == 0x000258, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_1) == 0x000260, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_1) == 0x000268, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Greater_IntInt_ReturnValue) == 0x00026C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_RemoveItem_ReturnValue) == 0x00026D, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_CustomEvent_ForceEndGame) == 0x00026E, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_CustomEvent_ForceEndGame' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameState_ReturnValue) == 0x000270, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsGT_Bodycam) == 0x000278, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsGT_Bodycam' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_3) == 0x000280, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable_5) == 0x000284, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000288, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_5) == 0x0002C8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable_6) == 0x0002CC, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0002D0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_6) == 0x0002D4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable_6) == 0x0002D8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_2) == 0x0002DC, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameState_ReturnValue_1) == 0x0002E0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_1) == 0x0002E8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_4) == 0x0002F0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameInstance_ReturnValue) == 0x0002F8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_GI) == 0x000300, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_5) == 0x000308, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_Interface) == 0x000310, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_6) == 0x000320, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameInstance_ReturnValue_1) == 0x000328, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_GI_1) == 0x000330, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_GI_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_7) == 0x000338, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return) == 0x00033C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_IndexTeamAlive_IndexTerroristAlive_Return) == 0x000340, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_IndexTeamAlive_IndexTerroristAlive_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_IndexTeamAlive_WinningTeam) == 0x000344, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_IndexTeamAlive_WinningTeam' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_IndexTeamAlive_MilitaryTeam_Return) == 0x000348, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_IndexTeamAlive_MilitaryTeam_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_IndexTeamAlive_TerroristTeam_Return) == 0x000358, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_IndexTeamAlive_TerroristTeam_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_7) == 0x000368, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_8) == 0x00036C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_MakeStruct_STR_Score) == 0x000370, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_MakeStruct_STR_Score' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_MakeStruct_STR_Score_1) == 0x000378, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_MakeStruct_STR_Score_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_WinningTeam_WinningTeam_Return) == 0x000380, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_WinningTeam_WinningTeam_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_WinningTeam_LoosingTeam_Return) == 0x000390, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_WinningTeam_LoosingTeam_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_ClearMap_self_CastInput) == 0x0003A0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_ClearMap_self_CastInput' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_2) == 0x0003B0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_3) == 0x0003F0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0003F4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_3) == 0x0003F8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_8) == 0x000400, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_4) == 0x000408, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_9) == 0x000410, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_SelectTeam_ReturnValue) == 0x000411, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_SelectTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameInstance_ReturnValue_2) == 0x000418, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_GI_2) == 0x000420, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_GI_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_10) == 0x000428, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_1) == 0x000430, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_4) == 0x000470, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue_1) == 0x000474, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_BooleanAND_ReturnValue) == 0x000475, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_CustomEvent_Team_Win) == 0x000476, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_CustomEvent_Team_Win' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000477, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable_7) == 0x000478, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_2) == 0x000480, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue_2) == 0x0004C0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_9) == 0x0004C4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_Variable) == 0x0004C8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_byte_Variable) == 0x0004C9, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Select_Default) == 0x0004CA, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable_7) == 0x0004CC, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_SwitchEnum_CmpSuccess) == 0x0004D0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_3) == 0x0004D8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_3) == 0x000518, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000558, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_5) == 0x000560, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_11) == 0x000568, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_TopScore_TopScorePcArray_Result) == 0x000570, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_TopScore_TopScorePcArray_Result' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_4) == 0x000580, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_5) == 0x0005C0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Add_ReturnValue) == 0x0005C4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue_3) == 0x0005C8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Add_ReturnValue_1) == 0x0005CC, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_Variable_1) == 0x0005D0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_5) == 0x0005D8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_6) == 0x000618, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_1) == 0x000658, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_12) == 0x000668, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_2) == 0x000670, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_13) == 0x000680, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_6) == 0x000684, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_7) == 0x000688, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue_4) == 0x00068C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue_5) == 0x00068D, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_4) == 0x000690, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_3) == 0x0006D0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_14) == 0x0006E0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameInstance_ReturnValue_3) == 0x0006E8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_GI_3) == 0x0006F0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_GI_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_15) == 0x0006F8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameState_ReturnValue_2) == 0x000700, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_2) == 0x000708, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_16) == 0x000710, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_7) == 0x000718, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_8) == 0x000758, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue_6) == 0x00075C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_9) == 0x000760, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000764, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_SwitchEnum_CmpSuccess_1) == 0x000765, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_4) == 0x000768, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_17) == 0x000778, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_NewPlayer_1) == 0x000780, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_NewPlayer_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_5) == 0x000788, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_18) == 0x000798, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_IsValid_ReturnValue) == 0x000799, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetSteamID_SteamID) == 0x0007A0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetSteamID_SteamID' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0007B0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_ExitingController) == 0x0007B8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_AddUnique_ReturnValue_1) == 0x0007C0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_RemoveItem_ReturnValue_1) == 0x0007C4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_RemoveItem_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_real_Variable) == 0x0007C8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_real_Variable_1) == 0x0007CC, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_True_if_break_was_hit_Variable_2) == 0x0007D0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_CustomEvent_Message) == 0x0007D8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Not_PreBool_ReturnValue_2) == 0x0007F0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_isMatchEnd_MatchEnd_) == 0x0007F1, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_isMatchEnd_MatchEnd_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_real_Variable_2) == 0x0007F4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0007F8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Event_NewPlayer) == 0x000808, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_real_Variable_3) == 0x000810, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000814, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000815, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_real_Variable_4) == 0x000818, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Select_Default_1) == 0x00081C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_Has_Been_Initd_Variable_1) == 0x00081D, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_real_Variable_5) == 0x000820, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_8) == 0x000828, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Length_ReturnValue_10) == 0x000868, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue_7) == 0x00086C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_BooleanAND_ReturnValue_1) == 0x00086D, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x00086E, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_byte_Variable_1) == 0x00086F, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameInstance_ReturnValue_4) == 0x000870, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_GI_4) == 0x000878, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_GI_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_19) == 0x000880, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_Select_Default_2) == 0x000884, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_CalcTeamKillTotal_MilitaryKill_Return) == 0x000888, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_CalcTeamKillTotal_MilitaryKill_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_CalcTeamKillTotal_TerroristKill_Return) == 0x00088C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_CalcTeamKillTotal_TerroristKill_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_CalcTeamKillTotal_Team_Win) == 0x000890, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_CalcTeamKillTotal_Team_Win' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000891, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_6) == 0x000898, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_20) == 0x0008A8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_MakeStruct_STR_Score_2) == 0x0008AC, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_MakeStruct_STR_Score_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_bool_IsClosed_Variable_1) == 0x0008B4, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameState_ReturnValue_3) == 0x0008B8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Array_Index_Variable_8) == 0x0008C0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_3) == 0x0008C8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_21) == 0x0008D0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_9) == 0x0008D8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameState_ReturnValue_4) == 0x000918, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000920, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_4) == 0x000928, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_22) == 0x000930, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, Temp_int_Loop_Counter_Variable_8) == 0x000934, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Less_IntInt_ReturnValue_8) == 0x000938, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Add_IntInt_ReturnValue_10) == 0x00093C, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_BooleanAND_ReturnValue_2) == 0x000940, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_7) == 0x000948, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_7' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_23) == 0x000958, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_5) == 0x000960, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameState_ReturnValue_5) == 0x0009A0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_5) == 0x0009A8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_24) == 0x0009B0, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_6) == 0x0009B8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x0009F8, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_Array_Get_Item_10) == 0x000A08, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000A10, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000A11, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000A12, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_BooleanOR_ReturnValue) == 0x000A13, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000A14, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_BooleanOR_ReturnValue_1) == 0x000A15, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_SwitchEnum_CmpSuccess_2) == 0x000A16, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_GetGameState_ReturnValue_6) == 0x000A18, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000A20, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_6) == 0x000A28, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_6' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam, K2Node_DynamicCast_bSuccess_25) == 0x000A30, "Member 'GM_Bodycam_C_ExecuteUbergraph_GM_Bodycam::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.FindPlayerSpawn
// 0x0140 (0x0140 - 0x0000)
struct GM_Bodycam_C_FindPlayerSpawn final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(ConstParm, Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   Spawn;                                             // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Random_OutItem;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0110(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_FindPlayerSpawn) == 0x000010, "Wrong alignment on GM_Bodycam_C_FindPlayerSpawn");
static_assert(sizeof(GM_Bodycam_C_FindPlayerSpawn) == 0x000140, "Wrong size on GM_Bodycam_C_FindPlayerSpawn");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, Name_0) == 0x000000, "Member 'GM_Bodycam_C_FindPlayerSpawn::Name_0' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, SpawnTransform) == 0x000010, "Member 'GM_Bodycam_C_FindPlayerSpawn::SpawnTransform' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, Spawn) == 0x000070, "Member 'GM_Bodycam_C_FindPlayerSpawn::Spawn' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, Temp_int_Array_Index_Variable) == 0x000088, "Member 'GM_Bodycam_C_FindPlayerSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'GM_Bodycam_C_FindPlayerSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x000090, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_Array_Random_OutItem) == 0x000098, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_Array_Random_OutIndex) == 0x0000A0, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_GetAllActorsOfClass_OutActors) == 0x000110, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_Array_Get_Item) == 0x000128, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_Array_AddUnique_ReturnValue) == 0x000134, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_FindPlayerSpawn, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000138, "Member 'GM_Bodycam_C_FindPlayerSpawn::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.Get BP Menu Controller Component
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_Get_BP_Menu_Controller_Component final
{
public:
	class UBP_MenuControllerComponent_C*          BP_Menu_Controller_Component;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong alignment on GM_Bodycam_C_Get_BP_Menu_Controller_Component");
static_assert(sizeof(GM_Bodycam_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong size on GM_Bodycam_C_Get_BP_Menu_Controller_Component");
static_assert(offsetof(GM_Bodycam_C_Get_BP_Menu_Controller_Component, BP_Menu_Controller_Component) == 0x000000, "Member 'GM_Bodycam_C_Get_BP_Menu_Controller_Component::BP_Menu_Controller_Component' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.Get Stamina
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_Get_Stamina final
{
public:
	double                                        Stamina;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_Get_Stamina) == 0x000008, "Wrong alignment on GM_Bodycam_C_Get_Stamina");
static_assert(sizeof(GM_Bodycam_C_Get_Stamina) == 0x000008, "Wrong size on GM_Bodycam_C_Get_Stamina");
static_assert(offsetof(GM_Bodycam_C_Get_Stamina, Stamina) == 0x000000, "Member 'GM_Bodycam_C_Get_Stamina::Stamina' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetBlured
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_GetBlured final
{
public:
	double                                        Blured;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetBlured) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetBlured");
static_assert(sizeof(GM_Bodycam_C_GetBlured) == 0x000008, "Wrong size on GM_Bodycam_C_GetBlured");
static_assert(offsetof(GM_Bodycam_C_GetBlured, Blured) == 0x000000, "Member 'GM_Bodycam_C_GetBlured::Blured' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetBurnedRef
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_GetBurnedRef final
{
public:
	class USceneComponent*                        BurnedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetBurnedRef) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetBurnedRef");
static_assert(sizeof(GM_Bodycam_C_GetBurnedRef) == 0x000008, "Wrong size on GM_Bodycam_C_GetBurnedRef");
static_assert(offsetof(GM_Bodycam_C_GetBurnedRef, BurnedMesh) == 0x000000, "Member 'GM_Bodycam_C_GetBurnedRef::BurnedMesh' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetFlashBangEffect
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_GetFlashBangEffect final
{
public:
	double                                        FlashEffect;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetFlashBangEffect) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetFlashBangEffect");
static_assert(sizeof(GM_Bodycam_C_GetFlashBangEffect) == 0x000008, "Wrong size on GM_Bodycam_C_GetFlashBangEffect");
static_assert(offsetof(GM_Bodycam_C_GetFlashBangEffect, FlashEffect) == 0x000000, "Member 'GM_Bodycam_C_GetFlashBangEffect::FlashEffect' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetGameMode
// 0x0040 (0x0040 - 0x0000)
struct GM_Bodycam_C_GetGameMode final
{
public:
	struct FSTR_GamemodeWinInfo                   GameMode;                                          // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetGameMode) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetGameMode");
static_assert(sizeof(GM_Bodycam_C_GetGameMode) == 0x000040, "Wrong size on GM_Bodycam_C_GetGameMode");
static_assert(offsetof(GM_Bodycam_C_GetGameMode, GameMode) == 0x000000, "Member 'GM_Bodycam_C_GetGameMode::GameMode' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_GetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetHealth) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetHealth");
static_assert(sizeof(GM_Bodycam_C_GetHealth) == 0x000008, "Wrong size on GM_Bodycam_C_GetHealth");
static_assert(offsetof(GM_Bodycam_C_GetHealth, Health) == 0x000000, "Member 'GM_Bodycam_C_GetHealth::Health' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetKickedPlayerVoted
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_GetKickedPlayerVoted final
{
public:
	TArray<class FString>                         KickplayerAlreadyVote;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_GetKickedPlayerVoted) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetKickedPlayerVoted");
static_assert(sizeof(GM_Bodycam_C_GetKickedPlayerVoted) == 0x000010, "Wrong size on GM_Bodycam_C_GetKickedPlayerVoted");
static_assert(offsetof(GM_Bodycam_C_GetKickedPlayerVoted, KickplayerAlreadyVote) == 0x000000, "Member 'GM_Bodycam_C_GetKickedPlayerVoted::KickplayerAlreadyVote' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetMenuSettings
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_GetMenuSettings final
{
public:
	class UBP_MenuControllerComponent_C*          Bp_MenuController;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetMenuSettings) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetMenuSettings");
static_assert(sizeof(GM_Bodycam_C_GetMenuSettings) == 0x000008, "Wrong size on GM_Bodycam_C_GetMenuSettings");
static_assert(offsetof(GM_Bodycam_C_GetMenuSettings, Bp_MenuController) == 0x000000, "Member 'GM_Bodycam_C_GetMenuSettings::Bp_MenuController' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_GetMutePlayer final
{
public:
	TArray<class FString>                         MutePlayer;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_GetMutePlayer) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetMutePlayer");
static_assert(sizeof(GM_Bodycam_C_GetMutePlayer) == 0x000010, "Wrong size on GM_Bodycam_C_GetMutePlayer");
static_assert(offsetof(GM_Bodycam_C_GetMutePlayer, MutePlayer) == 0x000000, "Member 'GM_Bodycam_C_GetMutePlayer::MutePlayer' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetPlayerConnected
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_GetPlayerConnected final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerConnected;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_GetPlayerConnected) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetPlayerConnected");
static_assert(sizeof(GM_Bodycam_C_GetPlayerConnected) == 0x000010, "Wrong size on GM_Bodycam_C_GetPlayerConnected");
static_assert(offsetof(GM_Bodycam_C_GetPlayerConnected, PlayerConnected) == 0x000000, "Member 'GM_Bodycam_C_GetPlayerConnected::PlayerConnected' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetPlayerKickVote
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_GetPlayerKickVote final
{
public:
	TArray<struct FSTR_KickVote>                  KickVotePlayer;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_GetPlayerKickVote) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetPlayerKickVote");
static_assert(sizeof(GM_Bodycam_C_GetPlayerKickVote) == 0x000010, "Wrong size on GM_Bodycam_C_GetPlayerKickVote");
static_assert(offsetof(GM_Bodycam_C_GetPlayerKickVote, KickVotePlayer) == 0x000000, "Member 'GM_Bodycam_C_GetPlayerKickVote::KickVotePlayer' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetPlayerSkin
// 0x02E8 (0x02E8 - 0x0000)
struct GM_Bodycam_C_GetPlayerSkin final
{
public:
	struct FSTR_TEST                              Player_Skin;                                       // 0x0000(0x02E0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetPlayerSkin) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetPlayerSkin");
static_assert(sizeof(GM_Bodycam_C_GetPlayerSkin) == 0x0002E8, "Wrong size on GM_Bodycam_C_GetPlayerSkin");
static_assert(offsetof(GM_Bodycam_C_GetPlayerSkin, Player_Skin) == 0x000000, "Member 'GM_Bodycam_C_GetPlayerSkin::Player_Skin' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_GetPlayerSkin, Valid_) == 0x0002E0, "Member 'GM_Bodycam_C_GetPlayerSkin::Valid_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetRagdollSystem
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_GetRagdollSystem final
{
public:
	class UWW_RagdollSystem_C*                    Ragdoll_System;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetRagdollSystem) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetRagdollSystem");
static_assert(sizeof(GM_Bodycam_C_GetRagdollSystem) == 0x000008, "Wrong size on GM_Bodycam_C_GetRagdollSystem");
static_assert(offsetof(GM_Bodycam_C_GetRagdollSystem, Ragdoll_System) == 0x000000, "Member 'GM_Bodycam_C_GetRagdollSystem::Ragdoll_System' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetReady?
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_GetReady_ final
{
public:
	bool                                          IsReady_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetReady_) == 0x000001, "Wrong alignment on GM_Bodycam_C_GetReady_");
static_assert(sizeof(GM_Bodycam_C_GetReady_) == 0x000001, "Wrong size on GM_Bodycam_C_GetReady_");
static_assert(offsetof(GM_Bodycam_C_GetReady_, IsReady_) == 0x000000, "Member 'GM_Bodycam_C_GetReady_::IsReady_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetServerSteamID
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_GetServerSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetServerSteamID) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetServerSteamID");
static_assert(sizeof(GM_Bodycam_C_GetServerSteamID) == 0x000010, "Wrong size on GM_Bodycam_C_GetServerSteamID");
static_assert(offsetof(GM_Bodycam_C_GetServerSteamID, SteamID) == 0x000000, "Member 'GM_Bodycam_C_GetServerSteamID::SteamID' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetStarterWeapons
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_GetStarterWeapons final
{
public:
	TArray<struct FSTR_Actor>                     Weapons;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_GetStarterWeapons) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetStarterWeapons");
static_assert(sizeof(GM_Bodycam_C_GetStarterWeapons) == 0x000010, "Wrong size on GM_Bodycam_C_GetStarterWeapons");
static_assert(offsetof(GM_Bodycam_C_GetStarterWeapons, Weapons) == 0x000000, "Member 'GM_Bodycam_C_GetStarterWeapons::Weapons' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_GetSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetSteamID) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetSteamID");
static_assert(sizeof(GM_Bodycam_C_GetSteamID) == 0x000010, "Wrong size on GM_Bodycam_C_GetSteamID");
static_assert(offsetof(GM_Bodycam_C_GetSteamID, SteamID) == 0x000000, "Member 'GM_Bodycam_C_GetSteamID::SteamID' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetSurvivorStatuts
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_GetSurvivorStatuts final
{
public:
	class UWW_SurvivorStatus_C*                   SurvivorComponant;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetSurvivorStatuts) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetSurvivorStatuts");
static_assert(sizeof(GM_Bodycam_C_GetSurvivorStatuts) == 0x000008, "Wrong size on GM_Bodycam_C_GetSurvivorStatuts");
static_assert(offsetof(GM_Bodycam_C_GetSurvivorStatuts, SurvivorComponant) == 0x000000, "Member 'GM_Bodycam_C_GetSurvivorStatuts::SurvivorComponant' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetTeam
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_GetTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_GetTeam) == 0x000001, "Wrong alignment on GM_Bodycam_C_GetTeam");
static_assert(sizeof(GM_Bodycam_C_GetTeam) == 0x000001, "Wrong size on GM_Bodycam_C_GetTeam");
static_assert(offsetof(GM_Bodycam_C_GetTeam, Team) == 0x000000, "Member 'GM_Bodycam_C_GetTeam::Team' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetTeamList
// 0x0018 (0x0018 - 0x0000)
struct GM_Bodycam_C_GetTeamList final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Info;                                              // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_GetTeamList) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetTeamList");
static_assert(sizeof(GM_Bodycam_C_GetTeamList) == 0x000018, "Wrong size on GM_Bodycam_C_GetTeamList");
static_assert(offsetof(GM_Bodycam_C_GetTeamList, Team) == 0x000000, "Member 'GM_Bodycam_C_GetTeamList::Team' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_GetTeamList, Info) == 0x000008, "Member 'GM_Bodycam_C_GetTeamList::Info' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.GetTopScore
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_GetTopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScore;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_GetTopScore) == 0x000008, "Wrong alignment on GM_Bodycam_C_GetTopScore");
static_assert(sizeof(GM_Bodycam_C_GetTopScore) == 0x000010, "Wrong size on GM_Bodycam_C_GetTopScore");
static_assert(offsetof(GM_Bodycam_C_GetTopScore, TopScore) == 0x000000, "Member 'GM_Bodycam_C_GetTopScore::TopScore' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.HandleStartingNewPlayer
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_HandleStartingNewPlayer final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_HandleStartingNewPlayer) == 0x000008, "Wrong alignment on GM_Bodycam_C_HandleStartingNewPlayer");
static_assert(sizeof(GM_Bodycam_C_HandleStartingNewPlayer) == 0x000008, "Wrong size on GM_Bodycam_C_HandleStartingNewPlayer");
static_assert(offsetof(GM_Bodycam_C_HandleStartingNewPlayer, NewPlayer) == 0x000000, "Member 'GM_Bodycam_C_HandleStartingNewPlayer::NewPlayer' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_IsDead final
{
public:
	bool                                          Dead_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_IsDead) == 0x000001, "Wrong alignment on GM_Bodycam_C_IsDead");
static_assert(sizeof(GM_Bodycam_C_IsDead) == 0x000001, "Wrong size on GM_Bodycam_C_IsDead");
static_assert(offsetof(GM_Bodycam_C_IsDead, Dead_) == 0x000000, "Member 'GM_Bodycam_C_IsDead::Dead_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.IsDestroyabe?
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_IsDestroyabe_ final
{
public:
	bool                                          Destroyable_;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_IsDestroyabe_) == 0x000001, "Wrong alignment on GM_Bodycam_C_IsDestroyabe_");
static_assert(sizeof(GM_Bodycam_C_IsDestroyabe_) == 0x000001, "Wrong size on GM_Bodycam_C_IsDestroyabe_");
static_assert(offsetof(GM_Bodycam_C_IsDestroyabe_, Destroyable_) == 0x000000, "Member 'GM_Bodycam_C_IsDestroyabe_::Destroyable_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.isMatchEnd
// 0x0078 (0x0078 - 0x0000)
struct GM_Bodycam_C_IsMatchEnd final
{
public:
	bool                                          MatchEnd_;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABombe_C*                               CallFunc_AnyBombExist_Bomb;                        // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamHasBombArray_Team_Has_Bomb_Return;    // 0x0010(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamHasBombArray_Other_Team_Return;       // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36[0x2];                                       // 0x0036(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F[0x1];                                       // 0x003F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexTeamAlive_IndexTerroristAlive_Return; // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_IndexTeamAlive_WinningTeam;               // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_MilitaryTeam_Return;       // 0x0050(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_TerroristTeam_Return;      // 0x0060(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_IsMatchEnd) == 0x000008, "Wrong alignment on GM_Bodycam_C_IsMatchEnd");
static_assert(sizeof(GM_Bodycam_C_IsMatchEnd) == 0x000078, "Wrong size on GM_Bodycam_C_IsMatchEnd");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, MatchEnd_) == 0x000000, "Member 'GM_Bodycam_C_IsMatchEnd::MatchEnd_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_AnyBombExist_Bomb) == 0x000008, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_AnyBombExist_Bomb' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_TeamHasBombArray_Team_Has_Bomb_Return) == 0x000010, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_TeamHasBombArray_Team_Has_Bomb_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_TeamHasBombArray_Other_Team_Return) == 0x000020, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_TeamHasBombArray_Other_Team_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_Not_PreBool_ReturnValue) == 0x000034, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000035, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_Array_Length_ReturnValue_1) == 0x000038, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00003C, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_BooleanOR_ReturnValue) == 0x00003E, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return) == 0x000040, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_IndexTeamAlive_IndexTerroristAlive_Return) == 0x000044, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_IndexTeamAlive_IndexTerroristAlive_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_IndexTeamAlive_WinningTeam) == 0x000048, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_IndexTeamAlive_WinningTeam' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_IndexTeamAlive_MilitaryTeam_Return) == 0x000050, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_IndexTeamAlive_MilitaryTeam_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_IndexTeamAlive_TerroristTeam_Return) == 0x000060, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_IndexTeamAlive_TerroristTeam_Return' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000070, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000071, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, CallFunc_BooleanOR_ReturnValue_1) == 0x000072, "Member 'GM_Bodycam_C_IsMatchEnd::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_IsMatchEnd, K2Node_SwitchEnum_CmpSuccess) == 0x000073, "Member 'GM_Bodycam_C_IsMatchEnd::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.IsReady?
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_IsReady_ final
{
public:
	bool                                          IsReady__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_IsReady_) == 0x000001, "Wrong alignment on GM_Bodycam_C_IsReady_");
static_assert(sizeof(GM_Bodycam_C_IsReady_) == 0x000001, "Wrong size on GM_Bodycam_C_IsReady_");
static_assert(offsetof(GM_Bodycam_C_IsReady_, IsReady__0) == 0x000000, "Member 'GM_Bodycam_C_IsReady_::IsReady__0' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.IsStress
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_IsStress final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_IsStress) == 0x000001, "Wrong alignment on GM_Bodycam_C_IsStress");
static_assert(sizeof(GM_Bodycam_C_IsStress) == 0x000001, "Wrong size on GM_Bodycam_C_IsStress");
static_assert(offsetof(GM_Bodycam_C_IsStress, Yes_) == 0x000000, "Member 'GM_Bodycam_C_IsStress::Yes_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.IsTalking?
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_IsTalking_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_IsTalking_) == 0x000001, "Wrong alignment on GM_Bodycam_C_IsTalking_");
static_assert(sizeof(GM_Bodycam_C_IsTalking_) == 0x000001, "Wrong size on GM_Bodycam_C_IsTalking_");
static_assert(offsetof(GM_Bodycam_C_IsTalking_, IsTalking__0) == 0x000000, "Member 'GM_Bodycam_C_IsTalking_::IsTalking__0' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_K2_OnLogout) == 0x000008, "Wrong alignment on GM_Bodycam_C_K2_OnLogout");
static_assert(sizeof(GM_Bodycam_C_K2_OnLogout) == 0x000008, "Wrong size on GM_Bodycam_C_K2_OnLogout");
static_assert(offsetof(GM_Bodycam_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'GM_Bodycam_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_K2_PostLogin) == 0x000008, "Wrong alignment on GM_Bodycam_C_K2_PostLogin");
static_assert(sizeof(GM_Bodycam_C_K2_PostLogin) == 0x000008, "Wrong size on GM_Bodycam_C_K2_PostLogin");
static_assert(offsetof(GM_Bodycam_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'GM_Bodycam_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.Kick?
// 0x0040 (0x0040 - 0x0000)
struct GM_Bodycam_C_Kick_ final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_Kick_) == 0x000008, "Wrong alignment on GM_Bodycam_C_Kick_");
static_assert(sizeof(GM_Bodycam_C_Kick_) == 0x000040, "Wrong size on GM_Bodycam_C_Kick_");
static_assert(offsetof(GM_Bodycam_C_Kick_, Target) == 0x000000, "Member 'GM_Bodycam_C_Kick_::Target' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.KickPlayer
// 0x0048 (0x0048 - 0x0000)
struct GM_Bodycam_C_KickPlayer final
{
public:
	struct FSTR_KickVote                          PlayerInfo;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_KickPlayer) == 0x000008, "Wrong alignment on GM_Bodycam_C_KickPlayer");
static_assert(sizeof(GM_Bodycam_C_KickPlayer) == 0x000048, "Wrong size on GM_Bodycam_C_KickPlayer");
static_assert(offsetof(GM_Bodycam_C_KickPlayer, PlayerInfo) == 0x000000, "Member 'GM_Bodycam_C_KickPlayer::PlayerInfo' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.LogoutEvent
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_LogoutEvent final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_LogoutEvent) == 0x000008, "Wrong alignment on GM_Bodycam_C_LogoutEvent");
static_assert(sizeof(GM_Bodycam_C_LogoutEvent) == 0x000008, "Wrong size on GM_Bodycam_C_LogoutEvent");
static_assert(offsetof(GM_Bodycam_C_LogoutEvent, ExitingController) == 0x000000, "Member 'GM_Bodycam_C_LogoutEvent::ExitingController' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.MSG_ChatGetConnectedPlayers
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_MSG_ChatGetConnectedPlayers final
{
public:
	TArray<class AController*>                    Players;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_MSG_ChatGetConnectedPlayers) == 0x000008, "Wrong alignment on GM_Bodycam_C_MSG_ChatGetConnectedPlayers");
static_assert(sizeof(GM_Bodycam_C_MSG_ChatGetConnectedPlayers) == 0x000010, "Wrong size on GM_Bodycam_C_MSG_ChatGetConnectedPlayers");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatGetConnectedPlayers, Players) == 0x000000, "Member 'GM_Bodycam_C_MSG_ChatGetConnectedPlayers::Players' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.MSG_ChatGetPlayerID
// 0x0004 (0x0004 - 0x0000)
struct GM_Bodycam_C_MSG_ChatGetPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_MSG_ChatGetPlayerID) == 0x000004, "Wrong alignment on GM_Bodycam_C_MSG_ChatGetPlayerID");
static_assert(sizeof(GM_Bodycam_C_MSG_ChatGetPlayerID) == 0x000004, "Wrong size on GM_Bodycam_C_MSG_ChatGetPlayerID");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatGetPlayerID, PlayerID) == 0x000000, "Member 'GM_Bodycam_C_MSG_ChatGetPlayerID::PlayerID' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.MSG_ChatGetTeamID
// 0x0004 (0x0004 - 0x0000)
struct GM_Bodycam_C_MSG_ChatGetTeamID final
{
public:
	int32                                         TeamID;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_MSG_ChatGetTeamID) == 0x000004, "Wrong alignment on GM_Bodycam_C_MSG_ChatGetTeamID");
static_assert(sizeof(GM_Bodycam_C_MSG_ChatGetTeamID) == 0x000004, "Wrong size on GM_Bodycam_C_MSG_ChatGetTeamID");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatGetTeamID, TeamID) == 0x000000, "Member 'GM_Bodycam_C_MSG_ChatGetTeamID::TeamID' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.MSG_ChatGetUsername
// 0x0020 (0x0020 - 0x0000)
struct GM_Bodycam_C_MSG_ChatGetUsername final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Username;                                          // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(GM_Bodycam_C_MSG_ChatGetUsername) == 0x000008, "Wrong alignment on GM_Bodycam_C_MSG_ChatGetUsername");
static_assert(sizeof(GM_Bodycam_C_MSG_ChatGetUsername) == 0x000020, "Wrong size on GM_Bodycam_C_MSG_ChatGetUsername");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatGetUsername, Success_) == 0x000000, "Member 'GM_Bodycam_C_MSG_ChatGetUsername::Success_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatGetUsername, Username) == 0x000008, "Member 'GM_Bodycam_C_MSG_ChatGetUsername::Username' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.MSG_ChatPlayEmote
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_MSG_ChatPlayEmote final
{
public:
	E_Emote                                       EmoteToPlay;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_MSG_ChatPlayEmote) == 0x000001, "Wrong alignment on GM_Bodycam_C_MSG_ChatPlayEmote");
static_assert(sizeof(GM_Bodycam_C_MSG_ChatPlayEmote) == 0x000001, "Wrong size on GM_Bodycam_C_MSG_ChatPlayEmote");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatPlayEmote, EmoteToPlay) == 0x000000, "Member 'GM_Bodycam_C_MSG_ChatPlayEmote::EmoteToPlay' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.MSG_ChatRequestPlayerID
// 0x000C (0x000C - 0x0000)
struct GM_Bodycam_C_MSG_ChatRequestPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNewPlayerID_Output_Get;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_MSG_ChatRequestPlayerID) == 0x000004, "Wrong alignment on GM_Bodycam_C_MSG_ChatRequestPlayerID");
static_assert(sizeof(GM_Bodycam_C_MSG_ChatRequestPlayerID) == 0x00000C, "Wrong size on GM_Bodycam_C_MSG_ChatRequestPlayerID");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatRequestPlayerID, PlayerID) == 0x000000, "Member 'GM_Bodycam_C_MSG_ChatRequestPlayerID::PlayerID' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatRequestPlayerID, Success_) == 0x000004, "Member 'GM_Bodycam_C_MSG_ChatRequestPlayerID::Success_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_MSG_ChatRequestPlayerID, CallFunc_GetNewPlayerID_Output_Get) == 0x000008, "Member 'GM_Bodycam_C_MSG_ChatRequestPlayerID::CallFunc_GetNewPlayerID_Output_Get' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.MuteID
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_MuteID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_MuteID) == 0x000008, "Wrong alignment on GM_Bodycam_C_MuteID");
static_assert(sizeof(GM_Bodycam_C_MuteID) == 0x000010, "Wrong size on GM_Bodycam_C_MuteID");
static_assert(offsetof(GM_Bodycam_C_MuteID, SteamID) == 0x000000, "Member 'GM_Bodycam_C_MuteID::SteamID' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.NewKickVote
// 0x0040 (0x0040 - 0x0000)
struct GM_Bodycam_C_NewKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_NewKickVote) == 0x000008, "Wrong alignment on GM_Bodycam_C_NewKickVote");
static_assert(sizeof(GM_Bodycam_C_NewKickVote) == 0x000040, "Wrong size on GM_Bodycam_C_NewKickVote");
static_assert(offsetof(GM_Bodycam_C_NewKickVote, Target) == 0x000000, "Member 'GM_Bodycam_C_NewKickVote::Target' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.OnPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_OnPlayerDeath final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_OnPlayerDeath) == 0x000008, "Wrong alignment on GM_Bodycam_C_OnPlayerDeath");
static_assert(sizeof(GM_Bodycam_C_OnPlayerDeath) == 0x000008, "Wrong size on GM_Bodycam_C_OnPlayerDeath");
static_assert(offsetof(GM_Bodycam_C_OnPlayerDeath, PC) == 0x000000, "Member 'GM_Bodycam_C_OnPlayerDeath::PC' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.OnTrySelectTeam
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_OnTrySelectTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_OnTrySelectTeam) == 0x000001, "Wrong alignment on GM_Bodycam_C_OnTrySelectTeam");
static_assert(sizeof(GM_Bodycam_C_OnTrySelectTeam) == 0x000001, "Wrong size on GM_Bodycam_C_OnTrySelectTeam");
static_assert(offsetof(GM_Bodycam_C_OnTrySelectTeam, Team) == 0x000000, "Member 'GM_Bodycam_C_OnTrySelectTeam::Team' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.SendsSystemMessageToPlayers
// 0x0018 (0x0018 - 0x0000)
struct GM_Bodycam_C_SendsSystemMessageToPlayers final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GM_Bodycam_C_SendsSystemMessageToPlayers) == 0x000008, "Wrong alignment on GM_Bodycam_C_SendsSystemMessageToPlayers");
static_assert(sizeof(GM_Bodycam_C_SendsSystemMessageToPlayers) == 0x000018, "Wrong size on GM_Bodycam_C_SendsSystemMessageToPlayers");
static_assert(offsetof(GM_Bodycam_C_SendsSystemMessageToPlayers, Message) == 0x000000, "Member 'GM_Bodycam_C_SendsSystemMessageToPlayers::Message' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.ServerTravel
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_ServerTravel final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_ServerTravel) == 0x000008, "Wrong alignment on GM_Bodycam_C_ServerTravel");
static_assert(sizeof(GM_Bodycam_C_ServerTravel) == 0x000008, "Wrong size on GM_Bodycam_C_ServerTravel");
static_assert(offsetof(GM_Bodycam_C_ServerTravel, Delay) == 0x000000, "Member 'GM_Bodycam_C_ServerTravel::Delay' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.Slomo
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_Slomo final
{
public:
	double                                        Slomo_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_Slomo) == 0x000008, "Wrong alignment on GM_Bodycam_C_Slomo");
static_assert(sizeof(GM_Bodycam_C_Slomo) == 0x000008, "Wrong size on GM_Bodycam_C_Slomo");
static_assert(offsetof(GM_Bodycam_C_Slomo, Slomo_0) == 0x000000, "Member 'GM_Bodycam_C_Slomo::Slomo_0' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.Talk
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_Talk final
{
public:
	bool                                          IsTalking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_Talk) == 0x000001, "Wrong alignment on GM_Bodycam_C_Talk");
static_assert(sizeof(GM_Bodycam_C_Talk) == 0x000001, "Wrong size on GM_Bodycam_C_Talk");
static_assert(offsetof(GM_Bodycam_C_Talk, IsTalking) == 0x000000, "Member 'GM_Bodycam_C_Talk::IsTalking' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.UpdateGamemode
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_UpdateGamemode final
{
public:
	EGameMode                                     GameMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_UpdateGamemode) == 0x000001, "Wrong alignment on GM_Bodycam_C_UpdateGamemode");
static_assert(sizeof(GM_Bodycam_C_UpdateGamemode) == 0x000001, "Wrong size on GM_Bodycam_C_UpdateGamemode");
static_assert(offsetof(GM_Bodycam_C_UpdateGamemode, GameMode) == 0x000000, "Member 'GM_Bodycam_C_UpdateGamemode::GameMode' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.UpdateKickVote
// 0x0048 (0x0048 - 0x0000)
struct GM_Bodycam_C_UpdateKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_UpdateKickVote) == 0x000008, "Wrong alignment on GM_Bodycam_C_UpdateKickVote");
static_assert(sizeof(GM_Bodycam_C_UpdateKickVote) == 0x000048, "Wrong size on GM_Bodycam_C_UpdateKickVote");
static_assert(offsetof(GM_Bodycam_C_UpdateKickVote, Target) == 0x000000, "Member 'GM_Bodycam_C_UpdateKickVote::Target' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_UpdateKickVote, Yes_) == 0x000040, "Member 'GM_Bodycam_C_UpdateKickVote::Yes_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.UpdateMapSelection
// 0x000C (0x000C - 0x0000)
struct GM_Bodycam_C_UpdateMapSelection final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_UpdateMapSelection) == 0x000004, "Wrong alignment on GM_Bodycam_C_UpdateMapSelection");
static_assert(sizeof(GM_Bodycam_C_UpdateMapSelection) == 0x00000C, "Wrong size on GM_Bodycam_C_UpdateMapSelection");
static_assert(offsetof(GM_Bodycam_C_UpdateMapSelection, Selected_Level_Name) == 0x000000, "Member 'GM_Bodycam_C_UpdateMapSelection::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_UpdateMapSelection, Index_0) == 0x000008, "Member 'GM_Bodycam_C_UpdateMapSelection::Index_0' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.UpdateScore
// 0x0008 (0x0008 - 0x0000)
struct GM_Bodycam_C_UpdateScore final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_UpdateScore) == 0x000004, "Wrong alignment on GM_Bodycam_C_UpdateScore");
static_assert(sizeof(GM_Bodycam_C_UpdateScore) == 0x000008, "Wrong size on GM_Bodycam_C_UpdateScore");
static_assert(offsetof(GM_Bodycam_C_UpdateScore, Score) == 0x000000, "Member 'GM_Bodycam_C_UpdateScore::Score' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.UpdateTeamIndex (PlayerKilled)
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_ final
{
public:
	E_Team                                        Team_PlayerKilled_;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_) == 0x000004, "Wrong alignment on GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_");
static_assert(sizeof(GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_) == 0x000010, "Wrong size on GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_");
static_assert(offsetof(GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_, Team_PlayerKilled_) == 0x000000, "Member 'GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_::Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_, MilitaryIndex) == 0x000004, "Member 'GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_, TerroristIndex) == 0x000008, "Member 'GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_, WiiningTeam) == 0x00000C, "Member 'GM_Bodycam_C_UpdateTeamIndex__PlayerKilled_::WiiningTeam' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.UpdateTeamXP
// 0x0001 (0x0001 - 0x0000)
struct GM_Bodycam_C_UpdateTeamXP final
{
public:
	bool                                          Win_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_UpdateTeamXP) == 0x000001, "Wrong alignment on GM_Bodycam_C_UpdateTeamXP");
static_assert(sizeof(GM_Bodycam_C_UpdateTeamXP) == 0x000001, "Wrong size on GM_Bodycam_C_UpdateTeamXP");
static_assert(offsetof(GM_Bodycam_C_UpdateTeamXP, Win_) == 0x000000, "Member 'GM_Bodycam_C_UpdateTeamXP::Win_' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.UpdateTimer
// 0x0020 (0x0020 - 0x0000)
struct GM_Bodycam_C_UpdateTimer final
{
public:
	double                                        TimeCount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GM_Bodycam_C_UpdateTimer) == 0x000008, "Wrong alignment on GM_Bodycam_C_UpdateTimer");
static_assert(sizeof(GM_Bodycam_C_UpdateTimer) == 0x000020, "Wrong size on GM_Bodycam_C_UpdateTimer");
static_assert(offsetof(GM_Bodycam_C_UpdateTimer, TimeCount) == 0x000000, "Member 'GM_Bodycam_C_UpdateTimer::TimeCount' has a wrong offset!");
static_assert(offsetof(GM_Bodycam_C_UpdateTimer, NewParam) == 0x000008, "Member 'GM_Bodycam_C_UpdateTimer::NewParam' has a wrong offset!");

// Function GM_Bodycam.GM_Bodycam_C.UpdateWarning
// 0x0010 (0x0010 - 0x0000)
struct GM_Bodycam_C_UpdateWarning final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Bodycam_C_UpdateWarning) == 0x000008, "Wrong alignment on GM_Bodycam_C_UpdateWarning");
static_assert(sizeof(GM_Bodycam_C_UpdateWarning) == 0x000010, "Wrong size on GM_Bodycam_C_UpdateWarning");
static_assert(offsetof(GM_Bodycam_C_UpdateWarning, String) == 0x000000, "Member 'GM_Bodycam_C_UpdateWarning::String' has a wrong offset!");

}

