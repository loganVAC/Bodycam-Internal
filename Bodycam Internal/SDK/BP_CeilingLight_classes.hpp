#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CeilingLight

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CeilingLight.BP_CeilingLight_C
// 0x0038 (0x02C8 - 0x0290)
class ABP_CeilingLight_C final : public AActor
{
public:
	class UStaticMeshComponent*                   SM_Lamp_Ceiling;                                   // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UPointLightComponent*                   PointLight1;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Scene1;                                            // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	double                                        Brightness;                                        // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Color;                                             // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Source_Radius;                                     // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CeilingLight_C">();
	}
	static class ABP_CeilingLight_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CeilingLight_C>();
	}
};
static_assert(alignof(ABP_CeilingLight_C) == 0x000008, "Wrong alignment on ABP_CeilingLight_C");
static_assert(sizeof(ABP_CeilingLight_C) == 0x0002C8, "Wrong size on ABP_CeilingLight_C");
static_assert(offsetof(ABP_CeilingLight_C, SM_Lamp_Ceiling) == 0x000290, "Member 'ABP_CeilingLight_C::SM_Lamp_Ceiling' has a wrong offset!");
static_assert(offsetof(ABP_CeilingLight_C, PointLight1) == 0x000298, "Member 'ABP_CeilingLight_C::PointLight1' has a wrong offset!");
static_assert(offsetof(ABP_CeilingLight_C, Scene1) == 0x0002A0, "Member 'ABP_CeilingLight_C::Scene1' has a wrong offset!");
static_assert(offsetof(ABP_CeilingLight_C, Brightness) == 0x0002A8, "Member 'ABP_CeilingLight_C::Brightness' has a wrong offset!");
static_assert(offsetof(ABP_CeilingLight_C, Color) == 0x0002B0, "Member 'ABP_CeilingLight_C::Color' has a wrong offset!");
static_assert(offsetof(ABP_CeilingLight_C, Source_Radius) == 0x0002C0, "Member 'ABP_CeilingLight_C::Source_Radius' has a wrong offset!");

}

