#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HostMigrationSystem

#include "Basic.hpp"

#include "HostMigrationSystem_structs.hpp"


namespace SDK::Params
{

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_AreWeReconnecting
// 0x0010 (0x0010 - 0x0000)
struct HMS_FunctionLibrary_HMS_AreWeReconnecting final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HMS_FunctionLibrary_HMS_AreWeReconnecting) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_AreWeReconnecting");
static_assert(sizeof(HMS_FunctionLibrary_HMS_AreWeReconnecting) == 0x000010, "Wrong size on HMS_FunctionLibrary_HMS_AreWeReconnecting");
static_assert(offsetof(HMS_FunctionLibrary_HMS_AreWeReconnecting, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_AreWeReconnecting::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_AreWeReconnecting, ReturnValue) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_AreWeReconnecting::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_AreWeTheChosenNewHost
// 0x0010 (0x0010 - 0x0000)
struct HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost");
static_assert(sizeof(HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost) == 0x000010, "Wrong size on HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost");
static_assert(offsetof(HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost, ReturnValue) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_AreWeTheChosenNewHost::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_CaptureViewportToTexture2D
// 0x0010 (0x0010 - 0x0000)
struct HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UTexture2D*                             ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D");
static_assert(sizeof(HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D) == 0x000010, "Wrong size on HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D");
static_assert(offsetof(HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D, ReturnValue) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_CaptureViewportToTexture2D::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_ClassToString
// 0x0018 (0x0018 - 0x0000)
struct HMS_FunctionLibrary_HMS_ClassToString final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_ClassToString) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_ClassToString");
static_assert(sizeof(HMS_FunctionLibrary_HMS_ClassToString) == 0x000018, "Wrong size on HMS_FunctionLibrary_HMS_ClassToString");
static_assert(offsetof(HMS_FunctionLibrary_HMS_ClassToString, Class_0) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_ClassToString::Class_0' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_ClassToString, ReturnValue) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_ClassToString::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_CompressByteBuffer
// 0x0020 (0x0020 - 0x0000)
struct HMS_FunctionLibrary_HMS_CompressByteBuffer final
{
public:
	struct FHMS_ByteBuffer                        InBuffer;                                          // 0x0000(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FHMS_ByteBuffer                        CompressedBuffer;                                  // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_CompressByteBuffer) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_CompressByteBuffer");
static_assert(sizeof(HMS_FunctionLibrary_HMS_CompressByteBuffer) == 0x000020, "Wrong size on HMS_FunctionLibrary_HMS_CompressByteBuffer");
static_assert(offsetof(HMS_FunctionLibrary_HMS_CompressByteBuffer, InBuffer) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_CompressByteBuffer::InBuffer' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_CompressByteBuffer, CompressedBuffer) == 0x000010, "Member 'HMS_FunctionLibrary_HMS_CompressByteBuffer::CompressedBuffer' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_DecompressByteBuffer
// 0x0020 (0x0020 - 0x0000)
struct HMS_FunctionLibrary_HMS_DecompressByteBuffer final
{
public:
	struct FHMS_ByteBuffer                        InBuffer;                                          // 0x0000(0x0010)(Parm, OutParm, NativeAccessSpecifierPublic)
	struct FHMS_ByteBuffer                        DecompressedBuffer;                                // 0x0010(0x0010)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_DecompressByteBuffer) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_DecompressByteBuffer");
static_assert(sizeof(HMS_FunctionLibrary_HMS_DecompressByteBuffer) == 0x000020, "Wrong size on HMS_FunctionLibrary_HMS_DecompressByteBuffer");
static_assert(offsetof(HMS_FunctionLibrary_HMS_DecompressByteBuffer, InBuffer) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_DecompressByteBuffer::InBuffer' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_DecompressByteBuffer, DecompressedBuffer) == 0x000010, "Member 'HMS_FunctionLibrary_HMS_DecompressByteBuffer::DecompressedBuffer' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_DeserializeObjectProperties
// 0x0060 (0x0060 - 0x0000)
struct HMS_FunctionLibrary_HMS_DeserializeObjectProperties final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHMS_StringToByteBufferMap             PropertyNameToBufferMap;                           // 0x0008(0x0050)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	bool                                          SaveGameOnly;                                      // 0x0058(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HMS_FunctionLibrary_HMS_DeserializeObjectProperties) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_DeserializeObjectProperties");
static_assert(sizeof(HMS_FunctionLibrary_HMS_DeserializeObjectProperties) == 0x000060, "Wrong size on HMS_FunctionLibrary_HMS_DeserializeObjectProperties");
static_assert(offsetof(HMS_FunctionLibrary_HMS_DeserializeObjectProperties, Object) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_DeserializeObjectProperties::Object' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_DeserializeObjectProperties, PropertyNameToBufferMap) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_DeserializeObjectProperties::PropertyNameToBufferMap' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_DeserializeObjectProperties, SaveGameOnly) == 0x000058, "Member 'HMS_FunctionLibrary_HMS_DeserializeObjectProperties::SaveGameOnly' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_GetActorReference
// 0x0028 (0x0028 - 0x0000)
struct HMS_FunctionLibrary_HMS_GetActorReference final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHMS_ActorReference                    Reference;                                         // 0x0008(0x0018)(Parm, OutParm, ReferenceParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_GetActorReference) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_GetActorReference");
static_assert(sizeof(HMS_FunctionLibrary_HMS_GetActorReference) == 0x000028, "Wrong size on HMS_FunctionLibrary_HMS_GetActorReference");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetActorReference, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_GetActorReference::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetActorReference, Reference) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_GetActorReference::Reference' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetActorReference, ReturnValue) == 0x000020, "Member 'HMS_FunctionLibrary_HMS_GetActorReference::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_GetGameInstance
// 0x0010 (0x0010 - 0x0000)
struct HMS_FunctionLibrary_HMS_GetGameInstance final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHMS_GameInstance*                      ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_GetGameInstance) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_GetGameInstance");
static_assert(sizeof(HMS_FunctionLibrary_HMS_GetGameInstance) == 0x000010, "Wrong size on HMS_FunctionLibrary_HMS_GetGameInstance");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetGameInstance, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_GetGameInstance::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetGameInstance, ReturnValue) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_GetGameInstance::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_GetPlayerControllerPublicIP
// 0x0020 (0x0020 - 0x0000)
struct HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ReturnValue;                                       // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP");
static_assert(sizeof(HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP) == 0x000020, "Wrong size on HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP, PlayerController) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP::PlayerController' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP, ReturnValue) == 0x000010, "Member 'HMS_FunctionLibrary_HMS_GetPlayerControllerPublicIP::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_GetPlayerUniqueNetID
// 0x0018 (0x0018 - 0x0000)
struct HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID final
{
public:
	const class APlayerController*                PlayerController;                                  // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 ID;                                                // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID");
static_assert(sizeof(HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID) == 0x000018, "Wrong size on HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID, PlayerController) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID::PlayerController' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID, ID) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_GetPlayerUniqueNetID::ID' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_IsPlayerControllerInSession
// 0x0018 (0x0018 - 0x0000)
struct HMS_FunctionLibrary_HMS_IsPlayerControllerInSession final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class APlayerController*                      PlayerController;                                  // 0x0008(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          InSession;                                         // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HMS_FunctionLibrary_HMS_IsPlayerControllerInSession) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_IsPlayerControllerInSession");
static_assert(sizeof(HMS_FunctionLibrary_HMS_IsPlayerControllerInSession) == 0x000018, "Wrong size on HMS_FunctionLibrary_HMS_IsPlayerControllerInSession");
static_assert(offsetof(HMS_FunctionLibrary_HMS_IsPlayerControllerInSession, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_IsPlayerControllerInSession::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_IsPlayerControllerInSession, PlayerController) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_IsPlayerControllerInSession::PlayerController' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_IsPlayerControllerInSession, InSession) == 0x000010, "Member 'HMS_FunctionLibrary_HMS_IsPlayerControllerInSession::InSession' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_MakeActorReference
// 0x0028 (0x0028 - 0x0000)
struct HMS_FunctionLibrary_HMS_MakeActorReference final
{
public:
	class AActor*                                 Actor;                                             // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHMS_ActorReference                    Reference;                                         // 0x0008(0x0018)(Parm, OutParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HMS_FunctionLibrary_HMS_MakeActorReference) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_MakeActorReference");
static_assert(sizeof(HMS_FunctionLibrary_HMS_MakeActorReference) == 0x000028, "Wrong size on HMS_FunctionLibrary_HMS_MakeActorReference");
static_assert(offsetof(HMS_FunctionLibrary_HMS_MakeActorReference, Actor) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_MakeActorReference::Actor' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_MakeActorReference, Reference) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_MakeActorReference::Reference' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_MakeActorReference, ReturnValue) == 0x000020, "Member 'HMS_FunctionLibrary_HMS_MakeActorReference::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_RandomInt64
// 0x0008 (0x0008 - 0x0000)
struct HMS_FunctionLibrary_HMS_RandomInt64 final
{
public:
	int64                                         ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_RandomInt64) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_RandomInt64");
static_assert(sizeof(HMS_FunctionLibrary_HMS_RandomInt64) == 0x000008, "Wrong size on HMS_FunctionLibrary_HMS_RandomInt64");
static_assert(offsetof(HMS_FunctionLibrary_HMS_RandomInt64, ReturnValue) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_RandomInt64::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_SerializeObjectProperties
// 0x0060 (0x0060 - 0x0000)
struct HMS_FunctionLibrary_HMS_SerializeObjectProperties final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FHMS_StringToByteBufferMap             PropertyNameToBufferMap;                           // 0x0008(0x0050)(Parm, OutParm, NativeAccessSpecifierPublic)
	bool                                          SaveGameOnly;                                      // 0x0058(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HMS_FunctionLibrary_HMS_SerializeObjectProperties) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_SerializeObjectProperties");
static_assert(sizeof(HMS_FunctionLibrary_HMS_SerializeObjectProperties) == 0x000060, "Wrong size on HMS_FunctionLibrary_HMS_SerializeObjectProperties");
static_assert(offsetof(HMS_FunctionLibrary_HMS_SerializeObjectProperties, Object) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_SerializeObjectProperties::Object' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_SerializeObjectProperties, PropertyNameToBufferMap) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_SerializeObjectProperties::PropertyNameToBufferMap' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_SerializeObjectProperties, SaveGameOnly) == 0x000058, "Member 'HMS_FunctionLibrary_HMS_SerializeObjectProperties::SaveGameOnly' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_SetViewportEnabled
// 0x0010 (0x0010 - 0x0000)
struct HMS_FunctionLibrary_HMS_SetViewportEnabled final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Enabled;                                           // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HMS_FunctionLibrary_HMS_SetViewportEnabled) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_SetViewportEnabled");
static_assert(sizeof(HMS_FunctionLibrary_HMS_SetViewportEnabled) == 0x000010, "Wrong size on HMS_FunctionLibrary_HMS_SetViewportEnabled");
static_assert(offsetof(HMS_FunctionLibrary_HMS_SetViewportEnabled, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_SetViewportEnabled::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_SetViewportEnabled, Enabled) == 0x000008, "Member 'HMS_FunctionLibrary_HMS_SetViewportEnabled::Enabled' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_SpawnActorFromActorSave
// 0x0140 (0x0140 - 0x0000)
struct HMS_FunctionLibrary_HMS_SpawnActorFromActorSave final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHMS_ActorSave                         ActorSave;                                         // 0x0010(0x0120)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
	class AActor*                                 ReturnValue;                                       // 0x0130(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_138[0x8];                                      // 0x0138(0x0008)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(HMS_FunctionLibrary_HMS_SpawnActorFromActorSave) == 0x000010, "Wrong alignment on HMS_FunctionLibrary_HMS_SpawnActorFromActorSave");
static_assert(sizeof(HMS_FunctionLibrary_HMS_SpawnActorFromActorSave) == 0x000140, "Wrong size on HMS_FunctionLibrary_HMS_SpawnActorFromActorSave");
static_assert(offsetof(HMS_FunctionLibrary_HMS_SpawnActorFromActorSave, WorldContextObject) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_SpawnActorFromActorSave::WorldContextObject' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_SpawnActorFromActorSave, ActorSave) == 0x000010, "Member 'HMS_FunctionLibrary_HMS_SpawnActorFromActorSave::ActorSave' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_SpawnActorFromActorSave, ReturnValue) == 0x000130, "Member 'HMS_FunctionLibrary_HMS_SpawnActorFromActorSave::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_FunctionLibrary.HMS_StringToClass
// 0x0018 (0x0018 - 0x0000)
struct HMS_FunctionLibrary_HMS_StringToClass final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UClass*                                 ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_FunctionLibrary_HMS_StringToClass) == 0x000008, "Wrong alignment on HMS_FunctionLibrary_HMS_StringToClass");
static_assert(sizeof(HMS_FunctionLibrary_HMS_StringToClass) == 0x000018, "Wrong size on HMS_FunctionLibrary_HMS_StringToClass");
static_assert(offsetof(HMS_FunctionLibrary_HMS_StringToClass, String) == 0x000000, "Member 'HMS_FunctionLibrary_HMS_StringToClass::String' has a wrong offset!");
static_assert(offsetof(HMS_FunctionLibrary_HMS_StringToClass, ReturnValue) == 0x000010, "Member 'HMS_FunctionLibrary_HMS_StringToClass::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_PlayerController.HMS_BeginCurrentGameSaveTransfer
// 0x0008 (0x0008 - 0x0000)
struct HMS_PlayerController_HMS_BeginCurrentGameSaveTransfer final
{
public:
	int64                                         TargetBufferSize;                                  // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_PlayerController_HMS_BeginCurrentGameSaveTransfer) == 0x000008, "Wrong alignment on HMS_PlayerController_HMS_BeginCurrentGameSaveTransfer");
static_assert(sizeof(HMS_PlayerController_HMS_BeginCurrentGameSaveTransfer) == 0x000008, "Wrong size on HMS_PlayerController_HMS_BeginCurrentGameSaveTransfer");
static_assert(offsetof(HMS_PlayerController_HMS_BeginCurrentGameSaveTransfer, TargetBufferSize) == 0x000000, "Member 'HMS_PlayerController_HMS_BeginCurrentGameSaveTransfer::TargetBufferSize' has a wrong offset!");

// Function HostMigrationSystem.HMS_PlayerController.HMS_CurrentGameSaveTransferTick
// 0x0010 (0x0010 - 0x0000)
struct HMS_PlayerController_HMS_CurrentGameSaveTransferTick final
{
public:
	struct FHMS_ByteBuffer                        NewBufferChunk;                                    // 0x0000(0x0010)(Parm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_PlayerController_HMS_CurrentGameSaveTransferTick) == 0x000008, "Wrong alignment on HMS_PlayerController_HMS_CurrentGameSaveTransferTick");
static_assert(sizeof(HMS_PlayerController_HMS_CurrentGameSaveTransferTick) == 0x000010, "Wrong size on HMS_PlayerController_HMS_CurrentGameSaveTransferTick");
static_assert(offsetof(HMS_PlayerController_HMS_CurrentGameSaveTransferTick, NewBufferChunk) == 0x000000, "Member 'HMS_PlayerController_HMS_CurrentGameSaveTransferTick::NewBufferChunk' has a wrong offset!");

// Function HostMigrationSystem.HMS_PlayerController.HMS_GetReconnectNetAddress
// 0x0010 (0x0010 - 0x0000)
struct HMS_PlayerController_HMS_GetReconnectNetAddress final
{
public:
	class FString                                 ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_PlayerController_HMS_GetReconnectNetAddress) == 0x000008, "Wrong alignment on HMS_PlayerController_HMS_GetReconnectNetAddress");
static_assert(sizeof(HMS_PlayerController_HMS_GetReconnectNetAddress) == 0x000010, "Wrong size on HMS_PlayerController_HMS_GetReconnectNetAddress");
static_assert(offsetof(HMS_PlayerController_HMS_GetReconnectNetAddress, ReturnValue) == 0x000000, "Member 'HMS_PlayerController_HMS_GetReconnectNetAddress::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_PlayerController.HMS_SetMyReconnectAddressForTheServer
// 0x0010 (0x0010 - 0x0000)
struct HMS_PlayerController_HMS_SetMyReconnectAddressForTheServer final
{
public:
	class FString                                 MyReconnectAddress;                                // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_PlayerController_HMS_SetMyReconnectAddressForTheServer) == 0x000008, "Wrong alignment on HMS_PlayerController_HMS_SetMyReconnectAddressForTheServer");
static_assert(sizeof(HMS_PlayerController_HMS_SetMyReconnectAddressForTheServer) == 0x000010, "Wrong size on HMS_PlayerController_HMS_SetMyReconnectAddressForTheServer");
static_assert(offsetof(HMS_PlayerController_HMS_SetMyReconnectAddressForTheServer, MyReconnectAddress) == 0x000000, "Member 'HMS_PlayerController_HMS_SetMyReconnectAddressForTheServer::MyReconnectAddress' has a wrong offset!");

// Function HostMigrationSystem.HMS_PlayerController.HMS_SetReconnectAddressFromNewHost
// 0x0010 (0x0010 - 0x0000)
struct HMS_PlayerController_HMS_SetReconnectAddressFromNewHost final
{
public:
	class FString                                 NewReconnectAddress;                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_PlayerController_HMS_SetReconnectAddressFromNewHost) == 0x000008, "Wrong alignment on HMS_PlayerController_HMS_SetReconnectAddressFromNewHost");
static_assert(sizeof(HMS_PlayerController_HMS_SetReconnectAddressFromNewHost) == 0x000010, "Wrong size on HMS_PlayerController_HMS_SetReconnectAddressFromNewHost");
static_assert(offsetof(HMS_PlayerController_HMS_SetReconnectAddressFromNewHost, NewReconnectAddress) == 0x000000, "Member 'HMS_PlayerController_HMS_SetReconnectAddressFromNewHost::NewReconnectAddress' has a wrong offset!");

// Function HostMigrationSystem.HMS_GameMode.HMS_LoadGameSave
// 0x0120 (0x0120 - 0x0000)
struct HMS_GameMode_HMS_LoadGameSave final
{
public:
	struct FHMS_GameSave                          GameSave;                                          // 0x0000(0x0120)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_GameMode_HMS_LoadGameSave) == 0x000008, "Wrong alignment on HMS_GameMode_HMS_LoadGameSave");
static_assert(sizeof(HMS_GameMode_HMS_LoadGameSave) == 0x000120, "Wrong size on HMS_GameMode_HMS_LoadGameSave");
static_assert(offsetof(HMS_GameMode_HMS_LoadGameSave, GameSave) == 0x000000, "Member 'HMS_GameMode_HMS_LoadGameSave::GameSave' has a wrong offset!");

// Function HostMigrationSystem.HMS_GameMode.HMS_PickNewHost
// 0x0008 (0x0008 - 0x0000)
struct HMS_GameMode_HMS_PickNewHost final
{
public:
	class AHMS_PlayerController*                  ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_GameMode_HMS_PickNewHost) == 0x000008, "Wrong alignment on HMS_GameMode_HMS_PickNewHost");
static_assert(sizeof(HMS_GameMode_HMS_PickNewHost) == 0x000008, "Wrong size on HMS_GameMode_HMS_PickNewHost");
static_assert(offsetof(HMS_GameMode_HMS_PickNewHost, ReturnValue) == 0x000000, "Member 'HMS_GameMode_HMS_PickNewHost::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_GameMode.HMS_StartAsyncCreateGameSaveTask
// 0x0001 (0x0001 - 0x0000)
struct HMS_GameMode_HMS_StartAsyncCreateGameSaveTask final
{
public:
	struct FHMS_CreateGameSaveParams              CreateGameSaveParams;                              // 0x0000(0x0001)(ConstParm, Parm, OutParm, ReferenceParm, NoDestructor, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_GameMode_HMS_StartAsyncCreateGameSaveTask) == 0x000001, "Wrong alignment on HMS_GameMode_HMS_StartAsyncCreateGameSaveTask");
static_assert(sizeof(HMS_GameMode_HMS_StartAsyncCreateGameSaveTask) == 0x000001, "Wrong size on HMS_GameMode_HMS_StartAsyncCreateGameSaveTask");
static_assert(offsetof(HMS_GameMode_HMS_StartAsyncCreateGameSaveTask, CreateGameSaveParams) == 0x000000, "Member 'HMS_GameMode_HMS_StartAsyncCreateGameSaveTask::CreateGameSaveParams' has a wrong offset!");

// Function HostMigrationSystem.HMS_GameMode.HMS_StartGameSaveUpdateTimer
// 0x0001 (0x0001 - 0x0000)
struct HMS_GameMode_HMS_StartGameSaveUpdateTimer final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_GameMode_HMS_StartGameSaveUpdateTimer) == 0x000001, "Wrong alignment on HMS_GameMode_HMS_StartGameSaveUpdateTimer");
static_assert(sizeof(HMS_GameMode_HMS_StartGameSaveUpdateTimer) == 0x000001, "Wrong size on HMS_GameMode_HMS_StartGameSaveUpdateTimer");
static_assert(offsetof(HMS_GameMode_HMS_StartGameSaveUpdateTimer, ReturnValue) == 0x000000, "Member 'HMS_GameMode_HMS_StartGameSaveUpdateTimer::ReturnValue' has a wrong offset!");

// Function HostMigrationSystem.HMS_InterfaceComponent.HMS_LoadActorSave
// 0x0120 (0x0120 - 0x0000)
struct HMS_InterfaceComponent_HMS_LoadActorSave final
{
public:
	struct FHMS_ActorSave                         ActorSave;                                         // 0x0000(0x0120)(ConstParm, Parm, OutParm, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_InterfaceComponent_HMS_LoadActorSave) == 0x000010, "Wrong alignment on HMS_InterfaceComponent_HMS_LoadActorSave");
static_assert(sizeof(HMS_InterfaceComponent_HMS_LoadActorSave) == 0x000120, "Wrong size on HMS_InterfaceComponent_HMS_LoadActorSave");
static_assert(offsetof(HMS_InterfaceComponent_HMS_LoadActorSave, ActorSave) == 0x000000, "Member 'HMS_InterfaceComponent_HMS_LoadActorSave::ActorSave' has a wrong offset!");

// Function HostMigrationSystem.HMS_InterfaceComponent.HMS_MakeActorSave
// 0x0120 (0x0120 - 0x0000)
struct HMS_InterfaceComponent_HMS_MakeActorSave final
{
public:
	struct FHMS_ActorSave                         ActorSave;                                         // 0x0000(0x0120)(Parm, OutParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(HMS_InterfaceComponent_HMS_MakeActorSave) == 0x000010, "Wrong alignment on HMS_InterfaceComponent_HMS_MakeActorSave");
static_assert(sizeof(HMS_InterfaceComponent_HMS_MakeActorSave) == 0x000120, "Wrong size on HMS_InterfaceComponent_HMS_MakeActorSave");
static_assert(offsetof(HMS_InterfaceComponent_HMS_MakeActorSave, ActorSave) == 0x000000, "Member 'HMS_InterfaceComponent_HMS_MakeActorSave::ActorSave' has a wrong offset!");

}

