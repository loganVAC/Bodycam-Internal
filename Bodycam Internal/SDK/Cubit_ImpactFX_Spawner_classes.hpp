#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Cubit_ImpactFX_Spawner

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "FXTypes_structs.hpp"
#include "FXMaterialData_structs.hpp"
#include "PhysicsCore_structs.hpp"
#include "MaterialProperties_structs.hpp"
#include "ImpactType_structs.hpp"
#include "Projectile_Size_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Cubit_ImpactFX_Spawner.Cubit_ImpactFX_Spawner_C
// 0x03A0 (0x0630 - 0x0290)
class ACubit_ImpactFX_Spawner_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             HitResult;                                         // 0x02A0(0x00E8)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ContainsInstancedReference, ExposeOnSpawn)
	class UMaterialInterface*                     SplasherDecalMat;                                  // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FFXMaterialData                        MaterialValues;                                    // 0x0390(0x0098)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              SurfaceTypeFeed;                                   // 0x0428(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x7];                                      // 0x0429(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     ImpactDecalMat;                                    // 0x0430(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RicochetVector;                                    // 0x0438(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Decals_Attached_;                                  // 0x0450(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_451[0x7];                                      // 0x0451(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UParticleSystemComponent*               Main_FX_Emitter;                                   // 0x0458(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0460(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Impact_Normal;                                     // 0x0478(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    Hit_Component;                                     // 0x0490(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	EProjectile_Size                              FXSize;                                            // 0x0498(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          ParticleDecalSpawnerON_;                           // 0x0499(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_49A[0x6];                                      // 0x049A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        RicochetSoundComponent;                            // 0x04A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UParticleSystemComponent*               RicochetParticleComponent;                         // 0x04A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	struct FVector                                Impact_Point;                                      // 0x04B0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Impact_Speed;                                      // 0x04C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        NormalisedRangeMin;                                // 0x04D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        NormalisedRangeMax;                                // 0x04D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ImpactForceMultiplier;                             // 0x04E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RicochetExitVelocity;                              // 0x04E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class FName                                   Hit_Bone;                                          // 0x04F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Decal_Life;                                        // 0x04F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	EFXTypes                                      FX_Type;                                           // 0x0500(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ParticleCollisionLocation;                         // 0x0508(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EPhysicalSurface                              CollisionSurface;                                  // 0x0520(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ParticleCollisionSoundsON;                         // 0x0521(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_522[0x6];                                      // 0x0522(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                ParticleCollisionVelocity;                         // 0x0528(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ParticleCollisionNormal;                           // 0x0540(0x0018)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialProperties                    MaterialProperties;                                // 0x0558(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMaterialProperties                    ParticleCollisionMaterialProperties;               // 0x0564(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EImpactType                                   Impact_Type;                                       // 0x0570(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_571[0x3];                                      // 0x0571(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   SurfaceName;                                       // 0x0574(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          FirePropagationON;                                 // 0x057C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_57D[0x3];                                      // 0x057D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   ParticleCollisonHitBone;                           // 0x0580(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UseLineTraceParticleCollisions;                    // 0x0588(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    ParticleCollisionLineCheckComponent;               // 0x0590(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CanvasTargetDecals;                                // 0x0598(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          BacksplatterDecalsON;                              // 0x0599(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_59A[0x6];                                      // 0x059A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ProjectilesVector;                                 // 0x05A0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AActor*                                 HitActor;                                          // 0x0600(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        BacksplatterChance;                                // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               BacksplatterDecalMat;                              // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          ExitBullet;                                        // 0x0618(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UDecalComponent*>                Decals;                                            // 0x0620(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance, ContainsInstancedReference)

public:
	void BackSplatter();
	void Debris_FX_Spawn();
	void DebrisFXInitialise();
	void DestroyFXSpawner();
	void DrySplash();
	void ExecuteUbergraph_Cubit_ImpactFX_Spawner(int32 EntryPoint);
	void FirePropagation();
	void FX_Type_Chosen();
	void Get_FX_Type();
	void Impact_Event();
	void InitiateFXTasks();
	void OnParticleCollide_Event(class FName EventName, float EmitterTime, int32 ParticleTime, const struct FVector& Location_0, const struct FVector& Velocity, const struct FVector& Direction, const struct FVector& Normal, class FName BoneName, class UPhysicalMaterial* PhysMat);
	void ParticleCollisionSounds();
	void Penetration_Event();
	void ReceiveBeginPlay();
	void ReceiveDestroyed();
	void Ricochet_Event();
	void Sizzle_Dry_FX();
	void Sizzle_Liquid_FX();
	void SizzleDry();
	void SizzleWet();
	void SpawnDecals();
	void SpawnParticleCollisionFX();
	void SpawnParticleDecals();
	void SpawnSounds();
	void WetSplash();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Cubit_ImpactFX_Spawner_C">();
	}
	static class ACubit_ImpactFX_Spawner_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ACubit_ImpactFX_Spawner_C>();
	}
};
static_assert(alignof(ACubit_ImpactFX_Spawner_C) == 0x000010, "Wrong alignment on ACubit_ImpactFX_Spawner_C");
static_assert(sizeof(ACubit_ImpactFX_Spawner_C) == 0x000630, "Wrong size on ACubit_ImpactFX_Spawner_C");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, UberGraphFrame) == 0x000290, "Member 'ACubit_ImpactFX_Spawner_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, DefaultSceneRoot) == 0x000298, "Member 'ACubit_ImpactFX_Spawner_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, HitResult) == 0x0002A0, "Member 'ACubit_ImpactFX_Spawner_C::HitResult' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, SplasherDecalMat) == 0x000388, "Member 'ACubit_ImpactFX_Spawner_C::SplasherDecalMat' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, MaterialValues) == 0x000390, "Member 'ACubit_ImpactFX_Spawner_C::MaterialValues' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, SurfaceTypeFeed) == 0x000428, "Member 'ACubit_ImpactFX_Spawner_C::SurfaceTypeFeed' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ImpactDecalMat) == 0x000430, "Member 'ACubit_ImpactFX_Spawner_C::ImpactDecalMat' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, RicochetVector) == 0x000438, "Member 'ACubit_ImpactFX_Spawner_C::RicochetVector' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Decals_Attached_) == 0x000450, "Member 'ACubit_ImpactFX_Spawner_C::Decals_Attached_' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Main_FX_Emitter) == 0x000458, "Member 'ACubit_ImpactFX_Spawner_C::Main_FX_Emitter' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Location) == 0x000460, "Member 'ACubit_ImpactFX_Spawner_C::Location' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Impact_Normal) == 0x000478, "Member 'ACubit_ImpactFX_Spawner_C::Impact_Normal' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Hit_Component) == 0x000490, "Member 'ACubit_ImpactFX_Spawner_C::Hit_Component' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, FXSize) == 0x000498, "Member 'ACubit_ImpactFX_Spawner_C::FXSize' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ParticleDecalSpawnerON_) == 0x000499, "Member 'ACubit_ImpactFX_Spawner_C::ParticleDecalSpawnerON_' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, RicochetSoundComponent) == 0x0004A0, "Member 'ACubit_ImpactFX_Spawner_C::RicochetSoundComponent' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, RicochetParticleComponent) == 0x0004A8, "Member 'ACubit_ImpactFX_Spawner_C::RicochetParticleComponent' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Impact_Point) == 0x0004B0, "Member 'ACubit_ImpactFX_Spawner_C::Impact_Point' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Impact_Speed) == 0x0004C8, "Member 'ACubit_ImpactFX_Spawner_C::Impact_Speed' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, NormalisedRangeMin) == 0x0004D0, "Member 'ACubit_ImpactFX_Spawner_C::NormalisedRangeMin' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, NormalisedRangeMax) == 0x0004D8, "Member 'ACubit_ImpactFX_Spawner_C::NormalisedRangeMax' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ImpactForceMultiplier) == 0x0004E0, "Member 'ACubit_ImpactFX_Spawner_C::ImpactForceMultiplier' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, RicochetExitVelocity) == 0x0004E8, "Member 'ACubit_ImpactFX_Spawner_C::RicochetExitVelocity' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Hit_Bone) == 0x0004F0, "Member 'ACubit_ImpactFX_Spawner_C::Hit_Bone' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Decal_Life) == 0x0004F8, "Member 'ACubit_ImpactFX_Spawner_C::Decal_Life' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, FX_Type) == 0x000500, "Member 'ACubit_ImpactFX_Spawner_C::FX_Type' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ParticleCollisionLocation) == 0x000508, "Member 'ACubit_ImpactFX_Spawner_C::ParticleCollisionLocation' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, CollisionSurface) == 0x000520, "Member 'ACubit_ImpactFX_Spawner_C::CollisionSurface' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ParticleCollisionSoundsON) == 0x000521, "Member 'ACubit_ImpactFX_Spawner_C::ParticleCollisionSoundsON' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ParticleCollisionVelocity) == 0x000528, "Member 'ACubit_ImpactFX_Spawner_C::ParticleCollisionVelocity' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ParticleCollisionNormal) == 0x000540, "Member 'ACubit_ImpactFX_Spawner_C::ParticleCollisionNormal' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, MaterialProperties) == 0x000558, "Member 'ACubit_ImpactFX_Spawner_C::MaterialProperties' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ParticleCollisionMaterialProperties) == 0x000564, "Member 'ACubit_ImpactFX_Spawner_C::ParticleCollisionMaterialProperties' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Impact_Type) == 0x000570, "Member 'ACubit_ImpactFX_Spawner_C::Impact_Type' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, SurfaceName) == 0x000574, "Member 'ACubit_ImpactFX_Spawner_C::SurfaceName' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, FirePropagationON) == 0x00057C, "Member 'ACubit_ImpactFX_Spawner_C::FirePropagationON' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ParticleCollisonHitBone) == 0x000580, "Member 'ACubit_ImpactFX_Spawner_C::ParticleCollisonHitBone' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, UseLineTraceParticleCollisions) == 0x000588, "Member 'ACubit_ImpactFX_Spawner_C::UseLineTraceParticleCollisions' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ParticleCollisionLineCheckComponent) == 0x000590, "Member 'ACubit_ImpactFX_Spawner_C::ParticleCollisionLineCheckComponent' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, CanvasTargetDecals) == 0x000598, "Member 'ACubit_ImpactFX_Spawner_C::CanvasTargetDecals' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, BacksplatterDecalsON) == 0x000599, "Member 'ACubit_ImpactFX_Spawner_C::BacksplatterDecalsON' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ProjectilesVector) == 0x0005A0, "Member 'ACubit_ImpactFX_Spawner_C::ProjectilesVector' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, HitActor) == 0x000600, "Member 'ACubit_ImpactFX_Spawner_C::HitActor' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, BacksplatterChance) == 0x000608, "Member 'ACubit_ImpactFX_Spawner_C::BacksplatterChance' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, BacksplatterDecalMat) == 0x000610, "Member 'ACubit_ImpactFX_Spawner_C::BacksplatterDecalMat' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, ExitBullet) == 0x000618, "Member 'ACubit_ImpactFX_Spawner_C::ExitBullet' has a wrong offset!");
static_assert(offsetof(ACubit_ImpactFX_Spawner_C, Decals) == 0x000620, "Member 'ACubit_ImpactFX_Spawner_C::Decals' has a wrong offset!");

}

