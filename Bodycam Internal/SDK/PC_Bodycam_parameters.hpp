#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Bodycam

#include "Basic.hpp"

#include "E_Team_structs.hpp"
#include "STR_TEST_structs.hpp"
#include "SteamCorePro_structs.hpp"
#include "SlateCore_structs.hpp"
#include "STR_PCInfo_structs.hpp"
#include "STR_Actor_structs.hpp"
#include "GM_Statue_structs.hpp"
#include "STR_KickVote_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "STR_SpawnDistance_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "InputCore_structs.hpp"
#include "E_Emote_structs.hpp"
#include "STR_PCStats_structs.hpp"
#include "GameMode_structs.hpp"
#include "STR_Score_structs.hpp"


namespace SDK::Params
{

// Function PC_Bodycam.PC_Bodycam_C.AssignTeam (Server)
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_AssignTeam__Server_ final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_AssignTeam__Server_) == 0x000001, "Wrong alignment on PC_Bodycam_C_AssignTeam__Server_");
static_assert(sizeof(PC_Bodycam_C_AssignTeam__Server_) == 0x000001, "Wrong size on PC_Bodycam_C_AssignTeam__Server_");
static_assert(offsetof(PC_Bodycam_C_AssignTeam__Server_, Team_0) == 0x000000, "Member 'PC_Bodycam_C_AssignTeam__Server_::Team_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.CanCreateKickVote
// 0x000C (0x000C - 0x0000)
struct PC_Bodycam_C_CanCreateKickVote final
{
public:
	bool                                          CanCreateKickVote_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetChildrenCount_ReturnValue;             // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_CanCreateKickVote) == 0x000004, "Wrong alignment on PC_Bodycam_C_CanCreateKickVote");
static_assert(sizeof(PC_Bodycam_C_CanCreateKickVote) == 0x00000C, "Wrong size on PC_Bodycam_C_CanCreateKickVote");
static_assert(offsetof(PC_Bodycam_C_CanCreateKickVote, CanCreateKickVote_) == 0x000000, "Member 'PC_Bodycam_C_CanCreateKickVote::CanCreateKickVote_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_CanCreateKickVote, CallFunc_GetChildrenCount_ReturnValue) == 0x000004, "Member 'PC_Bodycam_C_CanCreateKickVote::CallFunc_GetChildrenCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_CanCreateKickVote, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'PC_Bodycam_C_CanCreateKickVote::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.CanKickThisPlayer?
// 0x0020 (0x0020 - 0x0000)
struct PC_Bodycam_C_CanKickThisPlayer_ final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          True_;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_CanKickThisPlayer_) == 0x000008, "Wrong alignment on PC_Bodycam_C_CanKickThisPlayer_");
static_assert(sizeof(PC_Bodycam_C_CanKickThisPlayer_) == 0x000020, "Wrong size on PC_Bodycam_C_CanKickThisPlayer_");
static_assert(offsetof(PC_Bodycam_C_CanKickThisPlayer_, PlayerID) == 0x000000, "Member 'PC_Bodycam_C_CanKickThisPlayer_::PlayerID' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_CanKickThisPlayer_, True_) == 0x000010, "Member 'PC_Bodycam_C_CanKickThisPlayer_::True_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_CanKickThisPlayer_, CallFunc_Array_Find_ReturnValue) == 0x000014, "Member 'PC_Bodycam_C_CanKickThisPlayer_::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_CanKickThisPlayer_, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000018, "Member 'PC_Bodycam_C_CanKickThisPlayer_::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.CustomEvent_1
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_CustomEvent_1 final
{
public:
	E_Emote                                       EmoteToPlay;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_CustomEvent_1) == 0x000001, "Wrong alignment on PC_Bodycam_C_CustomEvent_1");
static_assert(sizeof(PC_Bodycam_C_CustomEvent_1) == 0x000001, "Wrong size on PC_Bodycam_C_CustomEvent_1");
static_assert(offsetof(PC_Bodycam_C_CustomEvent_1, EmoteToPlay) == 0x000000, "Member 'PC_Bodycam_C_CustomEvent_1::EmoteToPlay' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.ExecuteUbergraph_PC_Bodycam
// 0x1440 (0x1440 - 0x0000)
struct PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats;                     // 0x001C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUD_ScoreBoardMenu_C*                  CallFunc_Create_ReturnValue;                       // 0x0030(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0040(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0058(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0070(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable;                              // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_1;                            // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable;                              // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_2;                            // 0x00F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x2];                                      // 0x0102(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     Temp_byte_Variable;                                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0118(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0140(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1_0;                            // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UHUD_Warning_C*                         CallFunc_Create_ReturnValue_1;                     // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x3];                                      // 0x0189(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Emote                                       K2Node_Event_EmoteToPlay_1;                        // 0x0191(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_192[0x6];                                      // 0x0192(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Selected_Level_Name;                  // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Slomo;                                // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target_2;                             // 0x01B8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes_;                                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target_1;                             // 0x0200(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Event_Gamemode;                             // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReady_;                             // 0x0241(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsTalking;                            // 0x0242(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_243[0x5];                                      // 0x0243(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Xp;                                   // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_ChatInterface_C>   K2Node_DynamicCast_AsBP_Chat_Interface;            // 0x0260(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x2];                                      // 0x0272(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Emote                                       K2Node_Event_EmoteToPlay;                          // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PauseGame_C>      CallFunc_Pause_self_CastInput;                     // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_CustomEvent_Time;                           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_CustomEvent_FinalText;                      // 0x0298(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_CustomEvent_Duration;                       // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team_4;                         // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x02D8(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x0300(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_1;                            // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_FindPlayerSpawn_SpawnTransform;           // 0x0320(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Drone_C*                            CallFunc_FinishSpawningActor_ReturnValue;          // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Remove_;                        // 0x0391(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_392[0x6];                                      // 0x0392(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUD_ScoreBoardMenu_C*                  CallFunc_Create_ReturnValue_2;                     // 0x0398(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam;                   // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C1[0x3];                                      // 0x03C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Death;                                // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Set;                                  // 0x03CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3CD[0x3];                                      // 0x03CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Kill_;                                // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Death_1;                        // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Set;                            // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x3];                                      // 0x03D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Death;                          // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x03EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3ED[0x3];                                      // 0x03ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUD_TransitionLevels_C*                CallFunc_Create_ReturnValue_3;                     // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_PCInfo;                         // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team_3;                         // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCStats                           K2Node_CustomEvent_Item_Stats;                     // 0x040C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0420(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_1;                 // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_439[0x7];                                      // 0x0439(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_2;                 // 0x0440(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0450(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_495[0x3];                                      // 0x0495(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0498(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x04DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4DD[0x3];                                      // 0x04DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats_1;                   // 0x04E4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x04F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F5[0x3];                                      // 0x04F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo;                      // 0x04F8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGM_Statue                                    K2Node_CustomEvent_GM_Statue;                      // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team_2;                         // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team_1;                         // 0x053A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x053B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team;                           // 0x053C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53D[0x3];                                      // 0x053D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x7];                                      // 0x0549(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_3;                 // 0x0550(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_1;                         // 0x0560(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x05A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x05A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A6[0x2];                                      // 0x05A6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x05A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_1;                 // 0x05B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x05B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5BA[0x6];                                      // 0x05BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x05C0(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x05D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x05DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DD[0x3];                                      // 0x05DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x05E0(0x0018)(HasGetValueTypeHash)
	class FString                                 K2Node_Event_String;                               // 0x05F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x7];                                      // 0x0609(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_InputPin;                       // 0x0610(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0620(0x0018)()
	double                                        K2Node_Event_TimeCount;                            // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_NewParam;                             // 0x0640(0x0018)()
	E_Team                                        K2Node_Event_Team;                                 // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A[0x2];                                      // 0x065A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0661(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0662(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_663[0x5];                                      // 0x0663(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_1;           // 0x0668(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team_PlayerKilled_;                   // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x3];                                      // 0x06A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MilitaryIndex;                        // 0x06AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TerroristIndex;                       // 0x06B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_WiiningTeam;                          // 0x06B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B5[0x3];                                      // 0x06B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team__PlayerKilled_;            // 0x06BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BD[0x3];                                      // 0x06BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_MilitaryIndex;                  // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TerroristIndex;                 // 0x06C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_WiiningTeam;                    // 0x06C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x06C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CA[0x2];                                      // 0x06CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x06D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_Score                             K2Node_Event_Score;                                // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_Bodycam_C*                          K2Node_DynamicCast_AsGM_Bodycam;                   // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x7];                                      // 0x06F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x06F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_2;                 // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0708(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_709[0x3];                                      // 0x0709(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_CustomEvent_Score;                          // 0x070C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SteamID;                        // 0x0718(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0728(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Stats_Rank;                     // 0x072C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Stats_XP;                       // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_734[0x4];                                      // 0x0734(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GameEnd_C*                         CallFunc_Create_ReturnValue_4;                     // 0x0738(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0740(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0748(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_9;                    // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDestroyabe__Destroyable_;               // 0x075A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Win_;                                 // 0x075B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_DroneInterface_C*>          CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0760(0x0010)(ReferenceParm, ContainsInstancedReference)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0770(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UWBP_DroneInterface_C*                  CallFunc_Array_Get_Item_2;                         // 0x0778(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_1;                    // 0x0780(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CC[0x4];                                      // 0x07CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x07D0(0x0010)(ReferenceParm)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_3;                         // 0x07E0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x0820(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x082C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82D[0x3];                                      // 0x082D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats_2;                   // 0x0834(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_2;                    // 0x0848(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_2;           // 0x0890(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x08D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_Bodycam_C*                          K2Node_DynamicCast_AsGM_Bodycam_1;                 // 0x08D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E1[0x7];                                      // 0x08E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x08E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_3;                 // 0x08F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x08F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F9[0x7];                                      // 0x08F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x0900(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASpectatorCamera_C*                     K2Node_DynamicCast_AsSpectator_Camera;             // 0x0908(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USpectatorHud_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0918(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_Win;                            // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x7];                                      // 0x0929(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USpectatorHud_C*                        CallFunc_Array_Get_Item_5;                         // 0x0930(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0938(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue;                   // 0x0941(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes__1;                         // 0x0942(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_943[0x5];                                      // 0x0943(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_4;                        // 0x0948(0x0018)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_10;                   // 0x0960(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_961[0x7];                                      // 0x0961(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_KickVote                          K2Node_Event_PlayerInfo;                           // 0x0968(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_CustomEvent_Player_info_2;                  // 0x09B0(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_CustomEvent_Player_info_1;                  // 0x09F8(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x0A40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_4;                 // 0x0A48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0A50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A51[0x7];                                      // 0x0A51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_KickPlayer_self_CastInput;                // 0x0A58(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_CustomEvent_Player_info;                    // 0x0A68(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes_;                           // 0x0AA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AA9[0x7];                                      // 0x0AA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0AB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_4;                 // 0x0AB8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0AC0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC1[0x7];                                      // 0x0AC1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_3;                            // 0x0AC8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0AD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_3;        // 0x0AD9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0ADA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ADB[0x5];                                      // 0x0ADB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_SteamID;                              // 0x0AE0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue;                  // 0x0AF0(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0AFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AFD[0x3];                                      // 0x0AFD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0B00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B04[0x4];                                      // 0x0B04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue_1;                // 0x0B08(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0B10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B11[0x7];                                      // 0x0B11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UKickOverlay_C*                         CallFunc_Create_ReturnValue_5;                     // 0x0B18(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHUD_Character_C*                       CallFunc_Create_ReturnValue_6;                     // 0x0B20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0B28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_1;          // 0x0B30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0B40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B41[0x7];                                      // 0x0B41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target;                               // 0x0B48(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_4;        // 0x0B88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0B89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Stop_;                          // 0x0B8A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0B8B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8C[0x4];                                      // 0x0B8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSound2D_ReturnValue;                 // 0x0B90(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlaying_ReturnValue;                    // 0x0B98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B99[0x7];                                      // 0x0B99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHUD_Character_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets_2;      // 0x0BA0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UHUD_Character_C*                       CallFunc_Array_Get_Item_6;                         // 0x0BB0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBD[0x3];                                      // 0x0BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0BC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_Drone_C*                            K2Node_DynamicCast_AsBP_Drone;                     // 0x0BC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0BD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD1[0x7];                                      // 0x0BD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_4;                 // 0x0BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2;                              // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1;  // 0x0BE8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF1[0x7];                                      // 0x0BF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorCamera_C*                     K2Node_DynamicCast_AsSpectator_Camera_1;           // 0x0BF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C01[0x7];                                      // 0x0C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_CustomEvent_NewRotation;                    // 0x0C08(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_5;                 // 0x0C20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0C28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          Temp_bool_Variable_3;                              // 0x0C40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C41[0x7];                                      // 0x0C41(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4;                              // 0x0C50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue;                   // 0x0C58(0x0008)(NoDestructor)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0C60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C64[0x4];                                      // 0x0C64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0C68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0C78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C7C[0x4];                                      // 0x0C7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_1;                            // 0x0C80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0C88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_SelectTeam_ReturnValue;                   // 0x0C90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C91[0x7];                                      // 0x0C91(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x0C98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x0CA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x0CA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_5;                 // 0x0CB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0CB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CB9[0x7];                                      // 0x0CB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_6;                 // 0x0CC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0CC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_7;                         // 0x0CD0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0D10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D14[0x4];                                      // 0x0D14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_3;                    // 0x0D18(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0D58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0D59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5A[0x6];                                      // 0x0D5A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_7;               // 0x0D60(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_6;                 // 0x0D68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x0D70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_11;                   // 0x0D71(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D72[0x6];                                      // 0x0D72(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_8;                         // 0x0D78(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0DBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DBD[0x3];                                      // 0x0DBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_3;           // 0x0DC0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_2;     // 0x0E00(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_2;     // 0x0E20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_2;   // 0x0E24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_2;    // 0x0E28(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0E30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0E34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4_0;                            // 0x0E38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_0;                            // 0x0E40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_2; // 0x0E48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E49[0x3];                                      // 0x0E49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default_1;                           // 0x0E4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0E50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E54[0x4];                                      // 0x0E54(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x0E58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWidget*>                        CallFunc_GetAllChildren_ReturnValue;               // 0x0E60(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWidget*                                CallFunc_Array_Get_Item_9;                         // 0x0E70(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_8;               // 0x0E78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UKickVote_C*                            K2Node_DynamicCast_AsKick_Vote;                    // 0x0E80(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_22;                    // 0x0E88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E89[0x7];                                      // 0x0E89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_7;                 // 0x0E90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_23;                    // 0x0E98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E99[0x7];                                      // 0x0E99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_4;           // 0x0EA0(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0EE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0EE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0EE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE9[0x3];                                      // 0x0EE9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_2;                 // 0x0EEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x0EF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue_1;                 // 0x0EF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_12;                   // 0x0EF2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_GetTeam_Team;                             // 0x0EF3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0EF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EF5[0x3];                                      // 0x0EF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0EF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EFC[0x4];                                      // 0x0EFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_10;                             // 0x0F00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_3;                 // 0x0F08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x0F0C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F0D[0x3];                                      // 0x0F0D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0F10(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_10;                        // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_11;                        // 0x0F28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_Actor                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0F30(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0F40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F41[0x3];                                      // 0x0F41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0F44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0F48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0F4C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x0F4D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0F4E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4F[0x1];                                      // 0x0F4F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_11;                             // 0x0F50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0F58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x0F5C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5D[0x3];                                      // 0x0F5D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0F60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0F64(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F65[0x3];                                      // 0x0F65(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_12;                             // 0x0F68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_13;                             // 0x0F70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     Temp_byte_Variable_2;                              // 0x0F78(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F79[0x7];                                      // 0x0F79(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default_2;                           // 0x0F80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0F88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F89[0x7];                                      // 0x0F89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_2;                // 0x0F90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x0F98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGM_Bodycam_C*                          K2Node_DynamicCast_AsGM_Bodycam_2;                 // 0x0FA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_24;                    // 0x0FA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA9[0x7];                                      // 0x0FA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x0FB0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_Actor                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0FC0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0FD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FD1[0x7];                                      // 0x0FD1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_7;                 // 0x0FD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_2;  // 0x0FE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_25;                    // 0x0FE8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FE9[0x7];                                      // 0x0FE9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_HandleItem_Handle_Actor;                  // 0x0FF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UClass*                                 CallFunc_GetObjectClass_ReturnValue;               // 0x0FF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_13;                   // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ClassClass_ReturnValue;        // 0x1001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1002[0x6];                                     // 0x1002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue_2;                // 0x1008(0x0008)(NoDestructor)
	class UTexture2D*                             CallFunc_GetSmallFriendAvatar_ReturnValue;         // 0x1010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_14;                   // 0x1018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1019[0x7];                                     // 0x1019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_4;                    // 0x1020(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_3;            // 0x1060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_15;                   // 0x1064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_3;          // 0x1065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x1066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x1067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x1068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_16;                   // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_17;                   // 0x1079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_18;                   // 0x107A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_107B[0x5];                                     // 0x107B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_PauseGame_C>      K2Node_DynamicCast_AsBPI_Pause_Game;               // 0x1080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_26;                    // 0x1090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1091[0x7];                                     // 0x1091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_5;           // 0x1098(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x10D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_19;                   // 0x10DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x10DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x10DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x10DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_4;                            // 0x10E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x10F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x1100(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	EGM_Statue                                    Temp_byte_Variable_3;                              // 0x1110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1111[0x7];                                     // 0x1111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_3;                           // 0x1118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Select_Default_4;                           // 0x1128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_5;                            // 0x1138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_6;                            // 0x1148(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class APC_Bodycam_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x1158(0x0010)(ReferenceParm)
	E_Team                                        CallFunc_GetFriensTeam_Team;                       // 0x1168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1169[0x3];                                     // 0x1169(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x116C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x1170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1171[0x3];                                     // 0x1171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x1174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 Temp_string_Variable_7;                            // 0x1178(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_9;               // 0x1188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue_2;                 // 0x1190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1191[0x7];                                     // 0x1191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_8;                 // 0x1198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_27;                    // 0x11A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A1[0x7];                                     // 0x11A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_12;                        // 0x11A8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x11E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x11EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x11ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11EE[0x2];                                     // 0x11EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x11F0(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x1208(0x0018)()
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_4;          // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1221[0x7];                                     // 0x1221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Temp_string_Variable_8;                            // 0x1228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_10;              // 0x1238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_2;          // 0x1240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_28;                    // 0x1250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1251[0x7];                                     // 0x1251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default_5;                           // 0x1258(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x1268(0x0010)(ReferenceParm)
	uint8                                         Pad_1278[0x8];                                     // 0x1278(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Find_Best_Spawn_Point_FarestTransform_return; // 0x1280(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_13;                        // 0x12E0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x1320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x1338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x1350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1368[0x8];                                     // 0x1368(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x1370(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x13D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats_3;                   // 0x13D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_5;                    // 0x13E8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x1428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x1430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_5;          // 0x1431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1432[0x2];                                     // 0x1432(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x1434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x1438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x1439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam) == 0x000010, "Wrong alignment on PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam");
static_assert(sizeof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam) == 0x001440, "Wrong size on PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, EntryPoint) == 0x000000, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::EntryPoint' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameInstance_ReturnValue) == 0x000008, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBodycam_GI) == 0x000010, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCStats) == 0x00001C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCStats' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_Variable) == 0x00002C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Create_ReturnValue) == 0x000030, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_Variable_1) == 0x000038, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_InputKeyEvent_Key_1) == 0x000040, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_InputKeyEvent_Key) == 0x000058, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_struct_Variable) == 0x000070, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000088, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable) == 0x00008C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable) == 0x000090, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable) == 0x0000A0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable) == 0x0000A8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_1) == 0x0000B0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_2) == 0x0000B4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_1) == 0x0000B8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable_1) == 0x0000C0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_1) == 0x0000D0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000D4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_True_if_break_was_hit_Variable) == 0x0000D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_3) == 0x0000DC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Not_PreBool_ReturnValue) == 0x0000E4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_object_Variable) == 0x0000E8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable_2) == 0x0000F0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_IsClosed_Variable) == 0x000100, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_Has_Been_Initd_Variable) == 0x000101, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_2) == 0x000104, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_3) == 0x000108, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_3) == 0x00010C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_4) == 0x000110, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_byte_Variable) == 0x000114, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000118, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000138, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x00013C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000140, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_4) == 0x000148, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_1_0) == 0x000150, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_0) == 0x000158, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000160, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_4) == 0x000164, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_5) == 0x000168, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_5) == 0x00016C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Create_ReturnValue_1) == 0x000170, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_5) == 0x000178, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_6) == 0x00017C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_6) == 0x000180, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_7) == 0x000184, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000188, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_6) == 0x00018C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Not_PreBool_ReturnValue_1) == 0x000190, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_EmoteToPlay_1) == 0x000191, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_EmoteToPlay_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Delay) == 0x000198, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Selected_Level_Name) == 0x0001A0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Index) == 0x0001A8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Slomo) == 0x0001B0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Slomo' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Target_2) == 0x0001B8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Yes_) == 0x0001F8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Yes_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Target_1) == 0x000200, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Gamemode) == 0x000240, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Gamemode' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_IsReady_) == 0x000241, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_IsReady_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_IsTalking) == 0x000242, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_IsTalking' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_PC) == 0x000248, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Xp) == 0x000250, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Xp' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_7) == 0x000254, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetPawn_ReturnValue) == 0x000258, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBP_Chat_Interface) == 0x000260, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBP_Chat_Interface' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_1) == 0x000270, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue) == 0x000271, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_8) == 0x000274, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_EmoteToPlay) == 0x000278, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_EmoteToPlay' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Pause_self_CastInput) == 0x000280, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Pause_self_CastInput' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Time) == 0x000290, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Time' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_FinalText) == 0x000298, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_FinalText' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_1) == 0x0002B0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_PossessedPawn) == 0x0002B8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x0002C0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_2) == 0x0002C8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Duration) == 0x0002CC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Team_4) == 0x0002D0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Team_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x0002D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x0002F8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x0002FC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x000300, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_1_1) == 0x000308, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_1_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_1) == 0x000310, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x000318, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_FindPlayerSpawn_SpawnTransform) == 0x000320, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_FindPlayerSpawn_SpawnTransform' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000380, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_FinishSpawningActor_ReturnValue) == 0x000388, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_2) == 0x000390, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Remove_) == 0x000391, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Remove_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Create_ReturnValue_2) == 0x000398, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_3) == 0x0003A0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_4) == 0x0003A1, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue) == 0x0003A8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_7) == 0x0003B0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam) == 0x0003B8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_3) == 0x0003C0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_8) == 0x0003C4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Death) == 0x0003C8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Death' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Set) == 0x0003CC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Set' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Kill_) == 0x0003D0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Kill_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Death_1) == 0x0003D4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Death_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Set) == 0x0003D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Set' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Death) == 0x0003DC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Death' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Clamp_ReturnValue) == 0x0003E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Variable) == 0x0003E4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Variable_1) == 0x0003E8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_Variable_2) == 0x0003EC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Create_ReturnValue_3) == 0x0003F0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_PCInfo) == 0x0003F8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_PCInfo' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Team_3) == 0x000408, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Team_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Item_Stats) == 0x00040C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Item_Stats' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_1) == 0x000420, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_2) == 0x000428, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_1) == 0x000430, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_4) == 0x000438, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_2) == 0x000440, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_5) == 0x000448, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000450, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue) == 0x000490, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Greater_IntInt_ReturnValue) == 0x000494, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item) == 0x000498, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_1) == 0x0004D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0004DC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_9) == 0x0004E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCStats_1) == 0x0004E4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCStats_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0004F4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCInfo) == 0x0004F8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCInfo' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_GM_Statue) == 0x000538, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_GM_Statue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Team_2) == 0x000539, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Team_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Team_1) == 0x00053A, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Team_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_SwitchEnum_CmpSuccess) == 0x00053B, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Team) == 0x00053C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_3) == 0x000540, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000548, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_3) == 0x000550, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_6) == 0x000558, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_1) == 0x000560, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_2) == 0x0005A0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue) == 0x0005A4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Not_PreBool_ReturnValue_2) == 0x0005A5, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameInstance_ReturnValue_1) == 0x0005A8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBodycam_GI_1) == 0x0005B0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBodycam_GI_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_7) == 0x0005B8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_5) == 0x0005B9, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_InputKeyEvent_Key_2) == 0x0005C0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_9) == 0x0005D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_6) == 0x0005DC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_InputKeyEvent_Key_3) == 0x0005E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_String) == 0x0005F8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_7) == 0x000608, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_InputPin) == 0x000610, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_InputPin' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Conv_StringToText_ReturnValue) == 0x000620, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_TimeCount) == 0x000638, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_TimeCount' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_NewParam) == 0x000640, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Team) == 0x000658, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_8) == 0x000659, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_3) == 0x00065C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000660, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000661, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000662, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_1) == 0x000668, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Team_PlayerKilled_) == 0x0006A8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_MilitaryIndex) == 0x0006AC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_TerroristIndex) == 0x0006B0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_TerroristIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_WiiningTeam) == 0x0006B4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_WiiningTeam' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_8) == 0x0006B8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Team__PlayerKilled_) == 0x0006BC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Team__PlayerKilled_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_MilitaryIndex) == 0x0006C0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_TerroristIndex) == 0x0006C4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_TerroristIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_WiiningTeam) == 0x0006C8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_WiiningTeam' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_1) == 0x0006C9, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_10) == 0x0006CC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BooleanAND_ReturnValue) == 0x0006D0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameMode_ReturnValue) == 0x0006D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Score) == 0x0006E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGM_Bodycam) == 0x0006E8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGM_Bodycam' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_8) == 0x0006F0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameInstance_ReturnValue_2) == 0x0006F8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBodycam_GI_2) == 0x000700, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBodycam_GI_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_9) == 0x000708, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Score) == 0x00070C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Score' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_9) == 0x000714, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_SteamID) == 0x000718, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_SteamID' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_11) == 0x000728, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Stats_Rank) == 0x00072C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Stats_Rank' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Stats_XP) == 0x000730, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Stats_XP' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Create_ReturnValue_4) == 0x000738, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Create_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000740, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBodycam_Interface) == 0x000748, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_10) == 0x000758, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_9) == 0x000759, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsDestroyabe__Destroyable_) == 0x00075A, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsDestroyabe__Destroyable_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Win_) == 0x00075B, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Win_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_10) == 0x00075C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000760, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000770, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_2) == 0x000778, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCInfo_1) == 0x000780, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCInfo_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_4) == 0x0007C0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_2) == 0x0007C4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Array_Index_Variable_11) == 0x0007C8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetAllActorsWithTag_OutActors) == 0x0007D0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_3) == 0x0007E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_4) == 0x000820, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_12) == 0x000828, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00082C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_SelectInt_ReturnValue) == 0x000830, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCStats_2) == 0x000834, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCStats_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_5) == 0x000844, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCInfo_2) == 0x000848, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCInfo_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_3) == 0x000888, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_2) == 0x000890, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameMode_ReturnValue_1) == 0x0008D0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGM_Bodycam_1) == 0x0008D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGM_Bodycam_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_11) == 0x0008E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameInstance_ReturnValue_3) == 0x0008E8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBodycam_GI_3) == 0x0008F0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBodycam_GI_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_12) == 0x0008F8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetPawn_ReturnValue_3) == 0x000900, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsSpectator_Camera) == 0x000908, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsSpectator_Camera' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_13) == 0x000910, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000918, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Win) == 0x000928, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Win' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_5) == 0x000930, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Select_Default) == 0x000938, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_6) == 0x00093C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_4) == 0x000940, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_KickPlayer_ReturnValue) == 0x000941, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_KickPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Yes__1) == 0x000942, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Yes__1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_InputKeyEvent_Key_4) == 0x000948, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_InputKeyEvent_Key_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_10) == 0x000960, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_PlayerInfo) == 0x000968, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Player_info_2) == 0x0009B0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Player_info_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Player_info_1) == 0x0009F8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Player_info_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_4) == 0x000A40, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_4) == 0x000A48, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_14) == 0x000A50, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_KickPlayer_self_CastInput) == 0x000A58, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_KickPlayer_self_CastInput' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Player_info) == 0x000A68, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Player_info' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Yes_) == 0x000AA8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Yes_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameInstance_ReturnValue_4) == 0x000AB0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBodycam_GI_4) == 0x000AB8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBodycam_GI_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_15) == 0x000AC0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable_3) == 0x000AC8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_byte_Variable_1) == 0x000AD8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_True_if_break_was_hit_Variable_3) == 0x000AD9, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_True_if_break_was_hit_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Not_PreBool_ReturnValue_3) == 0x000ADA, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_SteamID) == 0x000AE0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_SteamID' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_MakeSteamID_ReturnValue) == 0x000AF0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_MakeSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_AddUnique_ReturnValue) == 0x000AF8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_RemoveItem_ReturnValue) == 0x000AFC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Find_ReturnValue) == 0x000B00, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_MakeSteamID_ReturnValue_1) == 0x000B08, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_MakeSteamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000B10, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Create_ReturnValue_5) == 0x000B18, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Create_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Create_ReturnValue_6) == 0x000B20, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Create_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_5) == 0x000B28, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_1) == 0x000B30, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_16) == 0x000B40, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Event_Target) == 0x000B48, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_True_if_break_was_hit_Variable_4) == 0x000B88, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_True_if_break_was_hit_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Not_PreBool_ReturnValue_4) == 0x000B89, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_Stop_) == 0x000B8A, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_Stop_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000B8B, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_SpawnSound2D_ReturnValue) == 0x000B90, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_SpawnSound2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsPlaying_ReturnValue) == 0x000B98, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetAllWidgetsOfClass_FoundWidgets_2) == 0x000BA0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetAllWidgetsOfClass_FoundWidgets_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_6) == 0x000BB0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_7) == 0x000BB8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_5) == 0x000BBC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000BC0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBP_Drone) == 0x000BC8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBP_Drone' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_17) == 0x000BD0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetPawn_ReturnValue_4) == 0x000BD8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_2) == 0x000BE0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1) == 0x000BE8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_18) == 0x000BF0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsSpectator_Camera_1) == 0x000BF8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsSpectator_Camera_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_19) == 0x000C00, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_CustomEvent_NewRotation) == 0x000C08, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_CustomEvent_NewRotation' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetPawn_ReturnValue_5) == 0x000C20, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetPawn_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000C28, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_bool_Variable_3) == 0x000C40, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_3) == 0x000C48, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_4) == 0x000C50, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetSteamID_ReturnValue) == 0x000C58, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_10) == 0x000C60, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BreakSteamID_ReturnValue) == 0x000C68, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_13) == 0x000C78, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_object_Variable_1) == 0x000C80, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_5) == 0x000C88, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_SelectTeam_ReturnValue) == 0x000C90, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_SelectTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_6) == 0x000C98, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_7) == 0x000CA0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_6) == 0x000CA8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_5) == 0x000CB0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_20) == 0x000CB8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetPawn_ReturnValue_6) == 0x000CC0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetPawn_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_8) == 0x000CC8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_7) == 0x000CD0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_8) == 0x000D10, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCInfo_3) == 0x000D18, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCInfo_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_6) == 0x000D58, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000D59, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_7) == 0x000D60, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_6) == 0x000D68, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_21) == 0x000D70, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_11) == 0x000D71, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_8) == 0x000D78, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_9) == 0x000DB8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_7) == 0x000DBC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_3) == 0x000DC0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_ActionValue_2) == 0x000E00, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_ElapsedTime_2) == 0x000E20, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_ElapsedTime_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_TriggeredTime_2) == 0x000E24, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_TriggeredTime_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_EnhancedInputActionEvent_SourceAction_2) == 0x000E28, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_EnhancedInputActionEvent_SourceAction_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Multiply_IntInt_ReturnValue) == 0x000E30, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_14) == 0x000E34, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_4_0) == 0x000E38, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_4_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_3_0) == 0x000E40, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Conv_InputActionValueToBool_ReturnValue_2) == 0x000E48, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Conv_InputActionValueToBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Select_Default_1) == 0x000E4C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_15) == 0x000E50, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_9) == 0x000E58, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetAllChildren_ReturnValue) == 0x000E60, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetAllChildren_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_9) == 0x000E70, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_8) == 0x000E78, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsKick_Vote) == 0x000E80, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsKick_Vote' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_22) == 0x000E88, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_22' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_7) == 0x000E90, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_23) == 0x000E98, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_23' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_4) == 0x000EA0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Find_ReturnValue_1) == 0x000EE0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000EE4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000EE8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Find_ReturnValue_2) == 0x000EEC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x000EF0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_KickPlayer_ReturnValue_1) == 0x000EF1, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_KickPlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_12) == 0x000EF2, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetTeam_Team) == 0x000EF3, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000EF4, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000EF8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_10) == 0x000F00, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Find_ReturnValue_3) == 0x000F08, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x000F0C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000F10, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_10) == 0x000F20, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_11) == 0x000F28, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetDataTableRowFromName_OutRow) == 0x000F30, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000F40, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_10) == 0x000F44, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_11) == 0x000F48, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_8) == 0x000F4C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x000F4D, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BooleanAND_ReturnValue_1) == 0x000F4E, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_11) == 0x000F50, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_int_Loop_Counter_Variable_11) == 0x000F58, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_9) == 0x000F5C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_16) == 0x000F60, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BooleanAND_ReturnValue_2) == 0x000F64, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_12) == 0x000F68, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_12' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_real_Variable_13) == 0x000F70, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_real_Variable_13' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_byte_Variable_2) == 0x000F78, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Select_Default_2) == 0x000F80, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_SwitchEnum_CmpSuccess_1) == 0x000F88, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameMode_ReturnValue_2) == 0x000F90, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameMode_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_RandomFloat_ReturnValue) == 0x000F98, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGM_Bodycam_2) == 0x000FA0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGM_Bodycam_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_24) == 0x000FA8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_24' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Conv_DoubleToString_ReturnValue) == 0x000FB0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000FC0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000FD0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_K2_GetPawn_ReturnValue_7) == 0x000FD8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_K2_GetPawn_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_2) == 0x000FE0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_25) == 0x000FE8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_25' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_HandleItem_Handle_Actor) == 0x000FF0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_HandleItem_Handle_Actor' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetObjectClass_ReturnValue) == 0x000FF8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetObjectClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_13) == 0x001000, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_ClassClass_ReturnValue) == 0x001001, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_ClassClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_MakeSteamID_ReturnValue_2) == 0x001008, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_MakeSteamID_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetSmallFriendAvatar_ReturnValue) == 0x001010, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetSmallFriendAvatar_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_14) == 0x001018, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCInfo_4) == 0x001020, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCInfo_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_AddUnique_ReturnValue_3) == 0x001060, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_AddUnique_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_15) == 0x001064, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_3) == 0x001065, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_SwitchEnum_CmpSuccess_2) == 0x001066, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x001067, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_SelectString_ReturnValue) == 0x001068, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_16) == 0x001078, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_17) == 0x001079, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_18) == 0x00107A, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBPI_Pause_Game) == 0x001080, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBPI_Pause_Game' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_26) == 0x001090, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_26' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_5) == 0x001098, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Divide_IntInt_ReturnValue) == 0x0010D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_IsValid_ReturnValue_19) == 0x0010DC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_IsValid_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0010DD, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Greater_IntInt_ReturnValue_2) == 0x0010DE, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BooleanOR_ReturnValue) == 0x0010DF, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable_4) == 0x0010E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_SelectString_ReturnValue_1) == 0x0010F0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_SelectString_ReturnValue_2) == 0x001100, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_byte_Variable_3) == 0x001110, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Select_Default_3) == 0x001118, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Select_Default_4) == 0x001128, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable_5) == 0x001138, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable_6) == 0x001148, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetAllActorsOfClass_OutActors) == 0x001158, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetFriensTeam_Team) == 0x001168, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetFriensTeam_Team' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_12) == 0x00116C, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Greater_IntInt_ReturnValue_3) == 0x001170, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Add_IntInt_ReturnValue_17) == 0x001174, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable_7) == 0x001178, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable_7' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_9) == 0x001188, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_KickPlayer_ReturnValue_2) == 0x001190, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_KickPlayer_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsGT_Bodycam_8) == 0x001198, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsGT_Bodycam_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_27) == 0x0011A0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_27' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_12) == 0x0011A8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_13) == 0x0011E8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_10) == 0x0011EC, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BooleanAND_ReturnValue_3) == 0x0011ED, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Conv_IntToText_ReturnValue) == 0x0011F0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Conv_IntToText_ReturnValue_1) == 0x001208, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_4) == 0x001220, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, Temp_string_Variable_8) == 0x001228, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::Temp_string_Variable_8' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetGameState_ReturnValue_10) == 0x001238, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetGameState_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_2) == 0x001240, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_DynamicCast_bSuccess_28) == 0x001250, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_DynamicCast_bSuccess_28' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_Select_Default_5) == 0x001258, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_GetPlayerConnected_PlayerConnected) == 0x001268, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Find_Best_Spawn_Point_FarestTransform_return) == 0x001280, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Find_Best_Spawn_Point_FarestTransform_return' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Get_Item_13) == 0x0012E0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BreakTransform_Location) == 0x001320, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BreakTransform_Rotation) == 0x001338, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BreakTransform_Scale) == 0x001350, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_MakeTransform_ReturnValue) == 0x001370, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0013D0, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCStats_3) == 0x0013D8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCStats_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, K2Node_MakeStruct_STR_PCInfo_5) == 0x0013E8, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::K2Node_MakeStruct_STR_PCInfo_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x001428, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x001430, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_5) == 0x001431, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Array_Length_ReturnValue_14) == 0x001434, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_Less_IntInt_ReturnValue_11) == 0x001438, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam, CallFunc_BooleanAND_ReturnValue_4) == 0x001439, "Member 'PC_Bodycam_C_ExecuteUbergraph_PC_Bodycam::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Find Best Spawn Point
// 0x0600 (0x0600 - 0x0000)
struct PC_Bodycam_C_Find_Best_Spawn_Point final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        SpawnPointTreshold;                                // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             FarestTransform_return;                            // 0x0020(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 NewLocalVar_0;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	int32                                         Global;                                            // 0x0088(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NewLocalVar;                                       // 0x008C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnLocked;                                       // 0x0090(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         SpawnScore;                                        // 0x0094(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                DistanceArray;                                     // 0x0098(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSTR_SpawnDistance>             SpawnDistance;                                     // 0x00A8(0x0010)(Edit, BlueprintVisible)
	TArray<class AActor*>                         Spawn;                                             // 0x00B8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	double                                        FarDistance;                                       // 0x00C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             PlayerSpawn;                                       // 0x00D0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0134(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0140(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x01D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D6[0x2];                                      // 0x01D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x01DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x01F0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0200(0x0010)(ReferenceParm)
	E_Team                                        CallFunc_GetTeam_Team;                             // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item;                           // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_224[0x4];                                      // 0x0224(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_IsDead_self_CastInput;                    // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead__1;                           // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0239(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23A[0x6];                                      // 0x023A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_GetTeam_self_CastInput;                   // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_GetTeam_Team_1;                           // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26A[0x6];                                      // 0x026A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0270(0x0010)(ReferenceParm)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item_1;                         // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_GetTeam_self_CastInput_1;                 // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_GetTeam_Team_2;                           // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x02A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x02A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A3[0x5];                                      // 0x02A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3[0xD];                                      // 0x02C3(0x000D)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x02D0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FHitResult>                     CallFunc_LineTraceMulti_OutHits;                   // 0x0368(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceMulti_ReturnValue;               // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A[0x2];                                      // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Random_OutItem;                     // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0390(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_394[0x4];                                      // 0x0394(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0398(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D8[0x8];                                      // 0x03D8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x03E0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0441(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0442(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_443[0x5];                                      // 0x0443(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Random_OutItem_1;                   // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0xC];                                      // 0x0454(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x0460(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x04D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0510(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_511[0x7];                                      // 0x0511(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_1;           // 0x0518(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x055D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55E[0x2];                                      // 0x055E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0560(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_564[0x4];                                      // 0x0564(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0568(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_3;                         // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item_4;                         // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_588[0x8];                                      // 0x0588(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_3;               // 0x0590(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x05F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Spawn_Point_Valid_Valid_;              // 0x05F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x05F5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F6[0x2];                                      // 0x05F6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x05FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Find_Best_Spawn_Point) == 0x000010, "Wrong alignment on PC_Bodycam_C_Find_Best_Spawn_Point");
static_assert(sizeof(PC_Bodycam_C_Find_Best_Spawn_Point) == 0x000600, "Wrong size on PC_Bodycam_C_Find_Best_Spawn_Point");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Name_0) == 0x000000, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Name_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, SpawnPointTreshold) == 0x000010, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::SpawnPointTreshold' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, FarestTransform_return) == 0x000020, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::FarestTransform_return' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, NewLocalVar_0) == 0x000080, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Global) == 0x000088, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Global' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, NewLocalVar) == 0x00008C, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::NewLocalVar' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, SpawnLocked) == 0x000090, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::SpawnLocked' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, SpawnScore) == 0x000094, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::SpawnScore' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, DistanceArray) == 0x000098, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::DistanceArray' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, SpawnDistance) == 0x0000A8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::SpawnDistance' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Spawn) == 0x0000B8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Spawn' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, FarDistance) == 0x0000C8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::FarDistance' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, PlayerSpawn) == 0x0000D0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::PlayerSpawn' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Loop_Counter_Variable) == 0x000130, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Conv_StringToName_ReturnValue) == 0x000134, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Add_IntInt_ReturnValue) == 0x00013C, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_MakeTransform_ReturnValue) == 0x000140, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Loop_Counter_Variable_1) == 0x0001A0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001A4, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Array_Index_Variable) == 0x0001A8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Array_Index_Variable_1) == 0x0001AC, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Loop_Counter_Variable_2) == 0x0001B0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Add_IntInt_ReturnValue_2) == 0x0001B4, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Array_Index_Variable_2) == 0x0001B8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Loop_Counter_Variable_3) == 0x0001BC, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Loop_Counter_Variable_4) == 0x0001C0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Add_IntInt_ReturnValue_3) == 0x0001C4, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Add_IntInt_ReturnValue_4) == 0x0001C8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Loop_Counter_Variable_5) == 0x0001CC, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001D0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_bool_True_if_break_was_hit_Variable) == 0x0001D4, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Not_PreBool_ReturnValue) == 0x0001D5, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Array_Index_Variable_3) == 0x0001D8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_IsDead_Dead_) == 0x0001DC, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Greater_IntInt_ReturnValue) == 0x0001DD, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_BooleanAND_ReturnValue) == 0x0001DE, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_IntInt_ReturnValue) == 0x0001DF, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Not_PreBool_ReturnValue_1) == 0x0001E0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Array_Index_Variable_4) == 0x0001E4, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_IntInt_ReturnValue_1) == 0x0001E8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Conv_IntToString_ReturnValue) == 0x0001F0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetAllActorsOfClass_OutActors) == 0x000200, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTeam_Team) == 0x000210, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Get_Item) == 0x000218, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Length_ReturnValue) == 0x000220, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_IsDead_self_CastInput) == 0x000228, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_IsDead_Dead__1) == 0x000238, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_IsDead_Dead__1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_IntInt_ReturnValue_2) == 0x000239, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000240, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTeam_self_CastInput) == 0x000258, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTeam_self_CastInput' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTeam_Team_1) == 0x000268, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTeam_Team_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000269, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000270, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Get_Item_1) == 0x000280, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Length_ReturnValue_1) == 0x000288, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTeam_self_CastInput_1) == 0x000290, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTeam_self_CastInput_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTeam_Team_2) == 0x0002A0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTeam_Team_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_IntInt_ReturnValue_3) == 0x0002A1, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0002A2, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0002A8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_IsValid_ReturnValue) == 0x0002C0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0002C1, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_BooleanAND_ReturnValue_1) == 0x0002C2, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTransform_ReturnValue) == 0x0002D0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Length_ReturnValue_2) == 0x000330, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Get_Item_2) == 0x000338, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_IntInt_ReturnValue_4) == 0x000340, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000348, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Length_ReturnValue_3) == 0x000360, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_LineTraceMulti_OutHits) == 0x000368, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_LineTraceMulti_OutHits' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_LineTraceMulti_ReturnValue) == 0x000378, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_LineTraceMulti_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_IntInt_ReturnValue_5) == 0x000379, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Length_ReturnValue_4) == 0x00037C, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000380, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Add_IntInt_ReturnValue_6) == 0x000384, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Random_OutItem) == 0x000388, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Random_OutIndex) == 0x000390, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000398, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTransform_ReturnValue_1) == 0x0003E0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_BooleanAND_ReturnValue_2) == 0x000440, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_BooleanAND_ReturnValue_3) == 0x000441, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000442, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Random_OutItem_1) == 0x000448, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Random_OutIndex_1) == 0x000450, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTransform_ReturnValue_2) == 0x000460, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_BreakTransform_Location) == 0x0004C0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_BreakTransform_Rotation) == 0x0004D8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_BreakTransform_Scale) == 0x0004F0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Vector_Distance_ReturnValue) == 0x000508, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000510, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetGamemodeInfo_GamemodeInfo_1) == 0x000518, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetGamemodeInfo_GamemodeInfo_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Length_ReturnValue_5) == 0x000558, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_IntInt_ReturnValue_6) == 0x00055C, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_BooleanAND_ReturnValue_4) == 0x00055D, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, Temp_int_Array_Index_Variable_5) == 0x000560, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000568, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Get_Item_3) == 0x000578, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Get_Item_4) == 0x000580, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_GetTransform_ReturnValue_3) == 0x000590, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_GetTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_AddUnique_ReturnValue) == 0x0005F0, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Is_Spawn_Point_Valid_Valid_) == 0x0005F4, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Is_Spawn_Point_Valid_Valid_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0005F5, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Array_Length_ReturnValue_6) == 0x0005F8, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Find_Best_Spawn_Point, CallFunc_Less_IntInt_ReturnValue_7) == 0x0005FC, "Member 'PC_Bodycam_C_Find_Best_Spawn_Point::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.FindPlayerSpawn
// 0x0140 (0x0140 - 0x0000)
struct PC_Bodycam_C_FindPlayerSpawn final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          SpawnFailed;                                       // 0x0070(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   Spawn;                                             // 0x0078(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Random_OutItem;                     // 0x00A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0110(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_FindPlayerSpawn) == 0x000010, "Wrong alignment on PC_Bodycam_C_FindPlayerSpawn");
static_assert(sizeof(PC_Bodycam_C_FindPlayerSpawn) == 0x000140, "Wrong size on PC_Bodycam_C_FindPlayerSpawn");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, Name_0) == 0x000000, "Member 'PC_Bodycam_C_FindPlayerSpawn::Name_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, SpawnTransform) == 0x000010, "Member 'PC_Bodycam_C_FindPlayerSpawn::SpawnTransform' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, SpawnFailed) == 0x000070, "Member 'PC_Bodycam_C_FindPlayerSpawn::SpawnFailed' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, Spawn) == 0x000078, "Member 'PC_Bodycam_C_FindPlayerSpawn::Spawn' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_Conv_StringToName_ReturnValue) == 0x000088, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, Temp_int_Array_Index_Variable) == 0x000090, "Member 'PC_Bodycam_C_FindPlayerSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, Temp_int_Loop_Counter_Variable) == 0x000094, "Member 'PC_Bodycam_C_FindPlayerSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_Array_Random_OutItem) == 0x0000A0, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_Array_Random_OutIndex) == 0x0000A8, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_GetAllActorsOfClass_OutActors) == 0x000110, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_Array_Length_ReturnValue) == 0x000120, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_Array_Get_Item) == 0x000128, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x000130, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_Array_AddUnique_ReturnValue) == 0x000134, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_FindPlayerSpawn, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000138, "Member 'PC_Bodycam_C_FindPlayerSpawn::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Get BP Menu Controller Component
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_Get_BP_Menu_Controller_Component final
{
public:
	class UBP_MenuControllerComponent_C*          BP_Menu_Controller_Component;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong alignment on PC_Bodycam_C_Get_BP_Menu_Controller_Component");
static_assert(sizeof(PC_Bodycam_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong size on PC_Bodycam_C_Get_BP_Menu_Controller_Component");
static_assert(offsetof(PC_Bodycam_C_Get_BP_Menu_Controller_Component, BP_Menu_Controller_Component) == 0x000000, "Member 'PC_Bodycam_C_Get_BP_Menu_Controller_Component::BP_Menu_Controller_Component' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Get Stamina
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_Get_Stamina final
{
public:
	double                                        Stamina;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Get_Stamina) == 0x000008, "Wrong alignment on PC_Bodycam_C_Get_Stamina");
static_assert(sizeof(PC_Bodycam_C_Get_Stamina) == 0x000008, "Wrong size on PC_Bodycam_C_Get_Stamina");
static_assert(offsetof(PC_Bodycam_C_Get_Stamina, Stamina) == 0x000000, "Member 'PC_Bodycam_C_Get_Stamina::Stamina' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetBlured
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_GetBlured final
{
public:
	double                                        Blured;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetBlured) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetBlured");
static_assert(sizeof(PC_Bodycam_C_GetBlured) == 0x000008, "Wrong size on PC_Bodycam_C_GetBlured");
static_assert(offsetof(PC_Bodycam_C_GetBlured, Blured) == 0x000000, "Member 'PC_Bodycam_C_GetBlured::Blured' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetBurnedRef
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_GetBurnedRef final
{
public:
	class USceneComponent*                        BurnedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetBurnedRef) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetBurnedRef");
static_assert(sizeof(PC_Bodycam_C_GetBurnedRef) == 0x000008, "Wrong size on PC_Bodycam_C_GetBurnedRef");
static_assert(offsetof(PC_Bodycam_C_GetBurnedRef, BurnedMesh) == 0x000000, "Member 'PC_Bodycam_C_GetBurnedRef::BurnedMesh' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetCurrentRank
// 0x0020 (0x0020 - 0x0000)
struct PC_Bodycam_C_GetCurrentRank final
{
public:
	int32                                         RankScore_0;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank__0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CurrentRank_0;                                     // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_GetCurrentRank) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetCurrentRank");
static_assert(sizeof(PC_Bodycam_C_GetCurrentRank) == 0x000020, "Wrong size on PC_Bodycam_C_GetCurrentRank");
static_assert(offsetof(PC_Bodycam_C_GetCurrentRank, RankScore_0) == 0x000000, "Member 'PC_Bodycam_C_GetCurrentRank::RankScore_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetCurrentRank, Rank__0) == 0x000004, "Member 'PC_Bodycam_C_GetCurrentRank::Rank__0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetCurrentRank, CurrentRank_0) == 0x000008, "Member 'PC_Bodycam_C_GetCurrentRank::CurrentRank_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetFlashBangEffect
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_GetFlashBangEffect final
{
public:
	double                                        FlashEffect;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetFlashBangEffect) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetFlashBangEffect");
static_assert(sizeof(PC_Bodycam_C_GetFlashBangEffect) == 0x000008, "Wrong size on PC_Bodycam_C_GetFlashBangEffect");
static_assert(offsetof(PC_Bodycam_C_GetFlashBangEffect, FlashEffect) == 0x000000, "Member 'PC_Bodycam_C_GetFlashBangEffect::FlashEffect' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetFriensTeam
// 0x00F0 (0x00F0 - 0x0000)
struct PC_Bodycam_C_GetFriensTeam final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        FriendsTeam;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_NoneIndex_Return;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_MilitaryIndex_Return;           // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_TerroristIndex_Return;          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamIndex_TeamNeedPlayer;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeamIndex_TeamEmpty_;                     // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Military_Return;                // 0x0020(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Terrorist_Return;               // 0x0030(0x0010)(ReferenceParm)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x0058(0x0010)(ReferenceParm)
	E_Team                                        K2Node_Select_Default;                             // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<ESteamFriendFlags>                     K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ReferenceParm)
	bool                                          Temp_bool_Variable_1;                              // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_1;                           // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x2];                                       // 0x0092(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_4;                              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x00A0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue;                  // 0x00E0(0x0008)(NoDestructor)
	E_Team                                        Temp_byte_Variable_5;                              // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasFriend_ReturnValue;                    // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_2;                           // 0x00EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetFriensTeam) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetFriensTeam");
static_assert(sizeof(PC_Bodycam_C_GetFriensTeam) == 0x0000F0, "Wrong size on PC_Bodycam_C_GetFriensTeam");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Team_0) == 0x000000, "Member 'PC_Bodycam_C_GetFriensTeam::Team_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, FriendsTeam) == 0x000001, "Member 'PC_Bodycam_C_GetFriensTeam::FriendsTeam' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_byte_Variable) == 0x000002, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_byte_Variable_1) == 0x000003, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_bool_Variable) == 0x000004, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_byte_Variable_2) == 0x000005, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_byte_Variable_3) == 0x000006, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_TeamIndex_NoneIndex_Return) == 0x000010, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_TeamIndex_NoneIndex_Return' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_TeamIndex_MilitaryIndex_Return) == 0x000014, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_TeamIndex_MilitaryIndex_Return' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_TeamIndex_TerroristIndex_Return) == 0x000018, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_TeamIndex_TerroristIndex_Return' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_TeamIndex_TeamNeedPlayer) == 0x00001C, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_TeamIndex_TeamNeedPlayer' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_TeamIndex_TeamEmpty_) == 0x00001D, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_TeamIndex_TeamEmpty_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_TeamIndex_Military_Return) == 0x000020, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_TeamIndex_Military_Return' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_TeamIndex_Terrorist_Return) == 0x000030, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_TeamIndex_Terrorist_Return' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, K2Node_DynamicCast_AsBodycam_Interface) == 0x000040, "Member 'PC_Bodycam_C_GetFriensTeam::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'PC_Bodycam_C_GetFriensTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000051, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_GetPlayerConnected_PlayerConnected) == 0x000058, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, K2Node_Select_Default) == 0x000068, "Member 'PC_Bodycam_C_GetFriensTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_Array_Length_ReturnValue) == 0x00006C, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_Less_IntInt_ReturnValue_1) == 0x000070, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, K2Node_MakeArray_Array) == 0x000078, "Member 'PC_Bodycam_C_GetFriensTeam::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_bool_Variable_1) == 0x000088, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_Less_IntInt_ReturnValue_2) == 0x000090, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, K2Node_Select_Default_1) == 0x000091, "Member 'PC_Bodycam_C_GetFriensTeam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000094, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_int_Array_Index_Variable) == 0x000098, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_byte_Variable_4) == 0x00009C, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_MakeSteamID_ReturnValue) == 0x0000E0, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_MakeSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, Temp_byte_Variable_5) == 0x0000E8, "Member 'PC_Bodycam_C_GetFriensTeam::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, CallFunc_HasFriend_ReturnValue) == 0x0000E9, "Member 'PC_Bodycam_C_GetFriensTeam::CallFunc_HasFriend_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetFriensTeam, K2Node_Select_Default_2) == 0x0000EA, "Member 'PC_Bodycam_C_GetFriensTeam::K2Node_Select_Default_2' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetGameMode
// 0x0040 (0x0040 - 0x0000)
struct PC_Bodycam_C_GetGameMode final
{
public:
	struct FSTR_GamemodeWinInfo                   GameMode;                                          // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetGameMode) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetGameMode");
static_assert(sizeof(PC_Bodycam_C_GetGameMode) == 0x000040, "Wrong size on PC_Bodycam_C_GetGameMode");
static_assert(offsetof(PC_Bodycam_C_GetGameMode, GameMode) == 0x000000, "Member 'PC_Bodycam_C_GetGameMode::GameMode' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_GetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetHealth) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetHealth");
static_assert(sizeof(PC_Bodycam_C_GetHealth) == 0x000008, "Wrong size on PC_Bodycam_C_GetHealth");
static_assert(offsetof(PC_Bodycam_C_GetHealth, Health) == 0x000000, "Member 'PC_Bodycam_C_GetHealth::Health' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetKickedPlayerVoted
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_GetKickedPlayerVoted final
{
public:
	TArray<class FString>                         KickplayerAlreadyVote;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_GetKickedPlayerVoted) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetKickedPlayerVoted");
static_assert(sizeof(PC_Bodycam_C_GetKickedPlayerVoted) == 0x000010, "Wrong size on PC_Bodycam_C_GetKickedPlayerVoted");
static_assert(offsetof(PC_Bodycam_C_GetKickedPlayerVoted, KickplayerAlreadyVote) == 0x000000, "Member 'PC_Bodycam_C_GetKickedPlayerVoted::KickplayerAlreadyVote' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetMenuSettings
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_GetMenuSettings final
{
public:
	class UBP_MenuControllerComponent_C*          Bp_MenuController;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetMenuSettings) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetMenuSettings");
static_assert(sizeof(PC_Bodycam_C_GetMenuSettings) == 0x000008, "Wrong size on PC_Bodycam_C_GetMenuSettings");
static_assert(offsetof(PC_Bodycam_C_GetMenuSettings, Bp_MenuController) == 0x000000, "Member 'PC_Bodycam_C_GetMenuSettings::Bp_MenuController' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_GetMutePlayer final
{
public:
	TArray<class FString>                         MutePlayer;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_GetMutePlayer) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetMutePlayer");
static_assert(sizeof(PC_Bodycam_C_GetMutePlayer) == 0x000010, "Wrong size on PC_Bodycam_C_GetMutePlayer");
static_assert(offsetof(PC_Bodycam_C_GetMutePlayer, MutePlayer) == 0x000000, "Member 'PC_Bodycam_C_GetMutePlayer::MutePlayer' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetNewRank
// 0x0060 (0x0060 - 0x0000)
struct PC_Bodycam_C_GetNewRank final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(Parm, OutParm)
	class UTexture2D*                             Image;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RankScore_0;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankPosition;                                      // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankDivision;                                      // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PreviousRankProgress;                              // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RankProgress;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewRank_;                                          // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Color;                                             // 0x0044(0x0014)(Parm, OutParm)
	int32                                         Rank_Integer;                                      // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetNewRank) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetNewRank");
static_assert(sizeof(PC_Bodycam_C_GetNewRank) == 0x000060, "Wrong size on PC_Bodycam_C_GetNewRank");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, Name_0) == 0x000000, "Member 'PC_Bodycam_C_GetNewRank::Name_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, Image) == 0x000018, "Member 'PC_Bodycam_C_GetNewRank::Image' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, RankScore_0) == 0x000020, "Member 'PC_Bodycam_C_GetNewRank::RankScore_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, RankPosition) == 0x000024, "Member 'PC_Bodycam_C_GetNewRank::RankPosition' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, RankDivision) == 0x000028, "Member 'PC_Bodycam_C_GetNewRank::RankDivision' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, PreviousRankProgress) == 0x000030, "Member 'PC_Bodycam_C_GetNewRank::PreviousRankProgress' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, RankProgress) == 0x000038, "Member 'PC_Bodycam_C_GetNewRank::RankProgress' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, NewRank_) == 0x000040, "Member 'PC_Bodycam_C_GetNewRank::NewRank_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, Color) == 0x000044, "Member 'PC_Bodycam_C_GetNewRank::Color' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetNewRank, Rank_Integer) == 0x000058, "Member 'PC_Bodycam_C_GetNewRank::Rank_Integer' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetPlayerConnected
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_GetPlayerConnected final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerConnected;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_GetPlayerConnected) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetPlayerConnected");
static_assert(sizeof(PC_Bodycam_C_GetPlayerConnected) == 0x000010, "Wrong size on PC_Bodycam_C_GetPlayerConnected");
static_assert(offsetof(PC_Bodycam_C_GetPlayerConnected, PlayerConnected) == 0x000000, "Member 'PC_Bodycam_C_GetPlayerConnected::PlayerConnected' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetPlayerKickVote
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_GetPlayerKickVote final
{
public:
	TArray<struct FSTR_KickVote>                  KickVotePlayer;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_GetPlayerKickVote) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetPlayerKickVote");
static_assert(sizeof(PC_Bodycam_C_GetPlayerKickVote) == 0x000010, "Wrong size on PC_Bodycam_C_GetPlayerKickVote");
static_assert(offsetof(PC_Bodycam_C_GetPlayerKickVote, KickVotePlayer) == 0x000000, "Member 'PC_Bodycam_C_GetPlayerKickVote::KickVotePlayer' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetPlayerSkin
// 0x02E8 (0x02E8 - 0x0000)
struct PC_Bodycam_C_GetPlayerSkin final
{
public:
	struct FSTR_TEST                              Player_Skin;                                       // 0x0000(0x02E0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetPlayerSkin) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetPlayerSkin");
static_assert(sizeof(PC_Bodycam_C_GetPlayerSkin) == 0x0002E8, "Wrong size on PC_Bodycam_C_GetPlayerSkin");
static_assert(offsetof(PC_Bodycam_C_GetPlayerSkin, Player_Skin) == 0x000000, "Member 'PC_Bodycam_C_GetPlayerSkin::Player_Skin' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetPlayerSkin, Valid_) == 0x0002E0, "Member 'PC_Bodycam_C_GetPlayerSkin::Valid_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetRagdollSystem
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_GetRagdollSystem final
{
public:
	class UWW_RagdollSystem_C*                    Ragdoll_System;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetRagdollSystem) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetRagdollSystem");
static_assert(sizeof(PC_Bodycam_C_GetRagdollSystem) == 0x000008, "Wrong size on PC_Bodycam_C_GetRagdollSystem");
static_assert(offsetof(PC_Bodycam_C_GetRagdollSystem, Ragdoll_System) == 0x000000, "Member 'PC_Bodycam_C_GetRagdollSystem::Ragdoll_System' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetReady?
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_GetReady_ final
{
public:
	bool                                          IsReady_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetReady_) == 0x000001, "Wrong alignment on PC_Bodycam_C_GetReady_");
static_assert(sizeof(PC_Bodycam_C_GetReady_) == 0x000001, "Wrong size on PC_Bodycam_C_GetReady_");
static_assert(offsetof(PC_Bodycam_C_GetReady_, IsReady_) == 0x000000, "Member 'PC_Bodycam_C_GetReady_::IsReady_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetServerSteamID
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_GetServerSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetServerSteamID) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetServerSteamID");
static_assert(sizeof(PC_Bodycam_C_GetServerSteamID) == 0x000010, "Wrong size on PC_Bodycam_C_GetServerSteamID");
static_assert(offsetof(PC_Bodycam_C_GetServerSteamID, SteamID) == 0x000000, "Member 'PC_Bodycam_C_GetServerSteamID::SteamID' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetStarterWeapons
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_GetStarterWeapons final
{
public:
	TArray<struct FSTR_Actor>                     Weapons;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_GetStarterWeapons) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetStarterWeapons");
static_assert(sizeof(PC_Bodycam_C_GetStarterWeapons) == 0x000010, "Wrong size on PC_Bodycam_C_GetStarterWeapons");
static_assert(offsetof(PC_Bodycam_C_GetStarterWeapons, Weapons) == 0x000000, "Member 'PC_Bodycam_C_GetStarterWeapons::Weapons' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_GetSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetSteamID) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetSteamID");
static_assert(sizeof(PC_Bodycam_C_GetSteamID) == 0x000010, "Wrong size on PC_Bodycam_C_GetSteamID");
static_assert(offsetof(PC_Bodycam_C_GetSteamID, SteamID) == 0x000000, "Member 'PC_Bodycam_C_GetSteamID::SteamID' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetSurvivorStatuts
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_GetSurvivorStatuts final
{
public:
	class UWW_SurvivorStatus_C*                   SurvivorComponant;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetSurvivorStatuts) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetSurvivorStatuts");
static_assert(sizeof(PC_Bodycam_C_GetSurvivorStatuts) == 0x000008, "Wrong size on PC_Bodycam_C_GetSurvivorStatuts");
static_assert(offsetof(PC_Bodycam_C_GetSurvivorStatuts, SurvivorComponant) == 0x000000, "Member 'PC_Bodycam_C_GetSurvivorStatuts::SurvivorComponant' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetTeam
// 0x0098 (0x0098 - 0x0000)
struct PC_Bodycam_C_GetTeam final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0050(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_GetTeam) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetTeam");
static_assert(sizeof(PC_Bodycam_C_GetTeam) == 0x000098, "Wrong size on PC_Bodycam_C_GetTeam");
static_assert(offsetof(PC_Bodycam_C_GetTeam, Team_0) == 0x000000, "Member 'PC_Bodycam_C_GetTeam::Team_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'PC_Bodycam_C_GetTeam::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PC_Bodycam_C_GetTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'PC_Bodycam_C_GetTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'PC_Bodycam_C_GetTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'PC_Bodycam_C_GetTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'PC_Bodycam_C_GetTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, K2Node_DynamicCast_AsBodycam_Interface) == 0x000020, "Member 'PC_Bodycam_C_GetTeam::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PC_Bodycam_C_GetTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_GetPlayerConnected_PlayerConnected) == 0x000038, "Member 'PC_Bodycam_C_GetTeam::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'PC_Bodycam_C_GetTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_Array_Get_Item) == 0x000050, "Member 'PC_Bodycam_C_GetTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'PC_Bodycam_C_GetTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'PC_Bodycam_C_GetTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeam, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000092, "Member 'PC_Bodycam_C_GetTeam::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetTeamList
// 0x0018 (0x0018 - 0x0000)
struct PC_Bodycam_C_GetTeamList final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Info;                                              // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_GetTeamList) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetTeamList");
static_assert(sizeof(PC_Bodycam_C_GetTeamList) == 0x000018, "Wrong size on PC_Bodycam_C_GetTeamList");
static_assert(offsetof(PC_Bodycam_C_GetTeamList, Team_0) == 0x000000, "Member 'PC_Bodycam_C_GetTeamList::Team_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_GetTeamList, Info) == 0x000008, "Member 'PC_Bodycam_C_GetTeamList::Info' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.GetTopScore
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_GetTopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScore;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_GetTopScore) == 0x000008, "Wrong alignment on PC_Bodycam_C_GetTopScore");
static_assert(sizeof(PC_Bodycam_C_GetTopScore) == 0x000010, "Wrong size on PC_Bodycam_C_GetTopScore");
static_assert(offsetof(PC_Bodycam_C_GetTopScore, TopScore) == 0x000000, "Member 'PC_Bodycam_C_GetTopScore::TopScore' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InitPlayerRank (Client
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_InitPlayerRank__Client final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InitPlayerRank__Client) == 0x000008, "Wrong alignment on PC_Bodycam_C_InitPlayerRank__Client");
static_assert(sizeof(PC_Bodycam_C_InitPlayerRank__Client) == 0x000010, "Wrong size on PC_Bodycam_C_InitPlayerRank__Client");
static_assert(offsetof(PC_Bodycam_C_InitPlayerRank__Client, SteamID) == 0x000000, "Member 'PC_Bodycam_C_InitPlayerRank__Client::SteamID' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InpActEvt_Escape_K2Node_InputKeyEvent_4
// 0x0018 (0x0018 - 0x0000)
struct PC_Bodycam_C_InpActEvt_Escape_K2Node_InputKeyEvent_4 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InpActEvt_Escape_K2Node_InputKeyEvent_4) == 0x000008, "Wrong alignment on PC_Bodycam_C_InpActEvt_Escape_K2Node_InputKeyEvent_4");
static_assert(sizeof(PC_Bodycam_C_InpActEvt_Escape_K2Node_InputKeyEvent_4) == 0x000018, "Wrong size on PC_Bodycam_C_InpActEvt_Escape_K2Node_InputKeyEvent_4");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_Escape_K2Node_InputKeyEvent_4, Key) == 0x000000, "Member 'PC_Bodycam_C_InpActEvt_Escape_K2Node_InputKeyEvent_4::Key' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2
// 0x0030 (0x0030 - 0x0000)
struct PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2) == 0x000008, "Wrong alignment on PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2");
static_assert(sizeof(PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2) == 0x000030, "Wrong size on PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2, ActionValue) == 0x000000, "Member 'PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2::ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2, ElapsedTime) == 0x000020, "Member 'PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2, TriggeredTime) == 0x000024, "Member 'PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2::TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2, SourceAction) == 0x000028, "Member 'PC_Bodycam_C_InpActEvt_IA_Chat_K2Node_EnhancedInputActionEvent_2::SourceAction' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'PC_Bodycam_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InpActEvt_N_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct PC_Bodycam_C_InpActEvt_N_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InpActEvt_N_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on PC_Bodycam_C_InpActEvt_N_K2Node_InputKeyEvent_2");
static_assert(sizeof(PC_Bodycam_C_InpActEvt_N_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on PC_Bodycam_C_InpActEvt_N_K2Node_InputKeyEvent_2");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_N_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'PC_Bodycam_C_InpActEvt_N_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0");
static_assert(sizeof(PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InpActEvt_SpaceBar_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_1");
static_assert(sizeof(PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_1");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'PC_Bodycam_C_InpActEvt_SpaceBar_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.InpActEvt_Y_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct PC_Bodycam_C_InpActEvt_Y_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_InpActEvt_Y_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on PC_Bodycam_C_InpActEvt_Y_K2Node_InputKeyEvent_3");
static_assert(sizeof(PC_Bodycam_C_InpActEvt_Y_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on PC_Bodycam_C_InpActEvt_Y_K2Node_InputKeyEvent_3");
static_assert(offsetof(PC_Bodycam_C_InpActEvt_Y_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'PC_Bodycam_C_InpActEvt_Y_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Is Spawn Point Valid
// 0x01D0 (0x01D0 - 0x0000)
struct PC_Bodycam_C_Is_Spawn_Point_Valid final
{
public:
	struct FTransform                             Spawn_Transform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_IsDead_self_CastInput;                    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0xE];                                      // 0x0102(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0110(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Is_Spawn_Point_Valid) == 0x000010, "Wrong alignment on PC_Bodycam_C_Is_Spawn_Point_Valid");
static_assert(sizeof(PC_Bodycam_C_Is_Spawn_Point_Valid) == 0x0001D0, "Wrong size on PC_Bodycam_C_Is_Spawn_Point_Valid");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, Spawn_Transform) == 0x000000, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, Valid_) == 0x000060, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::Valid_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, IsLocked) == 0x000061, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::IsLocked' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Location) == 0x000068, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Rotation) == 0x000080, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, Temp_bool_True_if_break_was_hit_Variable) == 0x0000B0, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C0, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C8, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_IsDead_self_CastInput) == 0x0000F0, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_IsDead_Dead_) == 0x000100, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_BooleanAND_ReturnValue) == 0x000101, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_GetTransform_ReturnValue) == 0x000110, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Location_1) == 0x000170, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Rotation_1) == 0x000188, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Scale_1) == 0x0001A0, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_Vector_Distance_ReturnValue) == 0x0001B8, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Is_Spawn_Point_Valid, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'PC_Bodycam_C_Is_Spawn_Point_Valid::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_IsDead final
{
public:
	bool                                          Dead_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_IsDead) == 0x000001, "Wrong alignment on PC_Bodycam_C_IsDead");
static_assert(sizeof(PC_Bodycam_C_IsDead) == 0x000001, "Wrong size on PC_Bodycam_C_IsDead");
static_assert(offsetof(PC_Bodycam_C_IsDead, Dead_) == 0x000000, "Member 'PC_Bodycam_C_IsDead::Dead_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.IsDestroyabe?
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_IsDestroyabe_ final
{
public:
	bool                                          Destroyable_;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_IsDestroyabe_) == 0x000001, "Wrong alignment on PC_Bodycam_C_IsDestroyabe_");
static_assert(sizeof(PC_Bodycam_C_IsDestroyabe_) == 0x000001, "Wrong size on PC_Bodycam_C_IsDestroyabe_");
static_assert(offsetof(PC_Bodycam_C_IsDestroyabe_, Destroyable_) == 0x000000, "Member 'PC_Bodycam_C_IsDestroyabe_::Destroyable_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.IsReady?
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_IsReady_ final
{
public:
	bool                                          IsReady__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_IsReady_) == 0x000001, "Wrong alignment on PC_Bodycam_C_IsReady_");
static_assert(sizeof(PC_Bodycam_C_IsReady_) == 0x000001, "Wrong size on PC_Bodycam_C_IsReady_");
static_assert(offsetof(PC_Bodycam_C_IsReady_, IsReady__0) == 0x000000, "Member 'PC_Bodycam_C_IsReady_::IsReady__0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.IsStress
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_IsStress final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_IsStress) == 0x000001, "Wrong alignment on PC_Bodycam_C_IsStress");
static_assert(sizeof(PC_Bodycam_C_IsStress) == 0x000001, "Wrong size on PC_Bodycam_C_IsStress");
static_assert(offsetof(PC_Bodycam_C_IsStress, Yes_) == 0x000000, "Member 'PC_Bodycam_C_IsStress::Yes_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.IsTalking?
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_IsTalking_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_IsTalking_) == 0x000001, "Wrong alignment on PC_Bodycam_C_IsTalking_");
static_assert(sizeof(PC_Bodycam_C_IsTalking_) == 0x000001, "Wrong size on PC_Bodycam_C_IsTalking_");
static_assert(offsetof(PC_Bodycam_C_IsTalking_, IsTalking__0) == 0x000000, "Member 'PC_Bodycam_C_IsTalking_::IsTalking__0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Kick Player (server)
// 0x0048 (0x0048 - 0x0000)
struct PC_Bodycam_C_Kick_Player__server_ final
{
public:
	struct FSTR_KickVote                          Player_info;                                       // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Kick_Player__server_) == 0x000008, "Wrong alignment on PC_Bodycam_C_Kick_Player__server_");
static_assert(sizeof(PC_Bodycam_C_Kick_Player__server_) == 0x000048, "Wrong size on PC_Bodycam_C_Kick_Player__server_");
static_assert(offsetof(PC_Bodycam_C_Kick_Player__server_, Player_info) == 0x000000, "Member 'PC_Bodycam_C_Kick_Player__server_::Player_info' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Kick?
// 0x0040 (0x0040 - 0x0000)
struct PC_Bodycam_C_Kick_ final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Kick_) == 0x000008, "Wrong alignment on PC_Bodycam_C_Kick_");
static_assert(sizeof(PC_Bodycam_C_Kick_) == 0x000040, "Wrong size on PC_Bodycam_C_Kick_");
static_assert(offsetof(PC_Bodycam_C_Kick_, Target) == 0x000000, "Member 'PC_Bodycam_C_Kick_::Target' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.KickPlayer
// 0x0048 (0x0048 - 0x0000)
struct PC_Bodycam_C_KickPlayer final
{
public:
	struct FSTR_KickVote                          PlayerInfo;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_KickPlayer) == 0x000008, "Wrong alignment on PC_Bodycam_C_KickPlayer");
static_assert(sizeof(PC_Bodycam_C_KickPlayer) == 0x000048, "Wrong size on PC_Bodycam_C_KickPlayer");
static_assert(offsetof(PC_Bodycam_C_KickPlayer, PlayerInfo) == 0x000000, "Member 'PC_Bodycam_C_KickPlayer::PlayerInfo' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.KickPlayer (Client)
// 0x0048 (0x0048 - 0x0000)
struct PC_Bodycam_C_KickPlayer__Client_ final
{
public:
	struct FSTR_KickVote                          Player_info;                                       // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_KickPlayer__Client_) == 0x000008, "Wrong alignment on PC_Bodycam_C_KickPlayer__Client_");
static_assert(sizeof(PC_Bodycam_C_KickPlayer__Client_) == 0x000048, "Wrong size on PC_Bodycam_C_KickPlayer__Client_");
static_assert(offsetof(PC_Bodycam_C_KickPlayer__Client_, Player_info) == 0x000000, "Member 'PC_Bodycam_C_KickPlayer__Client_::Player_info' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.KickVote
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_KickVote final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_KickVote) == 0x000001, "Wrong alignment on PC_Bodycam_C_KickVote");
static_assert(sizeof(PC_Bodycam_C_KickVote) == 0x000001, "Wrong size on PC_Bodycam_C_KickVote");
static_assert(offsetof(PC_Bodycam_C_KickVote, Yes_) == 0x000000, "Member 'PC_Bodycam_C_KickVote::Yes_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.KickVote (Server)
// 0x0048 (0x0048 - 0x0000)
struct PC_Bodycam_C_KickVote__Server_ final
{
public:
	struct FSTR_PCInfo                            Player_info;                                       // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_KickVote__Server_) == 0x000008, "Wrong alignment on PC_Bodycam_C_KickVote__Server_");
static_assert(sizeof(PC_Bodycam_C_KickVote__Server_) == 0x000048, "Wrong size on PC_Bodycam_C_KickVote__Server_");
static_assert(offsetof(PC_Bodycam_C_KickVote__Server_, Player_info) == 0x000000, "Member 'PC_Bodycam_C_KickVote__Server_::Player_info' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_KickVote__Server_, Yes_) == 0x000040, "Member 'PC_Bodycam_C_KickVote__Server_::Yes_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MSG_AVP_GetPlayerUsername
// 0x0050 (0x0050 - 0x0000)
struct PC_Bodycam_C_MSG_AVP_GetPlayerUsername final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Username;                                          // 0x0008(0x0018)(Parm, OutParm)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(PC_Bodycam_C_MSG_AVP_GetPlayerUsername) == 0x000008, "Wrong alignment on PC_Bodycam_C_MSG_AVP_GetPlayerUsername");
static_assert(sizeof(PC_Bodycam_C_MSG_AVP_GetPlayerUsername) == 0x000050, "Wrong size on PC_Bodycam_C_MSG_AVP_GetPlayerUsername");
static_assert(offsetof(PC_Bodycam_C_MSG_AVP_GetPlayerUsername, Success_) == 0x000000, "Member 'PC_Bodycam_C_MSG_AVP_GetPlayerUsername::Success_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_AVP_GetPlayerUsername, Username) == 0x000008, "Member 'PC_Bodycam_C_MSG_AVP_GetPlayerUsername::Username' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_AVP_GetPlayerUsername, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000020, "Member 'PC_Bodycam_C_MSG_AVP_GetPlayerUsername::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_AVP_GetPlayerUsername, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x000028, "Member 'PC_Bodycam_C_MSG_AVP_GetPlayerUsername::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_AVP_GetPlayerUsername, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PC_Bodycam_C_MSG_AVP_GetPlayerUsername::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_AVP_GetPlayerUsername, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'PC_Bodycam_C_MSG_AVP_GetPlayerUsername::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MSG_AVP_GetWidgetVoice
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_MSG_AVP_GetWidgetVoice final
{
public:
	class UWidgetComponent*                       WidgetVoiceRef;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_MSG_AVP_GetWidgetVoice) == 0x000008, "Wrong alignment on PC_Bodycam_C_MSG_AVP_GetWidgetVoice");
static_assert(sizeof(PC_Bodycam_C_MSG_AVP_GetWidgetVoice) == 0x000008, "Wrong size on PC_Bodycam_C_MSG_AVP_GetWidgetVoice");
static_assert(offsetof(PC_Bodycam_C_MSG_AVP_GetWidgetVoice, WidgetVoiceRef) == 0x000000, "Member 'PC_Bodycam_C_MSG_AVP_GetWidgetVoice::WidgetVoiceRef' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MSG_ChatGetConnectedPlayers
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_MSG_ChatGetConnectedPlayers final
{
public:
	TArray<class AController*>                    Players;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Bodycam_C_MSG_ChatGetConnectedPlayers) == 0x000008, "Wrong alignment on PC_Bodycam_C_MSG_ChatGetConnectedPlayers");
static_assert(sizeof(PC_Bodycam_C_MSG_ChatGetConnectedPlayers) == 0x000010, "Wrong size on PC_Bodycam_C_MSG_ChatGetConnectedPlayers");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetConnectedPlayers, Players) == 0x000000, "Member 'PC_Bodycam_C_MSG_ChatGetConnectedPlayers::Players' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MSG_ChatGetPlayerID
// 0x0004 (0x0004 - 0x0000)
struct PC_Bodycam_C_MSG_ChatGetPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_MSG_ChatGetPlayerID) == 0x000004, "Wrong alignment on PC_Bodycam_C_MSG_ChatGetPlayerID");
static_assert(sizeof(PC_Bodycam_C_MSG_ChatGetPlayerID) == 0x000004, "Wrong size on PC_Bodycam_C_MSG_ChatGetPlayerID");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetPlayerID, PlayerID) == 0x000000, "Member 'PC_Bodycam_C_MSG_ChatGetPlayerID::PlayerID' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MSG_ChatGetTeamID
// 0x0004 (0x0004 - 0x0000)
struct PC_Bodycam_C_MSG_ChatGetTeamID final
{
public:
	int32                                         TeamID;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_MSG_ChatGetTeamID) == 0x000004, "Wrong alignment on PC_Bodycam_C_MSG_ChatGetTeamID");
static_assert(sizeof(PC_Bodycam_C_MSG_ChatGetTeamID) == 0x000004, "Wrong size on PC_Bodycam_C_MSG_ChatGetTeamID");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetTeamID, TeamID) == 0x000000, "Member 'PC_Bodycam_C_MSG_ChatGetTeamID::TeamID' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MSG_ChatGetUsername
// 0x0058 (0x0058 - 0x0000)
struct PC_Bodycam_C_MSG_ChatGetUsername final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Username;                                          // 0x0008(0x0018)(Parm, OutParm)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBP_ChatInterface_C>   K2Node_DynamicCast_AsBP_Chat_Interface;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MSG_ChatGetUsername_Success_;             // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B[0x5];                                       // 0x003B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_MSG_ChatGetUsername_Username;             // 0x0040(0x0018)()
};
static_assert(alignof(PC_Bodycam_C_MSG_ChatGetUsername) == 0x000008, "Wrong alignment on PC_Bodycam_C_MSG_ChatGetUsername");
static_assert(sizeof(PC_Bodycam_C_MSG_ChatGetUsername) == 0x000058, "Wrong size on PC_Bodycam_C_MSG_ChatGetUsername");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetUsername, Success_) == 0x000000, "Member 'PC_Bodycam_C_MSG_ChatGetUsername::Success_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetUsername, Username) == 0x000008, "Member 'PC_Bodycam_C_MSG_ChatGetUsername::Username' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetUsername, CallFunc_K2_GetPawn_ReturnValue) == 0x000020, "Member 'PC_Bodycam_C_MSG_ChatGetUsername::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetUsername, K2Node_DynamicCast_AsBP_Chat_Interface) == 0x000028, "Member 'PC_Bodycam_C_MSG_ChatGetUsername::K2Node_DynamicCast_AsBP_Chat_Interface' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetUsername, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'PC_Bodycam_C_MSG_ChatGetUsername::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetUsername, CallFunc_IsValid_ReturnValue) == 0x000039, "Member 'PC_Bodycam_C_MSG_ChatGetUsername::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetUsername, CallFunc_MSG_ChatGetUsername_Success_) == 0x00003A, "Member 'PC_Bodycam_C_MSG_ChatGetUsername::CallFunc_MSG_ChatGetUsername_Success_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatGetUsername, CallFunc_MSG_ChatGetUsername_Username) == 0x000040, "Member 'PC_Bodycam_C_MSG_ChatGetUsername::CallFunc_MSG_ChatGetUsername_Username' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MSG_ChatPlayEmote
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_MSG_ChatPlayEmote final
{
public:
	E_Emote                                       EmoteToPlay;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_MSG_ChatPlayEmote) == 0x000001, "Wrong alignment on PC_Bodycam_C_MSG_ChatPlayEmote");
static_assert(sizeof(PC_Bodycam_C_MSG_ChatPlayEmote) == 0x000001, "Wrong size on PC_Bodycam_C_MSG_ChatPlayEmote");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatPlayEmote, EmoteToPlay) == 0x000000, "Member 'PC_Bodycam_C_MSG_ChatPlayEmote::EmoteToPlay' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MSG_ChatRequestPlayerID
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_MSG_ChatRequestPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_MSG_ChatRequestPlayerID) == 0x000004, "Wrong alignment on PC_Bodycam_C_MSG_ChatRequestPlayerID");
static_assert(sizeof(PC_Bodycam_C_MSG_ChatRequestPlayerID) == 0x000008, "Wrong size on PC_Bodycam_C_MSG_ChatRequestPlayerID");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatRequestPlayerID, PlayerID) == 0x000000, "Member 'PC_Bodycam_C_MSG_ChatRequestPlayerID::PlayerID' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_MSG_ChatRequestPlayerID, Success_) == 0x000004, "Member 'PC_Bodycam_C_MSG_ChatRequestPlayerID::Success_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.MuteID
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_MuteID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_MuteID) == 0x000008, "Wrong alignment on PC_Bodycam_C_MuteID");
static_assert(sizeof(PC_Bodycam_C_MuteID) == 0x000010, "Wrong size on PC_Bodycam_C_MuteID");
static_assert(offsetof(PC_Bodycam_C_MuteID, SteamID) == 0x000000, "Member 'PC_Bodycam_C_MuteID::SteamID' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.NewKickVote
// 0x0040 (0x0040 - 0x0000)
struct PC_Bodycam_C_NewKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_NewKickVote) == 0x000008, "Wrong alignment on PC_Bodycam_C_NewKickVote");
static_assert(sizeof(PC_Bodycam_C_NewKickVote) == 0x000040, "Wrong size on PC_Bodycam_C_NewKickVote");
static_assert(offsetof(PC_Bodycam_C_NewKickVote, Target) == 0x000000, "Member 'PC_Bodycam_C_NewKickVote::Target' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.OnPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_OnPlayerDeath final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_OnPlayerDeath) == 0x000008, "Wrong alignment on PC_Bodycam_C_OnPlayerDeath");
static_assert(sizeof(PC_Bodycam_C_OnPlayerDeath) == 0x000008, "Wrong size on PC_Bodycam_C_OnPlayerDeath");
static_assert(offsetof(PC_Bodycam_C_OnPlayerDeath, PC) == 0x000000, "Member 'PC_Bodycam_C_OnPlayerDeath::PC' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.OnTrySelectTeam
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_OnTrySelectTeam final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_OnTrySelectTeam) == 0x000001, "Wrong alignment on PC_Bodycam_C_OnTrySelectTeam");
static_assert(sizeof(PC_Bodycam_C_OnTrySelectTeam) == 0x000001, "Wrong size on PC_Bodycam_C_OnTrySelectTeam");
static_assert(offsetof(PC_Bodycam_C_OnTrySelectTeam, Team_0) == 0x000000, "Member 'PC_Bodycam_C_OnTrySelectTeam::Team_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.OnTrySelectTeam (Client)
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_OnTrySelectTeam__Client_ final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_OnTrySelectTeam__Client_) == 0x000001, "Wrong alignment on PC_Bodycam_C_OnTrySelectTeam__Client_");
static_assert(sizeof(PC_Bodycam_C_OnTrySelectTeam__Client_) == 0x000001, "Wrong size on PC_Bodycam_C_OnTrySelectTeam__Client_");
static_assert(offsetof(PC_Bodycam_C_OnTrySelectTeam__Client_, Team_0) == 0x000000, "Member 'PC_Bodycam_C_OnTrySelectTeam__Client_::Team_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Stop End Round Sound (Client)
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_Stop_End_Round_Sound__Client_ final
{
public:
	bool                                          Stop_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Stop_End_Round_Sound__Client_) == 0x000001, "Wrong alignment on PC_Bodycam_C_Stop_End_Round_Sound__Client_");
static_assert(sizeof(PC_Bodycam_C_Stop_End_Round_Sound__Client_) == 0x000001, "Wrong size on PC_Bodycam_C_Stop_End_Round_Sound__Client_");
static_assert(offsetof(PC_Bodycam_C_Stop_End_Round_Sound__Client_, Stop_) == 0x000000, "Member 'PC_Bodycam_C_Stop_End_Round_Sound__Client_::Stop_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_ReceivePossess) == 0x000008, "Wrong alignment on PC_Bodycam_C_ReceivePossess");
static_assert(sizeof(PC_Bodycam_C_ReceivePossess) == 0x000008, "Wrong size on PC_Bodycam_C_ReceivePossess");
static_assert(offsetof(PC_Bodycam_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'PC_Bodycam_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Respawn (client)
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_Respawn__client_ final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Team_0;                                            // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Respawn__client_) == 0x000004, "Wrong alignment on PC_Bodycam_C_Respawn__client_");
static_assert(sizeof(PC_Bodycam_C_Respawn__client_) == 0x000008, "Wrong size on PC_Bodycam_C_Respawn__client_");
static_assert(offsetof(PC_Bodycam_C_Respawn__client_, Duration) == 0x000000, "Member 'PC_Bodycam_C_Respawn__client_::Duration' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Respawn__client_, Team_0) == 0x000004, "Member 'PC_Bodycam_C_Respawn__client_::Team_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Respawn (Server)
// 0x0002 (0x0002 - 0x0000)
struct PC_Bodycam_C_Respawn__Server_ final
{
public:
	EGM_Statue                                    GM_Statue;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Team_0;                                            // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Respawn__Server_) == 0x000001, "Wrong alignment on PC_Bodycam_C_Respawn__Server_");
static_assert(sizeof(PC_Bodycam_C_Respawn__Server_) == 0x000002, "Wrong size on PC_Bodycam_C_Respawn__Server_");
static_assert(offsetof(PC_Bodycam_C_Respawn__Server_, GM_Statue) == 0x000000, "Member 'PC_Bodycam_C_Respawn__Server_::GM_Statue' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Respawn__Server_, Team_0) == 0x000001, "Member 'PC_Bodycam_C_Respawn__Server_::Team_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.ServerTravel
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_ServerTravel final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_ServerTravel) == 0x000008, "Wrong alignment on PC_Bodycam_C_ServerTravel");
static_assert(sizeof(PC_Bodycam_C_ServerTravel) == 0x000008, "Wrong size on PC_Bodycam_C_ServerTravel");
static_assert(offsetof(PC_Bodycam_C_ServerTravel, Delay) == 0x000000, "Member 'PC_Bodycam_C_ServerTravel::Delay' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.SetSteamID (Server)
// 0x0028 (0x0028 - 0x0000)
struct PC_Bodycam_C_SetSteamID__Server_ final
{
public:
	class FString                                 PCInfo;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_Team                                        Team_0;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCStats                           Item_Stats;                                        // 0x0014(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_SetSteamID__Server_) == 0x000008, "Wrong alignment on PC_Bodycam_C_SetSteamID__Server_");
static_assert(sizeof(PC_Bodycam_C_SetSteamID__Server_) == 0x000028, "Wrong size on PC_Bodycam_C_SetSteamID__Server_");
static_assert(offsetof(PC_Bodycam_C_SetSteamID__Server_, PCInfo) == 0x000000, "Member 'PC_Bodycam_C_SetSteamID__Server_::PCInfo' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_SetSteamID__Server_, Team_0) == 0x000010, "Member 'PC_Bodycam_C_SetSteamID__Server_::Team_0' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_SetSteamID__Server_, Item_Stats) == 0x000014, "Member 'PC_Bodycam_C_SetSteamID__Server_::Item_Stats' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Slomo
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_Slomo final
{
public:
	double                                        Slomo_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Slomo) == 0x000008, "Wrong alignment on PC_Bodycam_C_Slomo");
static_assert(sizeof(PC_Bodycam_C_Slomo) == 0x000008, "Wrong size on PC_Bodycam_C_Slomo");
static_assert(offsetof(PC_Bodycam_C_Slomo, Slomo_0) == 0x000000, "Member 'PC_Bodycam_C_Slomo::Slomo_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Talk
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_Talk final
{
public:
	bool                                          IsTalking_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Talk) == 0x000001, "Wrong alignment on PC_Bodycam_C_Talk");
static_assert(sizeof(PC_Bodycam_C_Talk) == 0x000001, "Wrong size on PC_Bodycam_C_Talk");
static_assert(offsetof(PC_Bodycam_C_Talk, IsTalking_0) == 0x000000, "Member 'PC_Bodycam_C_Talk::IsTalking_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update ControlRotation
// 0x0018 (0x0018 - 0x0000)
struct PC_Bodycam_C_Update_ControlRotation final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PC_Bodycam_C_Update_ControlRotation) == 0x000008, "Wrong alignment on PC_Bodycam_C_Update_ControlRotation");
static_assert(sizeof(PC_Bodycam_C_Update_ControlRotation) == 0x000018, "Wrong size on PC_Bodycam_C_Update_ControlRotation");
static_assert(offsetof(PC_Bodycam_C_Update_ControlRotation, NewRotation) == 0x000000, "Member 'PC_Bodycam_C_Update_ControlRotation::NewRotation' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update Death
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_Update_Death final
{
public:
	int32                                         Death;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Update_Death) == 0x000004, "Wrong alignment on PC_Bodycam_C_Update_Death");
static_assert(sizeof(PC_Bodycam_C_Update_Death) == 0x000008, "Wrong size on PC_Bodycam_C_Update_Death");
static_assert(offsetof(PC_Bodycam_C_Update_Death, Death) == 0x000000, "Member 'PC_Bodycam_C_Update_Death::Death' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Update_Death, Set) == 0x000004, "Member 'PC_Bodycam_C_Update_Death::Set' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update Death (server)
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_Update_Death__server_ final
{
public:
	int32                                         Death;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Update_Death__server_) == 0x000004, "Wrong alignment on PC_Bodycam_C_Update_Death__server_");
static_assert(sizeof(PC_Bodycam_C_Update_Death__server_) == 0x000008, "Wrong size on PC_Bodycam_C_Update_Death__server_");
static_assert(offsetof(PC_Bodycam_C_Update_Death__server_, Death) == 0x000000, "Member 'PC_Bodycam_C_Update_Death__server_::Death' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_Update_Death__server_, Set) == 0x000004, "Member 'PC_Bodycam_C_Update_Death__server_::Set' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update Kill
// 0x0004 (0x0004 - 0x0000)
struct PC_Bodycam_C_Update_Kill final
{
public:
	int32                                         Kill_;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Update_Kill) == 0x000004, "Wrong alignment on PC_Bodycam_C_Update_Kill");
static_assert(sizeof(PC_Bodycam_C_Update_Kill) == 0x000004, "Wrong size on PC_Bodycam_C_Update_Kill");
static_assert(offsetof(PC_Bodycam_C_Update_Kill, Kill_) == 0x000000, "Member 'PC_Bodycam_C_Update_Kill::Kill_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update Kill (server)
// 0x0004 (0x0004 - 0x0000)
struct PC_Bodycam_C_Update_Kill__server_ final
{
public:
	int32                                         Death;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Update_Kill__server_) == 0x000004, "Wrong alignment on PC_Bodycam_C_Update_Kill__server_");
static_assert(sizeof(PC_Bodycam_C_Update_Kill__server_) == 0x000004, "Wrong size on PC_Bodycam_C_Update_Kill__server_");
static_assert(offsetof(PC_Bodycam_C_Update_Kill__server_, Death) == 0x000000, "Member 'PC_Bodycam_C_Update_Kill__server_::Death' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update Score (Client)
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_Update_Score__Client_ final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Update_Score__Client_) == 0x000004, "Wrong alignment on PC_Bodycam_C_Update_Score__Client_");
static_assert(sizeof(PC_Bodycam_C_Update_Score__Client_) == 0x000008, "Wrong size on PC_Bodycam_C_Update_Score__Client_");
static_assert(offsetof(PC_Bodycam_C_Update_Score__Client_, Score) == 0x000000, "Member 'PC_Bodycam_C_Update_Score__Client_::Score' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update ScoreBoard (HUD)
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_Update_ScoreBoard__HUD_ final
{
public:
	bool                                          Remove_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Update_ScoreBoard__HUD_) == 0x000001, "Wrong alignment on PC_Bodycam_C_Update_ScoreBoard__HUD_");
static_assert(sizeof(PC_Bodycam_C_Update_ScoreBoard__HUD_) == 0x000001, "Wrong size on PC_Bodycam_C_Update_ScoreBoard__HUD_");
static_assert(offsetof(PC_Bodycam_C_Update_ScoreBoard__HUD_, Remove_) == 0x000000, "Member 'PC_Bodycam_C_Update_ScoreBoard__HUD_::Remove_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update Team XP (Client)
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_Update_Team_XP__Client_ final
{
public:
	bool                                          Win;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Update_Team_XP__Client_) == 0x000001, "Wrong alignment on PC_Bodycam_C_Update_Team_XP__Client_");
static_assert(sizeof(PC_Bodycam_C_Update_Team_XP__Client_) == 0x000001, "Wrong size on PC_Bodycam_C_Update_Team_XP__Client_");
static_assert(offsetof(PC_Bodycam_C_Update_Team_XP__Client_, Win) == 0x000000, "Member 'PC_Bodycam_C_Update_Team_XP__Client_::Win' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.Update Warning (Client)
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_Update_Warning__Client_ final
{
public:
	class FString                                 InputPin;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_Update_Warning__Client_) == 0x000008, "Wrong alignment on PC_Bodycam_C_Update_Warning__Client_");
static_assert(sizeof(PC_Bodycam_C_Update_Warning__Client_) == 0x000010, "Wrong size on PC_Bodycam_C_Update_Warning__Client_");
static_assert(offsetof(PC_Bodycam_C_Update_Warning__Client_, InputPin) == 0x000000, "Member 'PC_Bodycam_C_Update_Warning__Client_::InputPin' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateGamemode
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_UpdateGamemode final
{
public:
	EGameMode                                     GameMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateGamemode) == 0x000001, "Wrong alignment on PC_Bodycam_C_UpdateGamemode");
static_assert(sizeof(PC_Bodycam_C_UpdateGamemode) == 0x000001, "Wrong size on PC_Bodycam_C_UpdateGamemode");
static_assert(offsetof(PC_Bodycam_C_UpdateGamemode, GameMode) == 0x000000, "Member 'PC_Bodycam_C_UpdateGamemode::GameMode' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateKickVote
// 0x0048 (0x0048 - 0x0000)
struct PC_Bodycam_C_UpdateKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateKickVote) == 0x000008, "Wrong alignment on PC_Bodycam_C_UpdateKickVote");
static_assert(sizeof(PC_Bodycam_C_UpdateKickVote) == 0x000048, "Wrong size on PC_Bodycam_C_UpdateKickVote");
static_assert(offsetof(PC_Bodycam_C_UpdateKickVote, Target) == 0x000000, "Member 'PC_Bodycam_C_UpdateKickVote::Target' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateKickVote, Yes_) == 0x000040, "Member 'PC_Bodycam_C_UpdateKickVote::Yes_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateMapSelection
// 0x000C (0x000C - 0x0000)
struct PC_Bodycam_C_UpdateMapSelection final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateMapSelection) == 0x000004, "Wrong alignment on PC_Bodycam_C_UpdateMapSelection");
static_assert(sizeof(PC_Bodycam_C_UpdateMapSelection) == 0x00000C, "Wrong size on PC_Bodycam_C_UpdateMapSelection");
static_assert(offsetof(PC_Bodycam_C_UpdateMapSelection, Selected_Level_Name) == 0x000000, "Member 'PC_Bodycam_C_UpdateMapSelection::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateMapSelection, Index_0) == 0x000008, "Member 'PC_Bodycam_C_UpdateMapSelection::Index_0' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdatePlayerRank (Server)
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_UpdatePlayerRank__Server_ final
{
public:
	int32                                         Stats_Rank;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Stats_XP;                                          // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdatePlayerRank__Server_) == 0x000004, "Wrong alignment on PC_Bodycam_C_UpdatePlayerRank__Server_");
static_assert(sizeof(PC_Bodycam_C_UpdatePlayerRank__Server_) == 0x000008, "Wrong size on PC_Bodycam_C_UpdatePlayerRank__Server_");
static_assert(offsetof(PC_Bodycam_C_UpdatePlayerRank__Server_, Stats_Rank) == 0x000000, "Member 'PC_Bodycam_C_UpdatePlayerRank__Server_::Stats_Rank' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdatePlayerRank__Server_, Stats_XP) == 0x000004, "Member 'PC_Bodycam_C_UpdatePlayerRank__Server_::Stats_XP' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateScore
// 0x0008 (0x0008 - 0x0000)
struct PC_Bodycam_C_UpdateScore final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateScore) == 0x000004, "Wrong alignment on PC_Bodycam_C_UpdateScore");
static_assert(sizeof(PC_Bodycam_C_UpdateScore) == 0x000008, "Wrong size on PC_Bodycam_C_UpdateScore");
static_assert(offsetof(PC_Bodycam_C_UpdateScore, Score) == 0x000000, "Member 'PC_Bodycam_C_UpdateScore::Score' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateTeamIndex (Player Killed) (Client)
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_ final
{
public:
	E_Team                                        Team__PlayerKilled_;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_) == 0x000004, "Wrong alignment on PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_");
static_assert(sizeof(PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_) == 0x000010, "Wrong size on PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_, Team__PlayerKilled_) == 0x000000, "Member 'PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_::Team__PlayerKilled_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_, MilitaryIndex) == 0x000004, "Member 'PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_, TerroristIndex) == 0x000008, "Member 'PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_, WiiningTeam) == 0x00000C, "Member 'PC_Bodycam_C_UpdateTeamIndex__Player_Killed___Client_::WiiningTeam' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateTeamIndex (PlayerKilled)
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_ final
{
public:
	E_Team                                        Team_PlayerKilled_;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_) == 0x000004, "Wrong alignment on PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_");
static_assert(sizeof(PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_) == 0x000010, "Wrong size on PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_, Team_PlayerKilled_) == 0x000000, "Member 'PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_::Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_, MilitaryIndex) == 0x000004, "Member 'PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_, TerroristIndex) == 0x000008, "Member 'PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_, WiiningTeam) == 0x00000C, "Member 'PC_Bodycam_C_UpdateTeamIndex__PlayerKilled_::WiiningTeam' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateTeamXP
// 0x0001 (0x0001 - 0x0000)
struct PC_Bodycam_C_UpdateTeamXP final
{
public:
	bool                                          Win_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateTeamXP) == 0x000001, "Wrong alignment on PC_Bodycam_C_UpdateTeamXP");
static_assert(sizeof(PC_Bodycam_C_UpdateTeamXP) == 0x000001, "Wrong size on PC_Bodycam_C_UpdateTeamXP");
static_assert(offsetof(PC_Bodycam_C_UpdateTeamXP, Win_) == 0x000000, "Member 'PC_Bodycam_C_UpdateTeamXP::Win_' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateTimer
// 0x0020 (0x0020 - 0x0000)
struct PC_Bodycam_C_UpdateTimer final
{
public:
	double                                        TimeCount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PC_Bodycam_C_UpdateTimer) == 0x000008, "Wrong alignment on PC_Bodycam_C_UpdateTimer");
static_assert(sizeof(PC_Bodycam_C_UpdateTimer) == 0x000020, "Wrong size on PC_Bodycam_C_UpdateTimer");
static_assert(offsetof(PC_Bodycam_C_UpdateTimer, TimeCount) == 0x000000, "Member 'PC_Bodycam_C_UpdateTimer::TimeCount' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateTimer, NewParam) == 0x000008, "Member 'PC_Bodycam_C_UpdateTimer::NewParam' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateTimer (Client)
// 0x0020 (0x0020 - 0x0000)
struct PC_Bodycam_C_UpdateTimer__Client_ final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   FinalText;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PC_Bodycam_C_UpdateTimer__Client_) == 0x000008, "Wrong alignment on PC_Bodycam_C_UpdateTimer__Client_");
static_assert(sizeof(PC_Bodycam_C_UpdateTimer__Client_) == 0x000020, "Wrong size on PC_Bodycam_C_UpdateTimer__Client_");
static_assert(offsetof(PC_Bodycam_C_UpdateTimer__Client_, Time) == 0x000000, "Member 'PC_Bodycam_C_UpdateTimer__Client_::Time' has a wrong offset!");
static_assert(offsetof(PC_Bodycam_C_UpdateTimer__Client_, FinalText) == 0x000008, "Member 'PC_Bodycam_C_UpdateTimer__Client_::FinalText' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateWarning
// 0x0010 (0x0010 - 0x0000)
struct PC_Bodycam_C_UpdateWarning final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateWarning) == 0x000008, "Wrong alignment on PC_Bodycam_C_UpdateWarning");
static_assert(sizeof(PC_Bodycam_C_UpdateWarning) == 0x000010, "Wrong size on PC_Bodycam_C_UpdateWarning");
static_assert(offsetof(PC_Bodycam_C_UpdateWarning, String) == 0x000000, "Member 'PC_Bodycam_C_UpdateWarning::String' has a wrong offset!");

// Function PC_Bodycam.PC_Bodycam_C.UpdateXp
// 0x0004 (0x0004 - 0x0000)
struct PC_Bodycam_C_UpdateXp final
{
public:
	int32                                         Xp;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Bodycam_C_UpdateXp) == 0x000004, "Wrong alignment on PC_Bodycam_C_UpdateXp");
static_assert(sizeof(PC_Bodycam_C_UpdateXp) == 0x000004, "Wrong size on PC_Bodycam_C_UpdateXp");
static_assert(offsetof(PC_Bodycam_C_UpdateXp, Xp) == 0x000000, "Member 'PC_Bodycam_C_UpdateXp::Xp' has a wrong offset!");

}

