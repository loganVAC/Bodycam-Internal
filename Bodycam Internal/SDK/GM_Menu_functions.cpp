#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GM_Menu

#include "Basic.hpp"

#include "GM_Menu_classes.hpp"
#include "GM_Menu_parameters.hpp"


namespace SDK
{

// Function GM_Menu.GM_Menu_C.ExecuteUbergraph_GM_Menu
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_Menu_C::ExecuteUbergraph_GM_Menu(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "ExecuteUbergraph_GM_Menu");

	Params::GM_Menu_C_ExecuteUbergraph_GM_Menu Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM_Menu.GM_Menu_C.HandleStartingNewPlayer
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_Menu_C::HandleStartingNewPlayer(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "HandleStartingNewPlayer");

	Params::GM_Menu_C_HandleStartingNewPlayer Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM_Menu.GM_Menu_C.K2_OnLogout
// (Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      ExitingController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_Menu_C::K2_OnLogout(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "K2_OnLogout");

	Params::GM_Menu_C_K2_OnLogout Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM_Menu.GM_Menu_C.K2_PostLogin
// (Event, Public, BlueprintEvent)
// Parameters:
// class APlayerController*                NewPlayer                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_Menu_C::K2_PostLogin(class APlayerController* NewPlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "K2_PostLogin");

	Params::GM_Menu_C_K2_PostLogin Parms{};

	Parms.NewPlayer = NewPlayer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM_Menu.GM_Menu_C.LogoutEvent
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class AController*                      ExitingController                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGM_Menu_C::LogoutEvent(class AController* ExitingController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "LogoutEvent");

	Params::GM_Menu_C_LogoutEvent Parms{};

	Parms.ExitingController = ExitingController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM_Menu.GM_Menu_C.MSG_ChatGetConnectedPlayers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AController*>              Players                                                (Parm, OutParm)

void AGM_Menu_C::MSG_ChatGetConnectedPlayers(TArray<class AController*>* Players)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "MSG_ChatGetConnectedPlayers");

	Params::GM_Menu_C_MSG_ChatGetConnectedPlayers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Players != nullptr)
		*Players = std::move(Parms.Players);
}


// Function GM_Menu.GM_Menu_C.MSG_ChatGetPlayerID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerID                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_Menu_C::MSG_ChatGetPlayerID(int32* PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "MSG_ChatGetPlayerID");

	Params::GM_Menu_C_MSG_ChatGetPlayerID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerID != nullptr)
		*PlayerID = Parms.PlayerID;
}


// Function GM_Menu.GM_Menu_C.MSG_ChatGetTeamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TeamID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_Menu_C::MSG_ChatGetTeamID(int32* TeamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "MSG_ChatGetTeamID");

	Params::GM_Menu_C_MSG_ChatGetTeamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TeamID != nullptr)
		*TeamID = Parms.TeamID;
}


// Function GM_Menu.GM_Menu_C.MSG_ChatGetUsername
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Username                                               (Parm, OutParm)

void AGM_Menu_C::MSG_ChatGetUsername(bool* Success_, class FText* Username)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "MSG_ChatGetUsername");

	Params::GM_Menu_C_MSG_ChatGetUsername Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;

	if (Username != nullptr)
		*Username = std::move(Parms.Username);
}


// Function GM_Menu.GM_Menu_C.MSG_ChatRequestPlayerID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerID                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGM_Menu_C::MSG_ChatRequestPlayerID(int32* PlayerID, bool* Success_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "MSG_ChatRequestPlayerID");

	Params::GM_Menu_C_MSG_ChatRequestPlayerID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerID != nullptr)
		*PlayerID = Parms.PlayerID;

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;
}


// Function GM_Menu.GM_Menu_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGM_Menu_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GM_Menu.GM_Menu_C.SendsSystemMessageToPlayers
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void AGM_Menu_C::SendsSystemMessageToPlayers(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "SendsSystemMessageToPlayers");

	Params::GM_Menu_C_SendsSystemMessageToPlayers Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function GM_Menu.GM_Menu_C.SetSessionSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGM_Menu_C::SetSessionSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GM_Menu_C", "SetSessionSettings");

	UObject::ProcessEvent(Func, nullptr);
}

}

