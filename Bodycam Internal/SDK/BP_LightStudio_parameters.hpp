#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_LightStudio

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BP_LightStudio.BP_LightStudio_C.AtmosphereDensity
// 0x00E0 (0x00E0 - 0x0000)
struct BP_LightStudio_C_AtmosphereDensity final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAtmosphericFogComponent*               CallFunc_AddComponent_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAtmosphericFogComponent*               CallFunc_AddComponent_ReturnValue_1;               // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPrecomputeParams_DensityHeight_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightStudio_C_AtmosphereDensity) == 0x000010, "Wrong alignment on BP_LightStudio_C_AtmosphereDensity");
static_assert(sizeof(BP_LightStudio_C_AtmosphereDensity) == 0x0000E0, "Wrong size on BP_LightStudio_C_AtmosphereDensity");
static_assert(offsetof(BP_LightStudio_C_AtmosphereDensity, Temp_struct_Variable) == 0x000000, "Member 'BP_LightStudio_C_AtmosphereDensity::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_AtmosphereDensity, Temp_struct_Variable_1) == 0x000060, "Member 'BP_LightStudio_C_AtmosphereDensity::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_AtmosphereDensity, CallFunc_AddComponent_ReturnValue) == 0x0000C0, "Member 'BP_LightStudio_C_AtmosphereDensity::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_AtmosphereDensity, CallFunc_AddComponent_ReturnValue_1) == 0x0000C8, "Member 'BP_LightStudio_C_AtmosphereDensity::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_AtmosphereDensity, CallFunc_SetPrecomputeParams_DensityHeight_ImplicitCast) == 0x0000D0, "Member 'BP_LightStudio_C_AtmosphereDensity::CallFunc_SetPrecomputeParams_DensityHeight_ImplicitCast' has a wrong offset!");

// Function BP_LightStudio.BP_LightStudio_C.CalculateSunColor
// 0x0060 (0x0060 - 0x0000)
struct BP_LightStudio_C_CalculateSunColor final
{
public:
	double                                        CallFunc_NormalizedSunAngle_Angle;                 // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightStudio_C_CalculateSunColor) == 0x000008, "Wrong alignment on BP_LightStudio_C_CalculateSunColor");
static_assert(sizeof(BP_LightStudio_C_CalculateSunColor) == 0x000060, "Wrong size on BP_LightStudio_C_CalculateSunColor");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_NormalizedSunAngle_Angle) == 0x000000, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_NormalizedSunAngle_Angle' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_GetLinearColorValue_ReturnValue) == 0x000008, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_BreakColor_R) == 0x000018, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_BreakColor_G) == 0x00001C, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_BreakColor_B) == 0x000020, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_BreakColor_A) == 0x000024, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_MakeColor_ReturnValue) == 0x000028, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000038, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_SelectColor_ReturnValue) == 0x000048, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_CalculateSunColor, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x000058, "Member 'BP_LightStudio_C_CalculateSunColor::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");

// Function BP_LightStudio.BP_LightStudio_C.NormalizedSunAngle
// 0x0060 (0x0060 - 0x0000)
struct BP_LightStudio_C_NormalizedSunAngle final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightStudio_C_NormalizedSunAngle) == 0x000008, "Wrong alignment on BP_LightStudio_C_NormalizedSunAngle");
static_assert(sizeof(BP_LightStudio_C_NormalizedSunAngle) == 0x000060, "Wrong size on BP_LightStudio_C_NormalizedSunAngle");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, Angle) == 0x000000, "Member 'BP_LightStudio_C_NormalizedSunAngle::Angle' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_Abs_ReturnValue_1) == 0x000048, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_NormalizedSunAngle, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'BP_LightStudio_C_NormalizedSunAngle::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function BP_LightStudio.BP_LightStudio_C.SunMobility
// 0x00D0 (0x00D0 - 0x0000)
struct BP_LightStudio_C_SunMobility final
{
public:
	struct FTransform                             Temp_struct_Variable;                              // 0x0000(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             Temp_struct_Variable_1;                            // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             CallFunc_AddComponent_ReturnValue;                 // 0x00C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UDirectionalLightComponent*             CallFunc_AddComponent_ReturnValue_1;               // 0x00C8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightStudio_C_SunMobility) == 0x000010, "Wrong alignment on BP_LightStudio_C_SunMobility");
static_assert(sizeof(BP_LightStudio_C_SunMobility) == 0x0000D0, "Wrong size on BP_LightStudio_C_SunMobility");
static_assert(offsetof(BP_LightStudio_C_SunMobility, Temp_struct_Variable) == 0x000000, "Member 'BP_LightStudio_C_SunMobility::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_SunMobility, Temp_struct_Variable_1) == 0x000060, "Member 'BP_LightStudio_C_SunMobility::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_SunMobility, CallFunc_AddComponent_ReturnValue) == 0x0000C0, "Member 'BP_LightStudio_C_SunMobility::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_SunMobility, CallFunc_AddComponent_ReturnValue_1) == 0x0000C8, "Member 'BP_LightStudio_C_SunMobility::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");

// Function BP_LightStudio.BP_LightStudio_C.UserConstructionScript
// 0x0410 (0x0410 - 0x0000)
struct BP_LightStudio_C_UserConstructionScript final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0068(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult_1;     // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_NormalizedSunAngle_Angle;                 // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0288(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x02B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x02B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x02C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x02C8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SetFogMultiplier_NewFogMultiplier_ImplicitCast; // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDensityMultiplier_NewDensityMultiplier_ImplicitCast; // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomThreshold_NewValue_ImplicitCast;  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomScale_NewValue_ImplicitCast;      // 0x03C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOcclusionMaskDarkness_NewValue_ImplicitCast; // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDynamicShadowDistanceMovableLight_NewValue_ImplicitCast; // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDynamicShadowDistanceStationaryLight_NewValue_ImplicitCast; // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x03DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDistanceScale_NewDistanceScale_ImplicitCast; // 0x03E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStartDistance_Value_ImplicitCast;      // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogDensity_Value_ImplicitCast;         // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogHeightFalloff_Value_ImplicitCast;   // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogMaxOpacity_Value_ImplicitCast;      // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDefaultBrightness_NewBrightness_ImplicitCast; // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSunMultiplier_NewSunMultiplier_ImplicitCast; // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_LightStudio_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_LightStudio_C_UserConstructionScript");
static_assert(sizeof(BP_LightStudio_C_UserConstructionScript) == 0x000410, "Wrong size on BP_LightStudio_C_UserConstructionScript");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, Temp_bool_Variable) == 0x000000, "Member 'BP_LightStudio_C_UserConstructionScript::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_BreakRotator_Roll) == 0x000020, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_BreakRotator_Pitch) == 0x000024, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_BreakRotator_Yaw) == 0x000028, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000050, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000068, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000150, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000158, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_K2_SetWorldLocation_SweepHitResult_1) == 0x000160, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_K2_SetWorldLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_NormalizedSunAngle_Angle) == 0x000248, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_NormalizedSunAngle_Angle' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_GetFloatValue_ReturnValue) == 0x000250, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000260, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000268, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_LinearColorLerp_ReturnValue) == 0x000278, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000288, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000298, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0002A8, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, K2Node_Select_Default) == 0x0002B0, "Member 'BP_LightStudio_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x0002B8, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0002C0, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0002C8, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetFogMultiplier_NewFogMultiplier_ImplicitCast) == 0x0003B0, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetFogMultiplier_NewFogMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetDensityMultiplier_NewDensityMultiplier_ImplicitCast) == 0x0003B4, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetDensityMultiplier_NewDensityMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x0003B8, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetBloomThreshold_NewValue_ImplicitCast) == 0x0003C0, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetBloomThreshold_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetBloomScale_NewValue_ImplicitCast) == 0x0003C4, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetBloomScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetOcclusionMaskDarkness_NewValue_ImplicitCast) == 0x0003C8, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetOcclusionMaskDarkness_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetDynamicShadowDistanceMovableLight_NewValue_ImplicitCast) == 0x0003CC, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetDynamicShadowDistanceMovableLight_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetDynamicShadowDistanceStationaryLight_NewValue_ImplicitCast) == 0x0003D0, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetDynamicShadowDistanceStationaryLight_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0003D4, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0003D8, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0003DC, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetDistanceScale_NewDistanceScale_ImplicitCast) == 0x0003E0, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetDistanceScale_NewDistanceScale_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetStartDistance_Value_ImplicitCast) == 0x0003E4, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetStartDistance_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0003E8, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetFogDensity_Value_ImplicitCast) == 0x0003EC, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetFogDensity_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0003F0, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetFogHeightFalloff_Value_ImplicitCast) == 0x0003F8, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetFogHeightFalloff_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetFogMaxOpacity_Value_ImplicitCast) == 0x0003FC, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetFogMaxOpacity_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetDefaultBrightness_NewBrightness_ImplicitCast) == 0x000400, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetDefaultBrightness_NewBrightness_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetSunMultiplier_NewSunMultiplier_ImplicitCast) == 0x000404, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetSunMultiplier_NewSunMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_LightStudio_C_UserConstructionScript, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000408, "Member 'BP_LightStudio_C_UserConstructionScript::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

}

