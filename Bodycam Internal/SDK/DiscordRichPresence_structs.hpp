#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DiscordRichPresence

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK
{

// Enum DiscordRichPresence.EDiscordPresenceActivityActionType
// NumValues: 0x0003
enum class EDiscordPresenceActivityActionType : uint8
{
	Join                                     = 0,
	Spectate                                 = 1,
	EDiscordPresenceActivityActionType_MAX   = 2,
};

// ScriptStruct DiscordRichPresence.DiscordActivityInfo
// 0x00A8 (0x00A8 - 0x0000)
struct FDiscordActivityInfo final
{
public:
	class FString                                 Details;                                           // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 State;                                             // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LargeImageKey;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 LargeImageTooltip;                                 // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SmallImageKey;                                     // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SmallImageTooltip;                                 // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              StartTime;                                         // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	struct FDateTime                              EndTime;                                           // 0x0068(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PartySize;                                         // 0x0070(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         PartyMaxSize;                                      // 0x0074(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 PartyID;                                           // 0x0078(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 JoinSecret;                                        // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 SpectateSecret;                                    // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FDiscordActivityInfo) == 0x000008, "Wrong alignment on FDiscordActivityInfo");
static_assert(sizeof(FDiscordActivityInfo) == 0x0000A8, "Wrong size on FDiscordActivityInfo");
static_assert(offsetof(FDiscordActivityInfo, Details) == 0x000000, "Member 'FDiscordActivityInfo::Details' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, State) == 0x000010, "Member 'FDiscordActivityInfo::State' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, LargeImageKey) == 0x000020, "Member 'FDiscordActivityInfo::LargeImageKey' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, LargeImageTooltip) == 0x000030, "Member 'FDiscordActivityInfo::LargeImageTooltip' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, SmallImageKey) == 0x000040, "Member 'FDiscordActivityInfo::SmallImageKey' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, SmallImageTooltip) == 0x000050, "Member 'FDiscordActivityInfo::SmallImageTooltip' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, StartTime) == 0x000060, "Member 'FDiscordActivityInfo::StartTime' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, EndTime) == 0x000068, "Member 'FDiscordActivityInfo::EndTime' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, PartySize) == 0x000070, "Member 'FDiscordActivityInfo::PartySize' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, PartyMaxSize) == 0x000074, "Member 'FDiscordActivityInfo::PartyMaxSize' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, PartyID) == 0x000078, "Member 'FDiscordActivityInfo::PartyID' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, JoinSecret) == 0x000088, "Member 'FDiscordActivityInfo::JoinSecret' has a wrong offset!");
static_assert(offsetof(FDiscordActivityInfo, SpectateSecret) == 0x000098, "Member 'FDiscordActivityInfo::SpectateSecret' has a wrong offset!");

// ScriptStruct DiscordRichPresence.DiscordUser
// 0x0038 (0x0038 - 0x0000)
struct FDiscordUser final
{
public:
	class FString                                 ID;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Username;                                          // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Discriminator;                                     // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bIsBot;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FDiscordUser) == 0x000008, "Wrong alignment on FDiscordUser");
static_assert(sizeof(FDiscordUser) == 0x000038, "Wrong size on FDiscordUser");
static_assert(offsetof(FDiscordUser, ID) == 0x000000, "Member 'FDiscordUser::ID' has a wrong offset!");
static_assert(offsetof(FDiscordUser, Username) == 0x000010, "Member 'FDiscordUser::Username' has a wrong offset!");
static_assert(offsetof(FDiscordUser, Discriminator) == 0x000020, "Member 'FDiscordUser::Discriminator' has a wrong offset!");
static_assert(offsetof(FDiscordUser, bIsBot) == 0x000030, "Member 'FDiscordUser::bIsBot' has a wrong offset!");

}

