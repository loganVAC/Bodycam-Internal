#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: DiscordRichPresence

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "DiscordRichPresence_structs.hpp"


namespace SDK
{

// Class DiscordRichPresence.DiscordInterface
// 0x0000 (0x0028 - 0x0028)
class UDiscordInterface final : public UBlueprintFunctionLibrary
{
public:
	static void BindEvents(TDelegate<void(const class FString& JoinSecret)> OnDiscordUserJoin, TDelegate<void(const class FString& SpectateSecret)> OnDiscordUserSpectate, TDelegate<void(const struct FDiscordUser& User)> OnDiscordUserJoinRequest, TDelegate<void(EDiscordPresenceActivityActionType Type, const struct FDiscordUser& User, const struct FDiscordActivityInfo& Activity)> OnDiscordInvite);
	static void BindOnUserInvite(TDelegate<void(EDiscordPresenceActivityActionType Type, const struct FDiscordUser& User, const struct FDiscordActivityInfo& Activity)> OnDiscordInvite);
	static void BindOnUserJoin(TDelegate<void(const class FString& JoinSecret)> OnDiscordUserJoin);
	static void BindOnUserJoinRequest(TDelegate<void(const struct FDiscordUser& User)> OnDiscordUserJoinRequest);
	static void BindOnUserSpectate(TDelegate<void(const class FString& SpectateSecret)> OnDiscordUserSpectate);
	static void ClearActivity();
	static bool InitializeDiscord(const class FString& ClientID);
	static void RegisterApplication(const class FString& Command);
	static void RegisterApplicationSteam();
	static void SetActivity(const struct FDiscordActivityInfo& Activity);
	static void ShutdownDiscord();
	static void TickDiscord();

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"DiscordInterface">();
	}
	static class UDiscordInterface* GetDefaultObj()
	{
		return GetDefaultObjImpl<UDiscordInterface>();
	}
};
static_assert(alignof(UDiscordInterface) == 0x000008, "Wrong alignment on UDiscordInterface");
static_assert(sizeof(UDiscordInterface) == 0x000028, "Wrong size on UDiscordInterface");

}

