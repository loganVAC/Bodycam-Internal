#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Inventory

#include "Basic.hpp"

#include "Inventory_classes.hpp"
#include "Inventory_parameters.hpp"


namespace SDK
{

// Function Inventory.Inventory_C.AddWep
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UClass*                           Class_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::AddWep(class UClass* Class_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "AddWep");

	Params::Inventory_C_AddWep Parms{};

	Parms.Class_0 = Class_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.ClearEmptySlot
// (Public, BlueprintCallable, BlueprintEvent)

void UInventory_C::ClearEmptySlot()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "ClearEmptySlot");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.Death (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UInventory_C::Death__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Death (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.DefineFinalStarterWeapons
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UInventory_C::DefineFinalStarterWeapons()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "DefineFinalStarterWeapons");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.Equip
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::Equip(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Equip");

	Params::Inventory_C_Equip Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.Equip (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UInventory_C::Equip__Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Equip (Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.Equip (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UInventory_C::Equip__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Equip (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.ExecuteUbergraph_Inventory
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::ExecuteUbergraph_Inventory(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "ExecuteUbergraph_Inventory");

	Params::Inventory_C_ExecuteUbergraph_Inventory Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.GetNewIndexEquiped
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   NewIndex                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::GetNewIndexEquiped(int32 Index_0, int32* NewIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "GetNewIndexEquiped");

	Params::Inventory_C_GetNewIndexEquiped Parms{};

	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);

	if (NewIndex != nullptr)
		*NewIndex = Parms.NewIndex;
}


// Function Inventory.Inventory_C.HandleItem
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AActor*                           Handle_Actor                                           (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::HandleItem(class AActor** Handle_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "HandleItem");

	Params::Inventory_C_HandleItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Handle_Actor != nullptr)
		*Handle_Actor = Parms.Handle_Actor;
}


// Function Inventory.Inventory_C.IndexEmpty
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Array_Index                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::IndexEmpty(int32* Array_Index)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "IndexEmpty");

	Params::Inventory_C_IndexEmpty Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Array_Index != nullptr)
		*Array_Index = Parms.Array_Index;
}


// Function Inventory.Inventory_C.InpActEvt_IA_Slot1_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::InpActEvt_IA_Slot1_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "InpActEvt_IA_Slot1_K2Node_EnhancedInputActionEvent_5");

	Params::Inventory_C_InpActEvt_IA_Slot1_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.InpActEvt_IA_Slot2_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::InpActEvt_IA_Slot2_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "InpActEvt_IA_Slot2_K2Node_EnhancedInputActionEvent_4");

	Params::Inventory_C_InpActEvt_IA_Slot2_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.InpActEvt_IA_Slot3_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::InpActEvt_IA_Slot3_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "InpActEvt_IA_Slot3_K2Node_EnhancedInputActionEvent_3");

	Params::Inventory_C_InpActEvt_IA_Slot3_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.InpActEvt_IA_Slot4_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::InpActEvt_IA_Slot4_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "InpActEvt_IA_Slot4_K2Node_EnhancedInputActionEvent_2");

	Params::Inventory_C_InpActEvt_IA_Slot4_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.InpActEvt_IA_Slot5_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::InpActEvt_IA_Slot5_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "InpActEvt_IA_Slot5_K2Node_EnhancedInputActionEvent_1");

	Params::Inventory_C_InpActEvt_IA_Slot5_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.InpActEvt_IA_Slot6_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::InpActEvt_IA_Slot6_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "InpActEvt_IA_Slot6_K2Node_EnhancedInputActionEvent_0");

	Params::Inventory_C_InpActEvt_IA_Slot6_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.inventory Organization
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UInventory_C::Inventory_Organization()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "inventory Organization");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.InventoryFull
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    Full_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::InventoryFull(bool* Full_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "InventoryFull");

	Params::Inventory_C_InventoryFull Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Full_ != nullptr)
		*Full_ = Parms.Full_;
}


// Function Inventory.Inventory_C.IsBomber
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsTheBomber                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::IsBomber(bool* IsTheBomber)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "IsBomber");

	Params::Inventory_C_IsBomber Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTheBomber != nullptr)
		*IsTheBomber = Parms.IsTheBomber;
}


// Function Inventory.Inventory_C.IsValidIndex
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Input                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::IsValidIndex(int32 Input)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "IsValidIndex");

	Params::Inventory_C_IsValidIndex Parms{};

	Parms.Input = Input;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.IsValidItemTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_Team                                  ItemTeam                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Return                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::IsValidItemTeam(E_Team ItemTeam, bool* Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "IsValidItemTeam");

	Params::Inventory_C_IsValidItemTeam Parms{};

	Parms.ItemTeam = ItemTeam;

	UObject::ProcessEvent(Func, &Parms);

	if (Return != nullptr)
		*Return = Parms.Return;
}


// Function Inventory.Inventory_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UInventory_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.Remove To Inventory (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor_To_Remove                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::Remove_To_Inventory__Server_(class AActor* Actor_To_Remove)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Remove To Inventory (Server)");

	Params::Inventory_C_Remove_To_Inventory__Server_ Parms{};

	Parms.Actor_To_Remove = Actor_To_Remove;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.Spawn Default (Inventory)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UInventory_C::Spawn_Default__Inventory_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Spawn Default (Inventory)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.Spawn Default client (Inventory)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UInventory_C::Spawn_Default_client__Inventory_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Spawn Default client (Inventory)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.SpawnBomb (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UInventory_C::SpawnBomb__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "SpawnBomb (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.SpawnSounds (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   VolumeMultiplier                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::SpawnSounds__Multicast_(class USoundBase* Sound, float VolumeMultiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "SpawnSounds (Multicast)");

	Params::Inventory_C_SpawnSounds__Multicast_ Parms{};

	Parms.Sound = Sound;
	Parms.VolumeMultiplier = VolumeMultiplier;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.SwapToSpecificActor
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::SwapToSpecificActor(class AActor* Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "SwapToSpecificActor");

	Params::Inventory_C_SwapToSpecificActor Parms{};

	Parms.Actor = Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.Switch (client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   New_Value                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::Switch__client_(int32 New_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Switch (client)");

	Params::Inventory_C_Switch__client_ Parms{};

	Parms.New_Value = New_Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.Switch (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    PassSecurity                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UInventory_C::Switch__Server_(class AActor* Actor, bool PassSecurity)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Switch (Server)");

	Params::Inventory_C_Switch__Server_ Parms{};

	Parms.Actor = Actor;
	Parms.PassSecurity = PassSecurity;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.Try Add To inventory (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           New_Actor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::Try_Add_To_inventory__Server_(class AActor* New_Actor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Try Add To inventory (Server)");

	Params::Inventory_C_Try_Add_To_inventory__Server_ Parms{};

	Parms.New_Actor = New_Actor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.Try Drop (Server)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UInventory_C::Try_Drop__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "Try Drop (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.UnEquip
// (Public, BlueprintCallable, BlueprintEvent)

void UInventory_C::UnEquip()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "UnEquip");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.UnEquip (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void UInventory_C::UnEquip__Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "UnEquip (Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.UnEquip (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UInventory_C::UnEquip__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "UnEquip (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Inventory.Inventory_C.UpdateOverlay
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Actor_Picked                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::UpdateOverlay(class AActor* Actor_Picked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "UpdateOverlay");

	Params::Inventory_C_UpdateOverlay Parms{};

	Parms.Actor_Picked = Actor_Picked;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Inventory.Inventory_C.VisualAttach
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AActor*                           Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UInventory_C::VisualAttach(class AActor* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Inventory_C", "VisualAttach");

	Params::Inventory_C_VisualAttach Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}

}

