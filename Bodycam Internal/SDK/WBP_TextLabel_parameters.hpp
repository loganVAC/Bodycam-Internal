#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_TextLabel

#include "Basic.hpp"


namespace SDK::Params
{

// Function WBP_TextLabel.WBP_TextLabel_C.ExecuteUbergraph_WBP_TextLabel
// 0x0040 (0x0040 - 0x0000)
struct WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text;                           // 0x0008(0x0018)()
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text_1;                         // 0x0028(0x0018)()
};
static_assert(alignof(WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel) == 0x000008, "Wrong alignment on WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel");
static_assert(sizeof(WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel) == 0x000040, "Wrong size on WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel");
static_assert(offsetof(WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel, EntryPoint) == 0x000000, "Member 'WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel, K2Node_CustomEvent_Text) == 0x000008, "Member 'WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel, K2Node_Event_IsDesignTime) == 0x000020, "Member 'WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel, K2Node_CustomEvent_Text_1) == 0x000028, "Member 'WBP_TextLabel_C_ExecuteUbergraph_WBP_TextLabel::K2Node_CustomEvent_Text_1' has a wrong offset!");

// Function WBP_TextLabel.WBP_TextLabel_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_TextLabel_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_TextLabel_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_TextLabel_C_PreConstruct");
static_assert(sizeof(WBP_TextLabel_C_PreConstruct) == 0x000001, "Wrong size on WBP_TextLabel_C_PreConstruct");
static_assert(offsetof(WBP_TextLabel_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_TextLabel_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_TextLabel.WBP_TextLabel_C.Set Text Left
// 0x0018 (0x0018 - 0x0000)
struct WBP_TextLabel_C_Set_Text_Left final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_TextLabel_C_Set_Text_Left) == 0x000008, "Wrong alignment on WBP_TextLabel_C_Set_Text_Left");
static_assert(sizeof(WBP_TextLabel_C_Set_Text_Left) == 0x000018, "Wrong size on WBP_TextLabel_C_Set_Text_Left");
static_assert(offsetof(WBP_TextLabel_C_Set_Text_Left, Text) == 0x000000, "Member 'WBP_TextLabel_C_Set_Text_Left::Text' has a wrong offset!");

// Function WBP_TextLabel.WBP_TextLabel_C.Set Text Right
// 0x0018 (0x0018 - 0x0000)
struct WBP_TextLabel_C_Set_Text_Right final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(WBP_TextLabel_C_Set_Text_Right) == 0x000008, "Wrong alignment on WBP_TextLabel_C_Set_Text_Right");
static_assert(sizeof(WBP_TextLabel_C_Set_Text_Right) == 0x000018, "Wrong size on WBP_TextLabel_C_Set_Text_Right");
static_assert(offsetof(WBP_TextLabel_C_Set_Text_Right, Text) == 0x000000, "Member 'WBP_TextLabel_C_Set_Text_Right::Text' has a wrong offset!");

}

