#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AppleARKitFaceSupport

#include "Basic.hpp"

#include "ProceduralMeshComponent_classes.hpp"
#include "AppleARKitFaceSupport_structs.hpp"
#include "AugmentedReality_structs.hpp"


namespace SDK
{

// Class AppleARKitFaceSupport.AppleARKitFaceMeshComponent
// 0x0100 (0x0720 - 0x0620)
class UAppleARKitFaceMeshComponent final : public UProceduralMeshComponent
{
public:
	bool                                          bWantsMeshUpdates;                                 // 0x0620(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bWantsCollision;                                   // 0x0621(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bAutoBindToLocalFaceMesh;                          // 0x0622(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	EARFaceComponentTransformMixing               TransformSetting;                                  // 0x0623(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          bFlipTrackedRotation;                              // 0x0624(0x0001)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_625[0x3];                                      // 0x0625(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     FaceMaterial;                                      // 0x0628(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FName                                   LiveLinkSubjectName;                               // 0x0630(0x0008)(Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<struct FNetQuantizeFaceCurve>          RemoteCurves;                                      // 0x0638(0x0010)(Net, ZeroConstructor, Transient, RepNotify, NativeAccessSpecifierPublic)
	uint8                                         Pad_648[0xD8];                                     // 0x0648(0x00D8)(Fixing Struct Size After Last Property [ Dumper-7 ])

public:
	void CreateMesh(const TArray<struct FVector>& Vertices, const TArray<int32>& Triangles, const TArray<struct FVector2D>& UV0);
	void OnRep_RemoteCurves();
	void PublishViaLiveLink(class FName SubjectName);
	void ServerUpdateFaceCurves(const TArray<struct FNetQuantizeFaceCurve>& ClientCurves);
	void SetAutoBind(bool bAutoBind);
	void SetBlendShapeAmount(EARFaceBlendShape BlendShape, float Amount);
	void SetBlendShapes(const TMap<EARFaceBlendShape, float>& InBlendShapes);
	void UpdateMesh(const TArray<struct FVector>& Vertices);
	void UpdateMeshFromBlendShapes();

	float GetFaceBlendShapeAmount(EARFaceBlendShape BlendShape) const;
	int32 GetLastUpdateFrameNumber() const;
	float GetLastUpdateTimestamp() const;
	struct FTransform GetTransform() const;

public:
	static class UClass* StaticClass()
	{
		return StaticClassImpl<"AppleARKitFaceMeshComponent">();
	}
	static class UAppleARKitFaceMeshComponent* GetDefaultObj()
	{
		return GetDefaultObjImpl<UAppleARKitFaceMeshComponent>();
	}
};
static_assert(alignof(UAppleARKitFaceMeshComponent) == 0x000010, "Wrong alignment on UAppleARKitFaceMeshComponent");
static_assert(sizeof(UAppleARKitFaceMeshComponent) == 0x000720, "Wrong size on UAppleARKitFaceMeshComponent");
static_assert(offsetof(UAppleARKitFaceMeshComponent, bWantsMeshUpdates) == 0x000620, "Member 'UAppleARKitFaceMeshComponent::bWantsMeshUpdates' has a wrong offset!");
static_assert(offsetof(UAppleARKitFaceMeshComponent, bWantsCollision) == 0x000621, "Member 'UAppleARKitFaceMeshComponent::bWantsCollision' has a wrong offset!");
static_assert(offsetof(UAppleARKitFaceMeshComponent, bAutoBindToLocalFaceMesh) == 0x000622, "Member 'UAppleARKitFaceMeshComponent::bAutoBindToLocalFaceMesh' has a wrong offset!");
static_assert(offsetof(UAppleARKitFaceMeshComponent, TransformSetting) == 0x000623, "Member 'UAppleARKitFaceMeshComponent::TransformSetting' has a wrong offset!");
static_assert(offsetof(UAppleARKitFaceMeshComponent, bFlipTrackedRotation) == 0x000624, "Member 'UAppleARKitFaceMeshComponent::bFlipTrackedRotation' has a wrong offset!");
static_assert(offsetof(UAppleARKitFaceMeshComponent, FaceMaterial) == 0x000628, "Member 'UAppleARKitFaceMeshComponent::FaceMaterial' has a wrong offset!");
static_assert(offsetof(UAppleARKitFaceMeshComponent, LiveLinkSubjectName) == 0x000630, "Member 'UAppleARKitFaceMeshComponent::LiveLinkSubjectName' has a wrong offset!");
static_assert(offsetof(UAppleARKitFaceMeshComponent, RemoteCurves) == 0x000638, "Member 'UAppleARKitFaceMeshComponent::RemoteCurves' has a wrong offset!");

}

