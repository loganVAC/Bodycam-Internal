#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Sky

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "UDS_Space_Planet_structs.hpp"
#include "Engine_structs.hpp"
#include "UDS_Post_Process_Stage_structs.hpp"
#include "UDS_Planet_Lightsource_structs.hpp"
#include "UDS_Space_Parent_structs.hpp"
#include "UDS_SkyMode_structs.hpp"
#include "UDS_CityPresets_structs.hpp"
#include "UDS_CachedProperties_structs.hpp"
#include "UDS_Project_Mode_structs.hpp"
#include "UDS_LensFlareType_structs.hpp"
#include "UDS_NoiseType_structs.hpp"
#include "UDS_FogColorMode_structs.hpp"
#include "UDS_VolRT_Mode_structs.hpp"
#include "UDS_and_UDW_State_structs.hpp"


namespace SDK::Params
{

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.2D Clouds Base Texture
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture final
{
public:
	TSoftObjectPtr<class UTexture2D>              Tex;                                               // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	EUDS_NoiseType                                Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0070(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x00A0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0108(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x0138(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture");
static_assert(sizeof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture) == 0x000168, "Wrong size on Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Tex) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_bool_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_byte_Variable) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_softobject_Variable_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, Temp_softobject_Variable_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, K2Node_Select_Default) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture, K2Node_Select_Default_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_TwoD_Clouds_Base_Texture::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Absent Directional Lights Brightness
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness) == 0x000098, "Wrong size on Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_X_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Y_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_BreakVector_Z_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Absent_Directional_Lights_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Add Object to Async Loading Queue
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue final
{
public:
	TSoftObjectPtr<class UObject>                 Object;                                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          High_Priority;                                     // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, Object) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, High_Priority) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::High_Priority' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Not_PreBool_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Array_Contains_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Not_PreBool_ReturnValue_1) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Array_Contains_ReturnValue_1) == 0x000043, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Not_PreBool_ReturnValue_2) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_Array_Add_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue, CallFunc_BooleanAND_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Add_Object_to_Async_Loading_Queue::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Adjust Base Sun Light Intensity
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity final
{
public:
	struct FVector                                Sun_Vector;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Multiplier;                                        // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, Sun_Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, Intensity) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, Multiplier) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_SafeDivide_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_FMin_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Adjust_Base_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.All Volumetric Cloud MIDs
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs final
{
public:
	bool                                          Shadows;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       MIDs;                                              // 0x0008(0x0010)(Parm, OutParm)
	TArray<class UMaterialInstanceDynamic*>       All_MIDs;                                          // 0x0018(0x0010)(Edit, BlueprintVisible)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, Shadows) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::Shadows' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, MIDs) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, All_MIDs) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::All_MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_1) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_2) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_3) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_BooleanAND_ReturnValue_1) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_4) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs, CallFunc_Array_Add_ReturnValue_5) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_All_Volumetric_Cloud_MIDs::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Console Variable with Check
// 0x00E0 (0x00E0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check final
{
public:
	class FString                                 Cvar;                                              // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	double                                        Setting;                                           // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Type;                                              // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchInteger_CmpSuccess;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0050(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0068(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0078(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0088(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9A[0x2];                                       // 0x009A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x00A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x00B0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x00C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check) == 0x0000E0, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Cvar) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Cvar' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Setting) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Setting' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, Type) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::Type' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, K2Node_SwitchInteger_CmpSuccess) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::K2Node_SwitchInteger_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_FTrunc_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_FTrunc_ReturnValue_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000099, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_4) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Apply_Console_Variable_with_Check::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Light Shaft Settings
// 0x0100 (0x0100 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings final
{
public:
	class UDirectionalLightComponent*             Light;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Max_Brightness;                                    // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Bloom_Threshold;                                   // 0x0018(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Bloom_Scale;                                       // 0x0028(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Forward_Vector;                                    // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height_Alpha;                                      // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomScale_NewValue_ImplicitCast;      // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomThreshold_NewValue_ImplicitCast;  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast; // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings) == 0x000100, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Light) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Light' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Max_Brightness) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Max_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Bloom_Threshold) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Bloom_Threshold' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Bloom_Scale) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Bloom_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Forward_Vector) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Forward_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, Height_Alpha) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::Height_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_X) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_Y) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_Z) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_MapRangeClamped_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_X_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_Y_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector_Z_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_X) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_Y) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_Lerp_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_X_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_Y_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_Lerp_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_X_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_BreakVector2D_Y_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_Lerp_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_SetBloomScale_NewValue_ImplicitCast) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_SetBloomScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_SetBloomThreshold_NewValue_ImplicitCast) == 0x0000F4, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_SetBloomThreshold_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings, CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Apply_Light_Shaft_Settings::CallFunc_SetBloomMaxBrightness_NewValue_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Location Preset
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Location_Preset final
{
public:
	EUDS_CityPresets                              Location;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Map_Find_Value;                           // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector3f_X;                          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Y;                          // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakVector3f_Z;                          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector3f                              CallFunc_BreakVector3f_InVec_ImplicitCast;         // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Latitude_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Longitude_ImplicitCast;         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Time_Zone_ImplicitCast;         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Location_Preset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Location_Preset");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Location_Preset) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Location_Preset");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_Map_Find_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_Map_Find_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector3f_X) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector3f_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector3f_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector3f_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector3f_Z) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector3f_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, CallFunc_BreakVector3f_InVec_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::CallFunc_BreakVector3f_InVec_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, K2Node_VariableSet_Latitude_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::K2Node_VariableSet_Latitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, K2Node_VariableSet_Longitude_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::K2Node_VariableSet_Longitude_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Location_Preset, K2Node_VariableSet_Time_Zone_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Apply_Location_Preset::K2Node_VariableSet_Time_Zone_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Saved UDS And UDW State
// 0x01C8 (0x01C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State final
{
public:
	struct FUDS_and_UDW_State                     State;                                             // 0x0000(0x0178)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_194[0x4];                                      // 0x0194(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State) == 0x0001C8, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, State) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, CallFunc_BreakDateTime_Year) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, CallFunc_BreakDateTime_Month) == 0x00017C, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, CallFunc_BreakDateTime_Day) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, CallFunc_BreakDateTime_Hour) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, CallFunc_BreakDateTime_Minute) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, CallFunc_BreakDateTime_Second) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, CallFunc_BreakDateTime_Millisecond) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, K2Node_DynamicCast_bSuccess) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, CallFunc_IsValid_ReturnValue) == 0x0001A9, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State, K2Node_DynamicCast_bSuccess_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Apply_Saved_UDS_And_UDW_State::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Apply Volumetric Mode
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode final
{
public:
	EUDS_VolRT_Mode                               Mode;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_VolRT_Mode                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13[0x1];                                       // 0x0013(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Mode) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_byte_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, Temp_int_Variable_2) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_SelectInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_BooleanAND_ReturnValue_2) == 0x00001B, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_BooleanOR_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, K2Node_Select_Default) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_SelectFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Apply_Volumetric_Mode::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Approximate Real Sun Moon and Stars
// 0x0A40 (0x0A40 - 0x0000)
struct Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars final
{
public:
	int32                                         Month_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_0;                                             // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Year_0;                                            // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Time_of_Day_0;                                     // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_Zone_0;                                       // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Only_Calculate_Sun;                                // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Sun_Vector;                                        // 0x0028(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Vector;                                       // 0x0040(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Phase;                                        // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Phase_Alignment;                                   // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Celestial_Orbit;                                   // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Celestial_Yaw;                                     // 0x0080(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Equation_of_Time_Offset;                           // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCurveFloat*                            Equation_of_Time_Curve;                            // 0x0098(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Lunar_Inclination_Cycle;                           // 0x00A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Center;                                       // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Lunar_Time;                                        // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Earth_Center;                                      // 0x00C8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Moon_Real_Phase;                                   // 0x00E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Alignment;                                    // 0x00E8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Direction;                                    // 0x0100(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Celestial_North_Pole;                              // 0x0118(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Stars_Orbit;                                       // 0x0130(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Stars_Yaw;                                         // 0x0138(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Sun_Direction;                                     // 0x0148(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Leap_Year;                                         // 0x0160(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         UTC_Year;                                          // 0x0164(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Year;                                        // 0x0168(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Zenith_Direction;                                  // 0x0170(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Axial_Tilt;                                        // 0x0188(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Viewer_Position_on_Earth;                          // 0x0190(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Local_Geocoordinate;                               // 0x01A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        Seasonal_Time;                                     // 0x01C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_of_Year_Index;                                 // 0x01C8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Month;                                       // 0x01CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Local_Day;                                         // 0x01D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Day;                                           // 0x01D4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         UTC_Month;                                         // 0x01D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        UTC_Time_of_Year;                                  // 0x01E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        UTC_Time_of_Day;                                   // 0x01E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Days_Since_J2000_Days;                    // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0234(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x023C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_244[0x4];                                      // 0x0244(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0299(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29A[0x6];                                      // 0x029A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x03A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x03C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_2;         // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x04C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0530(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x0550(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_4;                // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_4; // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x05D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cross_VectorVector_ReturnValue;           // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_4;                     // 0x0618(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0648(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0660(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_11;          // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x06A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B1[0x3];                                      // 0x06B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x06B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x06B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6BC[0x4];                                      // 0x06BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_12;          // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_5;                // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x06F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0708(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_5;                     // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_5; // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_6;                     // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_6;                // 0x0788(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_7;                // 0x07A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_6; // 0x07B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_13;          // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_14;          // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_3;         // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_8;                // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0838(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_9;                // 0x0850(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0868(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_2;            // 0x0880(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_15;          // 0x0898(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_4;         // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BC[0x4];                                      // 0x08BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_16;          // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D1[0x3];                                      // 0x08D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue_1;             // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x08DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x08DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x08DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x08DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_Select_Default;                             // 0x08E0(0x0010)(ReferenceParm)
	TArray<int32>                                 K2Node_Select_Default_1;                           // 0x08F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_1;                         // 0x0904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x090C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_912[0x2];                                      // 0x0912(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x091C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91D[0x3];                                      // 0x091D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_5;            // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0928(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_929[0x3];                                      // 0x0929(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0930(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0934(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0938(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_939[0x3];                                      // 0x0939(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x093C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_6;            // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x0944(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0948(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0960(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0978(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<int32>                                 K2Node_Select_Default_2;                           // 0x0990(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x09A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item_2;                         // 0x09B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BC[0x4];                                      // 0x09BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_7;                     // 0x09C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x09D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x09DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9DD[0x3];                                      // 0x09DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x09E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E4[0x4];                                      // 0x09E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast; // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F4[0x4];                                      // 0x09F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_2;           // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_3;           // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x0A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_4;           // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_5;           // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_6;           // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_7;           // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_2;          // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars) == 0x000A40, "Wrong size on Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Month_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Month_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Day_0) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Day_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Year_0) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Year_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Time_of_Day_0) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Time_of_Day_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Time_Zone_0) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Time_Zone_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Only_Calculate_Sun) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Only_Calculate_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Sun_Vector) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Vector) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Real_Phase) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Phase_Alignment) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_Orbit) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_Yaw) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Equation_of_Time_Offset) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Equation_of_Time_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Equation_of_Time_Curve) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Equation_of_Time_Curve' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Lunar_Inclination_Cycle) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Lunar_Inclination_Cycle' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Center) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Lunar_Time) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Lunar_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Earth_Center) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Earth_Center' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Real_Phase) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Alignment) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Moon_Direction) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Moon_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Celestial_North_Pole) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Celestial_North_Pole' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Stars_Orbit) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Stars_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Stars_Yaw) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Stars_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Sun_Direction) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Sun_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Leap_Year) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Year) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Year) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Zenith_Direction) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Zenith_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Axial_Tilt) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Axial_Tilt' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Viewer_Position_on_Earth) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Viewer_Position_on_Earth' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Geocoordinate) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Geocoordinate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Seasonal_Time) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Seasonal_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Day_of_Year_Index) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Day_of_Year_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Month) == 0x0001CC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Local_Day) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Local_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Day) == 0x0001D4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Month) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Time_of_Year) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Time_of_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, UTC_Time_of_Day) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::UTC_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Days_Since_J2000_Days) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Days_Since_J2000_Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_int_Array_Index_Variable) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_True_if_break_was_hit_Variable) == 0x00020C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Not_PreBool_ReturnValue) == 0x000214, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_int_Loop_Counter_Variable) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_1) == 0x00021C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_UtcNow_ReturnValue) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Year) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Month) == 0x00022C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Day) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Hour) == 0x000234, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Minute) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Second) == 0x00023C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakDateTime_Millisecond) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetFloatValue_ReturnValue) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BooleanAND_ReturnValue) == 0x00027C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_1) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000299, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Fraction_ReturnValue) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_1) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch) == 0x0003A4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Roll_1) == 0x0003AC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Pitch_1) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakRotator_Yaw_1) == 0x0003B4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_2) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_1) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_2) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Fraction_ReturnValue_1) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_2) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_RotateAngleAxis_ReturnValue) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_VectorVector_ReturnValue) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_3) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_2) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_3) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_4) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeVector_ReturnValue) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_4) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Dot_VectorVector_ReturnValue) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_3) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_DegAcos_ReturnValue) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Cross_VectorVector_ReturnValue) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Cross_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_4) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_X) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_Y) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BreakVector_Z) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_LinearColor) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000658, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeClamped_ReturnValue) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectFloat_ReturnValue_4) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_11) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_IntInt_ReturnValue) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x0006A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0006B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_2) == 0x0006B4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_12) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_5) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_5) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_5) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_6) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_6) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_7) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GreaterGreater_VectorRotator_ReturnValue_6) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GreaterGreater_VectorRotator_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_13) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_14) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000808, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_3) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_8) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x000830, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue) == 0x000838, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_ReturnValue_9) == 0x000850, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue_1) == 0x000868, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_ComposeRotators_ReturnValue_2) == 0x000880, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_ComposeRotators_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_15) == 0x000898, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x0008A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_FloatFloat_ReturnValue_4) == 0x0008A8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x0008B0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x0008B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0008C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_DoubleDouble_ReturnValue_16) == 0x0008C8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_IntInt_ReturnValue) == 0x0008D0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_3) == 0x0008D4, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Percent_IntInt_ReturnValue_1) == 0x0008D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Percent_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0008DC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable) == 0x0008DD, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable_1) == 0x0008DE, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, Temp_bool_Variable_2) == 0x0008DF, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default) == 0x0008E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default_1) == 0x0008F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item) == 0x000900, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item_1) == 0x000904, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_4) == 0x000908, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Length_ReturnValue) == 0x00090C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Less_IntInt_ReturnValue_1) == 0x000910, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_BooleanAND_ReturnValue_1) == 0x000911, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000914, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x000918, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x00091C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue) == 0x000920, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_5) == 0x000924, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000928, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_1) == 0x00092C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_5) == 0x000930, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_6) == 0x000934, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_IntInt_ReturnValue) == 0x000938, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_2) == 0x00093C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_IntInt_ReturnValue_6) == 0x000940, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_SelectInt_ReturnValue_3) == 0x000944, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000948, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000960, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000978, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_Select_Default_2) == 0x000990, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetRightVector_ReturnValue) == 0x0009A0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Array_Get_Item_2) == 0x0009B8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Normal_ReturnValue_7) == 0x0009C0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Normal_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Add_IntInt_ReturnValue_7) == 0x0009D8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0009DC, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0009E0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast) == 0x0009E8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_VariableSet_Equation_of_Time_Offset_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0009F0, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0009F8, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000A00, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000A08, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_2) == 0x000A0C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000A10, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_3) == 0x000A14, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_A_ImplicitCast) == 0x000A18, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_R_ImplicitCast) == 0x000A1C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_G_ImplicitCast) == 0x000A20, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, K2Node_MakeStruct_B_ImplicitCast) == 0x000A24, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_4) == 0x000A28, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_5) == 0x000A2C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000A30, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_6) == 0x000A34, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Yaw_ImplicitCast_7) == 0x000A38, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Yaw_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars, CallFunc_MakeRotator_Roll_ImplicitCast_2) == 0x000A3C, "Member 'Ultra_Dynamic_Sky_C_Approximate_Real_Sun_Moon_and_Stars::CallFunc_MakeRotator_Roll_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Both Cloud Shadows MIDs
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs final
{
public:
	TArray<class UMaterialInstanceDynamic*>       Out;                                               // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default;                             // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, Temp_bool_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, K2Node_MakeArray_Array_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs, K2Node_Select_Default) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Both_Cloud_Shadows_MIDs::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Color
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Color final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Set_Value;                                         // 0x0004(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0020(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LinearColor_IsNearEqual_ReturnValue;      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Color) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Set_Value) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Index_0) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Temp_bool_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Conv_ByteToInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, Temp_bool_Variable_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, K2Node_SwitchEnum_CmpSuccess) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Get_Cached_Color_Value) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Array_Get_Item) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_LinearColor_IsNearEqual_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_LinearColor_IsNearEqual_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Color, CallFunc_Not_PreBool_ReturnValue) == 0x000045, "Member 'Ultra_Dynamic_Sky_C_Cache_Color::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Float
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Float final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Set_Value;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0014(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x001D(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Float) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Float");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Float) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Float");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Set_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Index_0) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Temp_bool_Variable) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, K2Node_SwitchEnum_CmpSuccess) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, Temp_bool_Variable_1) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Get_Cached_Float_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Float, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Cache_Float::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Properties
// 0x08A8 (0x08A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Properties final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Volumetric_Cloud_Multiscattering_Intensity_Out; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Cloud_Wisps_Color_Out;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Atmosphere_Absorption_Color_out; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Inner_Emit_Limit_Out; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out_1;               // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moons_Cloud_Mask_ReturnValue;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_4;   // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cancel_Shadows_Value_Out;                 // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cancel_Shadows_Value_Out_1;               // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Shadows_Light_Vector_Process_Out;   // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Shadows_Light_Vector_Process_Out_1; // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x01AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6; // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7; // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale; // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Solar_Eclipse_Values_Tint_Color;  // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Solar_Eclipse_Values_Eclipse_Percent; // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Space_Layer_Brightness_ReturnValue; // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Cloud_Wisp_Gradient_Vector_Out;           // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue; // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_View_Sample_Scale_out;            // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out; // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Filtered_Moon_Light_Intensity_Intensity;  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue; // 0x0298(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Height_Clear; // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Height_Cloudy; // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Floor_Variation_Color;   // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_2;                // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x7];                                      // 0x02F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Night_Filter_ReturnValue_1;               // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2; // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Static_Clouds_XYZ_Masks_XY_Mask;          // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Static_Clouds_XYZ_Masks_Z_Mask;           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Volumetric_Clouds_Density_Layer1; // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Volumetric_Clouds_Density_Cloud_Layer_Visible; // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Volumetric_Clouds_Density_Layer2; // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0390(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha;  // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue; // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion; // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color; // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Max_Trace_Distance_Out;           // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_3;                // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom; // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top; // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8; // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue; // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9; // 0x0458(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0468(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_469[0x7];                                      // 0x0469(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue; // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Mie_Scattering_Scale_ReturnValue; // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Mie_Anisotropy_ReturnValue;       // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue; // 0x04B4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity; // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color; // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Source_Angle_Out;            // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Light_Specular_Scale_ReturnValue;    // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Moon_Light_Casting_Shadows_Yes;        // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4F1[0x3];                                      // 0x04F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Current_Moon_Light_Color_Color;           // 0x04F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_504[0x4];                                      // 0x0504(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color; // 0x0510(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sky_Atmosphere_Fog_Contribution_Output;   // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color_1; // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color; // 0x0538(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color; // 0x0548(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color; // 0x0558(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Scaled_Directional_Base_Color; // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Sun_Fog_Base; // 0x0578(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Current_Fog_Base_Colors_Moon_Fog_Base; // 0x0588(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fog_Start_Distance_ReturnValue;           // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fog_Height_Falloff_ReturnValue;           // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Fog_Density_ReturnValue;          // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Overcast_Light_Contribution_ReturnValue;  // 0x05B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x05C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Source_Angle_Out;             // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x05D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sun_Light_Color_ReturnValue;      // 0x05E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3; // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Sun_Light_Casting_Shadows_Yes;         // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62C[0x4];                                      // 0x062C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Light_Intensity_ReturnValue;  // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z_1;                           // 0x0648(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_654[0x4];                                      // 0x0654(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z_2;                           // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Aurora_Intensity_ReturnValue;     // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Stars_Color_ReturnValue;          // 0x0684(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_694[0x4];                                      // 0x0694(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Sun_Radius_ReturnValue;           // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Sun_Disk_Color_ReturnValue;       // 0x06A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue_1;   // 0x06B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D1[0x3];                                      // 0x06D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_5;   // 0x06D4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E4[0x4];                                      // 0x06E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10; // 0x06F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Sun_Glow_Color_Out;            // 0x0708(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_4;                // 0x0718(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out;             // 0x0728(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out_1;           // 0x0738(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out_2;           // 0x0748(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_1;         // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A[0x6];                                      // 0x075A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Exposure_Bias_Bias;               // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Saturation_ReturnValue;           // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_771[0x7];                                      // 0x0771(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Lit_Intensity_ReturnValue;        // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Overall_Intensity_ReturnValue;    // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x0798(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11; // 0x07A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x07B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x07C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out_2;               // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x07E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scaled_Cache_Period_Period;               // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Cloud_Sky_Atmo_Contribution_ReturnValue; // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Light_Material_Color_ReturnValue; // 0x0810(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue_2;   // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Material_Intensity_ReturnValue; // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Moon_Phase_Angle_ReturnValue;     // 0x0830(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Unfiltered_Moon_Light_Intensity_Out;      // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Wisps_Opacity_ReturnValue;        // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity; // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness; // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_864[0x4];                                      // 0x0864(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cache_Float_Set_Value_ImplicitCast;       // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Height_Fog_Density_ImplicitCast; // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cache_Float_Set_Value_ImplicitCast_1;     // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cache_Float_Set_Value_ImplicitCast_2;     // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Properties) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Properties");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Properties) == 0x0008A8, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Properties");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Multiscattering_Intensity_Out) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Multiscattering_Intensity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Cloud_Wisps_Color_Out) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Cloud_Wisps_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Atmosphere_Absorption_Color_out) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Atmosphere_Absorption_Color_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Coverage_Local_Out) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Inner_Emit_Limit_Out) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Inner_Emit_Limit_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Coverage_Local_Out_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Coverage_Local_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moons_Cloud_Mask_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moons_Cloud_Mask_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_X) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_Y) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_Z) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Abs_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_DoubleToLinearColor_ReturnValue_4) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_DoubleToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColorLerp_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectColor_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cancel_Shadows_Value_Out) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cancel_Shadows_Value_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cancel_Shadows_Value_Out_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cancel_Shadows_Value_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Shadows_Light_Vector_Process_Out) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Shadows_Light_Vector_Process_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Shadows_Light_Vector_Process_Out_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Shadows_Light_Vector_Process_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectColor_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Night_Filter_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Lerp_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Scale_and_Cutout_Value_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Scale_and_Cutout_Value_Cutout' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Solar_Eclipse_Values_Tint_Color) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Solar_Eclipse_Values_Tint_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Solar_Eclipse_Values_Eclipse_Percent) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Solar_Eclipse_Values_Eclipse_Percent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Space_Layer_Brightness_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Space_Layer_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Wisp_Gradient_Vector_Out) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Wisp_Gradient_Vector_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Directional_Inscattering_Exponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_View_Sample_Scale_out) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_View_Sample_Scale_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Shadow_Tracing_Distance_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Filtered_Moon_Light_Intensity_Intensity) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Filtered_Moon_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Atmosphere_Luminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Floor_Variation_Height_Clear) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Floor_Variation_Height_Clear' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Floor_Variation_Height_Cloudy) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Floor_Variation_Height_Cloudy' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Volumetric_Cloud_Floor_Variation_Color) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Volumetric_Cloud_Floor_Variation_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_X_1) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_Y_1) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_Z_1) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectColor_ReturnValue_2) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Night_Filter_ReturnValue_1) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Night_Filter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Static_Clouds_XYZ_Masks_XY_Mask) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Static_Clouds_XYZ_Masks_XY_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Static_Clouds_XYZ_Masks_Z_Mask) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Static_Clouds_XYZ_Masks_Z_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_X_2) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_Y_2) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BreakVector_Z_2) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Clouds_Density_Layer1) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Clouds_Density_Layer1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Clouds_Density_Cloud_Layer_Visible) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Clouds_Density_Cloud_Layer_Visible' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Clouds_Density_Layer2) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Clouds_Density_Layer2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectVector_ReturnValue) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Lerp_to_Simplified_Clouds_Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Macro_Variation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Multiscattering_Occlusion_Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Max_Trace_Distance_Out) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Max_Trace_Distance_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColorLerp_ReturnValue_2) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectColor_ReturnValue_3) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Volumetric_Cloud_Emissive_Colors_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Albedo_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Rayleigh_Scattering_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Mie_Scattering_Scale_ReturnValue) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Mie_Scattering_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Mie_Anisotropy_ReturnValue) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Mie_Anisotropy_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue) == 0x0004B4, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Light_Lower_Hemisphere_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Sky_Light_Color_and_Intensity_Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Source_Angle_Out) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Source_Angle_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Moon_Light_Specular_Scale_ReturnValue) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Moon_Light_Specular_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Is_Moon_Light_Casting_Shadows_Yes) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Is_Moon_Light_Casting_Shadows_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Light_Color_Color) == 0x0004F4, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Light_Color_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectFloat_ReturnValue) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sky_Ambient_Color_Sky_Ambient_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sky_Atmosphere_Fog_Contribution_Output) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sky_Atmosphere_Fog_Contribution_Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color_1) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Directional_Inscattering_Color_Directional_Inscattering_Color_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Inscattering_Color_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Fog_Base_Colors_Ambient_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Fog_Base_Colors_Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Fog_Base_Colors_Scaled_Directional_Base_Color) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Fog_Base_Colors_Scaled_Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Fog_Base_Colors_Sun_Fog_Base) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Fog_Base_Colors_Sun_Fog_Base' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Fog_Base_Colors_Moon_Fog_Base) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Fog_Base_Colors_Moon_Fog_Base' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Fog_Start_Distance_ReturnValue) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Fog_Start_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Fog_Height_Falloff_ReturnValue) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Fog_Height_Falloff_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Fog_Density_ReturnValue) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Fog_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Overcast_Light_Contribution_ReturnValue) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Overcast_Light_Contribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Source_Angle_Out) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Source_Angle_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Light_Color_ReturnValue) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Light_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Is_Sun_Light_Casting_Shadows_Yes) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Is_Sun_Light_Casting_Shadows_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_BoolToInt_ReturnValue) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Light_Intensity_ReturnValue) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Light_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z_1) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000658, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue_1) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Sun_Height_Z_2) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Sun_Height_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Aurora_Intensity_ReturnValue) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Aurora_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_ReturnValue_2) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Stars_Color_ReturnValue) == 0x000684, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Stars_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Radius_ReturnValue) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Radius_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Sun_Disk_Color_ReturnValue) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Sun_Disk_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Lit_Percent_ReturnValue_1) == 0x0006B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Lit_Percent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BooleanOR_ReturnValue) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Conv_DoubleToLinearColor_ReturnValue_5) == 0x0006D4, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Conv_DoubleToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectFloat_ReturnValue_1) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Sun_Glow_Color_Out) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Sun_Glow_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectColor_ReturnValue_4) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Current_Color_Out) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Current_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Current_Color_Out_1) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Current_Color_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Simplified_Current_Color_Out_2) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Simplified_Current_Color_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Use_Sky_Atmosphere_ReturnValue_1) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Use_Sky_Atmosphere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Not_PreBool_ReturnValue) == 0x000759, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Exposure_Bias_Bias) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Exposure_Bias_Bias' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Saturation_ReturnValue) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Saturation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_BooleanOR_ReturnValue_1) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_SelectFloat_ReturnValue_2) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Lit_Intensity_ReturnValue) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Lit_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Overall_Intensity_ReturnValue) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Light_Pollution_ReturnValue) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cloud_Coverage_Local_Out_2) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cloud_Coverage_Local_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Scaled_Cache_Period_Period) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Scaled_Cache_Period_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Volumetric_Cloud_Sky_Atmo_Contribution_ReturnValue) == 0x000808, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Volumetric_Cloud_Sky_Atmo_Contribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Light_Material_Color_ReturnValue) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Light_Material_Color_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Lit_Percent_ReturnValue_2) == 0x000820, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Lit_Percent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Material_Intensity_ReturnValue) == 0x000828, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Material_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Moon_Phase_Angle_ReturnValue) == 0x000830, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Moon_Phase_Angle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Unfiltered_Moon_Light_Intensity_Out) == 0x000840, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Unfiltered_Moon_Light_Intensity_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Current_Wisps_Opacity_ReturnValue) == 0x000848, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Current_Wisps_Opacity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity) == 0x000850, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness) == 0x000858, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Get_Current_Cloud_Shadows_Intensity_and_Softness_Softness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000860, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000868, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cache_Float_Set_Value_ImplicitCast) == 0x000870, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cache_Float_Set_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000878, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, K2Node_VariableSet_Height_Fog_Density_ImplicitCast) == 0x00087C, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::K2Node_VariableSet_Height_Fog_Density_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000880, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000884, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000888, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cache_Float_Set_Value_ImplicitCast_1) == 0x000890, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cache_Float_Set_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x000898, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Properties, CallFunc_Cache_Float_Set_Value_ImplicitCast_2) == 0x0008A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Properties::CallFunc_Cache_Float_Set_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Sun and Moon Orientation
// 0x0638 (0x0638 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation final
{
public:
	struct FVector                                Moon_Alignment;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Moon_Phase;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Moon_Position;                                // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Sun_Position;                                 // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromX_ReturnValue;                 // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CE[0x2];                                      // 0x01CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x01DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DB[0x1];                                      // 0x01DB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x3];                                      // 0x01F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Round_ReturnValue;                        // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x0240(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0270(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector; // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector; // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase; // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment; // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit; // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw; // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0360(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_2;               // 0x03D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_3;               // 0x03F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0488(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_2; // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_3; // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_4;            // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_5;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_4;               // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0598(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_599[0x7];                                      // 0x0599(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue_5;               // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_6;               // 0x05C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x05F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x05FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x0600(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0604(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast_1;                // 0x0608(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast_1;                // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast_1;                // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_1;                // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0618(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3;  // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4;  // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0634(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation) == 0x000638, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Moon_Alignment) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Moon_Phase) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Moon_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Moon_Position) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Moon_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, Real_Sun_Position) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::Real_Sun_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Abs_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotFromX_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotFromX_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_LinearColor) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GetUpVector_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_3) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_3) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_3) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Not_PreBool_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue_2) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_LinearColor_1) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Using_2D_Clouds_ReturnValue) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001C9, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue) == 0x0001CA, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue_1) == 0x0001CB, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanAND_ReturnValue) == 0x0001CC, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanAND_ReturnValue_1) == 0x0001CD, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeLiteralByte_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue_2) == 0x0001D9, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanOR_ReturnValue_3) == 0x0001DA, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x0001DC, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Array_Get_Item) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Array_Get_Item_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BooleanAND_ReturnValue_2) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Round_ReturnValue) == 0x0001FC, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Round_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue_1) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_1) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Fraction_ReturnValue) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_4) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_4) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_4) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_2) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_3) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue_1) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Fraction_ReturnValue_1) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Abs_ReturnValue_1) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue_2) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_FClamp_ReturnValue_3) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Lerp_ReturnValue) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_ReturnValue_1) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue_1) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_2) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_GreaterGreater_VectorRotator_ReturnValue_3) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_GreaterGreater_VectorRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Percent_FloatFloat_ReturnValue) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_ReturnValue_4) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_X_5) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Y_5) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_BreakVector_Z_5) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeVector_ReturnValue_2) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue_3) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_4) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_5) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectFloat_ReturnValue_4) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SelectVector_ReturnValue_6) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SelectVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_Normal_ReturnValue_2) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_R_ImplicitCast) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_G_ImplicitCast) == 0x0005FC, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_B_ImplicitCast) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_A_ImplicitCast) == 0x000604, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_R_ImplicitCast_1) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_R_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_G_ImplicitCast_1) == 0x00060C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_G_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_B_ImplicitCast_1) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, K2Node_MakeStruct_A_ImplicitCast_1) == 0x000614, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::K2Node_MakeStruct_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00061C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000624, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3) == 0x00062C, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000634, "Member 'Ultra_Dynamic_Sky_C_Cache_Sun_and_Moon_Orientation::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cache Vector
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cache_Vector final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Set_Value;                                         // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0024(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Cached_Vector_Value;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0048(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_VectorVector_ReturnValue;        // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cache_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cache_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cache_Vector) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Cache_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Set_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Set_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Index_0) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Index_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Temp_bool_Variable) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, K2Node_SwitchEnum_CmpSuccess) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Get_Cached_Vector_Value) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Get_Cached_Vector_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, Temp_bool_Variable_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_Array_Get_Item) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cache_Vector, CallFunc_NotEqual_VectorVector_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cache_Vector::CallFunc_NotEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cancel Shadows Value
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cancel_Shadows_Value final
{
public:
	struct FVector                                Light_Vector;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cancel_Shadows_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Cancel_Shadows_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, Light_Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::Light_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cancel_Shadows_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cancel_Shadows_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Change Sky Mode at Runtime
// 0x0007 (0x0007 - 0x0000)
struct Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime final
{
public:
	EUDS_SkyMode                                  New_Sky_Mode;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime) == 0x000007, "Wrong size on Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, New_Sky_Mode) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::New_Sky_Mode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Change_Sky_Mode_at_Runtime::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check for Cloud Coverage Target Recenter
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter final
{
public:
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Distance2D_ReturnValue;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_BooleanOR_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Distance2D_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_for_Cloud_Coverage_Target_Recenter::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check for Daylight Savings Time
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x0030(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue_1;               // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue_2;               // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DateTimeDateTime_ReturnValue;   // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue; // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_SelectFloat_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanOR_ReturnValue_1) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue_1) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_Add_IntInt_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_MakeDateTime_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_MakeDateTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_LessEqual_DateTimeDateTime_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_LessEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_GreaterEqual_DateTimeDateTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_BooleanAND_ReturnValue_2) == 0x00006A, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x00006B, "Member 'Ultra_Dynamic_Sky_C_Check_for_Daylight_Savings_Time::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check if Point is Exposed to Sun or Moon Light
// 0x0418 (0x0418 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Distance_to_Trace;                                 // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Actors_to_Ignore_in_Trace;                         // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	bool                                          Exposed_to_Sun;                                    // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exposed_to_Moon;                                   // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Exposed_to_Either;                                 // 0x0032(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Light_Intensity__Lux_;                             // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit_By_Moon;                                       // 0x0040(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Not_Blocked_by_Clouds;                             // 0x0041(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Hit_By_Sun;                                        // 0x0042(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<bool>                                  Trace_Hits;                                        // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cancel_Shadows_Value_Out;                 // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue;            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cancel_Shadows_Value_Out_1;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_BoolToDouble_ReturnValue_1;          // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_4;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0209(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20A[0x6];                                      // 0x020A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude_1; // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0219(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x021A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x021B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21C[0x4];                                      // 0x021C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_5;           // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x0251(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0252(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0253(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0258(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UArrowComponent*>                K2Node_MakeArray_Array;                            // 0x0270(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UArrowComponent*                        CallFunc_Array_Get_Item_2;                         // 0x0288(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_6;           // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x02F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x03E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1;   // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_40C[0x4];                                      // 0x040C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light) == 0x000418, "Wrong size on Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Distance_to_Trace) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Distance_to_Trace' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Actors_to_Ignore_in_Trace) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Actors_to_Ignore_in_Trace' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Exposed_to_Sun) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Exposed_to_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Exposed_to_Moon) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Exposed_to_Moon' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Exposed_to_Either) == 0x000032, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Exposed_to_Either' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Light_Intensity__Lux_) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Light_Intensity__Lux_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Hit_By_Moon) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Hit_By_Moon' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Not_Blocked_by_Clouds) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Not_Blocked_by_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Hit_By_Sun) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Hit_By_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Trace_Hits) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Trace_Hits' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Temp_int_Array_Index_Variable) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Cancel_Shadows_Value_Out) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Cancel_Shadows_Value_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_SelectFloat_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_SelectFloat_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Conv_BoolToDouble_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Conv_BoolToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetFloatValue_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Cancel_Shadows_Value_Out_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Cancel_Shadows_Value_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_MapRangeClamped_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_2) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_2) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_2) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetFloatValue_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Conv_BoolToDouble_ReturnValue_1) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Conv_BoolToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, Temp_int_Loop_Counter_Variable) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Add_IntInt_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanOR_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_4) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_3) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_3) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_3) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Get_Item) == 0x0001E9, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Not_PreBool_ReturnValue) == 0x0001EA, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue) == 0x0001EB, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_4) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_4) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_4) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue_1) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000209, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude_1) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000219, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue_2) == 0x00021A, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanOR_ReturnValue_1) == 0x00021B, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_5) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_X_5) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Y_5) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BreakVector_Z_5) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Get_Item_1) == 0x000251, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Not_PreBool_ReturnValue_1) == 0x000252, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue_3) == 0x000253, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_BooleanAND_ReturnValue_4) == 0x000254, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, K2Node_MakeArray_Array) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Length_ReturnValue) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Get_Item_2) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Less_IntInt_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetForwardVector_ReturnValue_6) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetForwardVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_VectorVector_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_LineTraceSingle_OutHit) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_LineTraceSingle_ReturnValue) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Array_Add_ReturnValue) == 0x0003E4, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Check_if_Point_is_Exposed_to_Sun_or_Moon_Light::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Check To Use Existing MIDs
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_1;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetGameTimeInSeconds_ReturnValue_2;       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NearlyEqual_FloatFloat_ReturnValue;       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_GetGameTimeInSeconds_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_GetGameTimeInSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_GetGameTimeInSeconds_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_GetGameTimeInSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_GetGameTimeInSeconds_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_GetGameTimeInSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_NearlyEqual_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_NearlyEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_Not_PreBool_ReturnValue) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_BooleanOR_ReturnValue) == 0x00003A, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_BooleanOR_ReturnValue_1) == 0x00003B, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs, CallFunc_BooleanOR_ReturnValue_2) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Check_To_Use_Existing_MIDs::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Coverage Local
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Coverage_Local final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Local) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Coverage_Local");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Local) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Coverage_Local");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Local, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Local::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Local, CallFunc_Lerp_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Local::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Local, CallFunc_Lerp_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Local::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Coverage Target Mapping
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping final
{
public:
	struct FVector                                Mapping;                                           // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Conv_Vector2DToVector_Z_ImplicitCast;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, Mapping) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_MakeVector2D_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping, CallFunc_Conv_Vector2DToVector_Z_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Coverage_Target_Mapping::CallFunc_Conv_Vector2DToVector_Z_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Darkening
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Darkening final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Darkening) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Darkening");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Darkening) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Darkening");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Darkening, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Darkening::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Layer Top and Bottom World Height
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height final
{
public:
	double                                        Bottom_World_Height;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Top_World_Height;                                  // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, Bottom_World_Height) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::Bottom_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, Top_World_Height) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::Top_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_BreakVector_X) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_BreakVector_Y) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_BreakVector_Z) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_SelectFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cloud_Layer_Top_and_Bottom_World_Height::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Cloud Density
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Cloud_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Light Vector Process
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process final
{
public:
	struct FVector                                Vector;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out;                                               // 0x0018(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, Vector) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_MakeVector_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_MapRangeClamped_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_X_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Y_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, CallFunc_BreakVector_Z_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_LinearColor) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_A_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_R_ImplicitCast) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_G_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process, K2Node_MakeStruct_B_ImplicitCast) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Light_Vector_Process::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Shadows Parent Material
// 0x02C8 (0x02C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Mat;                                               // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0030(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0060(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x0098(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_3;                        // 0x00C8(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_4;                        // 0x0100(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_5;                        // 0x0130(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_162[0x6];                                      // 0x0162(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0168(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0198(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x01D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_2;                           // 0x0200(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_232[0x6];                                      // 0x0232(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_3;                           // 0x0238(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_4;                           // 0x0268(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_5;                           // 0x0298(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material) == 0x0002C8, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Mat) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_softobject_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_softobject_Variable_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_bool_Variable) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_bool_Variable_1) == 0x000091, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_softobject_Variable_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_softobject_Variable_3) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_bool_Variable_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_softobject_Variable_4) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_softobject_Variable_5) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_bool_Variable_3) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_bool_Variable_4) == 0x000161, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, K2Node_Select_Default) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, K2Node_Select_Default_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, Temp_bool_Variable_5) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, K2Node_Select_Default_2) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000231, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, K2Node_Select_Default_3) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, K2Node_Select_Default_4) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material, K2Node_Select_Default_5) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Cloud_Shadows_Parent_Material::K2Node_Select_Default_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Texture Velocity
// 0x00E8 (0x00E8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Base_Clouds_Scale_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_ClampVectorSize_ReturnValue;              // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity) == 0x0000E8, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Current_Base_Clouds_Scale_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Current_Base_Clouds_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeVector_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeRotator_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Add_VectorVector_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_ClampVectorSize_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_ClampVectorSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Texture_Velocity::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Cloud Wisp Gradient Vector
// 0x0110 (0x0110 - 0x0000)
struct Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_R_ImplicitCast;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_G_ImplicitCast;                 // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_B_ImplicitCast;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector) == 0x000110, "Wrong size on Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Abs_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_SelectFloat_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_SelectVector_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_X_3) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Y_3) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_BreakVector_Z_3) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_R_ImplicitCast) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_G_ImplicitCast) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_B_ImplicitCast) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector, CallFunc_MakeColor_A_ImplicitCast) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Cloud_Wisp_Gradient_Vector::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Clouds Time of Day Factor
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Total_Time_Elapsed_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Total_Time_Elapsed_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Total_Time_Elapsed_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Clouds_Time_of_Day_Factor::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Combined Night Brightness
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Combined_Night_Brightness final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Combined_Night_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Combined_Night_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Combined_Night_Brightness::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Combined_Night_Brightness::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Combined_Night_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Combined_Night_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Combined_Night_Brightness, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Combined_Night_Brightness::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construct Space Layer
// 0x0A30 (0x0A30 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construct_Space_Layer final
{
public:
	class UMaterialInstanceDynamic*               Current_Glow_MID;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Current_Glow_Mesh;                                 // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Planet_Distance;                                   // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ring_Back;                                         // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Ring_Front;                                        // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Index;                                     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               Current_MID;                                       // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Current_Root;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   Current_Sphere;                                    // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FUDS_Space_Planet                      Current_Planet;                                    // 0x0048(0x0278)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        Temp_object_Variable;                              // 0x02D0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Space_Parent                             Temp_byte_Variable;                                // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F1[0x3];                                      // 0x02F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x02FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FD[0x3];                                      // 0x02FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0308(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x3];                                      // 0x0331(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0334(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0344(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0345(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0346(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_347[0x1];                                      // 0x0347(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34C[0x4];                                      // 0x034C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Space_Planet_Parent_MID_Out;              // 0x0368(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39C[0x4];                                      // 0x039C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x03C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue;         // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x03E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0400(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue;                 // 0x0468(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0478(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0490(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x04A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x04C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x04F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0528(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0568(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58C[0x4];                                      // 0x058C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x05A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_5;                  // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x05B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B9[0x3];                                      // 0x05B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_6;                  // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x05C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x05D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x05D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_2;                 // 0x05E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_3;                 // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_4;                 // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_4;                 // 0x0638(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_1;       // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0xF];                                      // 0x0651(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0660(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_AddComponent_ReturnValue_1;               // 0x06C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x06C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USceneComponent*                        K2Node_Select_Default;                             // 0x06E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E8[0x8];                                      // 0x06E8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x06F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_AttachToComponent_ReturnValue_2;       // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_AddComponent_ReturnValue_2;               // 0x0758(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x3];                                      // 0x0761(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0764(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item_1;                         // 0x0768(0x0278)(HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x09E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9E1[0x3];                                      // 0x09E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x09E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x09E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x09EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_11; // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_12; // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_13; // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_14; // 0x0A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_15; // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_16; // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construct_Space_Layer) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Construct_Space_Layer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construct_Space_Layer) == 0x000A30, "Wrong size on Ultra_Dynamic_Sky_C_Construct_Space_Layer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Glow_MID) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Glow_MID' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Glow_Mesh) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Glow_Mesh' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Planet_Distance) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Planet_Distance' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_Back) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_Back' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Ring_Front) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Ring_Front' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Index) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_MID) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_MID' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Root) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Root' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Sphere) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Sphere' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Current_Planet) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Current_Planet' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Not_PreBool_ReturnValue) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_object_Variable) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeVector_ReturnValue) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_byte_Variable) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue) == 0x0002F4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_int_Array_Index_Variable) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x0002FC, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_int_Loop_Counter_Variable) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue) == 0x00030C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, Temp_int_Variable) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue_1) == 0x000314, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000334, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000344, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_BooleanAND_ReturnValue) == 0x000345, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_IsValid_ReturnValue) == 0x000346, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_1) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue_2) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Space_Planet_Parent_MID_Out) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Space_Planet_Parent_MID_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_IntInt_ReturnValue_3) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsMaterial_Interface) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_1) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_2) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AttachToComponent_ReturnValue) == 0x0003C4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AttachToComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeVector_ReturnValue_1) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeTransform_ReturnValue) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_AddComponent_ReturnValue) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeVector_ReturnValue_2) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_VectorVector_ReturnValue) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Normal_ReturnValue) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FMax_ReturnValue) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Normal_ReturnValue_1) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Dot_VectorVector_ReturnValue) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_DegAcos_ReturnValue) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FClamp_ReturnValue) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MapRangeClamped_ReturnValue) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SelectFloat_ReturnValue) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FMax_ReturnValue_1) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FClamp_ReturnValue_1) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D_1) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_2) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_3) == 0x000584, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_4) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeVector_ReturnValue_3) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Get_Item) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_5) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Length_ReturnValue) == 0x0005B4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Less_IntInt_ReturnValue) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Add_ReturnValue_6) == 0x0005BC, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Add_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_FMax_ReturnValue_2) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D_2) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_3) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SelectFloat_ReturnValue_1) == 0x0005F8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SelectFloat_ReturnValue_2) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D_3) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_4) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_AsTexture_2D_4) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_AsTexture_2D_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_DynamicCast_bSuccess_5) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeVector_ReturnValue_4) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AttachToComponent_ReturnValue_1) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AttachToComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeTransform_ReturnValue_1) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_AddComponent_ReturnValue_1) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_AddComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_ComposeRotators_ReturnValue) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, K2Node_Select_Default) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_MakeTransform_ReturnValue_2) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_K2_AttachToComponent_ReturnValue_2) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_K2_AttachToComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_AddComponent_ReturnValue_2) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_AddComponent_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Length_ReturnValue_1) == 0x000764, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Array_Get_Item_1) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_Less_IntInt_ReturnValue_1) == 0x0009E0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0009E4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0009E8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0009EC, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0009F0, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x0009F4, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x0009F8, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x0009FC, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000A00, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000A04, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x000A08, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x000A0C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_11) == 0x000A10, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_12) == 0x000A14, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_13) == 0x000A18, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_14) == 0x000A1C, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_15) == 0x000A20, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construct_Space_Layer, CallFunc_SetScalarParameterValue_Value_ImplicitCast_16) == 0x000A24, "Member 'Ultra_Dynamic_Sky_C_Construct_Space_Layer::CallFunc_SetScalarParameterValue_Value_ImplicitCast_16' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Construction Script Function
// 0x0450 (0x0450 - 0x0000)
struct Ultra_Dynamic_Sky_C_Construction_Script_Function final
{
public:
	bool                                          Run_By_Counterpart;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Move_Static_Lights;                                // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_4;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_5;                // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_6;                // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0010(0x0010)(NoDestructor)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ReferenceParm)
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0030(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_7;                // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Rainbow_MID_Rainbow_Enabled;          // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Get_Rainbow_MID_MID;                      // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x5];                                       // 0x008B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTextureCube*                           K2Node_DynamicCast_AsTexture_Cube;                 // 0x00B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_1;                          // 0x00C0(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_2;                          // 0x00D0(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_3;                          // 0x00E8(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Cloud_Shadows_Parent_Material_Mat;        // 0x00F8(0x0030)(HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_4;                          // 0x0128(0x0010)(ReferenceParm)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Static_Clouds_Parent_Material_Material;   // 0x0140(0x0030)(HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0170(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0180(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0188(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_1;         // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_1; // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x01A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_2;         // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_2; // 0x01C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_3;         // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_3; // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x01E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x0200(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_4;         // 0x0208(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0211(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_212[0x6];                                      // 0x0212(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_4; // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_All_Volumetric_Cloud_MIDs_MIDs;           // 0x0220(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1;         // 0x0230(0x0010)(ReferenceParm)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue; // 0x0240(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7; // 0x0270(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_5;         // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified; // 0x0288(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex; // 0x02B8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1; // 0x02E8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1; // 0x0318(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8; // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9; // 0x0350(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_6;         // 0x0358(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface_7;         // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_5; // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_6; // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_8;                // 0x0389(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x038A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x038B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default;                             // 0x0390(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x03A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_9;                // 0x03A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x03A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x03A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsStandalone_ReturnValue;                 // 0x03A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_10;               // 0x03A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x03A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x03AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x03AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AC[0x4];                                      // 0x03AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default_1;                           // 0x03B0(0x0010)(ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C5[0x3];                                      // 0x03C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_7; // 0x03C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_11;               // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D3[0x5];                                      // 0x03D3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10; // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTextureCube*                           K2Node_DynamicCast_AsTexture_Cube_1;               // 0x03F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0402(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_403[0x5];                                      // 0x0403(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyLightComponent*                     K2Node_Select_Default_2;                           // 0x0408(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0410(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x0411(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_412[0x6];                                      // 0x0412(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkyLightComponent*                     K2Node_Select_Default_3;                           // 0x0418(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0423(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_426[0x2];                                      // 0x0426(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component;  // 0x0428(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0431(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0432(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_433[0x5];                                      // 0x0433(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UDirectionalLightComponent*             K2Node_DynamicCast_AsDirectional_Light_Component_1; // 0x0438(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue_8; // 0x0448(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Construction_Script_Function) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Construction_Script_Function");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Construction_Script_Function) == 0x000450, "Wrong size on Ultra_Dynamic_Sky_C_Construction_Script_Function");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Run_By_Counterpart) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Run_By_Counterpart' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Move_Static_Lights) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Move_Static_Lights' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_1) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_2) == 0x000007, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_3) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_4) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_5) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_6) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_1) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeStruct_WeightedBlendable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeStruct_WeightedBlendables) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_7) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Get_Rainbow_MID_Rainbow_Enabled) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Get_Rainbow_MID_Rainbow_Enabled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Get_Rainbow_MID_MID) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Get_Rainbow_MID_MID' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Array_AddUnique_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_2) == 0x000089, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_3) == 0x00008A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable) == 0x0000A1, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsTexture_Cube) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsTexture_Cube' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_3) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array_3) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Cloud_Shadows_Parent_Material_Mat) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Cloud_Shadows_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_MakeArray_Array_4) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_MakeArray_Array_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Static_Clouds_Parent_Material_Material) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Static_Clouds_Parent_Material_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_4) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_5) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_1) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_2) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_6) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_3) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_7) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_3) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsNiagara_System) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_8) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_4) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_9) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000211, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_4) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_All_Volumetric_Cloud_MIDs_MIDs) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_All_Volumetric_Cloud_MIDs_MIDs' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_All_Volumetric_Cloud_MIDs_MIDs_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_5) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_10) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Complex) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Volumetric_Clouds_Parent_Materials_Complex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_6) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_11) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsMaterial_Interface_7) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsMaterial_Interface_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_12) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_5) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_6) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_8) == 0x000389, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_1) == 0x00038A, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x00038B, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_1) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_2) == 0x0003A1, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_3) == 0x0003A2, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_9) == 0x0003A3, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x0003A4, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_4) == 0x0003A5, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsStandalone_ReturnValue) == 0x0003A6, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsStandalone_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_10) == 0x0003A7, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_5) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x0003A9, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_2) == 0x0003AA, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0003AB, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_1) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_6) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_7) == 0x0003C1, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_8) == 0x0003C2, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_9) == 0x0003C3, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0003C4, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_7) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Not_PreBool_ReturnValue_11) == 0x0003D1, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Not_PreBool_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0003D2, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_BooleanAND_ReturnValue_10) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsTexture_Cube_1) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsTexture_Cube_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_13) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, Temp_bool_Variable_3) == 0x000401, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess) == 0x000402, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_2) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x000411, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_Select_Default_3) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_1) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_2) == 0x000421, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_3) == 0x000422, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_SwitchEnum_CmpSuccess_4) == 0x000423, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_4) == 0x000424, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_5) == 0x000425, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsDirectional_Light_Component) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsDirectional_Light_Component' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_14) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_6) == 0x000431, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_IsValid_ReturnValue_7) == 0x000432, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_AsDirectional_Light_Component_1) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_AsDirectional_Light_Component_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, K2Node_DynamicCast_bSuccess_15) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Construction_Script_Function, CallFunc_CreateDynamicMaterialInstance_ReturnValue_8) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Construction_Script_Function::CallFunc_CreateDynamicMaterialInstance_ReturnValue_8' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Control UDW Weather State
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Control_UDW_Weather_State final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Control_UDW_Weather_State");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Control_UDW_Weather_State");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_bSuccess_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, K2Node_DynamicCast_bSuccess_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_Not_PreBool_ReturnValue_1) == 0x000061, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Control_UDW_Weather_State, CallFunc_IsValid_ReturnValue_1) == 0x000062, "Member 'Ultra_Dynamic_Sky_C_Control_UDW_Weather_State::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Convert Time of Day to Time Code
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code final
{
public:
	double                                        Time;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              Timecode;                                          // 0x0008(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue_2;                   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              K2Node_MakeStruct_Timecode;                        // 0x007C(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code) == 0x000090, "Wrong size on Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, Timecode) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Fraction_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Fraction_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, CallFunc_FFloor_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code, K2Node_MakeStruct_Timecode) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Convert_Time_of_Day_to_Time_Code::K2Node_MakeStruct_Timecode' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Create Post Process Components
// 0x07D0 (0x07D0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Create_Post_Process_Components final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0xC];                                        // 0x0004(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0010(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_AddComponent_ReturnValue;                 // 0x0078(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Post_Process_Stage                CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0710)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x07C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C5[0x3];                                      // 0x07C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_Priority_ImplicitCast;          // 0x07C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Create_Post_Process_Components");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components) == 0x0007D0, "Wrong size on Ultra_Dynamic_Sky_C_Create_Post_Process_Components");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_struct_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_AddComponent_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Array_Index_Variable) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, Temp_int_Loop_Counter_Variable) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_IsValidIndex_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Get_Item) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Add_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Array_Length_ReturnValue_1) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, CallFunc_Less_IntInt_ReturnValue_1) == 0x0007C4, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_Post_Process_Components, K2Node_VariableSet_Priority_ImplicitCast) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Create_Post_Process_Components::K2Node_VariableSet_Priority_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Create UDS and UDW State for Saving
// 0x0490 (0x0490 - 0x0000)
struct Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving final
{
public:
	struct FUDS_and_UDW_State                     Packaged_State;                                    // 0x0000(0x0178)(Parm, OutParm, HasGetValueTypeHash)
	struct FUDS_and_UDW_State                     State;                                             // 0x0178(0x0178)(Edit, BlueprintVisible, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_and_UDW_State                     CallFunc_Get_State_for_Saving_UDW_State;           // 0x0308(0x0178)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0480(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_481[0x7];                                      // 0x0481(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time; // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving) == 0x000490, "Wrong size on Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, Packaged_State) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::Packaged_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, State) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, K2Node_DynamicCast_bSuccess) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_Get_State_for_Saving_UDW_State) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_Get_State_for_Saving_UDW_State' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_IsValid_ReturnValue) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving, CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Create_UDS_and_UDW_State_for_Saving::CallFunc_Get_Current_Date_and_Time_Current_Date_and_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current 2D Cloud Tint
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_SelectColor_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_LinearColorLerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_2D_Cloud_Tint::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Aurora Intensity
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Aurora_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Sun_Height_Z;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Aurora_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Current_Aurora_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Sun_Height_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Aurora_Intensity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Aurora_Intensity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Base Clouds Scale
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Base_Clouds_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Cloud Wisps Color
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out;             // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color) == 0x0000D0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Combined_Night_Brightness_out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Simplified_Current_Color_Out) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Simplified_Current_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color, CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Cloud_Wisps_Color::CallFunc_Conv_DoubleToLinearColor_InDouble_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Directional Inscattering Exponent
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_FMax_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Directional_Inscattering_Exponent::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Exposure Bias
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Exposure_Bias final
{
public:
	double                                        Bias;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast;   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Exposure_Bias");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Current_Exposure_Bias");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, Bias) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::Bias' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Lerp_A_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Exposure_Bias, CallFunc_Lerp_B_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Exposure_Bias::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Density
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Density) == 0x0000A0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_FMax_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Directional Inscattering Color
// 0x0110 (0x0110 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color final
{
public:
	struct FLinearColor                           Directional_Inscattering_Color;                    // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FClamp_Value_ImplicitCast;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color) == 0x000110, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, Directional_Inscattering_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::Directional_Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Sun_Height_Z) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FMax_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_GetFloatValue_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_SelectColor_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_FClamp_Value_ImplicitCast) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_FClamp_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Directional_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Fog Inscattering Color
// 0x0190 (0x0190 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color final
{
public:
	struct FLinearColor                           Inscattering_Color;                                // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out_1;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_2; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color) == 0x000190, "Wrong size on Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, Inscattering_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::Inscattering_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Cloud_Coverage_Local_Out_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Cloud_Coverage_Local_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Directional_Light_Dimming_Out) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Current_Light_Pollution_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_FMax_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_SelectColor_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue_2) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Current_Fog_Inscattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lerp to Simplified Clouds
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds final
{
public:
	double                                        Alpha;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x6];                                       // 0x003A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, Alpha) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::Alpha' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Not_PreBool_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_BooleanAND_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_BooleanAND_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_BooleanAND_ReturnValue_2) == 0x000039, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Lerp_to_Simplified_Clouds::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Light Pollution
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Light_Pollution final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Light_Pollution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Light_Pollution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Light_Pollution) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_Light_Pollution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Light_Pollution, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Light_Pollution::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Lit Intensity
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Lit_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Lit_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_Lit_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Lit_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Lit_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Max Trace Distance
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Inside_Outside_Cloud_Layer_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Inside_Outside_Cloud_Layer_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Inside_Outside_Cloud_Layer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Max_Trace_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Mie Anisotropy
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_Flat_Cloudiness_On) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Anisotropy::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Mie Scattering Scale
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On_1;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On_2;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Flat_Cloudiness_On) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Flat_Cloudiness_On_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Flat_Cloudiness_On_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Flat_Cloudiness_On_2) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Flat_Cloudiness_On_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_SelectFloat_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_SelectFloat_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_SelectFloat_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Mie_Scattering_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Light Color
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Light_Color final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_GetLinearColorValue_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_SelectColor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Color, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Color::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Light Material Color
// 0x0108 (0x0108 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color) == 0x000108, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Cloud_Coverage_Local_Out) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_SelectColor_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Light_Material_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Lit Percent
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Lit_Percent::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Material Intensity
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Combined_Night_Brightness_out) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Flat_Cloudiness_On) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Lerp_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Lerp_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity, CallFunc_SelectFloat_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Material_Intensity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Phase Angle
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MakeRotator_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Phase_Angle::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Scale and Cutout Value
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value final
{
public:
	double                                        Scale;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cutout;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, Cutout) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::Cutout' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Scale_and_Cutout_Value::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moon Source Angle
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_FMax_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Moon_Source_Angle::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Moons Cloud Mask
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_BooleanOR_ReturnValue) == 0x00001B, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_BooleanAND_ReturnValue_1) == 0x00001D, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Moons_Cloud_Mask::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Night Sky Glow
// 0x0090 (0x0090 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow) == 0x000090, "Wrong size on Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Combined_Night_Brightness_out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Current_Night_Sky_Glow::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Overall Intensity
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Overall_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Find_Overall_Intensity_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Overall_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Overall_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_SelectFloat_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Find_Overall_Intensity_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Find_Overall_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overall_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Overall_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Overcast Swirl
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Overcast_Swirl final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Overcast_Swirl");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Overcast_Swirl");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Overcast_Swirl, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Overcast_Swirl::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Rayleigh Scattering Color
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out;             // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Flat_Cloudiness_On) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Cloud_Coverage_Local_Out) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Lerp_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Simplified_Current_Color_Out) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Simplified_Current_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Rayleigh_Scattering_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Saturation
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Saturation final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Saturation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Saturation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Saturation) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Saturation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Not_PreBool_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_BooleanOR_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Saturation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Saturation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Ambient Color
// 0x01C0 (0x01C0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color final
{
public:
	struct FLinearColor                           Sky_Ambient_Color;                                 // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out_1;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Lit_Intensity_ReturnValue;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Divide_LinearColorLinearColor_ReturnValue; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeColor_A_ImplicitCast;                 // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color) == 0x0001C0, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, Sky_Ambient_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::Sky_Ambient_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Cloud_Coverage_Local_Out_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Cloud_Coverage_Local_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Combined_Night_Brightness_out) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Night_Filter_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_X) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_Y) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakVector_Z) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Lerp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Current_Lit_Intensity_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Current_Lit_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_SelectFloat_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_SelectColor_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Divide_LinearColorLinearColor_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Divide_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_R) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_G) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_B) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_BreakColor_A) == 0x000194, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MakeColor_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color, CallFunc_MakeColor_A_ImplicitCast) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Ambient_Color::CallFunc_MakeColor_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Atmosphere Absorption Color
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_RGBToHSV_Vector_HSV;                      // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_HSVToRGB_ReturnValue;                     // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HSVToRGB_A_ImplicitCast;                  // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_HSVToRGB_H_ImplicitCast;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Cloud_Coverage_Local_Out) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_RGBToHSV_Vector_HSV) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_RGBToHSV_Vector_HSV' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakColor_R) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakColor_G) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakColor_B) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_BreakColor_A) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_HSVToRGB_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_HSVToRGB_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_HSVToRGB_A_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_HSVToRGB_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color, CallFunc_HSVToRGB_H_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Absorption_Color::CallFunc_HSVToRGB_H_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Atmosphere Luminance
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Luminance_Boost_Out;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Inscattering_Multiplier_Multiplier; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Overcast_Luminance_Boost_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Overcast_Luminance_Boost_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Cloud_Coverage_Local_Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Directional_Inscattering_Multiplier_Multiplier) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Directional_Inscattering_Multiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Atmosphere_Luminance::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sky Light Lower Hemisphere Color
// 0x0064 (0x0064 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_R;                             // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_G;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_B;                             // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakColor_A;                             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_MakeColor_ReturnValue;                    // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color) == 0x000064, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_R) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_R' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_G) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_G' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_B) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_B' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_BreakColor_A) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_BreakColor_A' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_MakeColor_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_MakeColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_SelectColor_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color, CallFunc_SelectColor_ReturnValue_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Current_Sky_Light_Lower_Hemisphere_Color::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Solar Eclipse Values
// 0x0718 (0x0718 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values final
{
public:
	struct FLinearColor                           Tint_Color;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Eclipse_Percent;                                   // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               Moon_Root_Rotation;                                // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Sun_Root_Rotation;                                 // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FUDS_Space_Planet                      Space_Planet;                                      // 0x0048(0x0278)(Edit, BlueprintVisible, HasGetValueTypeHash)
	double                                        Sun_Angular_Radius;                                // 0x02C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sun_Fraction_Showing;                              // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               Temp_struct_Variable;                              // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue;                     // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Normal2D_ReturnValue_1;                   // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DotProduct2D_ReturnValue;                 // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Z_Vector_out;                         // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Moon_Z_Vector_out;                        // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue_1;              // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUDS_Space_Parent                             Temp_byte_Variable;                                // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item;                           // 0x03D0(0x0278)(HasGetValueTypeHash)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default;                             // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_681[0x7];                                      // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x06A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing; // 0x06B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x06C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x06C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x06D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x06D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing_1; // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0700(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0701(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_702[0x2];                                      // 0x0702(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0704(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values) == 0x000718, "Wrong size on Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Tint_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Tint_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Eclipse_Percent) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Eclipse_Percent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Moon_Root_Rotation) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Moon_Root_Rotation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Sun_Root_Rotation) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Sun_Root_Rotation' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Space_Planet) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Space_Planet' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Sun_Angular_Radius) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Sun_Angular_Radius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Sun_Fraction_Showing) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Sun_Fraction_Showing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Temp_int_Array_Index_Variable) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Temp_int_Loop_Counter_Variable) == 0x0002D4, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Lerp_ReturnValue) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Add_IntInt_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Temp_struct_Variable) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MakeVector2D_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Normal2D_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Normal2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MakeVector2D_ReturnValue_1) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Normal2D_ReturnValue_1) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Normal2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_DotProduct2D_ReturnValue) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_DotProduct2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_DegAcos_ReturnValue) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Sun_Z_Vector_out) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Sun_Z_Vector_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Moon_Z_Vector_out) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Moon_Z_Vector_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MakeRotFromXZ_ReturnValue_1) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MakeRotFromXZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, Temp_byte_Variable) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Array_Get_Item) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_ComposeRotators_ReturnValue) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Array_Length_ReturnValue) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, K2Node_Select_Default) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Less_IntInt_ReturnValue) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_ComposeRotators_ReturnValue_1) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_MapRangeClamped_ReturnValue) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0006D8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing_1) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Solar_Eclipse_Circle_Mask_Fraction_Showing_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Dot_VectorVector_ReturnValue) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_BooleanAND_ReturnValue) == 0x000701, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_LinearColorLerp_ReturnValue) == 0x000704, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000714, "Member 'Ultra_Dynamic_Sky_C_Current_Solar_Eclipse_Values::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Space Layer Brightness
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Flat_Cloudiness_On) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Lerp_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_SelectFloat_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Space_Layer_Brightness::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Stars Color
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Stars_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Stars_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Stars_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Stars_Color) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Stars_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Combined_Night_Brightness_out) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Night_Filter_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Flat_Cloudiness_On) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Sun_Height_Z) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_GetFloatValue_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_ReturnValue_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Lerp_A_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Stars_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Stars_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Disk Color
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sun_Disk_Intensity_ReturnValue;   // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Sun_Height_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Current_Sun_Disk_Intensity_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Current_Sun_Disk_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_SelectColor_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Color::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Disk Intensity
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Flat_Cloudiness_On) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue_2) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_SelectFloat_ReturnValue_3) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Disk_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Light Color
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Light_Color final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetClampedLinearColorValue_ReturnValue;   // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0044(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0054(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Sun_Height_Z) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_GetClampedLinearColorValue_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_GetClampedLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_SelectColor_ReturnValue) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_GetClampedLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Light Intensity
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Inscattering_Multiplier_Multiplier; // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Directional_Light_Dimming_Out) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_X_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Y_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_BreakVector_Z_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Directional_Inscattering_Multiplier_Multiplier) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Directional_Inscattering_Multiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Light_Intensity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Radius
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Radius final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Radius) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Radius");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Radius) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Radius");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Radius, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Radius::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sun Source Angle
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_FMax_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Sun_Source_Angle::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sunrise Event Time
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sunrise_Event_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Sunset Event Time
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Sunset_Event_Time::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current View Sample Scale
// 0x00C8 (0x00C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_View_Sample_Scale final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Inside_Outside_Cloud_Layer_ReturnValue;   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out;                   // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Swap_with_Cinematic_Runtime_Value_Out;    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_View_Sample_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale) == 0x0000C8, "Wrong size on Ultra_Dynamic_Sky_C_Current_View_Sample_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Inside_Outside_Cloud_Layer_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Inside_Outside_Cloud_Layer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Clamp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_X) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_Y) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_BreakVector_Z) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Subtract_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Lerp_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Scale_Sample_Count_out) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Scale_Sample_Count_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_View_Sample_Scale, CallFunc_Swap_with_Cinematic_Runtime_Value_Out) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_View_Sample_Scale::CallFunc_Swap_with_Cinematic_Runtime_Value_Out' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Albedo
// 0x0200 (0x0200 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Inscattering_Multiplier_Multiplier; // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0148(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo) == 0x000200, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Directional_Light_Dimming_Out) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Directional_Inscattering_Multiplier_Multiplier) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Directional_Inscattering_Multiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_SafeDivide_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_X_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Y_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Z_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Abs_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_X_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Y_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_BreakVector_Z_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Abs_ReturnValue_2) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_SelectColor_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0001EC, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0001F4, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Albedo::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Inner Emit Limit
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Inner_Emit_Limit::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Macro Variation
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Macro_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Multiscattering Intensity
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Multiscattering Occlusion
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion final
{
public:
	double                                        Occlusion;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, Occlusion) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::Occlusion' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Multiscattering_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Shadow Tracing Distance
// 0x0070 (0x0070 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance) == 0x000070, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Abs_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Lerp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Lerp_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Lerp_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Shadow_Tracing_Distance::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Cloud Sky Atmo Contribution
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Cloud_Sky_Atmo_Contribution::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Volumetric Clouds Density
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density final
{
public:
	double                                        Layer1;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Cloud_Layer_Visible;                               // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Layer2;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, Layer1) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::Layer1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, Cloud_Layer_Visible) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::Cloud_Layer_Visible' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, Layer2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::Layer2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_FClamp_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_BooleanAND_ReturnValue) == 0x000081, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_BooleanOR_ReturnValue) == 0x000082, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density, CallFunc_BooleanOR_ReturnValue_1) == 0x000083, "Member 'Ultra_Dynamic_Sky_C_Current_Volumetric_Clouds_Density::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Current Wisps Opacity
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Current_Wisps_Opacity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Current_Wisps_Opacity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Current_Wisps_Opacity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Flat_Cloudiness_On) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Current_Wisps_Opacity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Current_Wisps_Opacity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Days Since J2000
// 0x004C (0x004C - 0x0000)
struct Ultra_Dynamic_Sky_C_Days_Since_J2000 final
{
public:
	int32                                         Input_Year;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Day_of_Year;                                       // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Days;                                              // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Positive;                                          // 0x000C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_1;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Abs_Int_ReturnValue;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_2;                  // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue_1;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_DaysInYear_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue_3;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Days_Since_J2000) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Days_Since_J2000");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Days_Since_J2000) == 0x00004C, "Wrong size on Ultra_Dynamic_Sky_C_Days_Since_J2000");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Input_Year) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Input_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Day_of_Year) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Day_of_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Days) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Days' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, Positive) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::Positive' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_SelectInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_SelectInt_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_SelectInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Subtract_IntInt_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Add_IntInt_ReturnValue) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Abs_Int_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Abs_Int_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_SelectInt_ReturnValue_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_SelectInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Add_IntInt_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Multiply_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Divide_IntInt_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Multiply_IntInt_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Multiply_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_DaysInYear_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_DaysInYear_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_SelectInt_ReturnValue_3) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_SelectInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Days_Since_J2000, CallFunc_Add_IntInt_ReturnValue_3) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Days_Since_J2000::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Dimming Directional Lights
// 0x0006 (0x0006 - 0x0000)
struct Ultra_Dynamic_Sky_C_Dimming_Directional_Lights final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Dimming_Directional_Lights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights) == 0x000006, "Wrong size on Ultra_Dynamic_Sky_C_Dimming_Directional_Lights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue_1) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue_2) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Dimming_Directional_Lights, CallFunc_BooleanOR_ReturnValue_3) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Dimming_Directional_Lights::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Directional Inscattering Multiplier
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Lerp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Directional_Inscattering_Multiplier::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Directional Light Dimming
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Directional_Light_Dimming final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Directional_Light_Dimming");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Directional_Light_Dimming");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Lerp_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_SelectFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Directional_Light_Dimming, CallFunc_SelectFloat_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Directional_Light_Dimming::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ExecuteUbergraph_Ultra_Dynamic_Sky
// 0x01E8 (0x01E8 - 0x0000)
struct Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UObject>                 CallFunc_Array_Get_Item;                           // 0x0008(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Temp_object_Variable;                              // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                K2Node_CustomEvent_Loaded;                         // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0060(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue_1;                // 0x0070(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x007F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B[0x1];                                       // 0x009B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class UObject* Loaded)>        K2Node_CreateDelegate_OutputDelegate;              // 0x00C4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Time_of_Day_Offset_ReturnValue;           // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sunrise_Event_Time_ReturnValue;   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Sunset_Event_Time_ReturnValue;    // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sunset_Event_Time_ReturnValue_1;  // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13B[0x5];                                      // 0x013B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0140(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0150(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue_1;         // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0176(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0177(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate_1;            // 0x0178(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0188(0x0008)(NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x01B3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x01B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B6[0x2];                                      // 0x01B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast_1;          // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_SetTimerDelegate_Time_ImplicitCast;    // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky) == 0x0001E8, "Wrong size on Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, EntryPoint) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::EntryPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_Get_Item) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_object_Variable) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_AddUnique_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_Event_DeltaSeconds) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CustomEvent_Loaded) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CustomEvent_Loaded' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue) == 0x000059, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable_1) == 0x00005A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00005B, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanOR_ReturnValue) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00005D, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_1) == 0x00005E, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000069, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_1) == 0x00007A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_2) == 0x00007B, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00007D, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_3) == 0x00007E, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_4) == 0x00007F, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_Has_Been_Initd_Variable_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_2) == 0x000099, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue) == 0x00009A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_5) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_HasAuthority_ReturnValue_3) == 0x0000A1, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_6) == 0x0000A2, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000A3, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_7) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_int_Variable) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsValid_ReturnValue_1) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_DynamicCast_bSuccess) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CreateDelegate_OutputDelegate) == 0x0000C4, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_IsDedicatedServer_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Abs_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_8) == 0x0000F1, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Time_of_Day_Offset_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Time_of_Day_Offset_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunrise_Event_Time_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunrise_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunset_Event_Time_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunset_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Current_Sunset_Event_Time_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Current_Sunset_Event_Time_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000139, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_9) == 0x00013A, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_Get_Item_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Percent_FloatFloat_ReturnValue_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Percent_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_FFloor_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_IntInt_ReturnValue) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000175, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Not_PreBool_ReturnValue_2) == 0x000176, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanAND_ReturnValue_10) == 0x000177, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_CreateDelegate_OutputDelegate_1) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Abs_ReturnValue_1) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_FMin_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_SwitchEnum_CmpSuccess) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, K2Node_Event_EndPlayReason) == 0x0001B1, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x0001B2, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, Temp_bool_IsClosed_Variable_2) == 0x0001B3, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_BooleanOR_ReturnValue_1) == 0x0001B4, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0001B5, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_SelectFloat_ReturnValue) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimer_Time_ImplicitCast_1) == 0x0001DC, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimer_Time_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky, CallFunc_K2_SetTimerDelegate_Time_ImplicitCast) == 0x0001E4, "Member 'Ultra_Dynamic_Sky_C_ExecuteUbergraph_Ultra_Dynamic_Sky::CallFunc_K2_SetTimerDelegate_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Filtered Moon Light Intensity
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity final
{
public:
	double                                        Unfiltered;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Intensity;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Inscattering_Multiplier_Multiplier; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, Unfiltered) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::Unfiltered' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, Intensity) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Combined_Night_Brightness_out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Directional_Inscattering_Multiplier_Multiplier) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Directional_Inscattering_Multiplier_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Filtered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Find Overall Intensity
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Find_Overall_Intensity final
{
public:
	double                                        Cloud_Darkening;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Darkening_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Find_Overall_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Find_Overall_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, Cloud_Darkening) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::Cloud_Darkening' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Cloud_Darkening_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Cloud_Darkening_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Find_Overall_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Find_Overall_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sunrise Times
// 0x0218 (0x0218 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sunrise_Times final
{
public:
	double                                        Sunset_Time;                                       // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Factor;                                    // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Sunrise_Time;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E[0x2];                                       // 0x002E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E[0x2];                                       // 0x003E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_3;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0056(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0057(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector; // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector; // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase; // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment; // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit; // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw; // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0134(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_135[0x3];                                      // 0x0135(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1; // 0x0190(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1; // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1; // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1; // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1; // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sunrise_Times) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sunrise_Times");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sunrise_Times) == 0x000218, "Wrong size on Ultra_Dynamic_Sky_C_Sunrise_Times");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Sunset_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Sunset_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Current_Factor) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Current_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Sunrise_Time) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Sunrise_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_1) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_bool_Variable) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Not_PreBool_ReturnValue) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BooleanAND_ReturnValue) == 0x00003D, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_3) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_4) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_bool_Variable_1) == 0x000055, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Not_PreBool_ReturnValue_1) == 0x000056, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BooleanAND_ReturnValue_1) == 0x000057, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_5) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_6) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_7) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_FClamp_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_8) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_X) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Y) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Z) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, K2Node_Select_Default) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000134, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_9) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_IntInt_ReturnValue_3) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_10) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, Temp_int_Variable_11) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, K2Node_Select_Default_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Sun_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Moon_Vector_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Real_Phase_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Phase_Alignment_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Orbit_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Approximate_Real_Sun_Moon_and_Stars_Celestial_Yaw_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_X_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Y_1) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_BreakVector_Z_1) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sunrise_Times, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Sunrise_Times::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fire Editor Dispatchers
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers final
{
public:
	double                                        Time_in_Range;                                     // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Sunset_Event_Time_ReturnValue;    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Sunrise_Event_Time_ReturnValue;   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, Time_in_Range) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::Time_in_Range' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Current_Sunset_Event_Time_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Current_Sunset_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Current_Sunrise_Event_Time_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Current_Sunrise_Event_Time_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Fire_Editor_Dispatchers::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Flat Cloudiness
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Flat_Cloudiness final
{
public:
	bool                                          On;                                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EUDS_SkyMode>                          K2Node_MakeArray_Array;                            // 0x0008(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Flat_Cloudiness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Flat_Cloudiness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Flat_Cloudiness) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Flat_Cloudiness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness, On) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness::On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness, K2Node_MakeArray_Array) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Flat_Cloudiness, CallFunc_Array_Contains_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Flat_Cloudiness::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog Height Falloff
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_Height_Falloff final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_Height_Falloff");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Fog_Height_Falloff");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Height_Falloff, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Fog_Height_Falloff::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Fog Start Distance
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Fog_Start_Distance final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Fog_Start_Distance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Fog_Start_Distance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Fog_Start_Distance) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Fog_Start_Distance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_Lerp_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Fog_Start_Distance, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Fog_Start_Distance::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Force Valid Day
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Force_Valid_Day final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Force_Valid_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Force_Valid_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Force_Valid_Day) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Force_Valid_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Subtract_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Percent_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, K2Node_Select_Default) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Force_Valid_Day, CallFunc_Greater_IntInt_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Force_Valid_Day::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Gate With Current Changes
// 0x0012 (0x0012 - 0x0000)
struct Ultra_Dynamic_Sky_C_Gate_With_Current_Changes final
{
public:
	bool                                          Clouds_Changing;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Fog_Changing;                                      // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Dust_Changing;                                     // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Gate_With_Current_Changes");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes) == 0x000012, "Wrong size on Ultra_Dynamic_Sky_C_Gate_With_Current_Changes");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Clouds_Changing) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Clouds_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Fog_Changing) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Fog_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Dust_Changing) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Dust_Changing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Temp_bool_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, Temp_bool_Variable_1) == 0x000007, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanAND_ReturnValue_1) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanAND_ReturnValue_2) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanOR_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_Not_PreBool_ReturnValue) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanOR_ReturnValue_1) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanOR_ReturnValue_2) == 0x00000F, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, CallFunc_BooleanOR_ReturnValue_3) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Gate_With_Current_Changes, K2Node_Select_Default) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Gate_With_Current_Changes::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Color
// 0x004C (0x004C - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Color final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           Value;                                             // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item_1;                         // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Color) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Color) == 0x00004C, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, Value) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_Array_Get_Item_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Float
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Float final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Value;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Float) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Float");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Float) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Float");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Array_Get_Item_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Float, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Float::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Cached Vector
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Cached_Vector final
{
public:
	EUDS_CachedProperties                         Property;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Value;                                             // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VLerp_ReturnValue;                        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VLerp_Alpha_ImplicitCast;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Cached_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Cached_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Cached_Vector) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Get_Cached_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, Property) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::Property' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_VLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_VLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Cached_Vector, CallFunc_VLerp_Alpha_ImplicitCast) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Cached_Vector::CallFunc_VLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Camera Location and Camera Relative Heights
// 0x0110 (0x0110 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights final
{
public:
	bool                                          Camera_Valid;                                      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height; // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height; // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights) == 0x000110, "Wrong size on Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, Camera_Valid) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::Camera_Valid' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_X_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_X_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_Y_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BreakVector_Z_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_SelectFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_SelectFloat_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_Ease_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_BooleanAND_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_SelectFloat_ReturnValue_3) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_GetCameraLocation_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Get_Camera_Location_and_Camera_Relative_Heights::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Cloud Shadows Intensity and Softness
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness final
{
public:
	double                                        Intensity;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Softness;                                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, Softness) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::Softness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Lerp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness, CallFunc_Lerp_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Cloud_Shadows_Intensity_and_Softness::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Date and Time
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time final
{
public:
	struct FDateTime                              Current_Date_and_Time;                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x0010(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_MakeDateTime_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, Current_Date_and_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::Current_Date_and_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_FTrunc_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time, CallFunc_MakeDateTime_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Date_and_Time::CallFunc_MakeDateTime_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Fog Base Colors
// 0x0500 (0x0500 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors final
{
public:
	struct FLinearColor                           Ambient_Fog_Color_0;                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Directional_Base_Color;                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Scaled_Directional_Base_Color;                     // 0x0020(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Sun_Fog_Base;                                      // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Moon_Fog_Base;                                     // 0x0040(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Base_Directional_Scattering_Fog_Color;       // 0x0050(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Fog_Brightness_Multiplier;                   // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Dust_Fog_Color;                              // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Desaturation_Amount;                               // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Base_Moon_Fog_Color;                         // 0x0088(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Local_Base_Sun_Fog_Color;                          // 0x0098(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out_1;               // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Luminance_Boost_Out;             // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Brightness_ReturnValue;          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0108(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x01E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x01F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Subtract_LinearColorLinearColor_ReturnValue; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6; // 0x0248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Moon_Lit_Percent_ReturnValue;     // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Twilight_Brightness_Falloff_Scale;        // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_1;        // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_4;   // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_5;   // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7; // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8; // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity; // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier; // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_6;   // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9; // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Twilight_Brightness_Falloff_Scale_1;      // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_7;   // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue_2;        // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10; // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11; // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity_1; // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier_1; // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12; // 0x03F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13; // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_8;   // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14; // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15; // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1; // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0450(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16; // 0x0460(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17; // 0x0470(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18; // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19; // 0x0490(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x04A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x04B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x04C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20; // 0x04D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1; // 0x04EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast_1; // 0x04F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast_2; // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x04F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_2;     // 0x04FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors) == 0x000500, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Ambient_Fog_Color_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Ambient_Fog_Color_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Directional_Base_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Scaled_Directional_Base_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Scaled_Directional_Base_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Sun_Fog_Base) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Sun_Fog_Base' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Moon_Fog_Base) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Moon_Fog_Base' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Local_Base_Directional_Scattering_Fog_Color) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Local_Base_Directional_Scattering_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Local_Fog_Brightness_Multiplier) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Local_Fog_Brightness_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Local_Dust_Fog_Color) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Local_Dust_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Desaturation_Amount) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Desaturation_Amount' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Local_Base_Moon_Fog_Color) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Local_Base_Moon_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, Local_Base_Sun_Fog_Color) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::Local_Base_Sun_Fog_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Cloud_Coverage_Local_Out) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Cloud_Coverage_Local_Out_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Cloud_Coverage_Local_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Overcast_Luminance_Boost_Out) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Overcast_Luminance_Boost_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Directional_Light_Dimming_Out) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Overcast_Brightness_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Overcast_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_X) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Y) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Z) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_1) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_2) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Lerp_ReturnValue_3) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_LinearColorLinearColor_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_FMax_ReturnValue_2) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Current_Moon_Lit_Percent_ReturnValue) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Current_Moon_Lit_Percent_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_X_1) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_1) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_1) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Twilight_Brightness_Falloff_Scale) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Twilight_Brightness_Falloff_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue_1) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_4) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_5) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_SelectColor_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_6) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_X_2) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Y_2) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_BreakVector_Z_2) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Twilight_Brightness_Falloff_Scale_1) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Twilight_Brightness_Falloff_Scale_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_7) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_ReturnValue_2) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity_1) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier_1) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue_8) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x0004A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x0004B0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_ReturnValue_2) == 0x0004C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0004E4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1) == 0x0004EC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast_1) == 0x0004F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_GetLinearColorValue_InTime_ImplicitCast_2) == 0x0004F4, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_GetLinearColorValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors, CallFunc_LinearColorLerp_Alpha_ImplicitCast_2) == 0x0004FC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Fog_Base_Colors::CallFunc_LinearColorLerp_Alpha_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Sky Light Color and Intensity
// 0x0298 (0x0298 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity final
{
public:
	double                                        Out_Intensity;                                     // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out_Color;                                         // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out_1;               // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue_1;     // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue;     // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out;             // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_1;   // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0118(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0188(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_189[0x7];                                      // 0x0189(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x01C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_2;   // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x3];                                      // 0x01E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x01EC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_3;   // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_GetLuminance_ReturnValue_4;   // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_A_ImplicitCast;                      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_A_ImplicitCast;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0288(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SafeDivide_B_ImplicitCast;                // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity) == 0x000298, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Out_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Out_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, Out_Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::Out_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Cloud_Coverage_Local_Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Combined_Night_Brightness_out) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Night_Filter_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Cloud_Coverage_Local_Out_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Cloud_Coverage_Local_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Lerp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Current_Night_Sky_Glow_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Current_Night_Sky_Glow_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Simplified_Current_Color_Out) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Simplified_Current_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_VSize_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_ReturnValue_2) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Normal_ReturnValue) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectColor_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_2) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SelectColor_ReturnValue_1) == 0x0001EC, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_3) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_ReturnValue) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColor_GetLuminance_ReturnValue_4) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColor_GetLuminance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_FMax_A_ImplicitCast) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_FMax_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_A_ImplicitCast) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity, CallFunc_SafeDivide_B_ImplicitCast) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Sky_Light_Color_and_Intensity::CallFunc_SafeDivide_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Current Volumetric Cloud Extinction Scale
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale final
{
public:
	double                                        Top;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale, Top) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Current_Volumetric_Cloud_Extinction_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Nearby Cloud Cells To Load Asynchronously
// 0x0120 (0x0120 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously final
{
public:
	class AUDS_Cloud_Paint_Container_C*           Container;                                         // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Current_Cell_Texture;                              // 0x0008(0x0030)(Edit, BlueprintVisible, HasGetValueTypeHash)
	struct FIntPoint                              Current_Cell;                                      // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FIntPoint>                      CallFunc_Map_Keys_Keys;                            // 0x0048(0x0010)(ReferenceParm)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUDS_Cloud_Paint_Container_C*           CallFunc_GetActorOfClass_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x00A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Cloud_Paint_Cell_C*                CallFunc_Map_Find_Value;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Distance2D_ReturnValue;                   // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously) == 0x000120, "Wrong size on Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Container) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Container' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Current_Cell_Texture) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Current_Cell_Texture' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Current_Cell) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Current_Cell' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Temp_int_Array_Index_Variable) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Map_Keys_Keys) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Array_Get_Item) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Array_Length_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_GetActorOfClass_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_IsValid_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Less_IntInt_ReturnValue) == 0x000089, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, K2Node_DynamicCast_AsTexture_2D) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Array_Contains_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Map_Find_Value) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Map_Find_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Distance2D_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Distance2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Get_Nearby_Cloud_Cells_To_Load_Asynchronously::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Sky MID Parent Material Instance
// 0x01E0 (0x01E0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      ReturnValue;                                       // 0x0000(0x0030)(Parm, OutParm, ReturnParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_33[0x5];                                       // 0x0033(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x0048(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B[0x5];                                       // 0x007B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_1;               // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_2;               // 0x0098(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue_3;               // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x00C0(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2[0x6];                                       // 0x00F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_SelectString_ReturnValue_4;               // 0x00F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0118(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0128(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0138(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInstance>       CallFunc_Map_Find_Value;                           // 0x0148(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x7];                                      // 0x0179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0180(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_2;                           // 0x01B0(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance) == 0x0001E0, "Wrong size on Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, Temp_bool_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000032, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, Temp_bool_Variable_1) == 0x000079, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00007A, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_3) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, Temp_bool_Variable_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000B9, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0000BA, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, K2Node_Select_Default) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_BooleanAND_ReturnValue_2) == 0x0000F1, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_SelectString_ReturnValue_4) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_SelectString_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Map_Find_Value) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, CallFunc_Map_Find_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, K2Node_Select_Default_1) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance, K2Node_Select_Default_2) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Get_Sky_MID_Parent_Material_Instance::K2Node_Select_Default_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Time of Day in Real Time Format
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format final
{
public:
	struct FTimecode                              Time;                                              // 0x0000(0x0014)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimecode                              CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode; // 0x0014(0x0014)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format, Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format, CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Get_Time_of_Day_in_Real_Time_Format::CallFunc_Convert_Time_of_Day_to_Time_Code_Timecode' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Get Volumetric Cloud Emissive Colors
// 0x0198 (0x0198 - 0x0000)
struct Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors final
{
public:
	struct FLinearColor                           Bottom;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Top;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Cloud_Ambient_Light_Color_Bottom; // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Cloud_Ambient_Light_Color_Top; // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Light_Pollution_ReturnValue;      // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_Night_Sky_Glow_ReturnValue;       // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_2;  // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_2; // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0120(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0138(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_3;  // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_3; // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_4; // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors) == 0x000198, "Wrong size on Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Bottom) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, Top) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Volumetric_Cloud_Ambient_Light_Color_Bottom) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Volumetric_Cloud_Ambient_Light_Color_Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Volumetric_Cloud_Ambient_Light_Color_Top) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Volumetric_Cloud_Ambient_Light_Color_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_MapRangeClamped_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Night_Filter_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Current_Light_Pollution_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Current_Light_Pollution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Current_Night_Sky_Glow_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Current_Night_Sky_Glow_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_2) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_ReturnValue_3) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_3) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_SelectColor_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Add_LinearColorLinearColor_ReturnValue_4) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Add_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x000194, "Member 'Ultra_Dynamic_Sky_C_Get_Volumetric_Cloud_Emissive_Colors::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.MS to Time of Day
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_MS_to_Time_of_Day final
{
public:
	int32                                         Hours;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Minutes;                                           // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Seconds;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Miliseconds;                                       // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time;                                              // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_MS_to_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_MS_to_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Hours) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Hours' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Minutes) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Minutes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Seconds) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Seconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Miliseconds) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Miliseconds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, Time) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_MS_to_Time_of_Day, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_MS_to_Time_of_Day::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Hourly__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Hourly__DelegateSignature final
{
public:
	int32                                         Hour;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Hourly__DelegateSignature) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Hourly__DelegateSignature");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Hourly__DelegateSignature) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Hourly__DelegateSignature");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Hourly__DelegateSignature, Hour) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Hourly__DelegateSignature::Hour' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increase Tick Frequency
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Increase_Tick_Frequency final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Increase_Tick_Frequency");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Increase_Tick_Frequency");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Not_PreBool_ReturnValue_1) == 0x000007, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_Not_PreBool_ReturnValue_2) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_1) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_2) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_3) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_4) == 0x00000D, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_5) == 0x00000E, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increase_Tick_Frequency, CallFunc_BooleanOR_ReturnValue_6) == 0x00000F, "Member 'Ultra_Dynamic_Sky_C_Increase_Tick_Frequency::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increment Cache Timer
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Increment_Cache_Timer final
{
public:
	double                                        CallFunc_Scaled_Cache_Period_Period;               // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Increment_Cache_Timer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Increment_Cache_Timer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Scaled_Cache_Period_Period) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Scaled_Cache_Period_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_FMin_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Cache_Timer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Increment_Cache_Timer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Increment Day
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Increment_Day final
{
public:
	bool                                          Leap_Year;                                         // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<int32>                                 K2Node_Select_Default;                             // 0x0028(0x0010)(ReferenceParm)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Increment_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Increment_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Increment_Day) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Increment_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Leap_Year) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Leap_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_bool_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Greater_IntInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, Temp_int_Variable_2) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, K2Node_Select_Default) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Subtract_IntInt_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Array_Get_Item) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Add_IntInt_ReturnValue_4) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_Percent_IntInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Increment_Day, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Increment_Day::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Initialize Occlusion
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_Initialize_Occlusion final
{
public:
	bool                                          Temp_bool_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               K2Node_Select_Default;                             // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Initialize_Occlusion) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Initialize_Occlusion");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Initialize_Occlusion) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_Initialize_Occlusion");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Initialize_Occlusion, Temp_bool_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Initialize_Occlusion::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Initialize_Occlusion, Temp_byte_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Initialize_Occlusion::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Initialize_Occlusion, Temp_byte_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Initialize_Occlusion::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Initialize_Occlusion, K2Node_Select_Default) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Initialize_Occlusion::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Inside Outside Cloud Layer
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Fraction_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_FClamp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_Abs_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer, CallFunc_MapRangeClamped_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Inside_Outside_Cloud_Layer::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is it Daytime?
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_it_Daytime_ final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_it_Daytime_) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_it_Daytime_");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_it_Daytime_) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Is_it_Daytime_");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_GetForwardVector_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_BreakVector_X) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_BreakVector_Y) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_BreakVector_Z) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_it_Daytime_, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_it_Daytime_::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Lens Flare Enabled
// 0x0128 (0x0128 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFOVAngle_ReturnValue;                  // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetCameraRotation_ReturnValue;            // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Hypotenuse_ReturnValue;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled) == 0x000128, "Wrong size on Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_FMax_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_FMax_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetCameraLocation_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_X_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BreakVector_Z_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetFOVAngle_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetFOVAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetCameraRotation_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetCameraRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Hypotenuse_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Hypotenuse_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_GetForwardVector_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Dot_VectorVector_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_DegAcos_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanAND_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000119, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanOR_ReturnValue) == 0x00011A, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanOR_ReturnValue_1) == 0x00011B, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanAND_ReturnValue_1) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanAND_ReturnValue_2) == 0x00011D, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanOR_ReturnValue_2) == 0x00011E, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_BooleanOR_ReturnValue_3) == 0x00011F, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Is_Lens_Flare_Enabled::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Location Inside Cloud Layer
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Inside;                                            // 0x0018(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, Inside) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::Inside' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_BreakVector_X) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_BreakVector_Y) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_BreakVector_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer, CallFunc_BooleanAND_ReturnValue) == 0x00004A, "Member 'Ultra_Dynamic_Sky_C_Is_Location_Inside_Cloud_Layer::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Moon Light Casting Shadows
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, Temp_bool_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_MakeLiteralByte_ReturnValue) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Array_Get_Item) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanOR_ReturnValue) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanOR_ReturnValue_1) == 0x000043, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, K2Node_Select_Default) == 0x000045, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_2) == 0x000046, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_3) == 0x000047, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_4) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_5) == 0x000052, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows, K2Node_Select_Default_1) == 0x000053, "Member 'Ultra_Dynamic_Sky_C_Is_Moon_Light_Casting_Shadows::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Is Sun Light Casting Shadows
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows final
{
public:
	bool                                          Yes;                                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default_1;                           // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, Yes) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, Temp_bool_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000031, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanOR_ReturnValue_1) == 0x000033, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, K2Node_Select_Default) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_1) == 0x000036, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000041, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_3) == 0x000042, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanAND_ReturnValue_4) == 0x000043, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, K2Node_Select_Default_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows, CallFunc_BooleanOR_ReturnValue_2) == 0x000045, "Member 'Ultra_Dynamic_Sky_C_Is_Sun_Light_Casting_Shadows::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Lens Flare Parent Material
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Mat;                                               // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	EUDS_LensFlareType                            Temp_byte_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0068(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x0098(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0108(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0138(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material) == 0x000168, "Wrong size on Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Mat) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_byte_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_softobject_Variable_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, Temp_bool_Variable) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, K2Node_Select_Default) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material, K2Node_Select_Default_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Lens_Flare_Parent_Material::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Load Required Assets
// 0x05A0 (0x05A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Load_Required_Assets final
{
public:
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_1;         // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item;                           // 0x0018(0x0278)(HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Space_Planet_Parent_MID_Out;              // 0x0298(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_2;         // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_3;         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_4;         // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_5;         // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_6;         // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_7;         // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x3];                                      // 0x02F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_8;         // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_9;         // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_10;        // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_11;        // 0x0320(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0328(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_329[0x7];                                      // 0x0329(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_12;        // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Lens_Flare_Parent_Material_Mat;           // 0x0338(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_13;        // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_14;        // 0x0370(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_15;        // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Cloud_Shadows_Parent_Material_Mat;        // 0x0380(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_16;        // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_17;        // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Simplified; // 0x03C0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Volumetric_Clouds_Parent_Materials_Complex; // 0x03F0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Static_Clouds_Parent_Material_Material;   // 0x0420(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_18;        // 0x0450(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_19;        // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_20;        // 0x0460(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_21;        // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_22;        // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_23;        // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_24;        // 0x0488(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0492(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_493[0x5];                                      // 0x0493(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Texture_Tex;               // 0x0498(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_25;        // 0x04C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x04D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D1[0x7];                                      // 0x04D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x04D8(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_26;        // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Texture_Tex_1;             // 0x0510(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue; // 0x0540(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_27;        // 0x0570(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_28;        // 0x0578(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_29;        // 0x0580(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x7];                                      // 0x0589(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_30;        // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue_31;        // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Load_Required_Assets) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Load_Required_Assets");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Load_Required_Assets) == 0x0005A0, "Wrong size on Ultra_Dynamic_Sky_C_Load_Required_Assets");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_1) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, Temp_int_Array_Index_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Array_Get_Item) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Array_Length_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Space_Planet_Parent_MID_Out) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Space_Planet_Parent_MID_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_2) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_3) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_4) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_5) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_6) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_7) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, Temp_int_Loop_Counter_Variable) == 0x0002FC, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Less_IntInt_ReturnValue) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Add_IntInt_ReturnValue) == 0x000304, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_8) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_9) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_10) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_11) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, K2Node_SwitchEnum_CmpSuccess) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_12) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Lens_Flare_Parent_Material_Mat) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Lens_Flare_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_13) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_14) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_15) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Cloud_Shadows_Parent_Material_Mat) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Cloud_Shadows_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_16) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_17) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Parent_Materials_Simplified) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Parent_Materials_Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Parent_Materials_Complex) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Parent_Materials_Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Static_Clouds_Parent_Material_Material) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Static_Clouds_Parent_Material_Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_18) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_19) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_20) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_21) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_IsValid_ReturnValue) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_22) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_23) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_24) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000491, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_BooleanAND_ReturnValue) == 0x000492, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_2D_Clouds_Base_Texture_Tex) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_2D_Clouds_Base_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_25) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_BooleanOR_ReturnValue) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_26) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_2D_Clouds_Base_Texture_Tex_1) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_2D_Clouds_Base_Texture_Tex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_Get_Sky_MID_Parent_Material_Instance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_27) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_28) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_29) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, K2Node_SwitchEnum_CmpSuccess_1) == 0x000588, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_30) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Load_Required_Assets, CallFunc_LoadAsset_Blocking_ReturnValue_31) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Load_Required_Assets::CallFunc_LoadAsset_Blocking_ReturnValue_31' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Monitor for Changes
// 0x01F0 (0x01F0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Monitor_for_Changes final
{
public:
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_3;                     // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue_1;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_6;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_7;       // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_1;         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_8;       // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_2;         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_2;                       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_9;       // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Constant_ReturnValue_3;         // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3;  // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue_3;                       // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Monitor_for_Changes) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Monitor_for_Changes");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Monitor_for_Changes) == 0x0001F0, "Wrong size on Ultra_Dynamic_Sky_C_Monitor_for_Changes");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_BooleanOR_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Normal_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Normal_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Normal_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Normal_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Normal_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Vector_Distance_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Vector_Distance_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Vector_Distance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FClamp_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_6) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FMax_ReturnValue) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_SelectFloat_ReturnValue) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_7) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FInterpTo_Constant_ReturnValue_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FInterpTo_Constant_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FClamp_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FMax_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_SelectFloat_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue_2) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_8) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FClamp_ReturnValue_2) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FInterpTo_Constant_ReturnValue_2) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FInterpTo_Constant_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FMax_ReturnValue_2) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FMax_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_SelectFloat_ReturnValue_2) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GetWorldDeltaSeconds_ReturnValue_9) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GetWorldDeltaSeconds_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FInterpTo_Constant_ReturnValue_3) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FInterpTo_Constant_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FClamp_ReturnValue_3) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_FMax_ReturnValue_3) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_FMax_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_SelectFloat_ReturnValue_3) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Monitor_for_Changes, CallFunc_Abs_ReturnValue_3) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Monitor_for_Changes::CallFunc_Abs_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Specular Scale
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_FClamp_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Specular_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Light Volumetric Scattering Intensity
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Light_Volumetric_Scattering_Intensity::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Phase Multiplier
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Without_Light_Brightness;                          // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, Without_Light_Brightness) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_FClamp_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_Lerp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Moon_Phase_Multiplier::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Moon Z Vector
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Moon_Z_Vector final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3;  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Moon_Z_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Moon_Z_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Moon_Z_Vector) == 0x0000A0, "Wrong size on Ultra_Dynamic_Sky_C_Moon_Z_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_SelectVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Moon_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Moon_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Night Filter
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Night_Filter final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Night_Filter) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Night_Filter");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Night_Filter) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Night_Filter");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_GetFloatValue_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Night_Filter, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Night_Filter::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Notify of Removed Cloud Paint Container
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Notify_of_Removed_Cloud_Paint_Container::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.OnLoaded_AA91001A446E22425F2F54AAB2159C50
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50 final
{
public:
	class UObject*                                Loaded;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50");
static_assert(sizeof(Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50");
static_assert(offsetof(Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50, Loaded) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_OnLoaded_AA91001A446E22425F2F54AAB2159C50::Loaded' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.OnRep_Replicated Time of Day
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day final
{
public:
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day, CallFunc_HasAuthority_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_OnRep_Replicated_Time_of_Day::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Overcast Brightness
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Overcast_Brightness final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Overcast_Brightness) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Overcast_Brightness");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Overcast_Brightness) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Overcast_Brightness");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_Night_Filter_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_Abs_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Brightness, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Overcast_Brightness::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Overcast Light Contribution
// 0x00B0 (0x00B0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Overcast_Light_Contribution final
{
public:
	bool                                          For_Volumetric_Clouds;                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           ReturnValue;                                       // 0x0004(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Flat_Cloudiness_On;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Dimming_Directional_Lights_ReturnValue;   // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0064(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0074(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0084(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0094(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Overcast_Light_Contribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution) == 0x0000B0, "Wrong size on Ultra_Dynamic_Sky_C_Overcast_Light_Contribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, For_Volumetric_Clouds) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::For_Volumetric_Clouds' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Flat_Cloudiness_On) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Flat_Cloudiness_On' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Directional_Light_Dimming_Out) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Dimming_Directional_Lights_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Dimming_Directional_Lights_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_SelectFloat_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_BooleanAND_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_SelectColor_ReturnValue) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Light_Contribution, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Overcast_Light_Contribution::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Overcast Luminance Boost
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost final
{
public:
	double                                        Multiplier;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Overcast_Luminance_Boost::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Query Project Settings And UDS Version
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version final
{
public:
	EUDS_FogColorMode                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue;  // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetConsoleVariableBoolValue_ReturnValue_1; // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, Temp_byte_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, Temp_bool_Variable) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, Temp_bool_Variable_1) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_GetConsoleVariableBoolValue_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_GetConsoleVariableBoolValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_GetConsoleVariableBoolValue_ReturnValue_1) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_GetConsoleVariableBoolValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, CallFunc_BooleanAND_ReturnValue) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version, K2Node_Select_Default) == 0x000007, "Member 'Ultra_Dynamic_Sky_C_Query_Project_Settings_And_UDS_Version::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Ultra_Dynamic_Sky_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_ReceiveEndPlay");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ReceiveEndPlay) == 0x000001, "Wrong size on Ultra_Dynamic_Sky_C_ReceiveEndPlay");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Ultra_Dynamic_Sky_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_ReceiveTick) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_ReceiveTick");
static_assert(sizeof(Ultra_Dynamic_Sky_C_ReceiveTick) == 0x000004, "Wrong size on Ultra_Dynamic_Sky_C_ReceiveTick");
static_assert(offsetof(Ultra_Dynamic_Sky_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Release Async Loaded Object
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object final
{
public:
	TSoftObjectPtr<class UObject>                 Object;                                            // 0x0000(0x0030)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object, Object) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object::Object' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object, CallFunc_Array_RemoveItem_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Release_Async_Loaded_Object::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Restart Real Time Sky Light Capture
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture final
{
public:
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_BooleanAND_ReturnValue_1) == 0x000005, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_BooleanAND_ReturnValue_2) == 0x000006, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture, CallFunc_BooleanAND_ReturnValue_3) == 0x000007, "Member 'Ultra_Dynamic_Sky_C_Restart_Real_Time_Sky_Light_Capture::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Scale Sample Count
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Scale_Sample_Count final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetRenderingMaterialQualityLevel_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Scale_Sample_Count) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Scale_Sample_Count");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Scale_Sample_Count) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Scale_Sample_Count");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Temp_int_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, Temp_real_Variable) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, CallFunc_GetRenderingMaterialQualityLevel_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::CallFunc_GetRenderingMaterialQualityLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, K2Node_Select_Default) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scale_Sample_Count, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Scale_Sample_Count::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Scaled Cache Period
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Scaled_Cache_Period final
{
public:
	double                                        Period;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_1;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_2;                       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_3;                       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_4;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue_5;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Scaled_Cache_Period");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period) == 0x0000A0, "Wrong size on Ultra_Dynamic_Sky_C_Scaled_Cache_Period");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, Period) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_Abs_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue_3) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue_4) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FMin_ReturnValue_5) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FMin_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_FClamp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Scaled_Cache_Period, CallFunc_Lerp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Scaled_Cache_Period::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Cache Alpha
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Cache_Alpha final
{
public:
	EUDS_Project_Mode                             Temp_byte_Variable;                                // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scaled_Cache_Period_Period;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Cache_Alpha");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Set_Cache_Alpha");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, Temp_byte_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, Temp_real_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, CallFunc_Scaled_Cache_Period_Period) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::CallFunc_Scaled_Cache_Period_Period' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, CallFunc_FMin_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cache_Alpha, K2Node_Select_Default) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Cache_Alpha::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Cloud Timing
// 0x0388 (0x0388 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Cloud_Timing final
{
public:
	double                                        Clouds_Time_Offset;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Shadow_Position_Color;                       // 0x0008(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Shadow_Phase_Color;                          // 0x0018(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Phase_Color;                                 // 0x0028(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Clouds_Position_Color;                             // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Current_Time_of_Day_Factor;                        // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Time_of_Day_Factor;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Clouds_Time_of_Day_Factor_ReturnValue;    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cached_Vector_Value;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out;              // 0x00D0(0x0010)(ReferenceParm)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FC[0x4];                                       // 0x00FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x3];                                      // 0x0109(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x010C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x011C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x012C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x013C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_1;            // 0x0150(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1;  // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_2;            // 0x01E0(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x01F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x020C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20D[0x3];                                      // 0x020D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_3;            // 0x0210(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22C[0x4];                                      // 0x022C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_4;            // 0x0230(0x0010)(ReferenceParm)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_2;  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0278(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue_1;     // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E1[0x7];                                      // 0x02E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0300(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue_1;  // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_4;   // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_369[0x3];                                      // 0x0369(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x0370(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1; // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Cloud_Timing");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing) == 0x000388, "Wrong size on Ultra_Dynamic_Sky_C_Set_Cloud_Timing");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Clouds_Time_Offset) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Clouds_Time_Offset' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Cloud_Shadow_Position_Color) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Cloud_Shadow_Position_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Cloud_Shadow_Phase_Color) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Cloud_Shadow_Phase_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Cloud_Phase_Color) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Cloud_Phase_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Clouds_Position_Color) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Clouds_Position_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Current_Time_of_Day_Factor) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Current_Time_of_Day_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Time_of_Day_Factor) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Time_of_Day_Factor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_1) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_3) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_3) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, Temp_int_Variable_4) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_IntInt_ReturnValue_4) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Clouds_Time_of_Day_Factor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Clouds_Time_of_Day_Factor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Get_Cached_Vector_Value) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Get_Cached_Vector_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x00010C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x00011C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x00012C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_1) == 0x00016C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_VectorVector_ReturnValue) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out_2) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_2) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_2) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_2) == 0x00020C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out_3) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_3) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_3) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Both_Cloud_Shadows_MIDs_Out_4) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Both_Cloud_Shadows_MIDs_Out_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_3) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Get_Item_4) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Array_Length_ReturnValue_4) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Less_IntInt_ReturnValue_4) == 0x000254, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_2) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Clouds_Time_of_Day_Factor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Cloud_Texture_Velocity_ReturnValue_1) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Cloud_Texture_Velocity_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SelectVector_ReturnValue) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_ReturnValue_1) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Conv_VectorToLinearColor_ReturnValue_4) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Conv_VectorToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SelectFloat_ReturnValue_1) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x00036C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1) == 0x000374, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00037C, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Cloud_Timing, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Set_Cloud_Timing::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Date and Time
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Date_and_Time final
{
public:
	struct FDateTime                              Date_Time;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Date_and_Time) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Date_and_Time");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Date_and_Time) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Set_Date_and_Time");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, Date_Time) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::Date_Time' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Year) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Month) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Day) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Hour) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Minute) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Second) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_BreakDateTime_Millisecond) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Date_and_Time, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Date_and_Time::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Sun and Moon Root Rotation
// 0x0968 (0x0968 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation final
{
public:
	struct FVector                                Moon_Alignment;                                    // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Real_Moon_Phase;                                   // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Moon_Position;                                // 0x0020(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Real_Sun_Position;                                 // 0x0038(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Sun_Z_Vector_out;                         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Temp_int_Variable_2;                               // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00A8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Moon_Z_Vector_out;                        // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x0220(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_2;                 // 0x0230(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_3;                 // 0x0240(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_4;                 // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cached_Vector_Value;                  // 0x0260(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Cached_Vector_Value_1;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotFromXZ_ReturnValue_1;              // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_5;                 // 0x02C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Sun_Shadows_MIDs_Out;                     // 0x02D8(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x02E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F5[0x3];                                      // 0x02F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_305[0x3];                                      // 0x0305(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0330(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0340(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult;    // 0x0358(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue_1;       // 0x0440(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeRotation_SweepHitResult_1;  // 0x0460(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0548(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult_1;  // 0x0638(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0724(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_3;                         // 0x0725(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_726[0x2];                                      // 0x0726(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0728(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0740(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75A[0x2];                                      // 0x075A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_4;                         // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0762(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_763[0x5];                                      // 0x0763(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_4;           // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x0780(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0868(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_2;     // 0x0878(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0960(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0964(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation) == 0x000968, "Wrong size on Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Moon_Alignment) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Moon_Alignment' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Moon_Phase) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Moon_Phase' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Moon_Position) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Moon_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Real_Sun_Position) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Real_Sun_Position' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Temp_int_Variable) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Temp_int_Variable_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Z_Vector_out) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Z_Vector_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_IsValid_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, Temp_int_Variable_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Add_IntInt_ReturnValue_2) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_1) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Moon_Z_Vector_out) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Moon_Z_Vector_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Float_Value) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_1) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_2) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_3) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_4) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Vector_Value) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Vector_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Vector_Value_1) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Vector_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeRotFromXZ_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeRotFromXZ_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeRotFromXZ_ReturnValue_1) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeRotFromXZ_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Color_Value_5) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Color_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Get_Cached_Float_Value_1) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Sun_Shadows_MIDs_Out) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Sun_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Length_ReturnValue) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Less_IntInt_ReturnValue) == 0x0002F4, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item_1) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Length_ReturnValue_1) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Less_IntInt_ReturnValue_1) == 0x000304, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item_2) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Length_ReturnValue_2) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Less_IntInt_ReturnValue_2) == 0x000314, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_2) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToRotator_ReturnValue_1) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeRotation_SweepHitResult_1) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeLiteralByte_ReturnValue) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetRelativeLocation_SweepHitResult_1) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetRelativeLocation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_2) == 0x000724, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item_3) == 0x000725, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_3) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Using_2D_Clouds_ReturnValue) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000759, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x00075C, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Array_Get_Item_4) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_3) == 0x000761, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_BooleanOR_ReturnValue_4) == 0x000762, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_GetForwardVector_ReturnValue_4) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_GetForwardVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000868, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_K2_SetWorldRotation_SweepHitResult_2) == 0x000878, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_K2_SetWorldRotation_SweepHitResult_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000960, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000964, "Member 'Ultra_Dynamic_Sky_C_Set_Sun_and_Moon_Root_Rotation::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Time of Day using Time Code
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code final
{
public:
	struct FTimecode                              Time_Code;                                         // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_H_M_S_MS_to_Time_of_Day_Time;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, Time_Code) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::Time_Code' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_FTrunc_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code, CallFunc_H_M_S_MS_to_Time_of_Day_Time) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Time_of_Day_using_Time_Code::CallFunc_H_M_S_MS_to_Time_of_Day_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Up Lens Flare
// 0x0790 (0x0790 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare final
{
public:
	struct FWeightedBlendable                     K2Node_MakeStruct_WeightedBlendable;               // 0x0000(0x0010)(NoDestructor)
	TArray<struct FWeightedBlendable>             K2Node_MakeArray_Array;                            // 0x0010(0x0010)(ReferenceParm)
	struct FWeightedBlendables                    K2Node_MakeStruct_WeightedBlendables;              // 0x0020(0x0010)()
	struct FPostProcessSettings                   K2Node_MakeStruct_PostProcessSettings;             // 0x0030(0x06E0)()
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0710(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      CallFunc_Lens_Flare_Parent_Material_Mat;           // 0x0720(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0758(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_762[0x6];                                      // 0x0762(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0778(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0779(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77A[0x2];                                      // 0x077A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_LinearColorFloat_B_ImplicitCast; // 0x077C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0780(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare) == 0x000790, "Wrong size on Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_WeightedBlendable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_WeightedBlendable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeArray_Array) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_WeightedBlendables) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_WeightedBlendables' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_MakeStruct_PostProcessSettings) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_MakeStruct_PostProcessSettings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Lens_Flare_Parent_Material_Mat) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Lens_Flare_Parent_Material_Mat' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_DynamicCast_AsMaterial_Interface) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, K2Node_DynamicCast_bSuccess) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Not_PreBool_ReturnValue) == 0x000761, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Not_PreBool_ReturnValue_1) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_BooleanAND_ReturnValue) == 0x000779, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_Multiply_LinearColorFloat_B_ImplicitCast) == 0x00077C, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_Multiply_LinearColorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Lens_Flare::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Up Overcast Turbulence
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x0008(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_DynamicCast_AsMaterial_Interface;           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_AsMaterial_Interface) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_AsMaterial_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_AsTexture_2D) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, K2Node_DynamicCast_bSuccess_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_IsDedicatedServer_ReturnValue) == 0x000071, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_Not_PreBool_ReturnValue) == 0x000072, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_BooleanAND_ReturnValue) == 0x000073, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence, CallFunc_BooleanAND_ReturnValue_1) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Overcast_Turbulence::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Set Up Volumetric Cloud Light Rays
// 0x0198 (0x0198 - 0x0000)
struct Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude_1; // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x00E0(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0110(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0158(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UNiagaraSystem*                         K2Node_DynamicCast_AsNiagara_System;               // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x016A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x016B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x016C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_1;   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_2;   // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_3;   // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_4;   // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_5;   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_6;   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_7;   // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_8;   // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast_9;   // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays) == 0x000198, "Wrong size on Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_BreakVector_X) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_BreakVector_Y) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_BreakVector_Z) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Lerp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_FMax_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, K2Node_DynamicCast_AsTexture_2D) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, K2Node_DynamicCast_bSuccess) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_FFloor_ReturnValue) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_FFloor_ReturnValue_1) == 0x00014C, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, K2Node_DynamicCast_AsNiagara_System) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::K2Node_DynamicCast_AsNiagara_System' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000169, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_BooleanAND_ReturnValue) == 0x00016A, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_BooleanAND_ReturnValue_1) == 0x00016B, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x00016C, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_1) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_2) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_3) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_4) == 0x00017C, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_5) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_6) == 0x000184, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_7) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_8) == 0x00018C, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast_9) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Set_Up_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast_9' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Simplified Current Color
// 0x0080 (0x0080 - 0x0000)
struct Ultra_Dynamic_Sky_C_Simplified_Current_Color final
{
public:
	struct FLinearColor                           Day_Color;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Dusk_Color;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Night_Color;                                       // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Out;                                               // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Simplified_Current_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Simplified_Current_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Simplified_Current_Color) == 0x000080, "Wrong size on Ultra_Dynamic_Sky_C_Simplified_Current_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, Day_Color) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::Day_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, Dusk_Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::Dusk_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, Night_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::Night_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, Out) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_Sun_Height_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_Night_Filter_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Current_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Simplified_Current_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Simplified Sun Glow Color
// 0x0118 (0x0118 - 0x0000)
struct Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color final
{
public:
	struct FLinearColor                           Out;                                               // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetLinearColorValue_ReturnValue;          // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x00B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetLinearColorValue_InTime_ImplicitCast;  // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color) == 0x000118, "Wrong size on Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Sun_Height_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_GetLinearColorValue_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_GetLinearColorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, K2Node_MakeStruct_LinearColor) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, CallFunc_GetLinearColorValue_InTime_ImplicitCast) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::CallFunc_GetLinearColorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color, K2Node_MakeStruct_A_ImplicitCast) == 0x000114, "Member 'Ultra_Dynamic_Sky_C_Simplified_Sun_Glow_Color::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Size Cache Arrays
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Size_Cache_Arrays final
{
public:
	int32                                         Size;                                              // 0x0000(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MakeLiteralInt_ReturnValue;               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays) == 0x000004, "Wrong alignment on Ultra_Dynamic_Sky_C_Size_Cache_Arrays");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Size_Cache_Arrays");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays, Size) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Size_Cache_Arrays::Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Size_Cache_Arrays, CallFunc_MakeLiteralInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Size_Cache_Arrays::CallFunc_MakeLiteralInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sky Atmosphere Fog Contribution
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution final
{
public:
	double                                        Output;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Brightness_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out_1;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, Output) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::Output' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Overcast_Brightness_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Overcast_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Cloud_Coverage_Local_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Cloud_Coverage_Local_Out_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Cloud_Coverage_Local_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Sun_Height_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Night_Filter_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_GetFloatValue_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Lerp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_SelectFloat_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Sky_Atmosphere_Fog_Contribution::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sky MID Cloud Density
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_Using_2D_Clouds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sky_MID_Cloud_Density::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Solar Eclipse Circle Mask
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask final
{
public:
	double                                        Sun_Angular_Radius;                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Moon_Angular_Radius;                               // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Moon_Vector;                                       // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Moon_Softness;                                     // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fraction_Showing;                                  // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Sun_Angular_Radius) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Sun_Angular_Radius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Moon_Angular_Radius) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Moon_Angular_Radius' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Moon_Vector) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Moon_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Moon_Softness) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Moon_Softness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, Fraction_Showing) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::Fraction_Showing' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_SafeDivide_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_SelectFloat_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_SelectFloat_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_Dot_VectorVector_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_DegAcos_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask, CallFunc_MapRangeClamped_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Solar_Eclipse_Circle_Mask::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Space Planet Parent MID
// 0x05A8 (0x05A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID final
{
public:
	struct FUDS_Space_Planet                      Planet;                                            // 0x0000(0x0278)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Out;                                               // 0x0278(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x7];                                      // 0x02A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x02B0(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue;   // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValidSoftObjectReference_ReturnValue_1; // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E3[0x5];                                      // 0x02E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x02E8(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x0320(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_3;                        // 0x0350(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x7];                                      // 0x0381(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_4;                        // 0x0388(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_5;                        // 0x03B8(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_6;                        // 0x03F0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_7;                        // 0x0420(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_6;                              // 0x0452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_453[0x5];                                      // 0x0453(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0458(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0488(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_2;                           // 0x04B8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_3;                           // 0x04E8(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_4;                           // 0x0518(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_5;                           // 0x0548(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_6;                           // 0x0578(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID) == 0x0005A8, "Wrong size on Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Planet) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Planet' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Out) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, CallFunc_IsValidSoftObjectReference_ReturnValue) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::CallFunc_IsValidSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, CallFunc_BooleanOR_ReturnValue) == 0x0002E1, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, CallFunc_IsValidSoftObjectReference_ReturnValue_1) == 0x0002E2, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::CallFunc_IsValidSoftObjectReference_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_1) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable_1) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_2) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_3) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable_2) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_4) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_5) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable_3) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_6) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_softobject_Variable_7) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_softobject_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable_4) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable_5) == 0x000451, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, Temp_bool_Variable_6) == 0x000452, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::Temp_bool_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default_1) == 0x000488, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default_2) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default_3) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default_4) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default_5) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID, K2Node_Select_Default_6) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Space_Planet_Parent_MID::K2Node_Select_Default_6' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Starting Cloud Formation
// 0x0060 (0x0060 - 0x0000)
struct Ultra_Dynamic_Sky_C_Starting_Cloud_Formation final
{
public:
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cloud_Texture_Velocity_ReturnValue;       // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Starting_Cloud_Formation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation) == 0x000060, "Wrong size on Ultra_Dynamic_Sky_C_Starting_Cloud_Formation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Cloud_Texture_Velocity_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Cloud_Texture_Velocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_BooleanAND_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Starting_Cloud_Formation, CallFunc_SelectVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Starting_Cloud_Formation::CallFunc_SelectVector_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Clouds Parent Material
// 0x00D0 (0x00D0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Material;                                          // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0068(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x00A0(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material) == 0x0000D0, "Wrong size on Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, Material) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::Material' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, Temp_bool_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, Temp_softobject_Variable_1) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material, K2Node_Select_Default) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_Parent_Material::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Static Clouds XYZ Masks
// 0x01C8 (0x01C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks final
{
public:
	struct FLinearColor                           XY_Mask;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Z_Mask;                                            // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GreaterGreater_VectorRotator_ReturnValue_1; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_4;                     // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_5;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_6;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_7;                     // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_8;                     // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_9;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_10;                    // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor_1;                   // 0x0170(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0180(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorFloat_ReturnValue;    // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x01A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_ImplicitCast_1;                // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_A_ImplicitCast_1;                // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast_1;                // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast_1;                // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks) == 0x0001C8, "Wrong size on Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, XY_Mask) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::XY_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, Z_Mask) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::Z_Mask' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_GreaterGreater_VectorRotator_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_GreaterGreater_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_GreaterGreater_VectorRotator_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_GreaterGreater_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_X) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_Y) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_Z) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_SelectVector_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_X_1) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_Y_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_BreakVector_Z_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_3) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Lerp_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_4) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_5) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_6) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_7) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_LinearColor) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_8) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_9) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_FClamp_ReturnValue_10) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_FClamp_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_LinearColor_1) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_LinearColor_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_LinearColorLerp_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_Multiply_LinearColorFloat_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_Multiply_LinearColorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_B_ImplicitCast) == 0x0001A4, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_A_ImplicitCast) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_G_ImplicitCast) == 0x0001AC, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_B_ImplicitCast_1) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_R_ImplicitCast) == 0x0001B4, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_A_ImplicitCast_1) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_G_ImplicitCast_1) == 0x0001BC, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_G_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks, K2Node_MakeStruct_R_ImplicitCast_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Static_Clouds_XYZ_Masks::K2Node_MakeStruct_R_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sun Height
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sun_Height final
{
public:
	double                                        Z;                                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sun_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sun_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sun_Height) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Sun_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, Z) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_X) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_Y) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_BreakVector_Z) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sun_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sun Shadows MIDs
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs final
{
public:
	TArray<class UMaterialInstanceDynamic*>       Out;                                               // 0x0000(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array;                            // 0x0018(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       K2Node_MakeArray_Array_1;                          // 0x0030(0x0010)(ReferenceParm)
	TArray<class UMaterialInstanceDynamic*>       K2Node_Select_Default;                             // 0x0040(0x0010)(ReferenceParm)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, Temp_bool_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, K2Node_MakeArray_Array) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, K2Node_MakeArray_Array_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs, K2Node_Select_Default) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Sun_Shadows_MIDs::K2Node_Select_Default' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Sun Z Vector
// 0x00A0 (0x00A0 - 0x0000)
struct Ultra_Dynamic_Sky_C_Sun_Z_Vector final
{
public:
	struct FVector                                Out;                                               // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_2;            // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_3;            // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2;  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3;  // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Sun_Z_Vector) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Sun_Z_Vector");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Sun_Z_Vector) == 0x0000A0, "Wrong size on Ultra_Dynamic_Sky_C_Sun_Z_Vector");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_2) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_ReturnValue_3) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_SelectVector_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Sun_Z_Vector, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Sun_Z_Vector::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Swap with Cinematic Runtime Value
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value final
{
public:
	double                                        In;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cine;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          User_Higher;                                       // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMin_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FMax_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, Cine) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::Cine' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, User_Higher) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::User_Higher' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_FMin_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_FMin_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_FMax_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_SelectFloat_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value, CallFunc_SelectFloat_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Swap_with_Cinematic_Runtime_Value::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Test Point for Painted Cloud Coverage
// 0x02B8 (0x02B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Cloud_Coverage_with_Painting;                      // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Filtered_Color;                                    // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Pixel_Coordinate;                                  // 0x0030(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location_in_Texture_Space;                         // 0x0038(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Resulting_Coverage;                                // 0x0048(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Cloud_Paint_Cell_C*                Current_Cell_Data;                                 // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              Cell_Coordinates_Sampled;                          // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Location_in_Cell_Space;                            // 0x0060(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x00A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UUDS_Cloud_Paint_Cell_C*                CallFunc_Map_Find_Value;                           // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetAbs2D_ReturnValue;                     // 0x0150(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Array_Get_Item;                           // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Divide_LinearColorLinearColor_ReturnValue; // 0x0190(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x01A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x01DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue_1;                      // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x01F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_1;                      // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_2;                      // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_3;                      // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint_4;                      // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_Select_Default;                             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Fraction_ReturnValue_1;                   // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0250(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0261(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0262(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_263[0x5];                                      // 0x0263(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0290(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage) == 0x0002B8, "Wrong size on Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Cloud_Coverage_with_Painting) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Cloud_Coverage_with_Painting' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Filtered_Color) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Filtered_Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Pixel_Coordinate) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Pixel_Coordinate' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Location_in_Texture_Space) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Location_in_Texture_Space' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Resulting_Coverage) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Resulting_Coverage' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Current_Cell_Data) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Current_Cell_Data' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Cell_Coordinates_Sampled) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Cell_Coordinates_Sampled' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Location_in_Cell_Space) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Location_in_Cell_Space' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Temp_int_Variable) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_X) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_Y) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FFloor_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FFloor_ReturnValue_1) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, K2Node_MakeStruct_IntPoint) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Map_Find_Value) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Map_Find_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0000DC, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_IntInt_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_IntInt_ReturnValue_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_ReturnValue_2) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, Temp_int_Variable_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_GetAbs2D_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_GetAbs2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_X_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_Y_1) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Array_Get_Item) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Divide_LinearColorLinearColor_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Divide_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_X_2) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_Y_2) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FCeil_ReturnValue) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0001DC, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FFloor_ReturnValue_2) == 0x0001EC, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FCeil_ReturnValue_1) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FCeil_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_FFloor_ReturnValue_3) == 0x0001F4, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, K2Node_MakeStruct_IntPoint_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::K2Node_MakeStruct_IntPoint_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, K2Node_MakeStruct_IntPoint_2) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::K2Node_MakeStruct_IntPoint_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, K2Node_MakeStruct_IntPoint_3) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::K2Node_MakeStruct_IntPoint_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, K2Node_MakeStruct_IntPoint_4) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::K2Node_MakeStruct_IntPoint_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, K2Node_Select_Default) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_X_3) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BreakVector2D_Y_3) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Fraction_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Fraction_ReturnValue_1) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Fraction_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_MakeVector2D_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BooleanAND_ReturnValue) == 0x000261, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_BooleanAND_ReturnValue_1) == 0x000262, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Divide_VectorVector_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_Alpha_ImplicitCast) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Test_Point_for_Painted_Cloud_Coverage::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Three Time Floats
// 0x0048 (0x0048 - 0x0000)
struct Ultra_Dynamic_Sky_C_Three_Time_Floats final
{
public:
	double                                        Day_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Dusk;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Night;                                             // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Out;                                               // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Night_Filter_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Three_Time_Floats) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Three_Time_Floats");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Three_Time_Floats) == 0x000048, "Wrong size on Ultra_Dynamic_Sky_C_Three_Time_Floats");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Day_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Day_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Dusk) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Dusk' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Night) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Night' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Sun_Height_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Night_Filter_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Night_Filter_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Three_Time_Floats, CallFunc_Lerp_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Three_Time_Floats::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Tick Time Transition
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Tick_Time_Transition final
{
public:
	double                                        New_Time_of_Day;                                   // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Percent_FloatFloat_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B[0x5];                                       // 0x004B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_A_ImplicitCast;       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Tick_Time_Transition) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Tick_Time_Transition");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Tick_Time_Transition) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Tick_Time_Transition");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, New_Time_of_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::New_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, Temp_int_Variable) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_HasAuthority_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FFloor_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Percent_FloatFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Percent_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FFloor_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Greater_IntInt_ReturnValue) == 0x000049, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_BooleanOR_ReturnValue) == 0x00004A, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_SelectFloat_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_K2_GetTimerElapsedTimeHandle_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_FClamp_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Ease_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Lerp_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Tick_Time_Transition, CallFunc_Divide_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Tick_Time_Transition::CallFunc_Divide_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Time of Day Offset
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Time_of_Day_Offset final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Time_of_Day_Offset");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Time_of_Day_Offset");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_GetForwardVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_SelectFloat_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Time_of_Day_Offset, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Time_of_Day_Offset::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Total Time Elapsed
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Total_Time_Elapsed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Total_Time_Elapsed");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Total_Time_Elapsed");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanOR_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanOR_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_BooleanAND_ReturnValue_1) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Total_Time_Elapsed, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Total_Time_Elapsed::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Transition Sky Light Intensity
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity final
{
public:
	double                                        New_Sky_Light_Intensity_Multiplier;                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Time;                                   // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, New_Sky_Light_Intensity_Multiplier) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::New_Sky_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity, Transition_Time) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Transition_Sky_Light_Intensity::Transition_Time' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Transition Time of Day
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Transition_Time_of_Day final
{
public:
	double                                        New_Time_of_Day;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Transition_Duration__Seconds_;                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEasingFunc                                   Easing_Function;                                   // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Easing_Exponent;                                   // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Allow_Time_Going_Backwards;                        // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0028(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Transition_Time_of_Day");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Transition_Time_of_Day");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, New_Time_of_Day) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::New_Time_of_Day' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Transition_Duration__Seconds_) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Transition_Duration__Seconds_' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Easing_Function) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Easing_Function' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Easing_Exponent) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Easing_Exponent' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, Allow_Time_Going_Backwards) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::Allow_Time_Going_Backwards' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_HasAuthority_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_K2_SetTimer_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Transition_Time_of_Day, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Transition_Time_of_Day::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Twilight Brightness Falloff
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff final
{
public:
	double                                        Z;                                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Scale;                                             // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MultiplyMultiply_FloatFloat_ReturnValue;  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, Z) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, Scale) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_MapRangeClamped_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff, CallFunc_MultiplyMultiply_FloatFloat_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Twilight_Brightness_Falloff::CallFunc_MultiplyMultiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Unfiltered Moon Light Intensity
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity final
{
public:
	double                                        Out;                                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_ReturnValue;        // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness; // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, Out) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_X) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Y) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Z) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_X_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Y_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_BreakVector_Z_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_FClamp_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Directional_Light_Dimming_Out) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Moon_Phase_Multiplier_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Moon_Phase_Multiplier_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Moon_Phase_Multiplier_Without_Light_Brightness' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_SelectFloat_ReturnValue) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_GetFloatValue_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Lerp_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_SelectFloat_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Unfiltered_Moon_Light_Intensity::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Active Variables
// 0x0930 (0x0930 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Active_Variables final
{
public:
	struct FLinearColor                           Sun_Disk_Color_Current;                            // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Dark_Color_Current;                          // 0x0010(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Cloud_Light_Color_Current;                         // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Zenith_Base_Color_Current;                         // 0x0030(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Horizon_Base_Color_Current;                        // 0x0040(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_3;          // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_4;          // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_5;          // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_6;          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_7;          // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_2;                 // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x00D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x00E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_3;                 // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out;              // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_4;                 // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_2;                 // 0x0164(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_3;                 // 0x0174(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_5;                 // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x3];                                      // 0x0191(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity; // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier; // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_4;                 // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_6;                 // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_7;                 // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_8;                 // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0208(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_20C[0x4];                                      // 0x020C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_9;                 // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_10;                              // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_234[0x4];                                      // 0x0234(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_10;                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_11;                // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Sun_Shadows_MIDs_Out;                     // 0x0248(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25C[0x4];                                      // 0x025C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_12;                // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_13;                // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x0274(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_14;                // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_15;                // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_16;                // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0290(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_294[0x4];                                      // 0x0294(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x02A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x02A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A5[0x3];                                      // 0x02A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x02B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B5[0x3];                                      // 0x02B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_2;                         // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C1[0x7];                                      // 0x02C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E4[0x4];                                      // 0x02E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_3;                       // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue;  // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Current_Volumetric_Clouds_Density_Layer1; // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Current_Volumetric_Clouds_Density_Cloud_Layer_Visible; // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x7];                                      // 0x0321(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Volumetric_Clouds_Density_Layer2; // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Increase_Tick_Frequency_ReturnValue;      // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_331[0x7];                                      // 0x0331(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_17;                // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_18;                // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_19;                // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_5;                 // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_20;                // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_6;                 // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_7;                 // 0x0380(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_8;                 // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_9;                 // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_21;                // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_22;                // 0x03B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_10;                // 0x03C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_11;                // 0x03D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_12;                // 0x03E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_23;                // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_24;                // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_25;                // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_26;                // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_13;                // 0x0420(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_27;                // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0440(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_441[0x7];                                      // 0x0441(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0450(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0451(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0452(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_453[0x5];                                      // 0x0453(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_28;                // 0x0458(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_14;                // 0x0460(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_29;                // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_30;                // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_15;                // 0x0480(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_16;                // 0x0498(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_17;                // 0x04A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_18;                // 0x04B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x04C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x04CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x04D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x04D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D9[0x7];                                      // 0x04D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_31;                // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_19;                // 0x04E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x04F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_32;                // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_33;                // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_34;                // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_35;                // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x0528(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_529[0x7];                                      // 0x0529(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x0549(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x054A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54B[0x5];                                      // 0x054B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value_36;                // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_37;                // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_38;                // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_20;                // 0x0568(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_39;                // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_21;                // 0x0580(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_40;                // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_41;                // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x05A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A2[0x6];                                      // 0x05A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_22;                // 0x05B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_23;                // 0x05C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_24;                // 0x05D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_25;                // 0x05E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_26;                // 0x05F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_27;                // 0x0600(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_42;                // 0x0610(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x7];                                      // 0x0619(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_43;                // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_44;                // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_45;                // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_1;            // 0x0648(0x0010)(ReferenceParm)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0658(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x066C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_66D[0x3];                                      // 0x066D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0670(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0678(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0680(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0688(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x0698(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x06A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A4[0x4];                                      // 0x06A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x06A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x06B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x06B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B2[0x6];                                      // 0x06B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x06B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x06C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C5[0x3];                                      // 0x06C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x06D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x06D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D5[0x3];                                      // 0x06D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x06D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x06E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x06E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E5[0x3];                                      // 0x06E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_11;                        // 0x06E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x06F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x06F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F5[0x3];                                      // 0x06F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_12;                        // 0x06F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x0704(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_705[0x3];                                      // 0x0705(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_13;                        // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0714(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_715[0x3];                                      // 0x0715(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_14;                        // 0x0718(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0720(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0724(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_725[0x3];                                      // 0x0725(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_15;                        // 0x0728(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0734(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0735(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_736[0x2];                                      // 0x0736(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Overcast_Swirl_ReturnValue;       // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sky_MID_Cloud_Density_ReturnValue;        // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Current_2D_Cloud_Tint_ReturnValue;        // 0x0748(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue;    // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue_1;  // 0x0759(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x075A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue_2;  // 0x075B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Gate_With_Current_Changes_ReturnValue_3;  // 0x075C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x075D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Using_2D_Clouds_ReturnValue;              // 0x075E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x075F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_761[0x7];                                      // 0x0761(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue; // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0770(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789[0x7];                                      // 0x0789(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_8;          // 0x07AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x07AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_9;          // 0x07AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x07AD(0x0001)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x07AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x07AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x07B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x07B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B3[0x1];                                      // 0x07B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x07B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x07B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item_16;                        // 0x07B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x07BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_17;                 // 0x07BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_18;                 // 0x07BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7BD[0x3];                                      // 0x07BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x07C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x07C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x07C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_3;                // 0x07C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7CA[0x6];                                      // 0x07CA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x07D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7DA[0x6];                                      // 0x07DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x3];                                      // 0x07E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_15;                              // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_17;                        // 0x07F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_801[0x3];                                      // 0x0801(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_16;                              // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80C[0x4];                                      // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_18;                        // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_10;         // 0x081A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_19;                 // 0x081B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_11;         // 0x081C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_20;                 // 0x081D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81E[0x2];                                      // 0x081E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x0820(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x0824(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogMaxOpacity_Value_ImplicitCast;      // 0x083C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0840(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0844(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7; // 0x0848(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x084C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0850(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast; // 0x0858(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast; // 0x085C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast; // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x086C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8; // 0x0870(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9; // 0x0874(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x0880(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_11; // 0x0884(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_12; // 0x0888(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10; // 0x088C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11; // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12; // 0x0894(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13; // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14; // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast; // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMieScatteringScale_NewValue_ImplicitCast; // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMieAnisotropy_NewValue_ImplicitCast;   // 0x08A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x08AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceAngle_NewValue_ImplicitCast; // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast;   // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetStartDistance_Value_ImplicitCast;      // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFogHeightFalloff_Value_ImplicitCast;   // 0x08BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetHeightFogContribution_NewValue_ImplicitCast; // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_Height_Fog_Density_ImplicitCast; // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1; // 0x08C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetSpecularScale_NewValue_ImplicitCast_1; // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast; // 0x08D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_1; // 0x08D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_13; // 0x08D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_14; // 0x08DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_15; // 0x08E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_16; // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_17; // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_18; // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_19; // 0x08F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast_2; // 0x08F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_20; // 0x08F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15; // 0x08FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16; // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_21; // 0x0904(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x0908(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast; // 0x090C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1; // 0x0910(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_22; // 0x0914(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_23; // 0x0918(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast_1; // 0x091C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17; // 0x0920(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_24; // 0x0924(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18; // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Active_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Active_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Active_Variables) == 0x000930, "Wrong size on Ultra_Dynamic_Sky_C_Update_Active_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Sun_Disk_Color_Current) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Sun_Disk_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Cloud_Dark_Color_Current) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Cloud_Dark_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Cloud_Light_Color_Current) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Cloud_Light_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Zenith_Base_Color_Current) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Zenith_Base_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Horizon_Base_Color_Current) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Horizon_Base_Color_Current' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_1) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_2) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_3) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_3) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_4) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_5) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_4) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_5) == 0x00007C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_6) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_7) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_6) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_7) == 0x00008C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_8) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_9) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_8) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_9) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue) == 0x0000A1, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x0000A2, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_1) == 0x0000A3, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_2) == 0x0000A5, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_3) == 0x0000A6, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_3) == 0x0000A7, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_4) == 0x0000A9, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_5) == 0x0000AA, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_5) == 0x0000AB, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_6) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_6) == 0x0000AD, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_7) == 0x0000AE, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_7) == 0x0000AF, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Volumetric_Cloud_Shadows_Altitude_Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_2) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_1) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_3) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetForwardVector_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetForwardVector_ReturnValue_1) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_4) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_2) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_3) == 0x000174, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_5) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MakeLiteralByte_ReturnValue) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000194, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetForwardVector_ReturnValue_2) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Adjust_Base_Sun_Light_Intensity_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Adjust_Base_Sun_Light_Intensity_Multiplier' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_4) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_6) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_7) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_8) == 0x0001E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_2) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_9) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_10) == 0x00022C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_10) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_10) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_11) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sun_Shadows_MIDs_Out) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sun_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_3) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_12) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_13) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_11) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_11) == 0x000274, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_14) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_15) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_16) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_4) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_5) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x0002A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_1) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_6) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x0002B4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_2) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_1) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_2) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_12) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Lerp_ReturnValue_3) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Lerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_12) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_3) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_2) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Cloud_Shadows_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Clouds_Density_Layer1) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Clouds_Density_Layer1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Clouds_Density_Cloud_Layer_Visible) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Clouds_Density_Cloud_Layer_Visible' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Volumetric_Clouds_Density_Layer2) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Volumetric_Clouds_Density_Layer2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Increase_Tick_Frequency_ReturnValue) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Increase_Tick_Frequency_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_17) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_18) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_19) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_5) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_20) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_6) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_7) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_8) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_9) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_21) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_22) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_10) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_11) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_12) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_23) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_24) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_25) == 0x000410, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_26) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_13) == 0x000420, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000430, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_27) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue) == 0x000440, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x000450, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_2) == 0x000451, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_3) == 0x000452, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_28) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_14) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_29) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_30) == 0x000478, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_15) == 0x000480, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000490, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_16) == 0x000498, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_17) == 0x0004A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_18) == 0x0004B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_13) == 0x0004C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_13) == 0x0004CC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_4) == 0x0004D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_3) == 0x0004D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_31) == 0x0004E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_19) == 0x0004E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0004F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_32) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_33) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_34) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_35) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_4) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_5) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_6) == 0x000549, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_7) == 0x00054A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_36) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_37) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_38) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_20) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_39) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_21) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_40) == 0x000590, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_41) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_41' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0005A1, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SelectFloat_ReturnValue) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_22) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_23) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_24) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_25) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_26) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Color_Value_27) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Color_Value_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_42) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_42' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_43) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_43' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_44) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_44' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Get_Cached_Float_Value_45) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Get_Cached_Float_Value_45' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sun_Height_Z) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_1) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000658, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_5) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_7) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_4) == 0x00066C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_14) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_14) == 0x000694, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_6) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_8) == 0x0006A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_7) == 0x0006A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_5) == 0x0006B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_6) == 0x0006B1, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_8) == 0x0006B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_9) == 0x0006C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_7) == 0x0006C4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_9) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_10) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_8) == 0x0006D4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_10) == 0x0006D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_11) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_9) == 0x0006E4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_11) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_12) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_10) == 0x0006F4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_12) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_13) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_11) == 0x000704, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_13) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_14) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_12) == 0x000714, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_14) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_15) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_13) == 0x000724, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_15) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Length_ReturnValue_16) == 0x000730, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_14) == 0x000734, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_1) == 0x000735, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_Overcast_Swirl_ReturnValue) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_Overcast_Swirl_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Sky_MID_Cloud_Density_ReturnValue) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Sky_MID_Cloud_Density_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Current_2D_Cloud_Tint_ReturnValue) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Current_2D_Cloud_Tint_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue_1) == 0x000759, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_8) == 0x00075A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue_2) == 0x00075B, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Gate_With_Current_Changes_ReturnValue_3) == 0x00075C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Gate_With_Current_Changes_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_9) == 0x00075D, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Using_2D_Clouds_ReturnValue) == 0x00075E, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Using_2D_Clouds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x00075F, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_2) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Moon_Light_Volumetric_Scattering_Intensity_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_GetForwardVector_ReturnValue_3) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanAND_ReturnValue_8) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_X) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Y) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BreakVector_Z) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_10) == 0x0007A9, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_8) == 0x0007AA, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_11) == 0x0007AB, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_9) == 0x0007AC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_bool_Variable) == 0x0007AD, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_12) == 0x0007AE, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Contains_ReturnValue) == 0x0007AF, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_13) == 0x0007B1, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_14) == 0x0007B2, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0007B4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_15) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_16) == 0x0007B9, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_16) == 0x0007BA, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_17) == 0x0007BB, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_18) == 0x0007BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_15) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Percent_IntInt_ReturnValue) == 0x0007C4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_IsDedicatedServer_ReturnValue) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Not_PreBool_ReturnValue_3) == 0x0007C9, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Not_PreBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x0007D9, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_15) == 0x0007EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_16) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_17) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_15) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, Temp_int_Variable_16) == 0x000804, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Add_IntInt_ReturnValue_17) == 0x000808, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Array_Get_Item_18) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_Less_IntInt_ReturnValue_16) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000819, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_10) == 0x00081A, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_19) == 0x00081B, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_11) == 0x00081C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_BooleanOR_ReturnValue_20) == 0x00081D, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_BooleanOR_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x000820, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x000824, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x000828, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x00082C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x000830, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x000834, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x000838, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetFogMaxOpacity_Value_ImplicitCast) == 0x00083C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetFogMaxOpacity_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000840, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000844, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7) == 0x000848, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x00084C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000850, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000854, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast) == 0x000858, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetDirectionalInscatteringExponent_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast) == 0x00085C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast) == 0x000860, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetShadowTracingDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000864, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000868, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x00086C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8) == 0x000870, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9) == 0x000874, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000878, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x00087C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x000880, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_11) == 0x000884, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_12) == 0x000888, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10) == 0x00088C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11) == 0x000890, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12) == 0x000894, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13) == 0x000898, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14) == 0x00089C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast) == 0x0008A0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetTracingMaxDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetMieScatteringScale_NewValue_ImplicitCast) == 0x0008A4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetMieScatteringScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetMieAnisotropy_NewValue_ImplicitCast) == 0x0008A8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetMieAnisotropy_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x0008AC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightSourceAngle_NewValue_ImplicitCast) == 0x0008B0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightSourceAngle_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetSpecularScale_NewValue_ImplicitCast) == 0x0008B4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetSpecularScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetStartDistance_Value_ImplicitCast) == 0x0008B8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetStartDistance_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetFogHeightFalloff_Value_ImplicitCast) == 0x0008BC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetFogHeightFalloff_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetHeightFogContribution_NewValue_ImplicitCast) == 0x0008C0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetHeightFogContribution_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, K2Node_VariableSet_Height_Fog_Density_ImplicitCast) == 0x0008C4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::K2Node_VariableSet_Height_Fog_Density_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1) == 0x0008C8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightSourceAngle_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetSpecularScale_NewValue_ImplicitCast_1) == 0x0008CC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetSpecularScale_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast) == 0x0008D0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightFunctionDisabledBrightness_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetIntensity_NewIntensity_ImplicitCast_1) == 0x0008D4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_13) == 0x0008D8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_14) == 0x0008DC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_15) == 0x0008E0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_16) == 0x0008E4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_17) == 0x0008E8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_18) == 0x0008EC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_19) == 0x0008F0, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetIntensity_NewIntensity_ImplicitCast_2) == 0x0008F4, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetIntensity_NewIntensity_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_20) == 0x0008F8, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15) == 0x0008FC, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16) == 0x000900, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_21) == 0x000904, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x000908, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast) == 0x00090C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1) == 0x000910, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetLightSourceSoftAngle_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_22) == 0x000914, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_23) == 0x000918, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast_1) == 0x00091C, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17) == 0x000920, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_24) == 0x000924, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Active_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18) == 0x000928, "Member 'Ultra_Dynamic_Sky_C_Update_Active_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Cloud Coverage After Painting
// 0x0008 (0x0008 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting final
{
public:
	double                                        CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting) == 0x000008, "Wrong size on Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting, CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Cloud_Coverage_After_Painting::CallFunc_Test_Point_for_Painted_Cloud_Coverage_Cloud_Coverage_with_Painting' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Current Volumetric Clouds MID
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     K2Node_Select_Default;                             // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Not_PreBool_ReturnValue_1) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, Temp_int_Variable) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, K2Node_Select_Default) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue_1) == 0x000022, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue_2) == 0x000023, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_BooleanAND_ReturnValue_3) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_SelectInt_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Current_Volumetric_Clouds_MID::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Directional Light Rotations
// 0x02C8 (0x02C8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations final
{
public:
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAcos_ReturnValue;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x004E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x004F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_3;           // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue_1;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_DegAcos_ReturnValue_1;                    // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue_1;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Get_Item;                           // 0x00AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x00CE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CF[0x1];                                       // 0x00CF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue_1;    // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x00F0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DA[0x6];                                      // 0x01DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult_1;     // 0x01E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations) == 0x0002C8, "Wrong size on Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_GetForwardVector_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_GetForwardVector_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_MakeLiteralByte_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Dot_VectorVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_DegAcos_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_DegAcos_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Not_PreBool_ReturnValue) == 0x00004D, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x00004E, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00004F, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_1) == 0x000051, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Not_PreBool_ReturnValue_1) == 0x000052, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_GetForwardVector_ReturnValue_2) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_GetForwardVector_ReturnValue_3) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_GetForwardVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_MakeLiteralByte_ReturnValue_1) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_MakeLiteralByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_DegAcos_ReturnValue_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_DegAcos_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Conv_ByteToInt_ReturnValue_1) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Conv_ByteToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_2) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_3) == 0x0000A9, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000AA, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Array_Get_Item) == 0x0000AB, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_4) == 0x0000C9, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000CA, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_5) == 0x0000CB, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanAND_ReturnValue) == 0x0000CC, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_6) == 0x0000CD, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_7) == 0x0000CE, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_GetComponentRotation_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_GetComponentRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanAND_ReturnValue_1) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_BooleanOR_ReturnValue_8) == 0x0001D9, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations, CallFunc_K2_SetWorldRotation_SweepHitResult_1) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Directional_Light_Rotations::CallFunc_K2_SetWorldRotation_SweepHitResult_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Distance to Sample Max Count
// 0x0050 (0x0050 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count final
{
public:
	bool                                          Shut_Down;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetConsoleVariableFloatValue_ReturnValue; // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Fraction_A_ImplicitCast;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count) == 0x000050, "Wrong size on Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, Shut_Down) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::Shut_Down' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_Not_PreBool_ReturnValue_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_GetConsoleVariableFloatValue_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_GetConsoleVariableFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_Fraction_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_Fraction_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_FFloor_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_BooleanAND_ReturnValue_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_BooleanAND_ReturnValue_2) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count, CallFunc_Fraction_A_ImplicitCast) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Distance_to_Sample_Max_Count::CallFunc_Fraction_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Dynamic Sky Light Multiplier
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier final
{
public:
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Constant_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_FInterpTo_Constant_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_FInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Dynamic_Sky_Light_Multiplier::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Exposure Bias
// 0x0020 (0x0020 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Exposure_Bias final
{
public:
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast; // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Exposure_Bias");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias) == 0x000020, "Wrong size on Ultra_Dynamic_Sky_C_Update_Exposure_Bias");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias, CallFunc_Get_Cached_Float_Value) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Exposure_Bias::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Exposure_Bias::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Exposure_Bias::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Exposure_Bias, K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Exposure_Bias::K2Node_SetFieldsInStruct_AutoExposureBias_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Forced Active Variables
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out;              // 0x0010(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F[0x1];                                       // 0x002F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIntensity_NewIntensity_ImplicitCast;   // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_BooleanOR_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Array_Get_Item) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_BooleanOR_ReturnValue_1) == 0x00002E, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Get_Cached_Float_Value) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Lerp_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables, CallFunc_SetIntensity_NewIntensity_ImplicitCast) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Forced_Active_Variables::CallFunc_SetIntensity_NewIntensity_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Lens Flare
// 0x0010 (0x0010 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Lens_Flare final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Lens_Flare_Enabled_Yes;                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Lens_Flare) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Lens_Flare");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Lens_Flare) == 0x000010, "Wrong size on Ultra_Dynamic_Sky_C_Update_Lens_Flare");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Is_Lens_Flare_Enabled_Yes) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Is_Lens_Flare_Enabled_Yes' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_IsDedicatedServer_ReturnValue) == 0x00000A, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Lens_Flare, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Lens_Flare::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Moon Parameters
// 0x00B8 (0x00B8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Moon_Parameters final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_2;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_3;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_4;                 // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Moon_Parameters");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters) == 0x0000B8, "Wrong size on Ultra_Dynamic_Sky_C_Update_Moon_Parameters");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, Temp_int_Variable_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, Temp_int_Variable_3) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Add_IntInt_ReturnValue_2) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Add_IntInt_ReturnValue_3) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Color_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Color_Value_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Get_Cached_Float_Value_4) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Get_Cached_Float_Value_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Get_Item) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Less_IntInt_ReturnValue) == 0x000074, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Get_Item_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Length_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Less_IntInt_ReturnValue_1) == 0x000084, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Get_Item_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Length_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Less_IntInt_ReturnValue_2) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Get_Item_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Array_Length_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_Less_IntInt_ReturnValue_3) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Moon_Parameters, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x0000B4, "Member 'Ultra_Dynamic_Sky_C_Update_Moon_Parameters::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Overcast Turbulence
// 0x0040 (0x0040 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence final
{
public:
	double                                        Turbulence_Strength;                               // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_Value_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence) == 0x000040, "Wrong size on Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, Turbulence_Strength) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::Turbulence_Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_Get_Cached_Float_Value) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_FClamp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_MapRangeUnclamped_Value_ImplicitCast) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_MapRangeUnclamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Overcast_Turbulence::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Painted Cloud Coverage Target
// 0x0410 (0x0410 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target final
{
public:
	class AUDS_Cloud_Paint_Container_C*           Cloud_Paint_Container;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TMap<struct FIntPoint, class UTexture*>       Loaded_Cell_Textures;                              // 0x0008(0x0050)(Edit, BlueprintVisible)
	struct FIntPoint                              Current_Cell;                                      // 0x0058(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_Cell_Max;                                        // 0x0060(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Y_Cell_Min;                                        // 0x0064(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_Cell_Max;                                        // 0x0068(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         X_Cell_Min;                                        // 0x006C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Lower_Right_Corner;                                // 0x0070(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FIntPoint>                      Cells_Used;                                        // 0x0080(0x0010)(Edit, BlueprintVisible)
	class UCanvas*                                Draw_Canvas;                                       // 0x0090(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              K2Node_MakeStruct_IntPoint;                        // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0110(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_3;           // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUDS_Cloud_Paint_Container_C*           CallFunc_GetActorOfClass_ReturnValue;              // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_2;               // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x6];                                      // 0x0142(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Cloud_Paint_Cell_C*                CallFunc_Map_Find_Value;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0158(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x0161(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0162(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0163(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0165(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_166[0x2];                                      // 0x0166(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_4;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_5;           // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_6;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_Map_Find_Value_1;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_IntPointToVector2D_ReturnValue;      // 0x01B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               CallFunc_Map_Find_Value_2;                         // 0x01C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_2;                   // 0x01C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C9[0x7];                                      // 0x01C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue_1;  // 0x01D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out; // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x2];                                      // 0x0202(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item;                           // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default;                             // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UUDS_Cloud_Paint_Cell_C*                CallFunc_Map_Find_Value_3;                         // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_3;                   // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_LoadAsset_Blocking_ReturnValue;           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_7;           // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_3;               // 0x0258(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0268(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0280(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x02A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x3];                                      // 0x02A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x02A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x02AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x02AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x02AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AF[0x1];                                      // 0x02AF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Cloud_Coverage_Target_Mapping_Mapping;    // 0x02B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_8;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x02D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_4;               // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue_1;  // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FIntPoint                              CallFunc_Array_Get_Item_1;                         // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue_1;    // 0x0310(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_1;       // 0x0320(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_349[0x3];                                      // 0x0349(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue_2;                     // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_3;                     // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue_2;       // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UCanvas*                                CallFunc_BeginDrawCanvasToRenderTarget_Canvas;     // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_BeginDrawCanvasToRenderTarget_Size;       // 0x0370(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDrawToRenderTargetContext             CallFunc_BeginDrawCanvasToRenderTarget_Context;    // 0x0380(0x0008)(NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39E[0x2];                                      // 0x039E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default_1;                           // 0x03B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x03C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_Vector2DToVector_ReturnValue;        // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_SnappedToGrid_ReturnValue;         // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast; // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target) == 0x000410, "Wrong size on Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Cloud_Paint_Container) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Cloud_Paint_Container' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Loaded_Cell_Textures) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Loaded_Cell_Textures' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Current_Cell) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Current_Cell' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Y_Cell_Max) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Y_Cell_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Y_Cell_Min) == 0x000064, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Y_Cell_Min' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, X_Cell_Max) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::X_Cell_Max' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, X_Cell_Min) == 0x00006C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::X_Cell_Min' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Lower_Right_Corner) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Lower_Right_Corner' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Cells_Used) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Cells_Used' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Draw_Canvas) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Draw_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Variable) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Loop_Counter_Variable) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Variable_1) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Loop_Counter_Variable_1) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_MakeStruct_IntPoint) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_MakeStruct_IntPoint' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000BC, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Array_Index_Variable) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Variable_2) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_IntInt_ReturnValue_4) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_3) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_GetActorOfClass_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_2) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Not_PreBool_ReturnValue) == 0x000141, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_Value) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_ReturnValue) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_K2_SetTimer_ReturnValue) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanOR_ReturnValue) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanOR_ReturnValue_1) == 0x000161, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsDedicatedServer_ReturnValue) == 0x000162, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Not_PreBool_ReturnValue_1) == 0x000163, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_bool_Variable) == 0x000164, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanAND_ReturnValue) == 0x000165, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Length_ReturnValue) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Less_IntInt_ReturnValue) == 0x00016C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_4) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_1) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_5) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_6) == 0x000190, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_Value_1) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_ReturnValue_1) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntPointToVector2D_ReturnValue) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntPointToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_Value_2) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_Value_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_ReturnValue_2) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Multiply_Vector2DVector2D_ReturnValue_1) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Multiply_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_World_Space_to_Drawn_Target_Pixel_Space_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Not_PreBool_ReturnValue_2) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_bool_Variable_1) == 0x000201, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, Temp_int_Array_Index_Variable_1) == 0x000204, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Get_Item) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_Select_Default) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_Value_3) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_Value_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_Find_ReturnValue_3) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_Find_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_LoadAsset_Blocking_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_LoadAsset_Blocking_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_DynamicCast_AsTexture_2D) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_DynamicCast_bSuccess) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_AddUnique_ReturnValue) == 0x000244, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_7) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_3) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Add_ReturnValue) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakVector2D_X) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakVector2D_Y) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_FFloor_ReturnValue) == 0x0002A4, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_FFloor_ReturnValue_1) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0002AC, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x0002AD, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BooleanOR_ReturnValue_2) == 0x0002AE, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Cloud_Coverage_Target_Mapping_Mapping) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Cloud_Coverage_Target_Mapping_Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_IntToDouble_ReturnValue_8) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_IntToDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_MakeVector2D_ReturnValue_4) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_MakeVector2D_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Subtract_Vector2DVector2D_ReturnValue_1) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Subtract_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Get_Item_1) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Divide_Vector2DVector2D_ReturnValue_1) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Divide_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_Vector2DVector2D_ReturnValue_1) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_Vector2DVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Length_ReturnValue_1) == 0x000330, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakVector2D_X_1) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BreakVector2D_Y_1) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Less_IntInt_ReturnValue_1) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_FFloor_ReturnValue_2) == 0x00034C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_FFloor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_FFloor_ReturnValue_3) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_FFloor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Add_Vector2DVector2D_ReturnValue_2) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Add_Vector2DVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BeginDrawCanvasToRenderTarget_Canvas) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BeginDrawCanvasToRenderTarget_Canvas' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BeginDrawCanvasToRenderTarget_Size) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BeginDrawCanvasToRenderTarget_Size' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_BeginDrawCanvasToRenderTarget_Context) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_BeginDrawCanvasToRenderTarget_Context' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_2) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Get_Item_2) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Array_Length_ReturnValue_2) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Less_IntInt_ReturnValue_2) == 0x00039C, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_IsValid_ReturnValue_3) == 0x00039D, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, K2Node_Select_Default_1) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0003C0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_Vector2DToVector_ReturnValue) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_Vector2DToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Vector_SnappedToGrid_ReturnValue) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Vector_SnappedToGrid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target, CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Update_Painted_Cloud_Coverage_Target::CallFunc_Vector_SnappedToGrid_InGridSize_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Post Process Blend Weights
// 0x0F50 (0x0F50 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights final
{
public:
	struct FUDS_Post_Process_Stage                Current_Component_Settings;                        // 0x0000(0x0710)(Edit, BlueprintVisible, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0718(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71C[0x4];                                      // 0x071C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0778(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0780(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0788(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x0790(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x07B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x07B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x07C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C1[0x7];                                      // 0x07C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x07C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x07D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D4[0x4];                                      // 0x07D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EA[0x2];                                      // 0x07EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_2;             // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Three_Time_Floats_Out;                    // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUDS_Post_Process_Stage                CallFunc_Array_Get_Item;                           // 0x0810(0x0710)(HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0F20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0F28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F2C[0x4];                                      // 0x0F2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPostProcessComponent*                  CallFunc_Array_Get_Item_1;                         // 0x0F30(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0F38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0F39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3A[0x2];                                      // 0x0F3A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_VariableSet_BlendWeight_ImplicitCast;       // 0x0F3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0F40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights) == 0x000010, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights) == 0x000F50, "Wrong size on Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Current_Component_Settings) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Current_Component_Settings' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Temp_int_Array_Index_Variable) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, Temp_int_Loop_Counter_Variable) == 0x000714, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Add_IntInt_ReturnValue) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Cloud_Coverage_Local_Out) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_MapRangeClamped_ReturnValue) == 0x000728, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000730, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue) == 0x000738, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000740, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_1) == 0x000748, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Lerp_ReturnValue) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_2) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_3) == 0x000760, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_4) == 0x000768, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000770, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000778, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000780, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_5) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_6) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_7) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0007A0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_SelectFloat_ReturnValue_8) == 0x0007A8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0007B0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0007B8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue) == 0x0007C0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_1) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Not_PreBool_ReturnValue_2) == 0x0007E9, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x0007EC, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_BoolToInt_ReturnValue_2) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_BoolToInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Three_Time_Floats_Out) == 0x000808, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Three_Time_Floats_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Get_Item) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000F20, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Length_ReturnValue) == 0x000F28, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Array_Get_Item_1) == 0x000F30, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Less_IntInt_ReturnValue) == 0x000F38, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000F39, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, K2Node_VariableSet_BlendWeight_ImplicitCast) == 0x000F3C, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::K2Node_VariableSet_BlendWeight_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000F40, "Member 'Ultra_Dynamic_Sky_C_Update_Post_Process_Blend_Weights::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Settings Based on Platform and Scalability
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability final
{
public:
	bool                                          Requires_Updates;                                  // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Effects_Quality;                                   // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetConsoleVariableIntValue_ReturnValue;   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlatformName_ReturnValue;              // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x002B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_SkyMode                                  CallFunc_Map_Find_Value;                           // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, Requires_Updates) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::Requires_Updates' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, Effects_Quality) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::Effects_Quality' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_GetConsoleVariableIntValue_ReturnValue) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_GetConsoleVariableIntValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue) == 0x000011, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_1) == 0x000012, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000013, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_GetPlatformName_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_GetPlatformName_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_Array_Contains_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000029, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x00002A, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_2) == 0x00002B, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_3) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_BooleanAND_ReturnValue_4) == 0x00002D, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_Map_Find_Value) == 0x00002E, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_Map_Find_ReturnValue) == 0x00002F, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Settings_Based_on_Platform_and_Scalability::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Sky Atmosphere Location
// 0x0160 (0x0160 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0078(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location) == 0x000160, "Wrong size on Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, Location) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_X) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_Y) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_Z) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_X_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_Y_1) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_BreakVector_Z_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Sky_Atmosphere_Location::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Space Planet Vectors
// 0x0690 (0x0690 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors final
{
public:
	class UMaterialInstanceDynamic*               Current_Planet_MID;                                // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Planet_Location;                                   // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Current_Index;                                     // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Map_Find_Value;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_Planet_Lightsource                       Temp_byte_Variable;                                // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item_1;                         // 0x00A0(0x0278)(HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_2;                         // 0x0318(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0320(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_2;           // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_2;   // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FUDS_Space_Planet                      CallFunc_Array_Get_Item_3;                         // 0x03A8(0x0278)(HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x0620(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue_1;            // 0x0638(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_3;   // 0x0650(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   CallFunc_Array_Get_Item_4;                         // 0x0660(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0668(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0680(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0684(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_685[0x3];                                      // 0x0685(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1;  // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors) == 0x000690, "Wrong size on Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, Current_Planet_MID) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::Current_Planet_MID' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, Planet_Location) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::Planet_Location' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, Current_Index) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::Current_Index' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, Temp_int_Array_Index_Variable) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Add_IntInt_ReturnValue) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Array_Get_Item) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Map_Find_Value) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Map_Find_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_GetForwardVector_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_GetForwardVector_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, Temp_byte_Variable) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Array_Get_Item_1) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Array_Get_Item_2) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Normal_ReturnValue) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_GetUpVector_ReturnValue) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_GetRightVector_ReturnValue) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_GetForwardVector_ReturnValue_2) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_GetForwardVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, K2Node_Select_Default) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Conv_VectorToLinearColor_ReturnValue_2) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Conv_VectorToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Array_Get_Item_3) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_RotateAngleAxis_ReturnValue) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_RotateAngleAxis_ReturnValue_1) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_RotateAngleAxis_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Conv_VectorToLinearColor_ReturnValue_3) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Conv_VectorToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Array_Get_Item_4) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Array_Length_ReturnValue) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_Less_IntInt_ReturnValue) == 0x000684, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1) == 0x00068C, "Member 'Ultra_Dynamic_Sky_C_Update_Space_Planet_Vectors::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Static Clouds
// 0x0078 (0x0078 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Static_Clouds final
{
public:
	double                                        Shading_Intensity;                                 // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Cached_Float_Value_1;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value_1;                 // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Sun_Height_Z;                             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Static_Clouds) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Static_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Static_Clouds) == 0x000078, "Wrong size on Ultra_Dynamic_Sky_C_Update_Static_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, Shading_Intensity) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::Shading_Intensity' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Get_Cached_Color_Value) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Get_Cached_Float_Value) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Get_Cached_Float_Value_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Get_Cached_Float_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Get_Cached_Color_Value_1) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Get_Cached_Color_Value_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Sun_Height_Z) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Sun_Height_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_GetFloatValue_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Clouds, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Clouds::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Static Variables
// 0x0B80 (0x0B80 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Static_Variables final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_7;                               // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_8;                               // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_9;                               // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     Temp_object_Variable;                              // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInterface*                     Temp_object_Variable_1;                            // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_10;                              // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_11;                              // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_12;                              // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_13;                              // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_14;                              // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude; // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height; // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scale_Top; // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_15;                              // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height; // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height; // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D;                   // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x3];                                      // 0x0139(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out;              // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_1;            // 0x0158(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_2;            // 0x0170(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_184[0x4];                                      // 0x0184(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_3;            // 0x0188(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_4;            // 0x01A8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_5;            // 0x01C0(0x0010)(ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_6;            // 0x01E0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x01F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x01F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F5[0x3];                                      // 0x01F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_16;                              // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x01FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0202(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0203(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item;                           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x021E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x021F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x7];                                      // 0x0221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_1;                         // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_17;                              // 0x024C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_2;                         // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0279(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27A[0x6];                                      // 0x027A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x0280(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2; // 0x0288(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_1;                 // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_2;                 // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A9[0x3];                                      // 0x02A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_18;                              // 0x02AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_3;                         // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_19;                              // 0x02DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_20;                              // 0x02E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x02E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x02E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2EC[0x4];                                      // 0x02EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_4;                         // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_5;                         // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_21;                              // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0314(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_315[0x3];                                      // 0x0315(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_6;                         // 0x0318(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x0320(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_321[0x3];                                      // 0x0321(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x0324(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0334(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_335[0x3];                                      // 0x0335(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Clouds_SubNoise_Scales_High;   // 0x0340(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Volumetric_Clouds_SubNoise_Scales_Low;    // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_22;                              // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_7;                         // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_371[0x7];                                      // 0x0371(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_11;     // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_8;                         // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x038C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38D[0x3];                                      // 0x038D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_9;                         // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39D[0x3];                                      // 0x039D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_10;                        // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x03A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x03AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3AD[0x3];                                      // 0x03AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_12;     // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0400(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocation_SweepHitResult;       // 0x0418(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0500(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0508(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out;                   // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_13;     // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3; // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture;               // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4; // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture_1;             // 0x0548(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x7];                                      // 0x0551(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5; // 0x0558(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVolumeTexture*                         K2Node_DynamicCast_AsVolume_Texture_2;             // 0x0560(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0568(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_569[0x7];                                      // 0x0569(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_14;     // 0x0570(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out_1;                 // 0x0578(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0598(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x05A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_15;     // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_23;                              // 0x05C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x05C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_11;                        // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue_1;                       // 0x05E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInstanceDynamic*>       CallFunc_Both_Cloud_Shadows_MIDs_Out_7;            // 0x05F0(0x0010)(ReferenceParm)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_12;                        // 0x0600(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_13;                        // 0x0608(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0619(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61A[0x6];                                      // 0x061A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_14;                        // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0630(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0634(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0635(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_636[0x2];                                      // 0x0636(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0638(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x0640(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_15;                        // 0x0648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0650(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x0654(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_655[0x3];                                      // 0x0655(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_16;                        // 0x0658(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_17;                        // 0x0660(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x0668(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x066C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x0670(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x0671(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_672[0x6];                                      // 0x0672(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_18;                        // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_19;                        // 0x0680(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x0688(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x068C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x0691(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_692[0x6];                                      // 0x0692(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Texture_Tex;               // 0x0698(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6; // 0x06C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_3;                 // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D9[0x7];                                      // 0x06D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_20;                        // 0x06E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x06E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x06EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6ED[0x3];                                      // 0x06ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_21;                        // 0x06F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x06F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x06FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FD[0x3];                                      // 0x06FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_22;                        // 0x0700(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_23;                        // 0x0708(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_23;              // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_24;              // 0x0714(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_22;               // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_23;               // 0x0719(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71A[0x6];                                      // 0x071A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_2D_Clouds_Base_Texture_Tex_1;             // 0x0720(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7; // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex; // 0x0758(0x0030)(HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_4;                 // 0x0788(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0x7];                                      // 0x0791(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1; // 0x0798(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8; // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_5;                 // 0x07D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x07D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x07D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7DA[0x6];                                      // 0x07DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_1;         // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F9[0x3];                                      // 0x07F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue;               // 0x07FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_801[0x7];                                      // 0x0801(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x0810(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue_2;         // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81A[0x6];                                      // 0x081A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Current_Base_Clouds_Scale_ReturnValue;    // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_24;                              // 0x0828(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x082C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               CallFunc_Array_Get_Item_24;                        // 0x0830(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_24;               // 0x0838(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_839[0x7];                                      // 0x0839(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_5;        // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_16;     // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_861[0x7];                                      // 0x0861(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_17;     // 0x0868(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x0870(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0871(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x0872(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_873[0x5];                                      // 0x0873(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_9;                // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_10;               // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0890(0x0030)(HasGetValueTypeHash)
	int32                                         CallFunc_Conv_BoolToInt_ReturnValue_1;             // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9; // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_6;                 // 0x08D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x08E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x08E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E2[0x2];                                      // 0x08E2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue;      // 0x08E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x08E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8EA[0x2];                                      // 0x08EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FColor                                 CallFunc_Conv_LinearColorToColor_ReturnValue_1;    // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x08F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x08F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8F2[0x6];                                      // 0x08F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_18;     // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x0900(0x0030)(HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_11;               // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10; // 0x0938(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UTexture2D*                             K2Node_DynamicCast_AsTexture_2D_7;                 // 0x0940(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0948(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x0949(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94A[0x6];                                      // 0x094A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_19;     // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height_1; // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height_1; // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0968(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_969[0x7];                                      // 0x0969(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_12;               // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               K2Node_Select_Default_2;                           // 0x0978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_3;                           // 0x0980(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInterface*                     K2Node_Select_Default_4;                           // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_6;        // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_5;                           // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_7;        // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height; // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D1[0x7];                                      // 0x09D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_20;     // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Scale_Sample_Count_out_2;                 // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Swap_with_Cinematic_Runtime_Value_Out;    // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_21;     // 0x09F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast; // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1; // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2; // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3; // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4; // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5; // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6; // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x0A14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7; // 0x0A18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0A1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0A20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x0A24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0A2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0A30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x0A34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0A38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_8; // 0x0A3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_9; // 0x0A40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8; // 0x0A44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9; // 0x0A48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_10; // 0x0A4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_11; // 0x0A50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_12; // 0x0A54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_13; // 0x0A58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_14; // 0x0A5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_15; // 0x0A60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10; // 0x0A64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11; // 0x0A68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A6C[0x4];                                      // 0x0A6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12; // 0x0A78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13; // 0x0A7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14; // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15; // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16; // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17; // 0x0A8C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast; // 0x0A90(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18; // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast; // 0x0A98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_19; // 0x0A9C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_20; // 0x0AA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_16; // 0x0AA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_17; // 0x0AA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_18; // 0x0AAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_19; // 0x0AB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAerialPespectiveViewDistanceScale_NewValue_ImplicitCast; // 0x0AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_21; // 0x0AB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_20; // 0x0ABC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_22; // 0x0AC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_21; // 0x0AC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_22; // 0x0AC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_23; // 0x0ACC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_23; // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast; // 0x0AD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_24; // 0x0AD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_25; // 0x0ADC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_26; // 0x0AE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetOcclusionExponent_InOcclusionExponent_ImplicitCast; // 0x0AE4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetMinOcclusion_InMinOcclusion_ImplicitCast; // 0x0AE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast; // 0x0AEC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerHeight_NewValue_ImplicitCast;     // 0x0AF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast; // 0x0AF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_27; // 0x0AF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_28; // 0x0AFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_29; // 0x0B00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_30; // 0x0B04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast; // 0x0B08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_31; // 0x0B0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_32; // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_33; // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_34; // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_35; // 0x0B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_36; // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_37; // 0x0B24(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_38; // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_39; // 0x0B2C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_40; // 0x0B30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_41; // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_42; // 0x0B38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_43; // 0x0B3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_44; // 0x0B40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_45; // 0x0B44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_46; // 0x0B48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_47; // 0x0B4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_48; // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_49; // 0x0B54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_50; // 0x0B58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_51; // 0x0B5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_52; // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_53; // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_54; // 0x0B68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast; // 0x0B6C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerHeight_NewValue_ImplicitCast_1;   // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast; // 0x0B74(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast_1; // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Static_Variables) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Static_Variables");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Static_Variables) == 0x000B80, "Wrong size on Ultra_Dynamic_Sky_C_Update_Static_Variables");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_1) == 0x000004, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_1) == 0x00000C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_2) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_2) == 0x000014, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_3) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable) == 0x00001C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_3) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_4) == 0x000024, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_5) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_4) == 0x00002C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_5) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_6) == 0x000034, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_6) == 0x00003C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_7) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_7) == 0x000044, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_8) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_2) == 0x00004C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_8) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_9) == 0x000054, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_3) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_9) == 0x00005C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_object_Variable) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_4) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_object_Variable_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_bool_Variable_5) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_real_Variable) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_real_Variable_1) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_10) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_11) == 0x000094, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_10) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_11) == 0x00009C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_12) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_13) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_12) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_13) == 0x0000AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_14) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Cloud_Layer_Scale_Layer_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_14) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Cloud_Base_Cloud_Height_Base_Cloud_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scale_Top) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Get_Current_Volumetric_Cloud_Extinction_Scale_Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_FMax_ReturnValue) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_15) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_15) == 0x000104, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_FClamp_ReturnValue) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue) == 0x00013C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_1) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_2) == 0x000168, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_2) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_3) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_3) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_4) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanOR_ReturnValue) == 0x00019C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0001A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_4) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_5) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_5) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0001D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_6) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_6) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_7) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0001F4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_16) == 0x0001F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_16) == 0x0001FC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000201, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000202, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue) == 0x000203, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item) == 0x000210, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_8) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue) == 0x00021C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00021D, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00021E, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_1) == 0x00021F, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue) == 0x000220, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_1) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000230, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_1) == 0x000240, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_9) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_17) == 0x00024C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_1) == 0x000250, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_17) == 0x000254, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_2) == 0x000258, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_2) == 0x000260, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x000268, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x000270, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_1) == 0x000278, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_2) == 0x000279, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x000280, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2) == 0x000288, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_1) == 0x000290, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_1) == 0x000298, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_2) == 0x0002A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_2) == 0x0002A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_18) == 0x0002AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0002B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_18) == 0x0002B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_3) == 0x0002D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_3) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_19) == 0x0002DC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_20) == 0x0002E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_19) == 0x0002E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_20) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_4) == 0x0002F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_4) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_5) == 0x000300, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_5) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_21) == 0x00030C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_21) == 0x000310, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue) == 0x000314, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_6) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_6) == 0x000320, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x000324, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_1) == 0x000334, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_SubNoise_Scales_High) == 0x000340, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_SubNoise_Scales_High' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_SubNoise_Scales_Low) == 0x000350, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_SubNoise_Scales_Low' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_22) == 0x000360, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_22) == 0x000364, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_7) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_7) == 0x000370, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_11) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_8) == 0x000380, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_10) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_8) == 0x00038C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_9) == 0x000390, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_11) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_9) == 0x00039C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_10) == 0x0003A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_12) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_10) == 0x0003AC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x0003B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_X) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Y) == 0x0003D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Z) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_12) == 0x0003E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_2) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0003F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MakeVector_ReturnValue) == 0x000400, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_SetWorldLocation_SweepHitResult) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_SetWorldLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector2D_X) == 0x000500, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector2D_Y) == 0x000508, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_2) == 0x000510, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out) == 0x000518, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_13) == 0x000520, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3) == 0x000528, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture) == 0x000530, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_3) == 0x000538, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4) == 0x000540, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture_1) == 0x000548, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_4) == 0x000550, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5) == 0x000558, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsVolume_Texture_2) == 0x000560, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsVolume_Texture_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_5) == 0x000568, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_14) == 0x000570, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out_1) == 0x000578, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000580, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_X_1) == 0x000598, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Y_1) == 0x0005A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BreakVector_Z_1) == 0x0005A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_15) == 0x0005B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0005B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_23) == 0x0005C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_23) == 0x0005C4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_11) == 0x0005C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_11) == 0x0005D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x0005D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0005E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_FMax_ReturnValue_1) == 0x0005E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_FMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Both_Cloud_Shadows_MIDs_Out_7) == 0x0005F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Both_Cloud_Shadows_MIDs_Out_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_12) == 0x000600, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_13) == 0x000608, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_13) == 0x000610, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_14) == 0x000614, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_12) == 0x000618, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_13) == 0x000619, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_3) == 0x000620, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_14) == 0x000628, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_15) == 0x000630, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_14) == 0x000634, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000635, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_4) == 0x000638, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_5) == 0x000640, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_15) == 0x000648, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_16) == 0x000650, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_15) == 0x000654, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_16) == 0x000658, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_17) == 0x000660, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_17) == 0x000668, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_18) == 0x00066C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_16) == 0x000670, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_17) == 0x000671, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_18) == 0x000678, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_19) == 0x000680, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_19) == 0x000688, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_20) == 0x00068C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_18) == 0x000690, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_19) == 0x000691, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_2D_Clouds_Base_Texture_Tex) == 0x000698, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_2D_Clouds_Base_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6) == 0x0006C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_3) == 0x0006D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_6) == 0x0006D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_20) == 0x0006E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_21) == 0x0006E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_20) == 0x0006EC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_21) == 0x0006F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_22) == 0x0006F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_21) == 0x0006FC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_22) == 0x000700, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_23) == 0x000708, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_23) == 0x000710, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Length_ReturnValue_24) == 0x000714, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Length_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_22) == 0x000718, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_23) == 0x000719, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_2D_Clouds_Base_Texture_Tex_1) == 0x000720, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_2D_Clouds_Base_Texture_Tex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7) == 0x000750, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex) == 0x000758, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_4) == 0x000788, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_7) == 0x000790, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1) == 0x000798, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Clouds_Base_Clouds_Texture_Tex_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8) == 0x0007C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_5) == 0x0007D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_8) == 0x0007D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x0007D9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0007E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_6) == 0x0007E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Lerp_ReturnValue) == 0x0007F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue_1) == 0x0007F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_BoolToInt_ReturnValue) == 0x0007FC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_BoolToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_3) == 0x000800, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000808, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_7) == 0x000810, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Use_Sky_Atmosphere_ReturnValue_2) == 0x000818, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Use_Sky_Atmosphere_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Not_PreBool_ReturnValue_2) == 0x000819, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Current_Base_Clouds_Scale_ReturnValue) == 0x000820, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Current_Base_Clouds_Scale_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, Temp_int_Variable_24) == 0x000828, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::Temp_int_Variable_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_IntInt_ReturnValue_24) == 0x00082C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Array_Get_Item_24) == 0x000830, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Less_IntInt_ReturnValue_24) == 0x000838, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Less_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x000840, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_5) == 0x000848, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_8) == 0x000850, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_16) == 0x000858, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000860, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_17) == 0x000868, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_3) == 0x000870, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000871, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_4) == 0x000872, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_9) == 0x000878, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_10) == 0x000880, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_5) == 0x000888, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default) == 0x000890, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_BoolToInt_ReturnValue_1) == 0x0008C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_BoolToInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9) == 0x0008C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x0008D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_6) == 0x0008D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_9) == 0x0008E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x0008E1, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_LinearColorToColor_ReturnValue) == 0x0008E4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_LinearColorToColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_6) == 0x0008E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_7) == 0x0008E9, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_LinearColorToColor_ReturnValue_1) == 0x0008EC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_LinearColorToColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x0008F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x0008F1, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_18) == 0x0008F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_1) == 0x000900, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_11) == 0x000930, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10) == 0x000938, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_AsTexture_2D_7) == 0x000940, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_AsTexture_2D_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_DynamicCast_bSuccess_10) == 0x000948, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_BooleanAND_ReturnValue_8) == 0x000949, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_19) == 0x000950, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height_1) == 0x000958, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Bottom_World_Height_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height_1) == 0x000960, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Cloud_Layer_Top_and_Bottom_World_Height_Top_World_Height_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_IsValid_ReturnValue_4) == 0x000968, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SelectFloat_ReturnValue_12) == 0x000970, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SelectFloat_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_2) == 0x000978, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_3) == 0x000980, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_4) == 0x000988, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_6) == 0x000990, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, K2Node_Select_Default_5) == 0x000998, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Divide_DoubleDouble_ReturnValue_7) == 0x0009A0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Divide_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_MapRangeClamped_ReturnValue) == 0x0009A8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0009B0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x0009B8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0009C0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height) == 0x0009C8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Volumetric_Cloud_Layer_Height_Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x0009D0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_20) == 0x0009D8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Scale_Sample_Count_out_2) == 0x0009E0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Scale_Sample_Count_out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Swap_with_Cinematic_Runtime_Value_Out) == 0x0009E8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Swap_with_Cinematic_Runtime_Value_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_ReturnValue_21) == 0x0009F0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast) == 0x0009F8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1) == 0x0009FC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2) == 0x000A00, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3) == 0x000A04, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4) == 0x000A08, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5) == 0x000A0C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6) == 0x000A10, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x000A14, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7) == 0x000A18, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000A1C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000A20, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x000A24, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000A28, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000A2C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000A30, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x000A34, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000A38, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_8) == 0x000A3C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_9) == 0x000A40, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8) == 0x000A44, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9) == 0x000A48, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_10) == 0x000A4C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_11) == 0x000A50, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_12) == 0x000A54, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_13) == 0x000A58, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_14) == 0x000A5C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_15) == 0x000A60, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10) == 0x000A64, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11) == 0x000A68, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000A70, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12) == 0x000A78, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13) == 0x000A7C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14) == 0x000A80, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15) == 0x000A84, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16) == 0x000A88, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17) == 0x000A8C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast) == 0x000A90, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetShadowReflectionViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18) == 0x000A94, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast) == 0x000A98, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetReflectionViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_19) == 0x000A9C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_20) == 0x000AA0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_16) == 0x000AA4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_17) == 0x000AA8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_18) == 0x000AAC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_19) == 0x000AB0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetAerialPespectiveViewDistanceScale_NewValue_ImplicitCast) == 0x000AB4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetAerialPespectiveViewDistanceScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_21) == 0x000AB8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_20) == 0x000ABC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_22) == 0x000AC0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_21) == 0x000AC4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_22) == 0x000AC8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_23) == 0x000ACC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_ParameterValue_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_23) == 0x000AD0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast) == 0x000AD4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetIndirectLightingIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_24) == 0x000AD8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_25) == 0x000ADC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_25' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_26) == 0x000AE0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_26' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetOcclusionExponent_InOcclusionExponent_ImplicitCast) == 0x000AE4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetOcclusionExponent_InOcclusionExponent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetMinOcclusion_InMinOcclusion_ImplicitCast) == 0x000AE8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetMinOcclusion_InMinOcclusion_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast) == 0x000AEC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetLayerHeight_NewValue_ImplicitCast) == 0x000AF0, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetLayerHeight_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast) == 0x000AF4, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_27) == 0x000AF8, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_27' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_28) == 0x000AFC, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_28' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_29) == 0x000B00, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_29' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_30) == 0x000B04, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_30' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast) == 0x000B08, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetTracingStartMaxDistance_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_31) == 0x000B0C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_31' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_32) == 0x000B10, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_32' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_33) == 0x000B14, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_33' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_34) == 0x000B18, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_34' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_35) == 0x000B1C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_35' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_36) == 0x000B20, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_36' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_37) == 0x000B24, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_37' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_38) == 0x000B28, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_38' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_39) == 0x000B2C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_39' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_40) == 0x000B30, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_40' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_41) == 0x000B34, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_41' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_42) == 0x000B38, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_42' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_43) == 0x000B3C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_43' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_44) == 0x000B40, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_44' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_45) == 0x000B44, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_45' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_46) == 0x000B48, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_46' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_47) == 0x000B4C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_47' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_48) == 0x000B50, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_48' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_49) == 0x000B54, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_49' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_50) == 0x000B58, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_50' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_51) == 0x000B5C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_51' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_52) == 0x000B60, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_52' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_53) == 0x000B64, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_53' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetScalarParameterValue_Value_ImplicitCast_54) == 0x000B68, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetScalarParameterValue_Value_ImplicitCast_54' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast) == 0x000B6C, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetVolumetricScatteringIntensity_NewIntensity_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetLayerHeight_NewValue_ImplicitCast_1) == 0x000B70, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetLayerHeight_NewValue_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast) == 0x000B74, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetShadowViewSampleCountScale_NewValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Static_Variables, CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast_1) == 0x000B78, "Member 'Ultra_Dynamic_Sky_C_Update_Static_Variables::CallFunc_SetLayerBottomAltitude_NewValue_ImplicitCast_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Variables Controlled By Weather
// 0x0098 (0x0098 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather final
{
public:
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0008(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Intended_Water_Level_Using_Water_Level; // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Intended_Water_Level_Water_Level;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0030(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction; // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2; // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_82[0x6];                                       // 0x0082(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed; // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather) == 0x000098, "Wrong size on Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_GetGameMode_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Get_Intended_Water_Level_Using_Water_Level) == 0x00001A, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Get_Intended_Water_Level_Using_Water_Level' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Get_Intended_Water_Level_Water_Level) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Get_Intended_Water_Level_Water_Level' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Not_PreBool_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Array_Get_Item) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Get_Intended_Cloud_Direction_Intended_Cloud_Direction' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, K2Node_DynamicCast_bSuccess_2) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Not_PreBool_ReturnValue_1) == 0x000081, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_Get_Intended_Cloud_Speed_Intended_Cloud_Speed' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x000091, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather, CallFunc_IsValid_ReturnValue_1) == 0x000092, "Member 'Ultra_Dynamic_Sky_C_Update_Variables_Controlled_By_Weather::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Volumetric Cloud Light Rays
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays final
{
public:
	double                                        Current_Strength;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Selected_Light_Vector;                             // 0x0008(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Using_Sun;                                         // 0x0020(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Cached_Float_Value;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue_1;           // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Get_Cached_Color_Value;                   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x1];                                       // 0x00A3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SetFloatParameter_Param_ImplicitCast;     // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, Current_Strength) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::Current_Strength' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, Selected_Light_Vector) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::Selected_Light_Vector' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, Using_Sun) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::Using_Sun' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Get_Cached_Float_Value) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Get_Cached_Float_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_GetForwardVector_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_GetForwardVector_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_GetForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_Get_Cached_Color_Value) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_Get_Cached_Color_Value' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_SelectVector_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_BooleanAND_ReturnValue) == 0x0000A1, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_BooleanAND_ReturnValue_1) == 0x0000A2, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays, CallFunc_SetFloatParameter_Param_ImplicitCast) == 0x0000A4, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays::CallFunc_SetFloatParameter_Param_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Update Volumetric Cloud Light Rays Movement
// 0x0058 (0x0058 - 0x0000)
struct Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement final
{
public:
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue;      // 0x0000(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue;     // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetVectorParameterValue_ReturnValue_1;    // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_LinearColorToVector_ReturnValue_1;   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScalarParameterValue_ReturnValue;      // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement) == 0x000058, "Wrong size on Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement, CallFunc_GetVectorParameterValue_ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement::CallFunc_GetVectorParameterValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement, CallFunc_Conv_LinearColorToVector_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement::CallFunc_Conv_LinearColorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement, CallFunc_GetVectorParameterValue_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement::CallFunc_GetVectorParameterValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement, CallFunc_Conv_LinearColorToVector_ReturnValue_1) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement::CallFunc_Conv_LinearColorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement, CallFunc_GetScalarParameterValue_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Update_Volumetric_Cloud_Light_Rays_Movement::CallFunc_GetScalarParameterValue_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Use Sky Atmosphere
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere) == 0x000002, "Wrong size on Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Use_Sky_Atmosphere::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Using 2D Clouds
// 0x0002 (0x0002 - 0x0000)
struct Ultra_Dynamic_Sky_C_Using_2D_Clouds final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Using_2D_Clouds) == 0x000001, "Wrong alignment on Ultra_Dynamic_Sky_C_Using_2D_Clouds");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Using_2D_Clouds) == 0x000002, "Wrong size on Ultra_Dynamic_Sky_C_Using_2D_Clouds");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Using_2D_Clouds, ReturnValue) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Using_2D_Clouds::ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Using_2D_Clouds, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'Ultra_Dynamic_Sky_C_Using_2D_Clouds::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Ambient Light Color
// 0x0478 (0x0478 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color final
{
public:
	struct FLinearColor                           Bottom;                                            // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Top;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           NewLocalVar_0;                                     // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue;     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_1;   // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_2;   // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_3;   // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_4;   // 0x0100(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out_1;               // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_5;   // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Overcast_Luminance_Boost_Out;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_6;   // 0x0160(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Combined_Night_Brightness_out;            // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_7;   // 0x0188(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_8;   // 0x0198(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_9;   // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_10;  // 0x01E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue; // 0x01F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_11;  // 0x0208(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out;             // 0x0218(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1; // 0x0228(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_1;            // 0x0238(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x3];                                      // 0x0249(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2; // 0x024C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue_2;            // 0x025C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue;      // 0x026C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_1;    // 0x027C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out_1;           // 0x028C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3; // 0x029C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4; // 0x02AC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Absent_Directional_Lights_Brightness_ReturnValue; // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Simplified_Current_Color_Out_2;           // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_DoubleToLinearColor_ReturnValue_12;  // 0x02D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5; // 0x02E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue;   // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x0308(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Divide_LinearColorLinearColor_ReturnValue; // 0x0318(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6; // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7; // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8; // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9; // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10; // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11; // 0x0378(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12; // 0x0388(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13; // 0x0398(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Add_LinearColorLinearColor_ReturnValue_1; // 0x03A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14; // 0x03B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15; // 0x03C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16; // 0x03D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17; // 0x03E8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18; // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19; // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20; // 0x0418(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColor_Desaturated_ReturnValue_2;    // 0x0428(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_21; // 0x0438(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Multiply_LinearColorLinearColor_ReturnValue_22; // 0x0448(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0458(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45C[0x4];                                      // 0x045C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_1;     // 0x0468(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast_2;     // 0x046C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast; // 0x0470(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color) == 0x000478, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, Bottom) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::Bottom' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, Top) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::Top' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, NewLocalVar_0) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::NewLocalVar_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_2) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, K2Node_MakeStruct_LinearColor) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Cloud_Coverage_Local_Out) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_3) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_X) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x0000D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_SelectFloat_ReturnValue) == 0x0000E0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_X_1) == 0x0000E8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Y_1) == 0x0000F0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Z_1) == 0x0000F8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_4) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Abs_ReturnValue) == 0x000110, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Cloud_Coverage_Local_Out_1) == 0x000118, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Cloud_Coverage_Local_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000120, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000128, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_5) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Overcast_Luminance_Boost_Out) == 0x000140, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Overcast_Luminance_Boost_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000148, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000150, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_FClamp_ReturnValue_1) == 0x000158, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_6) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000170, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Combined_Night_Brightness_out) == 0x000178, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Combined_Night_Brightness_out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000180, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_7) == 0x000188, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_8) == 0x000198, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_X_2) == 0x0001A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Y_2) == 0x0001B0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_BreakVector_Z_2) == 0x0001B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Abs_ReturnValue_1) == 0x0001C0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_9) == 0x0001C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0001D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_10) == 0x0001E0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue) == 0x0001F0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Lerp_ReturnValue) == 0x000200, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_11) == 0x000208, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Simplified_Current_Color_Out) == 0x000218, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Simplified_Current_Color_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1) == 0x000228, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_ReturnValue_1) == 0x000238, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000248, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2) == 0x00024C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_ReturnValue_2) == 0x00025C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue) == 0x00026C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue_1) == 0x00027C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Simplified_Current_Color_Out_1) == 0x00028C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Simplified_Current_Color_Out_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3) == 0x00029C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4) == 0x0002AC, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Absent_Directional_Lights_Brightness_ReturnValue) == 0x0002C0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Absent_Directional_Lights_Brightness_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Simplified_Current_Color_Out_2) == 0x0002C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Simplified_Current_Color_Out_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Conv_DoubleToLinearColor_ReturnValue_12) == 0x0002D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Conv_DoubleToLinearColor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5) == 0x0002E8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue) == 0x0002F8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_SelectColor_ReturnValue) == 0x000308, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Divide_LinearColorLinearColor_ReturnValue) == 0x000318, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Divide_LinearColorLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6) == 0x000328, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7) == 0x000338, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8) == 0x000348, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9) == 0x000358, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10) == 0x000368, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11) == 0x000378, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12) == 0x000388, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13) == 0x000398, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Add_LinearColorLinearColor_ReturnValue_1) == 0x0003A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Add_LinearColorLinearColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14) == 0x0003B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15) == 0x0003C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16) == 0x0003D8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17) == 0x0003E8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18) == 0x0003F8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19) == 0x000408, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20) == 0x000418, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColor_Desaturated_ReturnValue_2) == 0x000428, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColor_Desaturated_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_21) == 0x000438, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_LinearColorLinearColor_ReturnValue_22) == 0x000448, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_LinearColorLinearColor_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000458, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000460, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_1) == 0x000468, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColorLerp_Alpha_ImplicitCast_2) == 0x00046C, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColorLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color, CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast) == 0x000470, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Ambient_Light_Color::CallFunc_LinearColor_Desaturated_InDesaturation_ImplicitCast' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Base Cloud Height
// 0x0018 (0x0018 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height final
{
public:
	double                                        Base_Cloud_Height_0;                               // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height) == 0x000018, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, Base_Cloud_Height_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::Base_Cloud_Height_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Base_Cloud_Height::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Floor Variation
// 0x00D8 (0x00D8 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation final
{
public:
	double                                        Height_Clear;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Height_Cloudy;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Color;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Directional_Light_Dimming_Out;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FMax_ReturnValue;                         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation) == 0x0000D8, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Height_Clear) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Height_Clear' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Height_Cloudy) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Height_Cloudy' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, Color) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::Color' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Cloud_Coverage_Local_Out) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Directional_Light_Dimming_Out) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Directional_Light_Dimming_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_SelectFloat_ReturnValue_1) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_X) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_Y) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_BreakVector_Z) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Abs_ReturnValue) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000090, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x0000A8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0000B0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0000B8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x0000C0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation, CallFunc_FMax_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Floor_Variation::CallFunc_FMax_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Layer Height
// 0x0030 (0x0030 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height final
{
public:
	double                                        Base_Cloud_Height_0;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Layer_Height;                                      // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height) == 0x000030, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, Base_Cloud_Height_0) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::Base_Cloud_Height_0' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, Layer_Height) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::Layer_Height' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Height::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Layer Scale
// 0x0038 (0x0038 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale final
{
public:
	double                                        Layer_Scale;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale) == 0x000038, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, Layer_Scale) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::Layer_Scale' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_SelectFloat_ReturnValue_1) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Layer_Scale::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Shadows Altitude
// 0x0028 (0x0028 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude final
{
public:
	double                                        Cloud_Shadows_Altitude;                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Cloud_Coverage_Local_Out;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude) == 0x000028, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, Cloud_Shadows_Altitude) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::Cloud_Shadows_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Cloud_Coverage_Local_Out) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Cloud_Coverage_Local_Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Volumetric_Cloud_Top_Altitude_Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_MapRangeClamped_ReturnValue) == 0x000018, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude, CallFunc_Lerp_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Shadows_Altitude::CallFunc_Lerp_ReturnValue' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Cloud Top Altitude
// 0x0068 (0x0068 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude final
{
public:
	double                                        Cloud_Top_Altitude;                                // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Use_Sky_Atmosphere_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude) == 0x000068, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, Cloud_Top_Altitude) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::Cloud_Top_Altitude' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Use_Sky_Atmosphere_ReturnValue) == 0x000008, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Use_Sky_Atmosphere_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_BreakVector_X) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_BreakVector_Y) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_BreakVector_Z) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Cloud_Top_Altitude::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds Base Clouds Texture
// 0x0168 (0x0168 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture final
{
public:
	TSoftObjectPtr<class UTexture2D>              Tex;                                               // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable;                          // 0x0038(0x0030)(HasGetValueTypeHash)
	EUDS_NoiseType                                Temp_byte_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_1;                        // 0x0070(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              Temp_softobject_Variable_2;                        // 0x00A0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue; // 0x00D0(0x0030)(UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default;                             // 0x0108(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UTexture2D>              K2Node_Select_Default_1;                           // 0x0138(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture) == 0x000168, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Tex) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Tex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_bool_Variable) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_byte_Variable) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, Temp_softobject_Variable_2) == 0x0000A0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::CallFunc_Conv_ObjectToSoftObjectReference_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, CallFunc_IsValid_ReturnValue) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, K2Node_Select_Default) == 0x000108, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture, K2Node_Select_Default_1) == 0x000138, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Base_Clouds_Texture::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds Parent Materials
// 0x0190 (0x0190 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials final
{
public:
	TSoftObjectPtr<class UMaterialInterface>      Simplified;                                        // 0x0000(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Complex;                                           // 0x0030(0x0030)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable;                          // 0x0068(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_1;                        // 0x0098(0x0030)(HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_2;                        // 0x00D0(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      Temp_softobject_Variable_3;                        // 0x0100(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default;                             // 0x0130(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UMaterialInterface>      K2Node_Select_Default_1;                           // 0x0160(0x0030)(HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials) == 0x000190, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Simplified) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Simplified' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Complex) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Complex' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable) == 0x000068, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_1) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_bool_Variable_1) == 0x0000C8, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_2) == 0x0000D0, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, Temp_softobject_Variable_3) == 0x000100, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::Temp_softobject_Variable_3' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default) == 0x000130, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials, K2Node_Select_Default_1) == 0x000160, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_Parent_Materials::K2Node_Select_Default_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.Volumetric Clouds SubNoise Scales
// 0x0088 (0x0088 - 0x0000)
struct Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales final
{
public:
	struct FLinearColor                           High;                                              // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Low;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue_1;   // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales");
static_assert(sizeof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales) == 0x000088, "Wrong size on Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, High) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::High' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, Low) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::Low' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000028, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000030, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales, CallFunc_Conv_VectorToLinearColor_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_Volumetric_Clouds_SubNoise_Scales::CallFunc_Conv_VectorToLinearColor_ReturnValue_1' has a wrong offset!");

// Function Ultra_Dynamic_Sky.Ultra_Dynamic_Sky_C.World Space to Drawn Target Pixel Space
// 0x00A8 (0x00A8 - 0x0000)
struct Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space final
{
public:
	struct FVector2D                              In;                                                // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Out;                                               // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Cloud_Coverage_Target_Mapping_Mapping;    // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DVector2D_ReturnValue;      // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space) == 0x000008, "Wrong alignment on Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space");
static_assert(sizeof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space) == 0x0000A8, "Wrong size on Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, In) == 0x000000, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::In' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, Out) == 0x000010, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::Out' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Cloud_Coverage_Target_Mapping_Mapping) == 0x000020, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Cloud_Coverage_Target_Mapping_Mapping' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x000038, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000048, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000050, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_MakeVector2D_ReturnValue) == 0x000060, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000070, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_MakeVector2D_ReturnValue_1) == 0x000078, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Divide_Vector2DVector2D_ReturnValue) == 0x000088, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Divide_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000098, "Member 'Ultra_Dynamic_Sky_C_World_Space_to_Drawn_Target_Pixel_Space::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");

}

