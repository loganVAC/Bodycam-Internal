#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Remington

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass Remington.Remington_C
// 0x0090 (0x03E0 - 0x0350)
class URemington_C final : public UAnimInstance
{
public:
	uint8                                         Pad_348[0x8];                                      // 0x0348(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0350(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_PropertyAccess;             // 0x0358(0x0008)()
	struct FAnimSubsystemInstance                 AnimBlueprintExtension_Base;                       // 0x0360(0x0008)()
	struct FAnimNode_Slot                         AnimGraphNode_Slot;                                // 0x0368(0x0048)()
	struct FAnimNode_Root                         AnimGraphNode_Root;                                // 0x03B0(0x0020)()
	class AWEP_C*                                 As_WEP;                                            // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	double                                        SliderBack;                                        // 0x03D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AnimGraph(struct FPoseLink* AnimGraph_0);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void ExecuteUbergraph_Remington(int32 EntryPoint);
	class UAnimMontage* Get_First_Person_Montage_Character_Fire();
	class UAnimMontage* Get_First_Person_Montage_Character_Holster();
	class UAnimMontage* Get_First_Person_Montage_Character_Inspect();
	class UAnimMontage* Get_First_Person_Montage_Character_Reload();
	class UAnimMontage* Get_First_Person_Montage_Character_Reload_Empty();
	class UAnimMontage* Get_First_Person_Montage_Character_Unholster();
	class UAnimSequence* Get_First_Person_Sequence_Loop_Run();
	class UAnimSequence* Get_First_Person_Sequence_Pose_Aim();
	class UAnimSequence* Get_First_Person_Sequence_Pose_Idle();
	class UStaticMeshComponent* Get_Mesh_Component_Magazine();
	class USkeletalMeshComponent* Get_Mesh_Component_Weapon();
	class FName Get_Name_Socket_Third_Person();
	struct FVector Get_Offset_Action_Location();
	struct FRotator Get_Offset_Action_Rotation();
	double Get_Rate_Of_Fire();
	class UAnimMontage* Get_Third_Person_Montage_Character_Fire();
	class UAnimMontage* Get_Third_Person_Montage_Character_Inspect();
	class UAnimMontage* Get_Third_Person_Montage_Character_Reload();
	class UAnimMontage* Get_Third_Person_Montage_Character_Reload_Empty();
	class UAnimSequence* Get_Third_Person_Sequence_Loop_Weapon_Jog();
	class UAnimSequence* Get_Third_Person_Sequence_Loop_Weapon_Sprint();
	class UAnimSequence* Get_Third_Person_Sequence_Loop_Weapon_Sprint_Impulse();
	class UAnimSequence* Get_Third_Person_Sequence_Pose_Crouching_Holstered();
	class UAnimSequence* Get_Third_Person_Sequence_Pose_Crouching_Unholstered();
	class UAnimSequence* Get_Third_Person_Sequence_Pose_Standing_Holstered();
	class UAnimSequence* Get_Third_Person_Sequence_Pose_Standing_Unholstered();
	void Init_Wep(class AWEP_C* WEP);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Remington_C">();
	}
	static class URemington_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<URemington_C>();
	}
};
static_assert(alignof(URemington_C) == 0x000010, "Wrong alignment on URemington_C");
static_assert(sizeof(URemington_C) == 0x0003E0, "Wrong size on URemington_C");
static_assert(offsetof(URemington_C, UberGraphFrame) == 0x000350, "Member 'URemington_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(URemington_C, AnimBlueprintExtension_PropertyAccess) == 0x000358, "Member 'URemington_C::AnimBlueprintExtension_PropertyAccess' has a wrong offset!");
static_assert(offsetof(URemington_C, AnimBlueprintExtension_Base) == 0x000360, "Member 'URemington_C::AnimBlueprintExtension_Base' has a wrong offset!");
static_assert(offsetof(URemington_C, AnimGraphNode_Slot) == 0x000368, "Member 'URemington_C::AnimGraphNode_Slot' has a wrong offset!");
static_assert(offsetof(URemington_C, AnimGraphNode_Root) == 0x0003B0, "Member 'URemington_C::AnimGraphNode_Root' has a wrong offset!");
static_assert(offsetof(URemington_C, As_WEP) == 0x0003D0, "Member 'URemington_C::As_WEP' has a wrong offset!");
static_assert(offsetof(URemington_C, SliderBack) == 0x0003D8, "Member 'URemington_C::SliderBack' has a wrong offset!");

}

