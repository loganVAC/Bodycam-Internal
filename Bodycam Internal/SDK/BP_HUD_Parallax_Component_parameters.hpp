#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_HUD_Parallax_Component

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_HUD_Parallax_Component.BP_HUD_Parallax_Component_C.ExecuteUbergraph_BP_HUD_Parallax_Component
// 0x0058 (0x0058 - 0x0000)
struct BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCameraComponent*                       CallFunc_GetComponentByClass_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_Conv_VectorToLinearColor_ReturnValue;     // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component) == 0x000008, "Wrong alignment on BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component");
static_assert(sizeof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component) == 0x000058, "Wrong size on BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, EntryPoint) == 0x000000, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, CallFunc_GetComponentByClass_ReturnValue) == 0x000008, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, K2Node_Event_DeltaSeconds) == 0x000014, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, CallFunc_GetOwner_ReturnValue) == 0x000018, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, K2Node_DynamicCast_AsCharacter) == 0x000020, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, CallFunc_IsValid_ReturnValue_1) == 0x000029, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component, CallFunc_Conv_VectorToLinearColor_ReturnValue) == 0x000048, "Member 'BP_HUD_Parallax_Component_C_ExecuteUbergraph_BP_HUD_Parallax_Component::CallFunc_Conv_VectorToLinearColor_ReturnValue' has a wrong offset!");

// Function BP_HUD_Parallax_Component.BP_HUD_Parallax_Component_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_HUD_Parallax_Component_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_Parallax_Component_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_HUD_Parallax_Component_C_ReceiveTick");
static_assert(sizeof(BP_HUD_Parallax_Component_C_ReceiveTick) == 0x000004, "Wrong size on BP_HUD_Parallax_Component_C_ReceiveTick");
static_assert(offsetof(BP_HUD_Parallax_Component_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_HUD_Parallax_Component_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_HUD_Parallax_Component.BP_HUD_Parallax_Component_C.SetRotationRates
// 0x0108 (0x0108 - 0x0000)
struct BP_HUD_Parallax_Component_C_SetRotationRates final
{
public:
	struct FRotator                               Rotation;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_G_ImplicitCast;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_ImplicitCast;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_Parallax_Component_C_SetRotationRates) == 0x000008, "Wrong alignment on BP_HUD_Parallax_Component_C_SetRotationRates");
static_assert(sizeof(BP_HUD_Parallax_Component_C_SetRotationRates) == 0x000108, "Wrong size on BP_HUD_Parallax_Component_C_SetRotationRates");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, Rotation) == 0x000000, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::Rotation' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_FInterpTo_ReturnValue) == 0x000030, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_FInterpTo_ReturnValue_1) == 0x000038, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000040, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_FInterpTo_ReturnValue_2) == 0x000048, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_FInterpTo_ReturnValue_3) == 0x000050, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, K2Node_MakeStruct_LinearColor) == 0x000060, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::K2Node_MakeStruct_LinearColor' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000070, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_BreakRotator_Roll_1) == 0x000078, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_BreakRotator_Pitch_1) == 0x00007C, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_BreakRotator_Yaw_1) == 0x000080, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000088, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000090, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_FClamp_ReturnValue) == 0x000098, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000A8, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000B0, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Abs_ReturnValue) == 0x0000B8, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_SelectFloat_ReturnValue) == 0x0000C0, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000C8, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_SelectFloat_ReturnValue_1) == 0x0000D0, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_FClamp_ReturnValue_1) == 0x0000D8, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0000E0, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0000E8, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, K2Node_MakeStruct_G_ImplicitCast) == 0x0000F0, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::K2Node_MakeStruct_G_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, K2Node_MakeStruct_R_ImplicitCast) == 0x0000F4, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::K2Node_MakeStruct_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0000F8, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_SetRotationRates, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000100, "Member 'BP_HUD_Parallax_Component_C_SetRotationRates::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");

// Function BP_HUD_Parallax_Component.BP_HUD_Parallax_Component_C.UpdateParallax
// 0x0090 (0x0090 - 0x0000)
struct BP_HUD_Parallax_Component_C_UpdateParallax final
{
public:
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_SelectRotator_ReturnValue;                // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_HUD_Parallax_Component_C_UpdateParallax) == 0x000008, "Wrong alignment on BP_HUD_Parallax_Component_C_UpdateParallax");
static_assert(sizeof(BP_HUD_Parallax_Component_C_UpdateParallax) == 0x000090, "Wrong size on BP_HUD_Parallax_Component_C_UpdateParallax");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000000, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_GetControlRotation_ReturnValue) == 0x000018, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_SelectRotator_ReturnValue) == 0x000038, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_SelectRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000060, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_MakeRotator_ReturnValue) == 0x000068, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(BP_HUD_Parallax_Component_C_UpdateParallax, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000088, "Member 'BP_HUD_Parallax_Component_C_UpdateParallax::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

}

