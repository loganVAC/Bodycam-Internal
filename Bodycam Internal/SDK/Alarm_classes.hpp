#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Alarm

#include "Basic.hpp"

#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Alarm.Alarm_C
// 0x0020 (0x02B0 - 0x0290)
class AAlarm_C final : public AActor
{
public:
	class UPointLightComponent*                   PointLight;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UStaticMeshComponent*                   S_Rusty_Bulkhead_Light_vgyidfpaw_lod0_Var1;        // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpotLightComponent*                    SpotLight;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Alarm_C">();
	}
	static class AAlarm_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AAlarm_C>();
	}
};
static_assert(alignof(AAlarm_C) == 0x000008, "Wrong alignment on AAlarm_C");
static_assert(sizeof(AAlarm_C) == 0x0002B0, "Wrong size on AAlarm_C");
static_assert(offsetof(AAlarm_C, PointLight) == 0x000290, "Member 'AAlarm_C::PointLight' has a wrong offset!");
static_assert(offsetof(AAlarm_C, S_Rusty_Bulkhead_Light_vgyidfpaw_lod0_Var1) == 0x000298, "Member 'AAlarm_C::S_Rusty_Bulkhead_Light_vgyidfpaw_lod0_Var1' has a wrong offset!");
static_assert(offsetof(AAlarm_C, SpotLight) == 0x0002A0, "Member 'AAlarm_C::SpotLight' has a wrong offset!");
static_assert(offsetof(AAlarm_C, DefaultSceneRoot) == 0x0002A8, "Member 'AAlarm_C::DefaultSceneRoot' has a wrong offset!");

}

