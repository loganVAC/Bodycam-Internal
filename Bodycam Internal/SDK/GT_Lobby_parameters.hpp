#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GT_Lobby

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_Team_structs.hpp"
#include "SteamCorePro_structs.hpp"
#include "STR_TEST_structs.hpp"
#include "STR_PCInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "STR_Actor_structs.hpp"
#include "STR_KickVote_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"
#include "STR_Score_structs.hpp"
#include "GameMode_structs.hpp"
#include "OnlineSubsystemUtils_structs.hpp"
#include "ServerSlotEN_structs.hpp"


namespace SDK::Params
{

// Function GT_Lobby.GT_Lobby_C.AddReadyPlayer
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_AddReadyPlayer final
{
public:
	class FString                                 NewItem;                                           // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_AddReadyPlayer) == 0x000008, "Wrong alignment on GT_Lobby_C_AddReadyPlayer");
static_assert(sizeof(GT_Lobby_C_AddReadyPlayer) == 0x000010, "Wrong size on GT_Lobby_C_AddReadyPlayer");
static_assert(offsetof(GT_Lobby_C_AddReadyPlayer, NewItem) == 0x000000, "Member 'GT_Lobby_C_AddReadyPlayer::NewItem' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.AllPlayerJoinSeverByRef (Multicast)
// 0x0020 (0x0020 - 0x0000)
struct GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_ final
{
public:
	class FString                                 SessionToJoin__Client_;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSTR_PCInfo>                    FriendsLobby;                                      // 0x0010(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_) == 0x000008, "Wrong alignment on GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_");
static_assert(sizeof(GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_) == 0x000020, "Wrong size on GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_");
static_assert(offsetof(GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_, SessionToJoin__Client_) == 0x000000, "Member 'GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_::SessionToJoin__Client_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_, FriendsLobby) == 0x000010, "Member 'GT_Lobby_C_AllPlayerJoinSeverByRef__Multicast_::FriendsLobby' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.AllPlayerJoinSeverByRef (Server)
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_AllPlayerJoinSeverByRef__Server_ final
{
public:
	class FString                                 SessionToJoin__Client_;                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_AllPlayerJoinSeverByRef__Server_) == 0x000008, "Wrong alignment on GT_Lobby_C_AllPlayerJoinSeverByRef__Server_");
static_assert(sizeof(GT_Lobby_C_AllPlayerJoinSeverByRef__Server_) == 0x000010, "Wrong size on GT_Lobby_C_AllPlayerJoinSeverByRef__Server_");
static_assert(offsetof(GT_Lobby_C_AllPlayerJoinSeverByRef__Server_, SessionToJoin__Client_) == 0x000000, "Member 'GT_Lobby_C_AllPlayerJoinSeverByRef__Server_::SessionToJoin__Client_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.CanCreateKickVote
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_CanCreateKickVote final
{
public:
	bool                                          CanCreateKickVote_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_CanCreateKickVote) == 0x000001, "Wrong alignment on GT_Lobby_C_CanCreateKickVote");
static_assert(sizeof(GT_Lobby_C_CanCreateKickVote) == 0x000001, "Wrong size on GT_Lobby_C_CanCreateKickVote");
static_assert(offsetof(GT_Lobby_C_CanCreateKickVote, CanCreateKickVote_) == 0x000000, "Member 'GT_Lobby_C_CanCreateKickVote::CanCreateKickVote_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.CanKickThisPlayer?
// 0x0018 (0x0018 - 0x0000)
struct GT_Lobby_C_CanKickThisPlayer_ final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          True_;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_CanKickThisPlayer_) == 0x000008, "Wrong alignment on GT_Lobby_C_CanKickThisPlayer_");
static_assert(sizeof(GT_Lobby_C_CanKickThisPlayer_) == 0x000018, "Wrong size on GT_Lobby_C_CanKickThisPlayer_");
static_assert(offsetof(GT_Lobby_C_CanKickThisPlayer_, PlayerID) == 0x000000, "Member 'GT_Lobby_C_CanKickThisPlayer_::PlayerID' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_CanKickThisPlayer_, True_) == 0x000010, "Member 'GT_Lobby_C_CanKickThisPlayer_::True_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.ExecuteUbergraph_GT_Lobby
// 0x0A00 (0x0A00 - 0x0000)
struct GT_Lobby_C_ExecuteUbergraph_GT_Lobby final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BC_ShowCase_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B[0x1];                                       // 0x002B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BC_ShowCase_C*                      CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_String;                               // 0x0060(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TimeCount;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_NewParam;                             // 0x0080(0x0018)()
	E_Team                                        K2Node_Event_Team;                                 // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Selected_Level_Name;                  // 0x009C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team_PlayerKilled_;                   // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MilitaryIndex;                        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TerroristIndex;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_WiiningTeam;                          // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_Event_Score;                                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Win_;                                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Slomo;                                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_SteamID;                              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target_2;                             // 0x00E0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReady_;                             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsTalking;                            // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x6];                                      // 0x0122(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_Event_PlayerInfo;                           // 0x0130(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_CustomEvent_Player_info_1;                  // 0x0178(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes_;                           // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x3];                                      // 0x01B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_CustomEvent_Player_info;                    // 0x01C0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_204[0x4];                                      // 0x0204(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_1;                         // 0x0208(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0254(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_255[0x3];                                      // 0x0255(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0258(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x025C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_CustomEvent_PlayerInfo;                     // 0x0268(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x02A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AC[0x4];                                      // 0x02AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target_1;                             // 0x02B0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target;                               // 0x02F0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes_;                                 // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_2;                         // 0x0338(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_3;                         // 0x0380(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x03C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_MakeStruct_STR_KickVote;                    // 0x03D0(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_MakeStruct_STR_KickVote_1;                  // 0x0418(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_4;                         // 0x0460(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x04A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x04A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x04AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Event_Gamemode;                             // 0x04AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AC[0x4];                                      // 0x04AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x04B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x04B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x04C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C1[0x3];                                      // 0x04C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x04C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_5;                         // 0x04C8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_CustomEvent_Game_Mode;                      // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0510(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_GetTeam_Team;                             // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_522[0x6];                                      // 0x0522(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_1;          // 0x0528(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0539(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_53A[0x2];                                      // 0x053A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_6;                         // 0x0540(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0588(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x058C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x058D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_58E[0x2];                                      // 0x058E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0590(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue;                   // 0x05A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A1[0x7];                                      // 0x05A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_NewItem;                        // 0x05A8(0x0010)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x05B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x05BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x05C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C2[0x6];                                      // 0x05C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x05C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x05D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_7;                         // 0x05D8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0618(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APC_Lobby_C*                            K2Node_DynamicCast_AsPC_Lobby;                     // 0x0620(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x3];                                      // 0x0629(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x062C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_LevelsName_2;                   // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_639[0x7];                                      // 0x0639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0640(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue_1;          // 0x0650(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0660(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0670(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetRichPresence_ReturnValue;              // 0x0680(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_681[0x7];                                      // 0x0681(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_8;                         // 0x0688(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x06CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x06CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CE[0x2];                                      // 0x06CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x06D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_2;          // 0x06D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x06E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E9[0x3];                                      // 0x06E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x06EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x06F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6F1[0x3];                                      // 0x06F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_LevelsName_1;                   // 0x06F4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6FC[0x4];                                      // 0x06FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0700(0x0010)(ReferenceParm)
	struct FBlueprintSessionResult                K2Node_CustomEvent_SessionResult;                  // 0x0710(0x0120)()
	struct FSteamID                               K2Node_CustomEvent_SteamIdUsers;                   // 0x0830(0x0008)(NoDestructor)
	class UPDA_LevelMetaData_C*                   K2Node_CustomEvent_Level_Meta_Data;                // 0x0838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EServerSlotEN                                 K2Node_CustomEvent_Config;                         // 0x0840(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_CustomEvent_Gamemode;                       // 0x0841(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_842[0x6];                                      // 0x0842(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSteamSessionSetting>           K2Node_CustomEvent_ArrayElement_Session_Settings;  // 0x0848(0x0010)(ReferenceParm)
	class APlayerStart*                           CallFunc_Array_Get_Item_9;                         // 0x0858(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0860(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x3];                                      // 0x08C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x08C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x08C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C9[0x3];                                      // 0x08C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x08CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x08D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D1[0x7];                                      // 0x08D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SessionToJoin__Client__1;       // 0x08D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class UWBP_SoundManagerUI_C*>          CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x08E8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UWBP_SoundManagerUI_C*                  CallFunc_Array_Get_Item_10;                        // 0x08F8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_LevelsName;                     // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SessionToJoin__Client_;         // 0x0908(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSTR_PCInfo>                    K2Node_CustomEvent_FriendsLobby;                   // 0x0918(0x0010)(ConstParm, ReferenceParm)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0928(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_11;                        // 0x0930(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_971[0x3];                                      // 0x0971(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0978(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_1;                 // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0990(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_991[0x3];                                      // 0x0991(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0994(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0998(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_999[0x7];                                      // 0x0999(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x09A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_3;          // 0x09A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B9[0x3];                                      // 0x09B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x09BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetSteamID_SteamID;                       // 0x09C0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x09D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D1[0x3];                                      // 0x09D1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x09D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_2;                 // 0x09E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x3];                                      // 0x09F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x09F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby) == 0x000010, "Wrong alignment on GT_Lobby_C_ExecuteUbergraph_GT_Lobby");
static_assert(sizeof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby) == 0x000A00, "Wrong size on GT_Lobby_C_ExecuteUbergraph_GT_Lobby");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, EntryPoint) == 0x000000, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::EntryPoint' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_HasAuthority_ReturnValue) == 0x00001C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Loop_Counter_Variable) == 0x000020, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_bool_IsClosed_Variable) == 0x000028, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_bool_Has_Been_Initd_Variable) == 0x000029, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_HasAuthority_ReturnValue_1) == 0x00002A, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Loop_Counter_Variable_1) == 0x00002C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_1) == 0x000030, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Loop_Counter_Variable_2) == 0x000034, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_2) == 0x000038, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Array_Index_Variable) == 0x00003C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Array_Index_Variable_1) == 0x000040, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Loop_Counter_Variable_3) == 0x000044, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Less_IntInt_ReturnValue) == 0x000048, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_3) == 0x00004C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Array_Index_Variable_2) == 0x000050, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item) == 0x000058, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_String) == 0x000060, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Delay) == 0x000070, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_TimeCount) == 0x000078, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_TimeCount' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_NewParam) == 0x000080, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Team) == 0x000098, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Selected_Level_Name) == 0x00009C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Index) == 0x0000A4, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Team_PlayerKilled_) == 0x0000A8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_MilitaryIndex) == 0x0000AC, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_TerroristIndex) == 0x0000B0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_TerroristIndex' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_WiiningTeam) == 0x0000B4, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_WiiningTeam' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Score) == 0x0000B8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Win_) == 0x0000C0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Win_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Slomo) == 0x0000C8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Slomo' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_SteamID) == 0x0000D0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_SteamID' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Target_2) == 0x0000E0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_IsReady_) == 0x000120, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_IsReady_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_IsTalking) == 0x000121, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_IsTalking' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_PC) == 0x000128, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_PlayerInfo) == 0x000130, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_Player_info_1) == 0x000178, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_Player_info_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_Yes_) == 0x0001B8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_Yes_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Length_ReturnValue_1) == 0x0001BC, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_Player_info) == 0x0001C0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_Player_info' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_AddUnique_ReturnValue) == 0x000200, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_1) == 0x000208, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Length_ReturnValue_2) == 0x000250, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Less_IntInt_ReturnValue_1) == 0x000254, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Array_Index_Variable_3) == 0x000258, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Loop_Counter_Variable_4) == 0x00025C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_4) == 0x000260, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_PlayerInfo) == 0x000268, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_PlayerInfo' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Length_ReturnValue_3) == 0x0002A8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Target_1) == 0x0002B0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Target) == 0x0002F0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Yes_) == 0x000330, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Yes_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_bool_True_if_break_was_hit_Variable) == 0x000331, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Array_Index_Variable_4) == 0x000334, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_2) == 0x000338, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_3) == 0x000380, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_5) == 0x0003C8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_6) == 0x0003CC, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_MakeStruct_STR_KickVote) == 0x0003D0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_MakeStruct_STR_KickVote' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_MakeStruct_STR_KickVote_1) == 0x000418, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_MakeStruct_STR_KickVote_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_4) == 0x000460, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Not_PreBool_ReturnValue) == 0x0004A8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0004A9, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_BooleanAND_ReturnValue) == 0x0004AA, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_Event_Gamemode) == 0x0004AB, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_Event_Gamemode' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetGameInstance_ReturnValue) == 0x0004B0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_AsBodycam_GI) == 0x0004B8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_bSuccess) == 0x0004C0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Array_Index_Variable_5) == 0x0004C4, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_5) == 0x0004C8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_Game_Mode) == 0x000508, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_Game_Mode' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_AsBodycam_Interface) == 0x000510, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_bSuccess_1) == 0x000520, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetTeam_Team) == 0x000521, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetTeam_Team' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_AsBodycam_Interface_1) == 0x000528, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_AsBodycam_Interface_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_bSuccess_2) == 0x000538, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000539, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Array_Index_Variable_6) == 0x00053C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_6) == 0x000540, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_7) == 0x000588, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Greater_IntInt_ReturnValue) == 0x00058C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x00058D, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Concat_StrStr_ReturnValue) == 0x000590, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_KickPlayer_ReturnValue) == 0x0005A0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_KickPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_NewItem) == 0x0005A8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_NewItem' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Find_ReturnValue) == 0x0005B8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Add_ReturnValue) == 0x0005BC, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0005C0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_RemoveItem_ReturnValue) == 0x0005C1, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x0005C8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x0005D0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_7) == 0x0005D8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetSequencePlayer_ReturnValue) == 0x000618, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_AsPC_Lobby) == 0x000620, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_AsPC_Lobby' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_bSuccess_3) == 0x000628, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Length_ReturnValue_4) == 0x00062C, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_LevelsName_2) == 0x000630, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_LevelsName_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Less_IntInt_ReturnValue_2) == 0x000638, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Conv_NameToString_ReturnValue) == 0x000640, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Conv_NameToString_ReturnValue_1) == 0x000650, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Conv_NameToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000660, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000670, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_SetRichPresence_ReturnValue) == 0x000680, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_SetRichPresence_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_8) == 0x000688, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Find_ReturnValue_1) == 0x0006C8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_NotEqual_IntInt_ReturnValue) == 0x0006CC, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x0006CD, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_K2_GetPawn_ReturnValue) == 0x0006D0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_AsBodycam_Interface_2) == 0x0006D8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_AsBodycam_Interface_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_bSuccess_4) == 0x0006E8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Length_ReturnValue_5) == 0x0006EC, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Less_IntInt_ReturnValue_3) == 0x0006F0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_LevelsName_1) == 0x0006F4, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_LevelsName_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000700, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_SessionResult) == 0x000710, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_SessionResult' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_SteamIdUsers) == 0x000830, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_SteamIdUsers' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_Level_Meta_Data) == 0x000838, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_Level_Meta_Data' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_Config) == 0x000840, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_Config' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_Gamemode) == 0x000841, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_Gamemode' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_ArrayElement_Session_Settings) == 0x000848, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_ArrayElement_Session_Settings' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_9) == 0x000858, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetTransform_ReturnValue) == 0x000860, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_bool_True_if_break_was_hit_Variable_1) == 0x0008C0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Loop_Counter_Variable_5) == 0x0008C4, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Less_IntInt_ReturnValue_4) == 0x0008C8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_8) == 0x0008CC, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Not_PreBool_ReturnValue_1) == 0x0008D0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_SessionToJoin__Client__1) == 0x0008D8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_SessionToJoin__Client__1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x0008E8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_10) == 0x0008F8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_LevelsName) == 0x000900, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_LevelsName' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_SessionToJoin__Client_) == 0x000908, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_SessionToJoin__Client_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_CustomEvent_FriendsLobby) == 0x000918, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_CustomEvent_FriendsLobby' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetPlayerController_ReturnValue) == 0x000928, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Get_Item_11) == 0x000930, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_HasAuthority_ReturnValue_2) == 0x000970, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Length_ReturnValue_6) == 0x000974, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetGameInstance_ReturnValue_1) == 0x000978, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Less_IntInt_ReturnValue_5) == 0x000980, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_AsBodycam_GI_1) == 0x000988, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_AsBodycam_GI_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_bSuccess_5) == 0x000990, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000994, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_IsServer_ReturnValue) == 0x000998, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetPlayerController_ReturnValue_1) == 0x0009A0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_AsBodycam_Interface_3) == 0x0009A8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_AsBodycam_Interface_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_bSuccess_6) == 0x0009B8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, Temp_int_Loop_Counter_Variable_6) == 0x0009BC, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetSteamID_SteamID) == 0x0009C0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetSteamID_SteamID' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Less_IntInt_ReturnValue_6) == 0x0009D0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Add_IntInt_ReturnValue_9) == 0x0009D4, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_BooleanAND_ReturnValue_1) == 0x0009D8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_GetGameInstance_ReturnValue_2) == 0x0009E0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_AsBodycam_GI_2) == 0x0009E8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_AsBodycam_GI_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, K2Node_DynamicCast_bSuccess_7) == 0x0009F0, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Array_Length_ReturnValue_7) == 0x0009F4, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_ExecuteUbergraph_GT_Lobby, CallFunc_Less_IntInt_ReturnValue_7) == 0x0009F8, "Member 'GT_Lobby_C_ExecuteUbergraph_GT_Lobby::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Get BP Menu Controller Component
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_Get_BP_Menu_Controller_Component final
{
public:
	class UBP_MenuControllerComponent_C*          BP_Menu_Controller_Component;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong alignment on GT_Lobby_C_Get_BP_Menu_Controller_Component");
static_assert(sizeof(GT_Lobby_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong size on GT_Lobby_C_Get_BP_Menu_Controller_Component");
static_assert(offsetof(GT_Lobby_C_Get_BP_Menu_Controller_Component, BP_Menu_Controller_Component) == 0x000000, "Member 'GT_Lobby_C_Get_BP_Menu_Controller_Component::BP_Menu_Controller_Component' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Get Stamina
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_Get_Stamina final
{
public:
	double                                        Stamina;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Get_Stamina) == 0x000008, "Wrong alignment on GT_Lobby_C_Get_Stamina");
static_assert(sizeof(GT_Lobby_C_Get_Stamina) == 0x000008, "Wrong size on GT_Lobby_C_Get_Stamina");
static_assert(offsetof(GT_Lobby_C_Get_Stamina, Stamina) == 0x000000, "Member 'GT_Lobby_C_Get_Stamina::Stamina' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetBlured
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_GetBlured final
{
public:
	double                                        Blured;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetBlured) == 0x000008, "Wrong alignment on GT_Lobby_C_GetBlured");
static_assert(sizeof(GT_Lobby_C_GetBlured) == 0x000008, "Wrong size on GT_Lobby_C_GetBlured");
static_assert(offsetof(GT_Lobby_C_GetBlured, Blured) == 0x000000, "Member 'GT_Lobby_C_GetBlured::Blured' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetBurnedRef
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_GetBurnedRef final
{
public:
	class USceneComponent*                        BurnedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetBurnedRef) == 0x000008, "Wrong alignment on GT_Lobby_C_GetBurnedRef");
static_assert(sizeof(GT_Lobby_C_GetBurnedRef) == 0x000008, "Wrong size on GT_Lobby_C_GetBurnedRef");
static_assert(offsetof(GT_Lobby_C_GetBurnedRef, BurnedMesh) == 0x000000, "Member 'GT_Lobby_C_GetBurnedRef::BurnedMesh' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetFlashBangEffect
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_GetFlashBangEffect final
{
public:
	double                                        FlashEffect;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetFlashBangEffect) == 0x000008, "Wrong alignment on GT_Lobby_C_GetFlashBangEffect");
static_assert(sizeof(GT_Lobby_C_GetFlashBangEffect) == 0x000008, "Wrong size on GT_Lobby_C_GetFlashBangEffect");
static_assert(offsetof(GT_Lobby_C_GetFlashBangEffect, FlashEffect) == 0x000000, "Member 'GT_Lobby_C_GetFlashBangEffect::FlashEffect' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetGameMode
// 0x0040 (0x0040 - 0x0000)
struct GT_Lobby_C_GetGameMode final
{
public:
	struct FSTR_GamemodeWinInfo                   GameMode;                                          // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetGameMode) == 0x000008, "Wrong alignment on GT_Lobby_C_GetGameMode");
static_assert(sizeof(GT_Lobby_C_GetGameMode) == 0x000040, "Wrong size on GT_Lobby_C_GetGameMode");
static_assert(offsetof(GT_Lobby_C_GetGameMode, GameMode) == 0x000000, "Member 'GT_Lobby_C_GetGameMode::GameMode' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_GetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetHealth) == 0x000008, "Wrong alignment on GT_Lobby_C_GetHealth");
static_assert(sizeof(GT_Lobby_C_GetHealth) == 0x000008, "Wrong size on GT_Lobby_C_GetHealth");
static_assert(offsetof(GT_Lobby_C_GetHealth, Health) == 0x000000, "Member 'GT_Lobby_C_GetHealth::Health' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetKickedPlayerVoted
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_GetKickedPlayerVoted final
{
public:
	TArray<class FString>                         KickplayerAlreadyVote;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Lobby_C_GetKickedPlayerVoted) == 0x000008, "Wrong alignment on GT_Lobby_C_GetKickedPlayerVoted");
static_assert(sizeof(GT_Lobby_C_GetKickedPlayerVoted) == 0x000010, "Wrong size on GT_Lobby_C_GetKickedPlayerVoted");
static_assert(offsetof(GT_Lobby_C_GetKickedPlayerVoted, KickplayerAlreadyVote) == 0x000000, "Member 'GT_Lobby_C_GetKickedPlayerVoted::KickplayerAlreadyVote' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetMenuSettings
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_GetMenuSettings final
{
public:
	class UBP_MenuControllerComponent_C*          Bp_MenuController;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetMenuSettings) == 0x000008, "Wrong alignment on GT_Lobby_C_GetMenuSettings");
static_assert(sizeof(GT_Lobby_C_GetMenuSettings) == 0x000008, "Wrong size on GT_Lobby_C_GetMenuSettings");
static_assert(offsetof(GT_Lobby_C_GetMenuSettings, Bp_MenuController) == 0x000000, "Member 'GT_Lobby_C_GetMenuSettings::Bp_MenuController' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_GetMutePlayer final
{
public:
	TArray<class FString>                         MutePlayer;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Lobby_C_GetMutePlayer) == 0x000008, "Wrong alignment on GT_Lobby_C_GetMutePlayer");
static_assert(sizeof(GT_Lobby_C_GetMutePlayer) == 0x000010, "Wrong size on GT_Lobby_C_GetMutePlayer");
static_assert(offsetof(GT_Lobby_C_GetMutePlayer, MutePlayer) == 0x000000, "Member 'GT_Lobby_C_GetMutePlayer::MutePlayer' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetPlayerConnected
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_GetPlayerConnected final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerConnected;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Lobby_C_GetPlayerConnected) == 0x000008, "Wrong alignment on GT_Lobby_C_GetPlayerConnected");
static_assert(sizeof(GT_Lobby_C_GetPlayerConnected) == 0x000010, "Wrong size on GT_Lobby_C_GetPlayerConnected");
static_assert(offsetof(GT_Lobby_C_GetPlayerConnected, PlayerConnected) == 0x000000, "Member 'GT_Lobby_C_GetPlayerConnected::PlayerConnected' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetPlayerKickVote
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_GetPlayerKickVote final
{
public:
	TArray<struct FSTR_KickVote>                  KickVotePlayer;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Lobby_C_GetPlayerKickVote) == 0x000008, "Wrong alignment on GT_Lobby_C_GetPlayerKickVote");
static_assert(sizeof(GT_Lobby_C_GetPlayerKickVote) == 0x000010, "Wrong size on GT_Lobby_C_GetPlayerKickVote");
static_assert(offsetof(GT_Lobby_C_GetPlayerKickVote, KickVotePlayer) == 0x000000, "Member 'GT_Lobby_C_GetPlayerKickVote::KickVotePlayer' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetPlayerSkin
// 0x02E8 (0x02E8 - 0x0000)
struct GT_Lobby_C_GetPlayerSkin final
{
public:
	struct FSTR_TEST                              Player_Skin;                                       // 0x0000(0x02E0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetPlayerSkin) == 0x000008, "Wrong alignment on GT_Lobby_C_GetPlayerSkin");
static_assert(sizeof(GT_Lobby_C_GetPlayerSkin) == 0x0002E8, "Wrong size on GT_Lobby_C_GetPlayerSkin");
static_assert(offsetof(GT_Lobby_C_GetPlayerSkin, Player_Skin) == 0x000000, "Member 'GT_Lobby_C_GetPlayerSkin::Player_Skin' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_GetPlayerSkin, Valid_) == 0x0002E0, "Member 'GT_Lobby_C_GetPlayerSkin::Valid_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetRagdollSystem
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_GetRagdollSystem final
{
public:
	class UWW_RagdollSystem_C*                    Ragdoll_System;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetRagdollSystem) == 0x000008, "Wrong alignment on GT_Lobby_C_GetRagdollSystem");
static_assert(sizeof(GT_Lobby_C_GetRagdollSystem) == 0x000008, "Wrong size on GT_Lobby_C_GetRagdollSystem");
static_assert(offsetof(GT_Lobby_C_GetRagdollSystem, Ragdoll_System) == 0x000000, "Member 'GT_Lobby_C_GetRagdollSystem::Ragdoll_System' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetReady?
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_GetReady_ final
{
public:
	bool                                          IsReady_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetReady_) == 0x000001, "Wrong alignment on GT_Lobby_C_GetReady_");
static_assert(sizeof(GT_Lobby_C_GetReady_) == 0x000001, "Wrong size on GT_Lobby_C_GetReady_");
static_assert(offsetof(GT_Lobby_C_GetReady_, IsReady_) == 0x000000, "Member 'GT_Lobby_C_GetReady_::IsReady_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetServerSteamID
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_GetServerSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetServerSteamID) == 0x000008, "Wrong alignment on GT_Lobby_C_GetServerSteamID");
static_assert(sizeof(GT_Lobby_C_GetServerSteamID) == 0x000010, "Wrong size on GT_Lobby_C_GetServerSteamID");
static_assert(offsetof(GT_Lobby_C_GetServerSteamID, SteamID) == 0x000000, "Member 'GT_Lobby_C_GetServerSteamID::SteamID' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetStarterWeapons
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_GetStarterWeapons final
{
public:
	TArray<struct FSTR_Actor>                     Weapons;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Lobby_C_GetStarterWeapons) == 0x000008, "Wrong alignment on GT_Lobby_C_GetStarterWeapons");
static_assert(sizeof(GT_Lobby_C_GetStarterWeapons) == 0x000010, "Wrong size on GT_Lobby_C_GetStarterWeapons");
static_assert(offsetof(GT_Lobby_C_GetStarterWeapons, Weapons) == 0x000000, "Member 'GT_Lobby_C_GetStarterWeapons::Weapons' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_GetSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetSteamID) == 0x000008, "Wrong alignment on GT_Lobby_C_GetSteamID");
static_assert(sizeof(GT_Lobby_C_GetSteamID) == 0x000010, "Wrong size on GT_Lobby_C_GetSteamID");
static_assert(offsetof(GT_Lobby_C_GetSteamID, SteamID) == 0x000000, "Member 'GT_Lobby_C_GetSteamID::SteamID' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetSurvivorStatuts
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_GetSurvivorStatuts final
{
public:
	class UWW_SurvivorStatus_C*                   SurvivorComponant;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetSurvivorStatuts) == 0x000008, "Wrong alignment on GT_Lobby_C_GetSurvivorStatuts");
static_assert(sizeof(GT_Lobby_C_GetSurvivorStatuts) == 0x000008, "Wrong size on GT_Lobby_C_GetSurvivorStatuts");
static_assert(offsetof(GT_Lobby_C_GetSurvivorStatuts, SurvivorComponant) == 0x000000, "Member 'GT_Lobby_C_GetSurvivorStatuts::SurvivorComponant' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetTeam
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_GetTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_GetTeam) == 0x000001, "Wrong alignment on GT_Lobby_C_GetTeam");
static_assert(sizeof(GT_Lobby_C_GetTeam) == 0x000001, "Wrong size on GT_Lobby_C_GetTeam");
static_assert(offsetof(GT_Lobby_C_GetTeam, Team) == 0x000000, "Member 'GT_Lobby_C_GetTeam::Team' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetTeamList
// 0x0018 (0x0018 - 0x0000)
struct GT_Lobby_C_GetTeamList final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Info;                                              // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Lobby_C_GetTeamList) == 0x000008, "Wrong alignment on GT_Lobby_C_GetTeamList");
static_assert(sizeof(GT_Lobby_C_GetTeamList) == 0x000018, "Wrong size on GT_Lobby_C_GetTeamList");
static_assert(offsetof(GT_Lobby_C_GetTeamList, Team) == 0x000000, "Member 'GT_Lobby_C_GetTeamList::Team' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_GetTeamList, Info) == 0x000008, "Member 'GT_Lobby_C_GetTeamList::Info' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.GetTopScore
// 0x0020 (0x0020 - 0x0000)
struct GT_Lobby_C_GetTopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScore;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TopScore_TopScorePcArray_Result;          // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(GT_Lobby_C_GetTopScore) == 0x000008, "Wrong alignment on GT_Lobby_C_GetTopScore");
static_assert(sizeof(GT_Lobby_C_GetTopScore) == 0x000020, "Wrong size on GT_Lobby_C_GetTopScore");
static_assert(offsetof(GT_Lobby_C_GetTopScore, TopScore) == 0x000000, "Member 'GT_Lobby_C_GetTopScore::TopScore' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_GetTopScore, CallFunc_TopScore_TopScorePcArray_Result) == 0x000010, "Member 'GT_Lobby_C_GetTopScore::CallFunc_TopScore_TopScorePcArray_Result' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_IsDead final
{
public:
	bool                                          Dead_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_IsDead) == 0x000001, "Wrong alignment on GT_Lobby_C_IsDead");
static_assert(sizeof(GT_Lobby_C_IsDead) == 0x000001, "Wrong size on GT_Lobby_C_IsDead");
static_assert(offsetof(GT_Lobby_C_IsDead, Dead_) == 0x000000, "Member 'GT_Lobby_C_IsDead::Dead_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.IsDestroyabe?
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_IsDestroyabe_ final
{
public:
	bool                                          Destroyable_;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_IsDestroyabe_) == 0x000001, "Wrong alignment on GT_Lobby_C_IsDestroyabe_");
static_assert(sizeof(GT_Lobby_C_IsDestroyabe_) == 0x000001, "Wrong size on GT_Lobby_C_IsDestroyabe_");
static_assert(offsetof(GT_Lobby_C_IsDestroyabe_, Destroyable_) == 0x000000, "Member 'GT_Lobby_C_IsDestroyabe_::Destroyable_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.IsReady?
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_IsReady_ final
{
public:
	bool                                          IsReady__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_IsReady_) == 0x000001, "Wrong alignment on GT_Lobby_C_IsReady_");
static_assert(sizeof(GT_Lobby_C_IsReady_) == 0x000001, "Wrong size on GT_Lobby_C_IsReady_");
static_assert(offsetof(GT_Lobby_C_IsReady_, IsReady__0) == 0x000000, "Member 'GT_Lobby_C_IsReady_::IsReady__0' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.IsStress
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_IsStress final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_IsStress) == 0x000001, "Wrong alignment on GT_Lobby_C_IsStress");
static_assert(sizeof(GT_Lobby_C_IsStress) == 0x000001, "Wrong size on GT_Lobby_C_IsStress");
static_assert(offsetof(GT_Lobby_C_IsStress, Yes_) == 0x000000, "Member 'GT_Lobby_C_IsStress::Yes_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.IsTalking?
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_IsTalking_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_IsTalking_) == 0x000001, "Wrong alignment on GT_Lobby_C_IsTalking_");
static_assert(sizeof(GT_Lobby_C_IsTalking_) == 0x000001, "Wrong size on GT_Lobby_C_IsTalking_");
static_assert(offsetof(GT_Lobby_C_IsTalking_, IsTalking__0) == 0x000000, "Member 'GT_Lobby_C_IsTalking_::IsTalking__0' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.JumpPlane (Server)
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_JumpPlane__Server_ final
{
public:
	class FName                                   LevelsName_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_JumpPlane__Server_) == 0x000004, "Wrong alignment on GT_Lobby_C_JumpPlane__Server_");
static_assert(sizeof(GT_Lobby_C_JumpPlane__Server_) == 0x000008, "Wrong size on GT_Lobby_C_JumpPlane__Server_");
static_assert(offsetof(GT_Lobby_C_JumpPlane__Server_, LevelsName_0) == 0x000000, "Member 'GT_Lobby_C_JumpPlane__Server_::LevelsName_0' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Kick?
// 0x0040 (0x0040 - 0x0000)
struct GT_Lobby_C_Kick_ final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Kick_) == 0x000008, "Wrong alignment on GT_Lobby_C_Kick_");
static_assert(sizeof(GT_Lobby_C_Kick_) == 0x000040, "Wrong size on GT_Lobby_C_Kick_");
static_assert(offsetof(GT_Lobby_C_Kick_, Target) == 0x000000, "Member 'GT_Lobby_C_Kick_::Target' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Kick? (Server)
// 0x0040 (0x0040 - 0x0000)
struct GT_Lobby_C_Kick___Server_ final
{
public:
	struct FSTR_PCInfo                            PlayerInfo;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Kick___Server_) == 0x000008, "Wrong alignment on GT_Lobby_C_Kick___Server_");
static_assert(sizeof(GT_Lobby_C_Kick___Server_) == 0x000040, "Wrong size on GT_Lobby_C_Kick___Server_");
static_assert(offsetof(GT_Lobby_C_Kick___Server_, PlayerInfo) == 0x000000, "Member 'GT_Lobby_C_Kick___Server_::PlayerInfo' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.KickPlayer
// 0x0048 (0x0048 - 0x0000)
struct GT_Lobby_C_KickPlayer final
{
public:
	struct FSTR_KickVote                          PlayerInfo;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_KickPlayer) == 0x000008, "Wrong alignment on GT_Lobby_C_KickPlayer");
static_assert(sizeof(GT_Lobby_C_KickPlayer) == 0x000048, "Wrong size on GT_Lobby_C_KickPlayer");
static_assert(offsetof(GT_Lobby_C_KickPlayer, PlayerInfo) == 0x000000, "Member 'GT_Lobby_C_KickPlayer::PlayerInfo' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.KickPlayer (Multicast)
// 0x0040 (0x0040 - 0x0000)
struct GT_Lobby_C_KickPlayer__Multicast_ final
{
public:
	struct FSTR_PCInfo                            Player_info;                                       // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_KickPlayer__Multicast_) == 0x000008, "Wrong alignment on GT_Lobby_C_KickPlayer__Multicast_");
static_assert(sizeof(GT_Lobby_C_KickPlayer__Multicast_) == 0x000040, "Wrong size on GT_Lobby_C_KickPlayer__Multicast_");
static_assert(offsetof(GT_Lobby_C_KickPlayer__Multicast_, Player_info) == 0x000000, "Member 'GT_Lobby_C_KickPlayer__Multicast_::Player_info' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.LobbyPlacement
// 0x0088 (0x0088 - 0x0000)
struct GT_Lobby_C_LobbyPlacement final
{
public:
	TArray<struct FSTR_PCInfo>                    LobbyPlacement_0;                                  // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APC_Lobby_C*                            K2Node_DynamicCast_AsPC_Lobby;                     // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0038(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_LobbyPlacement) == 0x000008, "Wrong alignment on GT_Lobby_C_LobbyPlacement");
static_assert(sizeof(GT_Lobby_C_LobbyPlacement) == 0x000088, "Wrong size on GT_Lobby_C_LobbyPlacement");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, LobbyPlacement_0) == 0x000000, "Member 'GT_Lobby_C_LobbyPlacement::LobbyPlacement_0' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GT_Lobby_C_LobbyPlacement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'GT_Lobby_C_LobbyPlacement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GT_Lobby_C_LobbyPlacement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, CallFunc_GetPlayerController_ReturnValue) == 0x000020, "Member 'GT_Lobby_C_LobbyPlacement::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, K2Node_DynamicCast_AsPC_Lobby) == 0x000028, "Member 'GT_Lobby_C_LobbyPlacement::K2Node_DynamicCast_AsPC_Lobby' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'GT_Lobby_C_LobbyPlacement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, CallFunc_Array_Get_Item) == 0x000038, "Member 'GT_Lobby_C_LobbyPlacement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, CallFunc_Array_Add_ReturnValue) == 0x000078, "Member 'GT_Lobby_C_LobbyPlacement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, CallFunc_Array_Length_ReturnValue) == 0x00007C, "Member 'GT_Lobby_C_LobbyPlacement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000080, "Member 'GT_Lobby_C_LobbyPlacement::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_LobbyPlacement, CallFunc_Less_IntInt_ReturnValue) == 0x000081, "Member 'GT_Lobby_C_LobbyPlacement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.MuteID
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_MuteID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_MuteID) == 0x000008, "Wrong alignment on GT_Lobby_C_MuteID");
static_assert(sizeof(GT_Lobby_C_MuteID) == 0x000010, "Wrong size on GT_Lobby_C_MuteID");
static_assert(offsetof(GT_Lobby_C_MuteID, SteamID) == 0x000000, "Member 'GT_Lobby_C_MuteID::SteamID' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.NewKickVote
// 0x0040 (0x0040 - 0x0000)
struct GT_Lobby_C_NewKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_NewKickVote) == 0x000008, "Wrong alignment on GT_Lobby_C_NewKickVote");
static_assert(sizeof(GT_Lobby_C_NewKickVote) == 0x000040, "Wrong size on GT_Lobby_C_NewKickVote");
static_assert(offsetof(GT_Lobby_C_NewKickVote, Target) == 0x000000, "Member 'GT_Lobby_C_NewKickVote::Target' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.OnPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_OnPlayerDeath final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_OnPlayerDeath) == 0x000008, "Wrong alignment on GT_Lobby_C_OnPlayerDeath");
static_assert(sizeof(GT_Lobby_C_OnPlayerDeath) == 0x000008, "Wrong size on GT_Lobby_C_OnPlayerDeath");
static_assert(offsetof(GT_Lobby_C_OnPlayerDeath, PC) == 0x000000, "Member 'GT_Lobby_C_OnPlayerDeath::PC' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.OnTrySelectTeam
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_OnTrySelectTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_OnTrySelectTeam) == 0x000001, "Wrong alignment on GT_Lobby_C_OnTrySelectTeam");
static_assert(sizeof(GT_Lobby_C_OnTrySelectTeam) == 0x000001, "Wrong size on GT_Lobby_C_OnTrySelectTeam");
static_assert(offsetof(GT_Lobby_C_OnTrySelectTeam, Team) == 0x000000, "Member 'GT_Lobby_C_OnTrySelectTeam::Team' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.ServerTravel
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_ServerTravel final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_ServerTravel) == 0x000008, "Wrong alignment on GT_Lobby_C_ServerTravel");
static_assert(sizeof(GT_Lobby_C_ServerTravel) == 0x000008, "Wrong size on GT_Lobby_C_ServerTravel");
static_assert(offsetof(GT_Lobby_C_ServerTravel, Delay) == 0x000000, "Member 'GT_Lobby_C_ServerTravel::Delay' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.SetLevelsName (Server)
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_SetLevelsName__Server_ final
{
public:
	class FName                                   LevelsName_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_SetLevelsName__Server_) == 0x000004, "Wrong alignment on GT_Lobby_C_SetLevelsName__Server_");
static_assert(sizeof(GT_Lobby_C_SetLevelsName__Server_) == 0x000008, "Wrong size on GT_Lobby_C_SetLevelsName__Server_");
static_assert(offsetof(GT_Lobby_C_SetLevelsName__Server_, LevelsName_0) == 0x000000, "Member 'GT_Lobby_C_SetLevelsName__Server_::LevelsName_0' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Slomo
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_Slomo final
{
public:
	double                                        Slomo_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Slomo) == 0x000008, "Wrong alignment on GT_Lobby_C_Slomo");
static_assert(sizeof(GT_Lobby_C_Slomo) == 0x000008, "Wrong size on GT_Lobby_C_Slomo");
static_assert(offsetof(GT_Lobby_C_Slomo, Slomo_0) == 0x000000, "Member 'GT_Lobby_C_Slomo::Slomo_0' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.StartServerTravel
// 0x0108 (0x0108 - 0x0000)
struct GT_Lobby_C_StartServerTravel final
{
public:
	bool                                          CanServerTravel;                                   // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         PlayerUnderZone;                                   // 0x0008(0x0010)(Edit, BlueprintVisible)
	bool                                          Host_is_Under_KillZone;                            // 0x0018(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        KillZone;                                          // 0x0020(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AALS_Base_CharacterBP_C*>        CallFunc_GetAllActorsOfClass_OutActors;            // 0x0038(0x0010)(ReferenceParm)
	class AALS_Base_CharacterBP_C*                CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSteamID_SteamID;                       // 0x0070(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AMapMoveZone_C*>                 CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x00C0(0x0010)(ReferenceParm)
	class AMapMoveZone_C*                         CallFunc_Array_Get_Item_1;                         // 0x00D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_StartServerTravel) == 0x000008, "Wrong alignment on GT_Lobby_C_StartServerTravel");
static_assert(sizeof(GT_Lobby_C_StartServerTravel) == 0x000108, "Wrong size on GT_Lobby_C_StartServerTravel");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CanServerTravel) == 0x000000, "Member 'GT_Lobby_C_StartServerTravel::CanServerTravel' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, PlayerUnderZone) == 0x000008, "Member 'GT_Lobby_C_StartServerTravel::PlayerUnderZone' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, Host_is_Under_KillZone) == 0x000018, "Member 'GT_Lobby_C_StartServerTravel::Host_is_Under_KillZone' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, KillZone) == 0x000020, "Member 'GT_Lobby_C_StartServerTravel::KillZone' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, Temp_int_Array_Index_Variable) == 0x000028, "Member 'GT_Lobby_C_StartServerTravel::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, Temp_int_Loop_Counter_Variable) == 0x00002C, "Member 'GT_Lobby_C_StartServerTravel::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_Array_IsEmpty_ReturnValue) == 0x000034, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_GetAllActorsOfClass_OutActors) == 0x000038, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_Array_Get_Item) == 0x000048, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, K2Node_DynamicCast_AsBodycam_Interface) == 0x000058, "Member 'GT_Lobby_C_StartServerTravel::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GT_Lobby_C_StartServerTravel::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_Less_IntInt_ReturnValue) == 0x000069, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_GetSteamID_SteamID) == 0x000070, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_GetSteamID_SteamID' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_Array_AddUnique_ReturnValue) == 0x000080, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_GetSocketLocation_ReturnValue) == 0x000088, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_BreakVector_X) == 0x0000A0, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_BreakVector_Y) == 0x0000A8, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_BreakVector_Z) == 0x0000B0, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x0000C0, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_Array_Get_Item_1) == 0x0000D0, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000D8, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_BreakVector_X_1) == 0x0000F0, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_BreakVector_Y_1) == 0x0000F8, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_StartServerTravel, CallFunc_BreakVector_Z_1) == 0x000100, "Member 'GT_Lobby_C_StartServerTravel::CallFunc_BreakVector_Z_1' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Talk
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_Talk final
{
public:
	bool                                          IsTalking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Talk) == 0x000001, "Wrong alignment on GT_Lobby_C_Talk");
static_assert(sizeof(GT_Lobby_C_Talk) == 0x000001, "Wrong size on GT_Lobby_C_Talk");
static_assert(offsetof(GT_Lobby_C_Talk, IsTalking) == 0x000000, "Member 'GT_Lobby_C_Talk::IsTalking' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.TeamIndex
// 0x0098 (0x0098 - 0x0000)
struct GT_Lobby_C_TeamIndex final
{
public:
	int32                                         NoneIndex_Return;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MilitaryIndex_Return;                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex_Return;                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        TeamNeedPlayer;                                    // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamEmpty_;                                        // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         TerroristIndex;                                    // 0x0010(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MilitaryIndex;                                     // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         NoneIndex;                                         // 0x0018(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default;                             // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0050(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_TeamIndex) == 0x000008, "Wrong alignment on GT_Lobby_C_TeamIndex");
static_assert(sizeof(GT_Lobby_C_TeamIndex) == 0x000098, "Wrong size on GT_Lobby_C_TeamIndex");
static_assert(offsetof(GT_Lobby_C_TeamIndex, NoneIndex_Return) == 0x000000, "Member 'GT_Lobby_C_TeamIndex::NoneIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, MilitaryIndex_Return) == 0x000004, "Member 'GT_Lobby_C_TeamIndex::MilitaryIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, TerroristIndex_Return) == 0x000008, "Member 'GT_Lobby_C_TeamIndex::TerroristIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, TeamNeedPlayer) == 0x00000C, "Member 'GT_Lobby_C_TeamIndex::TeamNeedPlayer' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, TeamEmpty_) == 0x00000D, "Member 'GT_Lobby_C_TeamIndex::TeamEmpty_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, TerroristIndex) == 0x000010, "Member 'GT_Lobby_C_TeamIndex::TerroristIndex' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, MilitaryIndex) == 0x000014, "Member 'GT_Lobby_C_TeamIndex::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, NoneIndex) == 0x000018, "Member 'GT_Lobby_C_TeamIndex::NoneIndex' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, Temp_bool_Variable) == 0x00001C, "Member 'GT_Lobby_C_TeamIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, Temp_int_Variable) == 0x000020, "Member 'GT_Lobby_C_TeamIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GT_Lobby_C_TeamIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GT_Lobby_C_TeamIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'GT_Lobby_C_TeamIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, Temp_int_Variable_1) == 0x000030, "Member 'GT_Lobby_C_TeamIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, Temp_byte_Variable) == 0x000034, "Member 'GT_Lobby_C_TeamIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000035, "Member 'GT_Lobby_C_TeamIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000036, "Member 'GT_Lobby_C_TeamIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_BooleanOR_ReturnValue) == 0x000037, "Member 'GT_Lobby_C_TeamIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000038, "Member 'GT_Lobby_C_TeamIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, Temp_byte_Variable_1) == 0x000039, "Member 'GT_Lobby_C_TeamIndex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, Temp_int_Variable_2) == 0x00003C, "Member 'GT_Lobby_C_TeamIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, K2Node_Select_Default) == 0x000040, "Member 'GT_Lobby_C_TeamIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000044, "Member 'GT_Lobby_C_TeamIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'GT_Lobby_C_TeamIndex::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_Add_IntInt_ReturnValue_3) == 0x00004C, "Member 'GT_Lobby_C_TeamIndex::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_Array_Get_Item) == 0x000050, "Member 'GT_Lobby_C_TeamIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'GT_Lobby_C_TeamIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000094, "Member 'GT_Lobby_C_TeamIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TeamIndex, K2Node_SwitchEnum_CmpSuccess) == 0x000095, "Member 'GT_Lobby_C_TeamIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.TopScore
// 0x01D0 (0x01D0 - 0x0000)
struct GT_Lobby_C_TopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScorePcArray_Result;                            // 0x0000(0x0010)(Parm, OutParm)
	bool                                          NewLocalVar;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    TopScorePcArray;                                   // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                RatioFloat;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0050(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_1;                         // 0x0098(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_SelectInt_ReturnValue;                    // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_2;                         // 0x0100(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0158(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x016C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16D[0x3];                                      // 0x016D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_3;                         // 0x0170(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x01B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B5[0x3];                                      // 0x01B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x01B8(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_TopScore) == 0x000008, "Wrong alignment on GT_Lobby_C_TopScore");
static_assert(sizeof(GT_Lobby_C_TopScore) == 0x0001D0, "Wrong size on GT_Lobby_C_TopScore");
static_assert(offsetof(GT_Lobby_C_TopScore, TopScorePcArray_Result) == 0x000000, "Member 'GT_Lobby_C_TopScore::TopScorePcArray_Result' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, NewLocalVar) == 0x000010, "Member 'GT_Lobby_C_TopScore::NewLocalVar' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, TopScorePcArray) == 0x000018, "Member 'GT_Lobby_C_TopScore::TopScorePcArray' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, RatioFloat) == 0x000028, "Member 'GT_Lobby_C_TopScore::RatioFloat' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, Temp_int_Array_Index_Variable) == 0x000038, "Member 'GT_Lobby_C_TopScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'GT_Lobby_C_TopScore::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'GT_Lobby_C_TopScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GT_Lobby_C_TopScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, Temp_int_Array_Index_Variable_2) == 0x000048, "Member 'GT_Lobby_C_TopScore::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Get_Item) == 0x000050, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Length_ReturnValue) == 0x000090, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Get_Item_1) == 0x000098, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Length_ReturnValue_1) == 0x0000D8, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'GT_Lobby_C_TopScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000DD, "Member 'GT_Lobby_C_TopScore::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Divide_IntInt_ReturnValue) == 0x0000E0, "Member 'GT_Lobby_C_TopScore::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, Temp_int_Loop_Counter_Variable_1) == 0x0000E4, "Member 'GT_Lobby_C_TopScore::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_SelectInt_ReturnValue) == 0x0000E8, "Member 'GT_Lobby_C_TopScore::CallFunc_SelectInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000F0, "Member 'GT_Lobby_C_TopScore::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000F8, "Member 'GT_Lobby_C_TopScore::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000FC, "Member 'GT_Lobby_C_TopScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Get_Item_2) == 0x000100, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Length_ReturnValue_2) == 0x000140, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, Temp_int_Loop_Counter_Variable_2) == 0x000144, "Member 'GT_Lobby_C_TopScore::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000148, "Member 'GT_Lobby_C_TopScore::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Less_IntInt_ReturnValue_2) == 0x000149, "Member 'GT_Lobby_C_TopScore::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Add_IntInt_ReturnValue_2) == 0x00014C, "Member 'GT_Lobby_C_TopScore::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Add_ReturnValue) == 0x000150, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, Temp_real_Variable) == 0x000158, "Member 'GT_Lobby_C_TopScore::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000160, "Member 'GT_Lobby_C_TopScore::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_MaxOfFloatArray_MaxValue) == 0x000164, "Member 'GT_Lobby_C_TopScore::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Add_ReturnValue_1) == 0x000168, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00016C, "Member 'GT_Lobby_C_TopScore::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Get_Item_3) == 0x000170, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_Add_ReturnValue_2) == 0x0001B0, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_Array_IsEmpty_ReturnValue) == 0x0001B4, "Member 'GT_Lobby_C_TopScore::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x0001B8, "Member 'GT_Lobby_C_TopScore::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_TopScore, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0001C8, "Member 'GT_Lobby_C_TopScore::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Try Launch?
// 0x000C (0x000C - 0x0000)
struct GT_Lobby_C_Try_Launch_ final
{
public:
	bool                                          CanLauch_;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Try_Launch_) == 0x000004, "Wrong alignment on GT_Lobby_C_Try_Launch_");
static_assert(sizeof(GT_Lobby_C_Try_Launch_) == 0x00000C, "Wrong size on GT_Lobby_C_Try_Launch_");
static_assert(offsetof(GT_Lobby_C_Try_Launch_, CanLauch_) == 0x000000, "Member 'GT_Lobby_C_Try_Launch_::CanLauch_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Try_Launch_, CallFunc_Array_Find_ReturnValue) == 0x000004, "Member 'GT_Lobby_C_Try_Launch_::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Try_Launch_, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000008, "Member 'GT_Lobby_C_Try_Launch_::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Update Gamemode (Server)
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_Update_Gamemode__Server_ final
{
public:
	EGameMode                                     Game_Mode_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Update_Gamemode__Server_) == 0x000001, "Wrong alignment on GT_Lobby_C_Update_Gamemode__Server_");
static_assert(sizeof(GT_Lobby_C_Update_Gamemode__Server_) == 0x000001, "Wrong size on GT_Lobby_C_Update_Gamemode__Server_");
static_assert(offsetof(GT_Lobby_C_Update_Gamemode__Server_, Game_Mode_0) == 0x000000, "Member 'GT_Lobby_C_Update_Gamemode__Server_::Game_Mode_0' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Update Player Placement
// 0x03E0 (0x03E0 - 0x0000)
struct GT_Lobby_C_Update_Player_Placement final
{
public:
	TArray<class APlayerStart*>                   OtherSpawns;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue_1;         // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_BC_ShowCase_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0040(0x0010)(ReferenceParm)
	class ABP_BC_ShowCase_C*                      K2Node_DynamicCast_AsBP_BC_Show_Case;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BC_ShowCase_C*                      CallFunc_Array_Get_Item;                           // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E[0x2];                                       // 0x006E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item_1;                         // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0078(0x0010)(ReferenceParm)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item_2;                         // 0x00F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0140(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x01A0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_289[0x7];                                      // 0x0289(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x02E0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x3];                                      // 0x03C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x03CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x03D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x03D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_Update_Player_Placement) == 0x000010, "Wrong alignment on GT_Lobby_C_Update_Player_Placement");
static_assert(sizeof(GT_Lobby_C_Update_Player_Placement) == 0x0003E0, "Wrong size on GT_Lobby_C_Update_Player_Placement");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, OtherSpawns) == 0x000000, "Member 'GT_Lobby_C_Update_Player_Placement::OtherSpawns' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GT_Lobby_C_Update_Player_Placement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, Temp_int_Loop_Counter_Variable) == 0x000014, "Member 'GT_Lobby_C_Update_Player_Placement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, Temp_bool_True_if_break_was_hit_Variable) == 0x00001C, "Member 'GT_Lobby_C_Update_Player_Placement::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, Temp_int_Array_Index_Variable_1) == 0x000020, "Member 'GT_Lobby_C_Update_Player_Placement::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Not_PreBool_ReturnValue) == 0x000024, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, Temp_int_Loop_Counter_Variable_1) == 0x000028, "Member 'GT_Lobby_C_Update_Player_Placement::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Add_IntInt_ReturnValue_1) == 0x00002C, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000030, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_GetPlayerCharacter_ReturnValue_1) == 0x000038, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_GetPlayerCharacter_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_GetAllActorsOfClass_OutActors) == 0x000040, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, K2Node_DynamicCast_AsBP_BC_Show_Case) == 0x000050, "Member 'GT_Lobby_C_Update_Player_Placement::K2Node_DynamicCast_AsBP_BC_Show_Case' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GT_Lobby_C_Update_Player_Placement::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Array_Get_Item) == 0x000060, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x00006C, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Less_IntInt_ReturnValue) == 0x00006D, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Array_Get_Item_1) == 0x000070, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000078, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Array_Get_Item_2) == 0x0000F0, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_BreakTransform_Location) == 0x0000F8, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_BreakTransform_Rotation) == 0x000110, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_BreakTransform_Scale) == 0x000128, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_GetTransform_ReturnValue_1) == 0x000140, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x0001A0, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000288, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_BreakTransform_Location_1) == 0x000290, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_BreakTransform_Rotation_1) == 0x0002A8, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_BreakTransform_Scale_1) == 0x0002C0, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Array_Add_ReturnValue) == 0x0002D8, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x0002E0, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x0003C8, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Array_Length_ReturnValue_1) == 0x0003CC, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0003D0, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_Less_IntInt_ReturnValue_1) == 0x0003D1, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Player_Placement, CallFunc_BooleanAND_ReturnValue) == 0x0003D2, "Member 'GT_Lobby_C_Update_Player_Placement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.Update Session Config
// 0x0148 (0x0148 - 0x0000)
struct GT_Lobby_C_Update_Session_Config final
{
public:
	struct FBlueprintSessionResult                SessionResult;                                     // 0x0000(0x0120)(BlueprintVisible, BlueprintReadOnly, Parm)
	struct FSteamID                               SteamIdUsers;                                      // 0x0120(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	class UPDA_LevelMetaData_C*                   Level_Meta_Data_0;                                 // 0x0128(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EServerSlotEN                                 Config_0;                                          // 0x0130(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     GameMode;                                          // 0x0131(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x6];                                      // 0x0132(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSteamSessionSetting>           ArrayElement_Session_Settings;                     // 0x0138(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(GT_Lobby_C_Update_Session_Config) == 0x000008, "Wrong alignment on GT_Lobby_C_Update_Session_Config");
static_assert(sizeof(GT_Lobby_C_Update_Session_Config) == 0x000148, "Wrong size on GT_Lobby_C_Update_Session_Config");
static_assert(offsetof(GT_Lobby_C_Update_Session_Config, SessionResult) == 0x000000, "Member 'GT_Lobby_C_Update_Session_Config::SessionResult' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Session_Config, SteamIdUsers) == 0x000120, "Member 'GT_Lobby_C_Update_Session_Config::SteamIdUsers' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Session_Config, Level_Meta_Data_0) == 0x000128, "Member 'GT_Lobby_C_Update_Session_Config::Level_Meta_Data_0' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Session_Config, Config_0) == 0x000130, "Member 'GT_Lobby_C_Update_Session_Config::Config_0' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Session_Config, GameMode) == 0x000131, "Member 'GT_Lobby_C_Update_Session_Config::GameMode' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_Update_Session_Config, ArrayElement_Session_Settings) == 0x000138, "Member 'GT_Lobby_C_Update_Session_Config::ArrayElement_Session_Settings' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateGamemode
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_UpdateGamemode final
{
public:
	EGameMode                                     GameMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateGamemode) == 0x000001, "Wrong alignment on GT_Lobby_C_UpdateGamemode");
static_assert(sizeof(GT_Lobby_C_UpdateGamemode) == 0x000001, "Wrong size on GT_Lobby_C_UpdateGamemode");
static_assert(offsetof(GT_Lobby_C_UpdateGamemode, GameMode) == 0x000000, "Member 'GT_Lobby_C_UpdateGamemode::GameMode' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateKickVote
// 0x0048 (0x0048 - 0x0000)
struct GT_Lobby_C_UpdateKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateKickVote) == 0x000008, "Wrong alignment on GT_Lobby_C_UpdateKickVote");
static_assert(sizeof(GT_Lobby_C_UpdateKickVote) == 0x000048, "Wrong size on GT_Lobby_C_UpdateKickVote");
static_assert(offsetof(GT_Lobby_C_UpdateKickVote, Target) == 0x000000, "Member 'GT_Lobby_C_UpdateKickVote::Target' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_UpdateKickVote, Yes_) == 0x000040, "Member 'GT_Lobby_C_UpdateKickVote::Yes_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateLevels
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_UpdateLevels final
{
public:
	class FName                                   LevelsName_0;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateLevels) == 0x000004, "Wrong alignment on GT_Lobby_C_UpdateLevels");
static_assert(sizeof(GT_Lobby_C_UpdateLevels) == 0x000008, "Wrong size on GT_Lobby_C_UpdateLevels");
static_assert(offsetof(GT_Lobby_C_UpdateLevels, LevelsName_0) == 0x000000, "Member 'GT_Lobby_C_UpdateLevels::LevelsName_0' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateMapSelection
// 0x000C (0x000C - 0x0000)
struct GT_Lobby_C_UpdateMapSelection final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateMapSelection) == 0x000004, "Wrong alignment on GT_Lobby_C_UpdateMapSelection");
static_assert(sizeof(GT_Lobby_C_UpdateMapSelection) == 0x00000C, "Wrong size on GT_Lobby_C_UpdateMapSelection");
static_assert(offsetof(GT_Lobby_C_UpdateMapSelection, Selected_Level_Name) == 0x000000, "Member 'GT_Lobby_C_UpdateMapSelection::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_UpdateMapSelection, Index_0) == 0x000008, "Member 'GT_Lobby_C_UpdateMapSelection::Index_0' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateScore
// 0x0008 (0x0008 - 0x0000)
struct GT_Lobby_C_UpdateScore final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateScore) == 0x000004, "Wrong alignment on GT_Lobby_C_UpdateScore");
static_assert(sizeof(GT_Lobby_C_UpdateScore) == 0x000008, "Wrong size on GT_Lobby_C_UpdateScore");
static_assert(offsetof(GT_Lobby_C_UpdateScore, Score) == 0x000000, "Member 'GT_Lobby_C_UpdateScore::Score' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateTeamIndex (PlayerKilled)
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_UpdateTeamIndex__PlayerKilled_ final
{
public:
	E_Team                                        Team_PlayerKilled_;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateTeamIndex__PlayerKilled_) == 0x000004, "Wrong alignment on GT_Lobby_C_UpdateTeamIndex__PlayerKilled_");
static_assert(sizeof(GT_Lobby_C_UpdateTeamIndex__PlayerKilled_) == 0x000010, "Wrong size on GT_Lobby_C_UpdateTeamIndex__PlayerKilled_");
static_assert(offsetof(GT_Lobby_C_UpdateTeamIndex__PlayerKilled_, Team_PlayerKilled_) == 0x000000, "Member 'GT_Lobby_C_UpdateTeamIndex__PlayerKilled_::Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_UpdateTeamIndex__PlayerKilled_, MilitaryIndex) == 0x000004, "Member 'GT_Lobby_C_UpdateTeamIndex__PlayerKilled_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_UpdateTeamIndex__PlayerKilled_, TerroristIndex) == 0x000008, "Member 'GT_Lobby_C_UpdateTeamIndex__PlayerKilled_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_UpdateTeamIndex__PlayerKilled_, WiiningTeam) == 0x00000C, "Member 'GT_Lobby_C_UpdateTeamIndex__PlayerKilled_::WiiningTeam' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateTeamXP
// 0x0001 (0x0001 - 0x0000)
struct GT_Lobby_C_UpdateTeamXP final
{
public:
	bool                                          Win_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateTeamXP) == 0x000001, "Wrong alignment on GT_Lobby_C_UpdateTeamXP");
static_assert(sizeof(GT_Lobby_C_UpdateTeamXP) == 0x000001, "Wrong size on GT_Lobby_C_UpdateTeamXP");
static_assert(offsetof(GT_Lobby_C_UpdateTeamXP, Win_) == 0x000000, "Member 'GT_Lobby_C_UpdateTeamXP::Win_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateTimer
// 0x0020 (0x0020 - 0x0000)
struct GT_Lobby_C_UpdateTimer final
{
public:
	double                                        TimeCount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GT_Lobby_C_UpdateTimer) == 0x000008, "Wrong alignment on GT_Lobby_C_UpdateTimer");
static_assert(sizeof(GT_Lobby_C_UpdateTimer) == 0x000020, "Wrong size on GT_Lobby_C_UpdateTimer");
static_assert(offsetof(GT_Lobby_C_UpdateTimer, TimeCount) == 0x000000, "Member 'GT_Lobby_C_UpdateTimer::TimeCount' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_UpdateTimer, NewParam) == 0x000008, "Member 'GT_Lobby_C_UpdateTimer::NewParam' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateVote (Server)
// 0x0048 (0x0048 - 0x0000)
struct GT_Lobby_C_UpdateVote__Server_ final
{
public:
	struct FSTR_PCInfo                            Player_info;                                       // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateVote__Server_) == 0x000008, "Wrong alignment on GT_Lobby_C_UpdateVote__Server_");
static_assert(sizeof(GT_Lobby_C_UpdateVote__Server_) == 0x000048, "Wrong size on GT_Lobby_C_UpdateVote__Server_");
static_assert(offsetof(GT_Lobby_C_UpdateVote__Server_, Player_info) == 0x000000, "Member 'GT_Lobby_C_UpdateVote__Server_::Player_info' has a wrong offset!");
static_assert(offsetof(GT_Lobby_C_UpdateVote__Server_, Yes_) == 0x000040, "Member 'GT_Lobby_C_UpdateVote__Server_::Yes_' has a wrong offset!");

// Function GT_Lobby.GT_Lobby_C.UpdateWarning
// 0x0010 (0x0010 - 0x0000)
struct GT_Lobby_C_UpdateWarning final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Lobby_C_UpdateWarning) == 0x000008, "Wrong alignment on GT_Lobby_C_UpdateWarning");
static_assert(sizeof(GT_Lobby_C_UpdateWarning) == 0x000010, "Wrong size on GT_Lobby_C_UpdateWarning");
static_assert(offsetof(GT_Lobby_C_UpdateWarning, String) == 0x000000, "Member 'GT_Lobby_C_UpdateWarning::String' has a wrong offset!");

}

