#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KickVote

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "STR_PCInfo_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass KickVote.KickVote_C
// 0x0090 (0x0310 - 0x0280)
class UKickVote_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Init;                                              // 0x0288(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UBorder*                                DialogBorder;                                      // 0x0290(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             HeadlineTitleText;                                 // 0x0298(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_73;                                          // 0x02A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 Image_115;                                         // 0x02A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                TopBorder;                                         // 0x02B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VoteNo;                                            // 0x02B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             VoteYes;                                           // 0x02C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	struct FSTR_PCInfo                            Player_info;                                       // 0x02C8(0x0040)(Edit, BlueprintVisible, ZeroConstructor, ExposeOnSpawn, HasGetValueTypeHash)
	int32                                         Array_Index;                                       // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Delay;                                             // 0x030C(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Construct();
	void ExecuteUbergraph_KickVote(int32 EntryPoint);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"KickVote_C">();
	}
	static class UKickVote_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UKickVote_C>();
	}
};
static_assert(alignof(UKickVote_C) == 0x000008, "Wrong alignment on UKickVote_C");
static_assert(sizeof(UKickVote_C) == 0x000310, "Wrong size on UKickVote_C");
static_assert(offsetof(UKickVote_C, UberGraphFrame) == 0x000280, "Member 'UKickVote_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UKickVote_C, Init) == 0x000288, "Member 'UKickVote_C::Init' has a wrong offset!");
static_assert(offsetof(UKickVote_C, DialogBorder) == 0x000290, "Member 'UKickVote_C::DialogBorder' has a wrong offset!");
static_assert(offsetof(UKickVote_C, HeadlineTitleText) == 0x000298, "Member 'UKickVote_C::HeadlineTitleText' has a wrong offset!");
static_assert(offsetof(UKickVote_C, Image_73) == 0x0002A0, "Member 'UKickVote_C::Image_73' has a wrong offset!");
static_assert(offsetof(UKickVote_C, Image_115) == 0x0002A8, "Member 'UKickVote_C::Image_115' has a wrong offset!");
static_assert(offsetof(UKickVote_C, TopBorder) == 0x0002B0, "Member 'UKickVote_C::TopBorder' has a wrong offset!");
static_assert(offsetof(UKickVote_C, VoteNo) == 0x0002B8, "Member 'UKickVote_C::VoteNo' has a wrong offset!");
static_assert(offsetof(UKickVote_C, VoteYes) == 0x0002C0, "Member 'UKickVote_C::VoteYes' has a wrong offset!");
static_assert(offsetof(UKickVote_C, Player_info) == 0x0002C8, "Member 'UKickVote_C::Player_info' has a wrong offset!");
static_assert(offsetof(UKickVote_C, Array_Index) == 0x000308, "Member 'UKickVote_C::Array_Index' has a wrong offset!");
static_assert(offsetof(UKickVote_C, Delay) == 0x00030C, "Member 'UKickVote_C::Delay' has a wrong offset!");

}

