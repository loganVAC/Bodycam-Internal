#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HUD_Character

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "E_Team_structs.hpp"
#include "WBP_InteractableMenu_classes.hpp"
#include "GameMode_structs.hpp"
#include "UMG_structs.hpp"
#include "GM_Statue_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HUD_Character.HUD_Character_C
// 0x00A8 (0x0430 - 0x0388)
class UHUD_Character_C final : public UWBP_InteractableMenu_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_HUD_Character_C;                    // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       AnnonceAnim;                                       // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DeadHeadShot;                                      // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       DEAD;                                              // 0x03A0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Talk;                                              // 0x03A8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       WaitingPlayer;                                     // 0x03B0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Blur;                                              // 0x03B8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Init;                                              // 0x03C0(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Damage;                                            // 0x03C8(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UTextBlock*                             CONNECTED;                                         // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             DISCONNECTED;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UVerticalBox*                           VerticalBox_VoipIndicator;                         // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 VHS_TEX;                                           // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UW_VOIPAnim_C*                          W_VOIPStatus;                                      // 0x03F0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Vhs_C*                             WBP_Vhs;                                           // 0x03F8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          As_GT_Bodycam;                                     // 0x0400(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class UMediaPlayer*                           MediaPlayerTarget;                                 // 0x0408(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class APC_Bodycam_C*                          PC;                                                // 0x0410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         StartingDelay;                                     // 0x0418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41C[0x4];                                      // 0x041C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         ActualActorsIndicator;                             // 0x0420(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)

public:
	void ANNONCE(const class FText& Titre, const class FText& SOUS_TITRE, const struct FLinearColor& Principal_Color, const struct FLinearColor& Secondary_Color, bool Anim_, bool VHS__);
	void BlurEvent(double Distance);
	void BreakTimer();
	void CheckVerticalBox();
	void Construct();
	void DamageEvent(double Damage_0);
	void DeadEvent();
	void ExecuteUbergraph_HUD_Character(int32 EntryPoint);
	class FText GetText();
	void RefreshVOIPList(bool Add_, class AActor* ActorRef);
	void Talking(bool Condition);
	void Update__GMStatue_(bool PlaySound_);
	void Update__WaitingForPlayer_();
	void Update_Player_Remain__text_();
	void UpdateCameraBattery();
	void UpdateTeamIndex__PlayerKilled_(E_Team Team__PlayerKilled_, int32 MilitaryIndex, int32 TerroristIndex, E_Team WiiningTeam_);
	void UpdateTimer(double Time, const class FText& FinalText);
	void Loose(E_Team WiiningTeam);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HUD_Character_C">();
	}
	static class UHUD_Character_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHUD_Character_C>();
	}
};
static_assert(alignof(UHUD_Character_C) == 0x000008, "Wrong alignment on UHUD_Character_C");
static_assert(sizeof(UHUD_Character_C) == 0x000430, "Wrong size on UHUD_Character_C");
static_assert(offsetof(UHUD_Character_C, UberGraphFrame_HUD_Character_C) == 0x000388, "Member 'UHUD_Character_C::UberGraphFrame_HUD_Character_C' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, AnnonceAnim) == 0x000390, "Member 'UHUD_Character_C::AnnonceAnim' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, DeadHeadShot) == 0x000398, "Member 'UHUD_Character_C::DeadHeadShot' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, DEAD) == 0x0003A0, "Member 'UHUD_Character_C::DEAD' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, Talk) == 0x0003A8, "Member 'UHUD_Character_C::Talk' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, WaitingPlayer) == 0x0003B0, "Member 'UHUD_Character_C::WaitingPlayer' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, Blur) == 0x0003B8, "Member 'UHUD_Character_C::Blur' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, Init) == 0x0003C0, "Member 'UHUD_Character_C::Init' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, Damage) == 0x0003C8, "Member 'UHUD_Character_C::Damage' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, CONNECTED) == 0x0003D0, "Member 'UHUD_Character_C::CONNECTED' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, DISCONNECTED) == 0x0003D8, "Member 'UHUD_Character_C::DISCONNECTED' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, VerticalBox_VoipIndicator) == 0x0003E0, "Member 'UHUD_Character_C::VerticalBox_VoipIndicator' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, VHS_TEX) == 0x0003E8, "Member 'UHUD_Character_C::VHS_TEX' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, W_VOIPStatus) == 0x0003F0, "Member 'UHUD_Character_C::W_VOIPStatus' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, WBP_Vhs) == 0x0003F8, "Member 'UHUD_Character_C::WBP_Vhs' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, As_GT_Bodycam) == 0x000400, "Member 'UHUD_Character_C::As_GT_Bodycam' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, MediaPlayerTarget) == 0x000408, "Member 'UHUD_Character_C::MediaPlayerTarget' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, PC) == 0x000410, "Member 'UHUD_Character_C::PC' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, StartingDelay) == 0x000418, "Member 'UHUD_Character_C::StartingDelay' has a wrong offset!");
static_assert(offsetof(UHUD_Character_C, ActualActorsIndicator) == 0x000420, "Member 'UHUD_Character_C::ActualActorsIndicator' has a wrong offset!");

}

