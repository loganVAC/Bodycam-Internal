#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_AnimMan_CharacterBP

#include "Basic.hpp"

#include "ALS_AnimMan_CharacterBP_classes.hpp"
#include "ALS_AnimMan_CharacterBP_parameters.hpp"


namespace SDK
{

// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ApplyPointDamage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  RagdollForce                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                KillerPC                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    DisableHeadShot                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::ApplyPointDamage(double Damage, double RagdollForce, class FName BoneName, const struct FVector& Location, const struct FVector& ShotFromDirection, class APlayerController* KillerPC, bool DisableHeadShot)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ApplyPointDamage");

	Params::ALS_AnimMan_CharacterBP_C_ApplyPointDamage Parms{};

	Parms.Damage = Damage;
	Parms.RagdollForce = RagdollForce;
	Parms.BoneName = BoneName;
	Parms.Location = std::move(Location);
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.KillerPC = KillerPC;
	Parms.DisableHeadShot = DisableHeadShot;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Blur
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Blur(double Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Blur");

	Params::ALS_AnimMan_CharacterBP_C_Blur Parms{};

	Parms.Distance = Distance;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.BoneDamage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FName                             bone                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    DisableHeadShot                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  DamageFinal                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::BoneDamage(class FName bone, double Damage, bool DisableHeadShot, double* DamageFinal)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "BoneDamage");

	Params::ALS_AnimMan_CharacterBP_C_BoneDamage Parms{};

	Parms.bone = bone;
	Parms.Damage = Damage;
	Parms.DisableHeadShot = DisableHeadShot;

	UObject::ProcessEvent(Func, &Parms);

	if (DamageFinal != nullptr)
		*DamageFinal = Parms.DamageFinal;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.BPI_Get_3P_PivotTarget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       ReturnValue                                            (Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FTransform AALS_AnimMan_CharacterBP_C::BPI_Get_3P_PivotTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "BPI_Get_3P_PivotTarget");

	Params::ALS_AnimMan_CharacterBP_C_BPI_Get_3P_PivotTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.BPI_Get_3P_TraceParams
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          TraceOrigin                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  TraceRadius                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// ETraceTypeQuery                         TraceChannel                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::BPI_Get_3P_TraceParams(struct FVector* TraceOrigin, double* TraceRadius, ETraceTypeQuery* TraceChannel)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "BPI_Get_3P_TraceParams");

	Params::ALS_AnimMan_CharacterBP_C_BPI_Get_3P_TraceParams Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TraceOrigin != nullptr)
		*TraceOrigin = std::move(Parms.TraceOrigin);

	if (TraceRadius != nullptr)
		*TraceRadius = Parms.TraceRadius;

	if (TraceChannel != nullptr)
		*TraceChannel = Parms.TraceChannel;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.BPI_Get_FP_CameraTarget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AALS_AnimMan_CharacterBP_C::BPI_Get_FP_CameraTarget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "BPI_Get_FP_CameraTarget");

	Params::ALS_AnimMan_CharacterBP_C_BPI_Get_FP_CameraTarget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.BreakTimer
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::BreakTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "BreakTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Breathing
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Breathing()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Breathing");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.BulletFly
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Distance                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::BulletFly(double Distance, const struct FVector& Location)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "BulletFly");

	Params::ALS_AnimMan_CharacterBP_C_BulletFly Parms{};

	Parms.Distance = Distance;
	Parms.Location = std::move(Location);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.CanCreateKickVote
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanCreateKickVote_                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::CanCreateKickVote(bool* CanCreateKickVote_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "CanCreateKickVote");

	Params::ALS_AnimMan_CharacterBP_C_CanCreateKickVote Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanCreateKickVote_ != nullptr)
		*CanCreateKickVote_ = Parms.CanCreateKickVote_;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.CanKickThisPlayer?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    True_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::CanKickThisPlayer_(const class FString& PlayerID, bool* True_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "CanKickThisPlayer?");

	Params::ALS_AnimMan_CharacterBP_C_CanKickThisPlayer_ Parms{};

	Parms.PlayerID = std::move(PlayerID);

	UObject::ProcessEvent(Func, &Parms);

	if (True_ != nullptr)
		*True_ = Parms.True_;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Check Automatic Leaning
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Check_Automatic_Leaning()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Check Automatic Leaning");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ClearMap
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::ClearMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ClearMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Cut (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Cut__Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Cut (Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Cut (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class APlayerController*                KillerPC                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Cut__Server_(class UObject* Target, class FName BoneName, const struct FVector& Location, const struct FVector& ShotFromDirection, class APlayerController* KillerPC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Cut (Server)");

	Params::ALS_AnimMan_CharacterBP_C_Cut__Server_ Parms{};

	Parms.Target = Target;
	Parms.BoneName = BoneName;
	Parms.Location = std::move(Location);
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.KillerPC = KillerPC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.DestroyVOIP
// (BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::DestroyVOIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "DestroyVOIP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Event On Reload
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Event_On_Reload()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Event On Reload");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Event Ragdoll End
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Event_Ragdoll_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Event Ragdoll End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Event Server Set Ability Tags
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGameplayTagContainer            Tags_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm)

void AALS_AnimMan_CharacterBP_C::Event_Server_Set_Ability_Tags(const struct FGameplayTagContainer& Tags_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Event Server Set Ability Tags");

	Params::ALS_AnimMan_CharacterBP_C_Event_Server_Set_Ability_Tags Parms{};

	Parms.Tags_0 = std::move(Tags_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.EventRagdollStart
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::EventRagdollStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "EventRagdollStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ExecuteUbergraph_ALS_AnimMan_CharacterBP
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::ExecuteUbergraph_ALS_AnimMan_CharacterBP(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ExecuteUbergraph_ALS_AnimMan_CharacterBP");

	Params::ALS_AnimMan_CharacterBP_C_ExecuteUbergraph_ALS_AnimMan_CharacterBP Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Final Smooth Rotation (Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FRotator                         FinalSmoothRotation_0                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AALS_AnimMan_CharacterBP_C::Final_Smooth_Rotation__Server_(const struct FRotator& FinalSmoothRotation_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Final Smooth Rotation (Server)");

	Params::ALS_AnimMan_CharacterBP_C_Final_Smooth_Rotation__Server_ Parms{};

	Parms.FinalSmoothRotation_0 = std::move(FinalSmoothRotation_0);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Flashbang
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  BaseDamage                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Flashbang(double BaseDamage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Flashbang");

	Params::ALS_AnimMan_CharacterBP_C_Flashbang Parms{};

	Parms.BaseDamage = BaseDamage;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Get Added Rotations
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FRotator                         Value                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AALS_AnimMan_CharacterBP_C::Get_Added_Rotations(struct FRotator* Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Get Added Rotations");

	Params::ALS_AnimMan_CharacterBP_C_Get_Added_Rotations Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Value != nullptr)
		*Value = std::move(Parms.Value);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Get Avoidance Trace Inputs
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          Offset                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Avoidance_Distance_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Start                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          End                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Get_Avoidance_Trace_Inputs(const struct FVector& Offset, double Avoidance_Distance_0, struct FVector* Start, struct FVector* End)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Get Avoidance Trace Inputs");

	Params::ALS_AnimMan_CharacterBP_C_Get_Avoidance_Trace_Inputs Parms{};

	Parms.Offset = std::move(Offset);
	Parms.Avoidance_Distance_0 = Avoidance_Distance_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Start != nullptr)
		*Start = std::move(Parms.Start);

	if (End != nullptr)
		*End = std::move(Parms.End);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Get BP Menu Controller Component
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MenuControllerComponent_C*    BP_Menu_Controller_Component_0                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Get_BP_Menu_Controller_Component(class UBP_MenuControllerComponent_C** BP_Menu_Controller_Component_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Get BP Menu Controller Component");

	Params::ALS_AnimMan_CharacterBP_C_Get_BP_Menu_Controller_Component Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Menu_Controller_Component_0 != nullptr)
		*BP_Menu_Controller_Component_0 = Parms.BP_Menu_Controller_Component_0;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Get Forward Rotation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

struct FVector AALS_AnimMan_CharacterBP_C::Get_Forward_Rotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Get Forward Rotation");

	Params::ALS_AnimMan_CharacterBP_C_Get_Forward_Rotation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Get Inventory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TArray<class AActor*>                   InventorySlots                                         (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::Get_Inventory(TArray<class AActor*>* InventorySlots)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Get Inventory");

	Params::ALS_AnimMan_CharacterBP_C_Get_Inventory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (InventorySlots != nullptr)
		*InventorySlots = std::move(Parms.InventorySlots);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Get Stamina
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Stamina                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Get_Stamina(double* Stamina)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Get Stamina");

	Params::ALS_AnimMan_CharacterBP_C_Get_Stamina Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stamina != nullptr)
		*Stamina = Parms.Stamina;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetBlured
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Blured_0                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetBlured(double* Blured_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetBlured");

	Params::ALS_AnimMan_CharacterBP_C_GetBlured Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Blured_0 != nullptr)
		*Blured_0 = Parms.Blured_0;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetBurnedRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  BurnedMesh                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetBurnedRef(class USceneComponent** BurnedMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetBurnedRef");

	Params::ALS_AnimMan_CharacterBP_C_GetBurnedRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BurnedMesh != nullptr)
		*BurnedMesh = Parms.BurnedMesh;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetFlashBangEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FlashEffect                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetFlashBangEffect(double* FlashEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetFlashBangEffect");

	Params::ALS_AnimMan_CharacterBP_C_GetFlashBangEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FlashEffect != nullptr)
		*FlashEffect = Parms.FlashEffect;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetGameMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_GamemodeWinInfo             GameMode                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetGameMode(struct FSTR_GamemodeWinInfo* GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetGameMode");

	Params::ALS_AnimMan_CharacterBP_C_GetGameMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GameMode != nullptr)
		*GameMode = std::move(Parms.GameMode);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetGetUpAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    RagdollFaceUp_0                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* AALS_AnimMan_CharacterBP_C::GetGetUpAnimation(bool RagdollFaceUp_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetGetUpAnimation");

	Params::ALS_AnimMan_CharacterBP_C_GetGetUpAnimation Parms{};

	Parms.RagdollFaceUp_0 = RagdollFaceUp_0;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetHealth(double* Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetHealth");

	Params::ALS_AnimMan_CharacterBP_C_GetHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Health != nullptr)
		*Health = Parms.Health;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetKickedPlayerVoted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   KickplayerAlreadyVote                                  (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::GetKickedPlayerVoted(TArray<class FString>* KickplayerAlreadyVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetKickedPlayerVoted");

	Params::ALS_AnimMan_CharacterBP_C_GetKickedPlayerVoted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KickplayerAlreadyVote != nullptr)
		*KickplayerAlreadyVote = std::move(Parms.KickplayerAlreadyVote);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetMantleAsset
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// EMantleType                             MantleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FMantle_Asset                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

struct FMantle_Asset AALS_AnimMan_CharacterBP_C::GetMantleAsset(EMantleType MantleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetMantleAsset");

	Params::ALS_AnimMan_CharacterBP_C_GetMantleAsset Parms{};

	Parms.MantleType = MantleType;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetMenuSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MenuControllerComponent_C*    Bp_MenuController                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetMenuSettings(class UBP_MenuControllerComponent_C** Bp_MenuController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetMenuSettings");

	Params::ALS_AnimMan_CharacterBP_C_GetMenuSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bp_MenuController != nullptr)
		*Bp_MenuController = Parms.Bp_MenuController;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetMutePlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   MutePlayer                                             (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::GetMutePlayer(TArray<class FString>* MutePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetMutePlayer");

	Params::ALS_AnimMan_CharacterBP_C_GetMutePlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MutePlayer != nullptr)
		*MutePlayer = std::move(Parms.MutePlayer);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetPlayerConnected
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_PCInfo>              PlayerConnected                                        (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::GetPlayerConnected(TArray<struct FSTR_PCInfo>* PlayerConnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetPlayerConnected");

	Params::ALS_AnimMan_CharacterBP_C_GetPlayerConnected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerConnected != nullptr)
		*PlayerConnected = std::move(Parms.PlayerConnected);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetPlayerKickVote
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_KickVote>            KickVotePlayer                                         (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::GetPlayerKickVote(TArray<struct FSTR_KickVote>* KickVotePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetPlayerKickVote");

	Params::ALS_AnimMan_CharacterBP_C_GetPlayerKickVote Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KickVotePlayer != nullptr)
		*KickVotePlayer = std::move(Parms.KickVotePlayer);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetPlayerSkin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_TEST                        Player_Skin                                            (Parm, OutParm, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetPlayerSkin(struct FSTR_TEST* Player_Skin, bool* Valid_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetPlayerSkin");

	Params::ALS_AnimMan_CharacterBP_C_GetPlayerSkin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Skin != nullptr)
		*Player_Skin = std::move(Parms.Player_Skin);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetRagdollSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWW_RagdollSystem_C*              Ragdoll_System                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetRagdollSystem(class UWW_RagdollSystem_C** Ragdoll_System)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetRagdollSystem");

	Params::ALS_AnimMan_CharacterBP_C_GetRagdollSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ragdoll_System != nullptr)
		*Ragdoll_System = Parms.Ragdoll_System;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetReady?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReady_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetReady_(bool* IsReady_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetReady?");

	Params::ALS_AnimMan_CharacterBP_C_GetReady_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReady_ != nullptr)
		*IsReady_ = Parms.IsReady_;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetRollAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UAnimMontage*                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)

class UAnimMontage* AALS_AnimMan_CharacterBP_C::GetRollAnimation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetRollAnimation");

	Params::ALS_AnimMan_CharacterBP_C_GetRollAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetServerSteamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetServerSteamID(class FString* SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetServerSteamID");

	Params::ALS_AnimMan_CharacterBP_C_GetServerSteamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SteamID != nullptr)
		*SteamID = std::move(Parms.SteamID);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetStarterWeapons
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_Actor>               Weapons                                                (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::GetStarterWeapons(TArray<struct FSTR_Actor>* Weapons)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetStarterWeapons");

	Params::ALS_AnimMan_CharacterBP_C_GetStarterWeapons Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weapons != nullptr)
		*Weapons = std::move(Parms.Weapons);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetSteamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetSteamID(class FString* SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetSteamID");

	Params::ALS_AnimMan_CharacterBP_C_GetSteamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SteamID != nullptr)
		*SteamID = std::move(Parms.SteamID);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetSurvivorStatuts
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWW_SurvivorStatus_C*             SurvivorComponant                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetSurvivorStatuts(class UWW_SurvivorStatus_C** SurvivorComponant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetSurvivorStatuts");

	Params::ALS_AnimMan_CharacterBP_C_GetSurvivorStatuts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SurvivorComponant != nullptr)
		*SurvivorComponant = Parms.SurvivorComponant;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Team                                  Team_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::GetTeam(E_Team* Team_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetTeam");

	Params::ALS_AnimMan_CharacterBP_C_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Team_0 != nullptr)
		*Team_0 = Parms.Team_0;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetTeamList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Team                                  Team_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSTR_PCInfo>              Info                                                   (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::GetTeamList(E_Team Team_0, TArray<struct FSTR_PCInfo>* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetTeamList");

	Params::ALS_AnimMan_CharacterBP_C_GetTeamList Parms{};

	Parms.Team_0 = Team_0;

	UObject::ProcessEvent(Func, &Parms);

	if (Info != nullptr)
		*Info = std::move(Parms.Info);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.GetTopScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_PCInfo>              TopScore                                               (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::GetTopScore(TArray<struct FSTR_PCInfo>* TopScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "GetTopScore");

	Params::ALS_AnimMan_CharacterBP_C_GetTopScore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TopScore != nullptr)
		*TopScore = std::move(Parms.TopScore);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Init Hide Head
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewCastShadow                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Init_Hide_Head(bool NewCastShadow)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Init Hide Head");

	Params::ALS_AnimMan_CharacterBP_C_Init_Hide_Head Parms{};

	Parms.NewCastShadow = NewCastShadow;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Init PcInfo (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Init_PcInfo__Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Init PcInfo (Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InitDotOwner (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AALS_AnimMan_CharacterBP_C*       DotOwner                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InitDotOwner__Multicast_(class AALS_AnimMan_CharacterBP_C* DotOwner)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InitDotOwner (Multicast)");

	Params::ALS_AnimMan_CharacterBP_C_InitDotOwner__Multicast_ Parms{};

	Parms.DotOwner = DotOwner;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InitDotOwner (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AALS_AnimMan_CharacterBP_C*       Dot_Owner_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InitDotOwner__Server_(class AALS_AnimMan_CharacterBP_C* Dot_Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InitDotOwner (Server)");

	Params::ALS_AnimMan_CharacterBP_C_InitDotOwner__Server_ Parms{};

	Parms.Dot_Owner_0 = Dot_Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InitScoreBoard
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::InitScoreBoard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InitScoreBoard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InitVOIP
// (BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::InitVOIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InitVOIP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_AimWeapon_K2Node_EnhancedInputActionEvent_0
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_AimWeapon_K2Node_EnhancedInputActionEvent_0(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_AimWeapon_K2Node_EnhancedInputActionEvent_0");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_AimWeapon_K2Node_EnhancedInputActionEvent_0 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_AimWeapon_K2Node_EnhancedInputActionEvent_1
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_AimWeapon_K2Node_EnhancedInputActionEvent_1(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_AimWeapon_K2Node_EnhancedInputActionEvent_1");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_AimWeapon_K2Node_EnhancedInputActionEvent_1 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_AimWeaponToggle_K2Node_EnhancedInputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_AimWeaponToggle_K2Node_EnhancedInputActionEvent_2(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_AimWeaponToggle_K2Node_EnhancedInputActionEvent_2");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_AimWeaponToggle_K2Node_EnhancedInputActionEvent_2 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Drop_K2Node_EnhancedInputActionEvent_6
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Drop_K2Node_EnhancedInputActionEvent_6(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Drop_K2Node_EnhancedInputActionEvent_6");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Drop_K2Node_EnhancedInputActionEvent_6 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Fire_K2Node_EnhancedInputActionEvent_17
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Fire_K2Node_EnhancedInputActionEvent_17(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Fire_K2Node_EnhancedInputActionEvent_17");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Fire_K2Node_EnhancedInputActionEvent_17 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Fire_K2Node_EnhancedInputActionEvent_18
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Fire_K2Node_EnhancedInputActionEvent_18(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Fire_K2Node_EnhancedInputActionEvent_18");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Fire_K2Node_EnhancedInputActionEvent_18 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_10
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_10(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_10");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_10 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_11
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_11(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_11");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_11 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_12
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_12(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_12");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Lean_K2Node_EnhancedInputActionEvent_12 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_7
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_7(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_7");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_7 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_8
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_8(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_8");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Look_K2Node_EnhancedInputActionEvent_8 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Melee_K2Node_EnhancedInputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Melee_K2Node_EnhancedInputActionEvent_3(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Melee_K2Node_EnhancedInputActionEvent_3");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Melee_K2Node_EnhancedInputActionEvent_3 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_15
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_15(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_15");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_15 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_16
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_16(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_16");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_16 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_13
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_13(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_13");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_13 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_14
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_14(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_14");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Reload_K2Node_EnhancedInputActionEvent_14 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_Take_K2Node_EnhancedInputActionEvent_4
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_Take_K2Node_EnhancedInputActionEvent_4(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_Take_K2Node_EnhancedInputActionEvent_4");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_Take_K2Node_EnhancedInputActionEvent_4 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_ToggleFlashLight_K2Node_EnhancedInputActionEvent_9
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_ToggleFlashLight_K2Node_EnhancedInputActionEvent_9(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_ToggleFlashLight_K2Node_EnhancedInputActionEvent_9");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_ToggleFlashLight_K2Node_EnhancedInputActionEvent_9 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpActEvt_IA_ToggleLaser_K2Node_EnhancedInputActionEvent_5
// (BlueprintEvent)
// Parameters:
// struct FInputActionValue                ActionValue                                            (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
// float                                   ElapsedTime                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// float                                   TriggeredTime                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UInputAction*                     SourceAction                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpActEvt_IA_ToggleLaser_K2Node_EnhancedInputActionEvent_5(const struct FInputActionValue& ActionValue, float ElapsedTime, float TriggeredTime, const class UInputAction* SourceAction)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpActEvt_IA_ToggleLaser_K2Node_EnhancedInputActionEvent_5");

	Params::ALS_AnimMan_CharacterBP_C_InpActEvt_IA_ToggleLaser_K2Node_EnhancedInputActionEvent_5 Parms{};

	Parms.ActionValue = std::move(ActionValue);
	Parms.ElapsedTime = ElapsedTime;
	Parms.TriggeredTime = TriggeredTime;
	Parms.SourceAction = SourceAction;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0");

	Params::ALS_AnimMan_CharacterBP_C_InpAxisKeyEvt_MouseWheelAxis_K2Node_InputAxisKeyEvent_0 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Interract(server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UObject*                          Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Interract_server_(class UObject* Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Interract(server)");

	Params::ALS_AnimMan_CharacterBP_C_Interract_server_ Parms{};

	Parms.Target = Target;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.IsDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::IsDead(bool* Dead_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "IsDead");

	Params::ALS_AnimMan_CharacterBP_C_IsDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead_ != nullptr)
		*Dead_ = Parms.Dead_;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.IsDestroyabe?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Destroyable_                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::IsDestroyabe_(bool* Destroyable_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "IsDestroyabe?");

	Params::ALS_AnimMan_CharacterBP_C_IsDestroyabe_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Destroyable_ != nullptr)
		*Destroyable_ = Parms.Destroyable_;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.IsReady?
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReady__0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::IsReady_(bool IsReady__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "IsReady?");

	Params::ALS_AnimMan_CharacterBP_C_IsReady_ Parms{};

	Parms.IsReady__0 = IsReady__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.IsStress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Yes_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::IsStress(bool* Yes_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "IsStress");

	Params::ALS_AnimMan_CharacterBP_C_IsStress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Yes_ != nullptr)
		*Yes_ = Parms.Yes_;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.IsTalking?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalking__0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::IsTalking_(bool* IsTalking__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "IsTalking?");

	Params::ALS_AnimMan_CharacterBP_C_IsTalking_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTalking__0 != nullptr)
		*IsTalking__0 = Parms.IsTalking__0;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.IsTalking? (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalking__0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::IsTalking___Server_(bool IsTalking__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "IsTalking? (Server)");

	Params::ALS_AnimMan_CharacterBP_C_IsTalking___Server_ Parms{};

	Parms.IsTalking__0 = IsTalking__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Kick?
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_PCInfo                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Kick_(const struct FSTR_PCInfo& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Kick?");

	Params::ALS_AnimMan_CharacterBP_C_Kick_ Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.KickPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_KickVote                    PlayerInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::KickPlayer(const struct FSTR_KickVote& PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "KickPlayer");

	Params::ALS_AnimMan_CharacterBP_C_KickPlayer Parms{};

	Parms.PlayerInfo = std::move(PlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.KnifeAttack(Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::KnifeAttack_Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "KnifeAttack(Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.KnifeAttack(Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::KnifeAttack_Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "KnifeAttack(Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.KnifeAttack(Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::KnifeAttack_Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "KnifeAttack(Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Left Mouse Button (Server)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Left_Mouse_Button__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Left Mouse Button (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MantleEnd
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::MantleEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MantleEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MantleStart
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  MantleHeight                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FALS_ComponentAndTransform       MantleLedgeWS                                          (BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
// EMantleType                             MantleType                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::MantleStart(double MantleHeight, const struct FALS_ComponentAndTransform& MantleLedgeWS, EMantleType MantleType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MantleStart");

	Params::ALS_AnimMan_CharacterBP_C_MantleStart Parms{};

	Parms.MantleHeight = MantleHeight;
	Parms.MantleLedgeWS = std::move(MantleLedgeWS);
	Parms.MantleType = MantleType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MSG_ChatGetConnectedPlayers
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class AController*>              Players                                                (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::MSG_ChatGetConnectedPlayers(TArray<class AController*>* Players)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MSG_ChatGetConnectedPlayers");

	Params::ALS_AnimMan_CharacterBP_C_MSG_ChatGetConnectedPlayers Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Players != nullptr)
		*Players = std::move(Parms.Players);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MSG_ChatGetPlayerID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerID                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::MSG_ChatGetPlayerID(int32* PlayerID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MSG_ChatGetPlayerID");

	Params::ALS_AnimMan_CharacterBP_C_MSG_ChatGetPlayerID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerID != nullptr)
		*PlayerID = Parms.PlayerID;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MSG_ChatGetTeamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TeamID                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::MSG_ChatGetTeamID(int32* TeamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MSG_ChatGetTeamID");

	Params::ALS_AnimMan_CharacterBP_C_MSG_ChatGetTeamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TeamID != nullptr)
		*TeamID = Parms.TeamID;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MSG_ChatGetUsername
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Username                                               (Parm, OutParm)

void AALS_AnimMan_CharacterBP_C::MSG_ChatGetUsername(bool* Success_, class FText* Username)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MSG_ChatGetUsername");

	Params::ALS_AnimMan_CharacterBP_C_MSG_ChatGetUsername Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;

	if (Username != nullptr)
		*Username = std::move(Parms.Username);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MSG_ChatPlayEmote
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Emote                                 EmoteToPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::MSG_ChatPlayEmote(E_Emote EmoteToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MSG_ChatPlayEmote");

	Params::ALS_AnimMan_CharacterBP_C_MSG_ChatPlayEmote Parms{};

	Parms.EmoteToPlay = EmoteToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MSG_ChatRequestPlayerID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   PlayerID                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Success_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::MSG_ChatRequestPlayerID(int32* PlayerID, bool* Success_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MSG_ChatRequestPlayerID");

	Params::ALS_AnimMan_CharacterBP_C_MSG_ChatRequestPlayerID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerID != nullptr)
		*PlayerID = Parms.PlayerID;

	if (Success_ != nullptr)
		*Success_ = Parms.Success_;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Multi_PlayerEmote
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Emote                                 EmoteToPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Multi_PlayerEmote(E_Emote EmoteToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Multi_PlayerEmote");

	Params::ALS_AnimMan_CharacterBP_C_Multi_PlayerEmote Parms{};

	Parms.EmoteToPlay = EmoteToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.MuteID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::MuteID(const class FString& SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "MuteID");

	Params::ALS_AnimMan_CharacterBP_C_MuteID Parms{};

	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.NewKickVote
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_PCInfo                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::NewKickVote(const struct FSTR_PCInfo& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "NewKickVote");

	Params::ALS_AnimMan_CharacterBP_C_NewKickVote Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.On Fire Ticking
// (BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::On_Fire_Ticking()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "On Fire Ticking");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.OnOverlayStateChanged
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_OverlayState                       NewOverlayState                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::OnOverlayStateChanged(EALS_OverlayState NewOverlayState)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "OnOverlayStateChanged");

	Params::ALS_AnimMan_CharacterBP_C_OnOverlayStateChanged Parms{};

	Parms.NewOverlayState = NewOverlayState;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.OnPlayerDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::OnPlayerDeath(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "OnPlayerDeath");

	Params::ALS_AnimMan_CharacterBP_C_OnPlayerDeath Parms{};

	Parms.PC = PC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.OnRep_Dot Owner
// (BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::OnRep_Dot_Owner()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "OnRep_Dot Owner");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.OnRep_PlayerSkin
// (HasDefaults, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::OnRep_PlayerSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "OnRep_PlayerSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.OnRep_PlayerUserName
// (BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::OnRep_PlayerUserName()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "OnRep_PlayerUserName");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.OnTrySelectTeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Team                                  Team_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::OnTrySelectTeam(E_Team Team_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "OnTrySelectTeam");

	Params::ALS_AnimMan_CharacterBP_C_OnTrySelectTeam Parms{};

	Parms.Team_0 = Team_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Play Anim Montage (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Play_Anim_Montage__Multicast_(class UAnimMontage* MontageToPlay, float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Play Anim Montage (Multicast)");

	Params::ALS_AnimMan_CharacterBP_C_Play_Anim_Montage__Multicast_ Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Play Anim Montage (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Play_Anim_Montage__Server_(class UAnimMontage* MontageToPlay, float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Play Anim Montage (Server)");

	Params::ALS_AnimMan_CharacterBP_C_Play_Anim_Montage__Server_ Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Play Montage Important (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Play_Montage_Important__Multicast_(class UAnimMontage* MontageToPlay, float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Play Montage Important (Multicast)");

	Params::ALS_AnimMan_CharacterBP_C_Play_Montage_Important__Multicast_ Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Play Montage Important (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     MontageToPlay                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// float                                   PlayRate                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Play_Montage_Important__Server_(class UAnimMontage* MontageToPlay, float PlayRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Play Montage Important (Server)");

	Params::ALS_AnimMan_CharacterBP_C_Play_Montage_Important__Server_ Parms{};

	Parms.MontageToPlay = MontageToPlay;
	Parms.PlayRate = PlayRate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Play Sounds (Multicast)
// (Net, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Play_Sounds__Multicast_(class USoundBase* Sound_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Play Sounds (Multicast)");

	Params::ALS_AnimMan_CharacterBP_C_Play_Sounds__Multicast_ Parms{};

	Parms.Sound_0 = Sound_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Play Sounds (Server)
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Play_Sounds__Server_(class USoundBase* Sound_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Play Sounds (Server)");

	Params::ALS_AnimMan_CharacterBP_C_Play_Sounds__Server_ Parms{};

	Parms.Sound_0 = Sound_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.PlayCameraShake
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// TSubclassOf<class ULegacyCameraShake>   ShakeClass                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
// float                                   Scale                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::PlayCameraShake(TSubclassOf<class ULegacyCameraShake> ShakeClass, float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "PlayCameraShake");

	Params::ALS_AnimMan_CharacterBP_C_PlayCameraShake Parms{};

	Parms.ShakeClass = ShakeClass;
	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.PlayerBody (Server)
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FST_DefaultSteamItem>     PlayerSkin_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void AALS_AnimMan_CharacterBP_C::PlayerBody__Server_(TArray<struct FST_DefaultSteamItem>& PlayerSkin_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "PlayerBody (Server)");

	Params::ALS_AnimMan_CharacterBP_C_PlayerBody__Server_ Parms{};

	Parms.PlayerSkin_0 = std::move(PlayerSkin_0);

	UObject::ProcessEvent(Func, &Parms);

	PlayerSkin_0 = std::move(Parms.PlayerSkin_0);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.possessed (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Possessed__Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "possessed (Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ReceiveDestroyed
// (Event, Public, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::ReceiveDestroyed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ReceiveDestroyed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ReceivePossessed");

	Params::ALS_AnimMan_CharacterBP_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ReceiveRadialDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   DamageReceived                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Origin                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::ReceiveRadialDamage(float DamageReceived, const class UDamageType* DamageType, const struct FVector& Origin, const struct FHitResult& HitInfo, class AController* InstigatedBy, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ReceiveRadialDamage");

	Params::ALS_AnimMan_CharacterBP_C_ReceiveRadialDamage Parms{};

	Parms.DamageReceived = DamageReceived;
	Parms.DamageType = DamageType;
	Parms.Origin = std::move(Origin);
	Parms.HitInfo = std::move(HitInfo);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ReceiveTick");

	Params::ALS_AnimMan_CharacterBP_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ReceiveUnpossessed");

	Params::ALS_AnimMan_CharacterBP_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.S_CurrentLeaningRotation
// (Net, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Current_Leaning_Rotation                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::S_CurrentLeaningRotation(const struct FVector& Current_Leaning_Rotation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "S_CurrentLeaningRotation");

	Params::ALS_AnimMan_CharacterBP_C_S_CurrentLeaningRotation Parms{};

	Parms.Current_Leaning_Rotation = std::move(Current_Leaning_Rotation);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Server_PlayerEmote
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Emote                                 EmoteToPlay                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Server_PlayerEmote(E_Emote EmoteToPlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Server_PlayerEmote");

	Params::ALS_AnimMan_CharacterBP_C_Server_PlayerEmote Parms{};

	Parms.EmoteToPlay = EmoteToPlay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.ServerTravel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::ServerTravel(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "ServerTravel");

	Params::ALS_AnimMan_CharacterBP_C_ServerTravel Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Should Be Aiming
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AALS_AnimMan_CharacterBP_C::Should_Be_Aiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Should Be Aiming");

	Params::ALS_AnimMan_CharacterBP_C_Should_Be_Aiming Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Slomo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Slomo_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Slomo(double Slomo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Slomo");

	Params::ALS_AnimMan_CharacterBP_C_Slomo Parms{};

	Parms.Slomo_0 = Slomo_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.StartAiming
// (BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::StartAiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "StartAiming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.StartBloodOnCamera
// (BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::StartBloodOnCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "StartBloodOnCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Stop Anim Montage (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Stop_Anim_Montage__Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Stop Anim Montage (Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Stop Anim Montage (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Stop_Anim_Montage__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Stop Anim Montage (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.StopAiming
// (BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::StopAiming()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "StopAiming");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Talk
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalking_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::Talk(bool IsTalking_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Talk");

	Params::ALS_AnimMan_CharacterBP_C_Talk Parms{};

	Parms.IsTalking_0 = IsTalking_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Timeline_0__FinishedFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Timeline_0__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Timeline_0__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Timeline_0__UpdateFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Timeline_0__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Timeline_0__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Timeline_1__FinishedFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Timeline_1__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Timeline_1__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Timeline_1__UpdateFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Timeline_1__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Timeline_1__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Timeline__FinishedFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Timeline__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Timeline__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Timeline__UpdateFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Timeline__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Timeline__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.TK
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Duration                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::TK(float Duration)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "TK");

	Params::ALS_AnimMan_CharacterBP_C_TK Parms{};

	Parms.Duration = Duration;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.TLine Viewmodel Fall__FinishedFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::TLine_Viewmodel_Fall__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "TLine Viewmodel Fall__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.TLine Viewmodel Fall__UpdateFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::TLine_Viewmodel_Fall__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "TLine Viewmodel Fall__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.TLine Viewmodel Jump__FinishedFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::TLine_Viewmodel_Jump__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "TLine Viewmodel Jump__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.TLine Viewmodel Jump__UpdateFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::TLine_Viewmodel_Jump__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "TLine Viewmodel Jump__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.TLine Viewmodel Lan__FinishedFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::TLine_Viewmodel_Lan__FinishedFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "TLine Viewmodel Lan__FinishedFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.TLine Viewmodel Lan__UpdateFunc
// (BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::TLine_Viewmodel_Lan__UpdateFunc()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "TLine Viewmodel Lan__UpdateFunc");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Trace for Forward Blocked
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Trace_for_Forward_Blocked()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Trace for Forward Blocked");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Try Toggling Weapon Laser
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Try_Toggling_Weapon_Laser()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Try Toggling Weapon Laser");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Unpossessed (Client)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Unpossessed__Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Unpossessed (Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.Update Leaning Values
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::Update_Leaning_Values()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "Update Leaning Values");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateGamemode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameMode                               GameMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateGamemode(EGameMode GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateGamemode");

	Params::ALS_AnimMan_CharacterBP_C_UpdateGamemode Parms{};

	Parms.GameMode = GameMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateHandSocket (Multicast)
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       NewTransform                                           (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateHandSocket__Multicast_(const struct FTransform& NewTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateHandSocket (Multicast)");

	Params::ALS_AnimMan_CharacterBP_C_UpdateHandSocket__Multicast_ Parms{};

	Parms.NewTransform = std::move(NewTransform);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateKickVote
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_PCInfo                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Yes_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateKickVote(const struct FSTR_PCInfo& Target, bool Yes_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateKickVote");

	Params::ALS_AnimMan_CharacterBP_C_UpdateKickVote Parms{};

	Parms.Target = std::move(Target);
	Parms.Yes_ = Yes_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateMapSelection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Selected_Level_Name                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateMapSelection(class FName Selected_Level_Name, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateMapSelection");

	Params::ALS_AnimMan_CharacterBP_C_UpdateMapSelection Parms{};

	Parms.Selected_Level_Name = Selected_Level_Name;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateModeInfo
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::UpdateModeInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateModeInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdatePlayerUserName (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdatePlayerUserName__Multicast_(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdatePlayerUserName (Multicast)");

	Params::ALS_AnimMan_CharacterBP_C_UpdatePlayerUserName__Multicast_ Parms{};

	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdatePlayerUserName (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           InString                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdatePlayerUserName__Server_(const class FString& InString)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdatePlayerUserName (Server)");

	Params::ALS_AnimMan_CharacterBP_C_UpdatePlayerUserName__Server_ Parms{};

	Parms.InString = std::move(InString);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateScore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_Score                       Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateScore(const struct FSTR_Score& Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateScore");

	Params::ALS_AnimMan_CharacterBP_C_UpdateScore Parms{};

	Parms.Score = std::move(Score);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateSkel (multicast)
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    Mesh_0                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInterface*>       Mat                                                    (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// EN_ShopItemClass                        Selection                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateSkel__multicast_(class USkeletalMesh* Mesh_0, TArray<class UMaterialInterface*>& Mat, EN_ShopItemClass Selection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateSkel (multicast)");

	Params::ALS_AnimMan_CharacterBP_C_UpdateSkel__multicast_ Parms{};

	Parms.Mesh_0 = Mesh_0;
	Parms.Mat = std::move(Mat);
	Parms.Selection = Selection;

	UObject::ProcessEvent(Func, &Parms);

	Mat = std::move(Parms.Mat);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateTeamIndex (PlayerKilled)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Team                                  Team_PlayerKilled_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MilitaryIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TerroristIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Team                                  WiiningTeam                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateTeamIndex__PlayerKilled_(E_Team Team_PlayerKilled_, int32 MilitaryIndex, int32 TerroristIndex, E_Team WiiningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateTeamIndex (PlayerKilled)");

	Params::ALS_AnimMan_CharacterBP_C_UpdateTeamIndex__PlayerKilled_ Parms{};

	Parms.Team_PlayerKilled_ = Team_PlayerKilled_;
	Parms.MilitaryIndex = MilitaryIndex;
	Parms.TerroristIndex = TerroristIndex;
	Parms.WiiningTeam = WiiningTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateTeamXP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Win_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateTeamXP(bool Win_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateTeamXP");

	Params::ALS_AnimMan_CharacterBP_C_UpdateTeamXP Parms{};

	Parms.Win_ = Win_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void AALS_AnimMan_CharacterBP_C::UpdateTimer(double TimeCount, const class FText& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateTimer");

	Params::ALS_AnimMan_CharacterBP_C_UpdateTimer Parms{};

	Parms.TimeCount = TimeCount;
	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateTransitionMap
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::UpdateTransitionMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateTransitionMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.UpdateWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void AALS_AnimMan_CharacterBP_C::UpdateWarning(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "UpdateWarning");

	Params::ALS_AnimMan_CharacterBP_C_UpdateWarning Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ALS_AnimMan_CharacterBP.ALS_AnimMan_CharacterBP_C.WindCamera
// (Public, BlueprintCallable, BlueprintEvent)

void AALS_AnimMan_CharacterBP_C::WindCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ALS_AnimMan_CharacterBP_C", "WindCamera");

	UObject::ProcessEvent(Func, nullptr);
}

}

