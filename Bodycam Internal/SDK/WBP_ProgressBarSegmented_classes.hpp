#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_ProgressBarSegmented

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_ProgressBarSegmented.WBP_ProgressBarSegmented_C
// 0x0090 (0x0310 - 0x0280)
class UWBP_ProgressBarSegmented_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                ProgressBar;                                       // 0x0288(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UMaterialInterface*                     Brush_Material;                                    // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Percent_1;                                         // 0x0298(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Percent_2;                                         // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Fill_Color_1_and_Opacity;                          // 0x02A8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Fill_Color_2_and_Opacity;                          // 0x02B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           Background_Color_and_Opacity;                      // 0x02C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bLerpColors;                                       // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFlip;                                             // 0x02D9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DA[0x6];                                      // 0x02DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Segments;                                          // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Fill_Outline_Blend;                                // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Outline_Size;                                      // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Spacing;                                           // 0x02F8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTexture*                               Segment_Shape_Texture;                             // 0x0300(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UMaterialInstanceDynamic*               Dynamic_Mat;                                       // 0x0308(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_WBP_ProgressBarSegmented(int32 EntryPoint);
	void PreConstruct(bool IsDesignTime);
	void SetPercent1(double Percent);
	void SetPercent2(double Percent);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_ProgressBarSegmented_C">();
	}
	static class UWBP_ProgressBarSegmented_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_ProgressBarSegmented_C>();
	}
};
static_assert(alignof(UWBP_ProgressBarSegmented_C) == 0x000008, "Wrong alignment on UWBP_ProgressBarSegmented_C");
static_assert(sizeof(UWBP_ProgressBarSegmented_C) == 0x000310, "Wrong size on UWBP_ProgressBarSegmented_C");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, UberGraphFrame) == 0x000280, "Member 'UWBP_ProgressBarSegmented_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, ProgressBar) == 0x000288, "Member 'UWBP_ProgressBarSegmented_C::ProgressBar' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Brush_Material) == 0x000290, "Member 'UWBP_ProgressBarSegmented_C::Brush_Material' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Percent_1) == 0x000298, "Member 'UWBP_ProgressBarSegmented_C::Percent_1' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Percent_2) == 0x0002A0, "Member 'UWBP_ProgressBarSegmented_C::Percent_2' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Fill_Color_1_and_Opacity) == 0x0002A8, "Member 'UWBP_ProgressBarSegmented_C::Fill_Color_1_and_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Fill_Color_2_and_Opacity) == 0x0002B8, "Member 'UWBP_ProgressBarSegmented_C::Fill_Color_2_and_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Background_Color_and_Opacity) == 0x0002C8, "Member 'UWBP_ProgressBarSegmented_C::Background_Color_and_Opacity' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, bLerpColors) == 0x0002D8, "Member 'UWBP_ProgressBarSegmented_C::bLerpColors' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, bFlip) == 0x0002D9, "Member 'UWBP_ProgressBarSegmented_C::bFlip' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Segments) == 0x0002E0, "Member 'UWBP_ProgressBarSegmented_C::Segments' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Fill_Outline_Blend) == 0x0002E8, "Member 'UWBP_ProgressBarSegmented_C::Fill_Outline_Blend' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Outline_Size) == 0x0002F0, "Member 'UWBP_ProgressBarSegmented_C::Outline_Size' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Spacing) == 0x0002F8, "Member 'UWBP_ProgressBarSegmented_C::Spacing' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Segment_Shape_Texture) == 0x000300, "Member 'UWBP_ProgressBarSegmented_C::Segment_Shape_Texture' has a wrong offset!");
static_assert(offsetof(UWBP_ProgressBarSegmented_C, Dynamic_Mat) == 0x000308, "Member 'UWBP_ProgressBarSegmented_C::Dynamic_Mat' has a wrong offset!");

}

