#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grenade_0

#include "Basic.hpp"

#include "ALS_OverlayState_structs.hpp"
#include "STR_Grenade_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass Grenade.Grenade_C
// 0x0090 (0x0320 - 0x0290)
class AGrenade_C : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetComponent*                       WidgetFocus;                                       // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USphereComponent*                       SphereHIT;                                         // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 SK_G67;                                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FDataTableRowHandle                    DT_Grenade;                                        // 0x02B0(0x0010)(Edit, BlueprintVisible, NoDestructor, ExposeOnSpawn)
	struct FSTR_Grenade                           GrenadeInfo;                                       // 0x02C0(0x0048)(Edit, BlueprintVisible, Net, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             PlayerAttached;                                    // 0x0308(0x0008)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	bool                                          IsBlowing;                                         // 0x0310(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x7];                                      // 0x0311(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        ThrowStenght;                                      // 0x0318(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void Aim();
	void Blow_(bool* Blow__0);
	void BndEvt__Grenade_SK_G67_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void CanInterract(bool* Interract_);
	void CanPickup(class AALS_AnimMan_CharacterBP_C* Player, bool* Pickup_);
	void CanSwap_(bool* IsItemSwap_);
	void Drop(double Delay);
	void Drop__Server_();
	void ExecuteUbergraph_Grenade(int32 EntryPoint);
	void Explosion__Mulitcast_();
	void Explosion__Server_();
	void GetItemPriority(int32* Priority);
	void GetOffset(struct FTransform* Offset);
	void GetOverlay(EALS_OverlayState* Overlay);
	void GetSocketToAttach(class FName* SocketToAttach);
	void GrenadeActivation();
	void GrenadeExplosion();
	void Interract(class APawn* Owner_0);
	void InterractDoor(double Z_Angle, bool ResetDoor);
	void IsDefaultHandle(bool* IsDefaultHandle_);
	void Item_Focus();
	void LeftClickEvent();
	void LeftClickReleaseEvent();
	void Pickup(class AALS_AnimMan_CharacterBP_C* Owner_0);
	void Pickup__Server_(class AALS_AnimMan_CharacterBP_C* PlayerAttached_0);
	void ReceiveBeginPlay();
	void ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo);
	void Set_Simulate_Physics__Multicast_(bool bSimulate);
	void SwitchAnimation(class UAnimMontage** In, class UAnimMontage** Out, class USoundCue** InSound, class USoundCue** OutSound);
	void Throw__Multicast_(const struct FVector& NewLocation, const struct FVector& InVector);
	void Throw__Server_(const struct FVector& NewLocation, const struct FVector& InVector);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Grenade_C">();
	}
	static class AGrenade_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGrenade_C>();
	}
};
static_assert(alignof(AGrenade_C) == 0x000008, "Wrong alignment on AGrenade_C");
static_assert(sizeof(AGrenade_C) == 0x000320, "Wrong size on AGrenade_C");
static_assert(offsetof(AGrenade_C, UberGraphFrame) == 0x000290, "Member 'AGrenade_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGrenade_C, WidgetFocus) == 0x000298, "Member 'AGrenade_C::WidgetFocus' has a wrong offset!");
static_assert(offsetof(AGrenade_C, SphereHIT) == 0x0002A0, "Member 'AGrenade_C::SphereHIT' has a wrong offset!");
static_assert(offsetof(AGrenade_C, SK_G67) == 0x0002A8, "Member 'AGrenade_C::SK_G67' has a wrong offset!");
static_assert(offsetof(AGrenade_C, DT_Grenade) == 0x0002B0, "Member 'AGrenade_C::DT_Grenade' has a wrong offset!");
static_assert(offsetof(AGrenade_C, GrenadeInfo) == 0x0002C0, "Member 'AGrenade_C::GrenadeInfo' has a wrong offset!");
static_assert(offsetof(AGrenade_C, PlayerAttached) == 0x000308, "Member 'AGrenade_C::PlayerAttached' has a wrong offset!");
static_assert(offsetof(AGrenade_C, IsBlowing) == 0x000310, "Member 'AGrenade_C::IsBlowing' has a wrong offset!");
static_assert(offsetof(AGrenade_C, ThrowStenght) == 0x000318, "Member 'AGrenade_C::ThrowStenght' has a wrong offset!");

}

