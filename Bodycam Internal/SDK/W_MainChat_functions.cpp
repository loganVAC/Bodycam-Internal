#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: W_MainChat

#include "Basic.hpp"

#include "W_MainChat_classes.hpp"
#include "W_MainChat_parameters.hpp"


namespace SDK
{

// Function W_MainChat.W_MainChat_C.AddNewMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Prefix                                                 (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FS_MessageData                   MessageData                                            (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
// struct FSlateColor                      PrefixColor                                            (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FSlateColor                      UsernameColor                                          (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FSlateColor                      MessageColor                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_MainChat_C::AddNewMessage(const class FText& Prefix, const struct FS_MessageData& MessageData, const struct FSlateColor& PrefixColor, const struct FSlateColor& UsernameColor, const struct FSlateColor& MessageColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "AddNewMessage");

	Params::W_MainChat_C_AddNewMessage Parms{};

	Parms.Prefix = std::move(Prefix);
	Parms.MessageData = std::move(MessageData);
	Parms.PrefixColor = std::move(PrefixColor);
	Parms.UsernameColor = std::move(UsernameColor);
	Parms.MessageColor = std::move(MessageColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.BndEvt__Button_0_K2Node_ComponentBoundEvent_597_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_MainChat_C::BndEvt__Button_0_K2Node_ComponentBoundEvent_597_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "BndEvt__Button_0_K2Node_ComponentBoundEvent_597_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.BndEvt__Button_Commit_K2Node_ComponentBoundEvent_156_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UW_MainChat_C::BndEvt__Button_Commit_K2Node_ComponentBoundEvent_156_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "BndEvt__Button_Commit_K2Node_ComponentBoundEvent_156_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.BndEvt__EditableText__ChatEntry_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::BndEvt__EditableText__ChatEntry_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "BndEvt__EditableText__ChatEntry_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature");

	Params::W_MainChat_C_BndEvt__EditableText__ChatEntry_K2Node_ComponentBoundEvent_0_OnEditableTextBoxCommittedEvent__DelegateSignature Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.BndEvt__W_MainChat_Player_1_K2Node_ComponentBoundEvent_0_OnWidgetClicked__DelegateSignature
// (BlueprintEvent)

void UW_MainChat_C::BndEvt__W_MainChat_Player_1_K2Node_ComponentBoundEvent_0_OnWidgetClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "BndEvt__W_MainChat_Player_1_K2Node_ComponentBoundEvent_0_OnWidgetClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.BndEvt__W_MainChat_Player_2_K2Node_ComponentBoundEvent_1_OnWidgetClicked__DelegateSignature
// (BlueprintEvent)

void UW_MainChat_C::BndEvt__W_MainChat_Player_2_K2Node_ComponentBoundEvent_1_OnWidgetClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "BndEvt__W_MainChat_Player_2_K2Node_ComponentBoundEvent_1_OnWidgetClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.BndEvt__W_MainChat_Player_K2Node_ComponentBoundEvent_2_OnWidgetClicked__DelegateSignature
// (BlueprintEvent)

void UW_MainChat_C::BndEvt__W_MainChat_Player_K2Node_ComponentBoundEvent_2_OnWidgetClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "BndEvt__W_MainChat_Player_K2Node_ComponentBoundEvent_2_OnWidgetClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.BndEvt__W_MainChat_PROXIMTY_K2Node_ComponentBoundEvent_3_OnWidgetClicked__DelegateSignature
// (BlueprintEvent)

void UW_MainChat_C::BndEvt__W_MainChat_PROXIMTY_K2Node_ComponentBoundEvent_3_OnWidgetClicked__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "BndEvt__W_MainChat_PROXIMTY_K2Node_ComponentBoundEvent_3_OnWidgetClicked__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.CheckBlocked
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Username                                               (BlueprintVisible, BlueprintReadOnly, Parm)
// bool                                    Blocked_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::CheckBlocked(const class FText& Username, bool* Blocked_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "CheckBlocked");

	Params::W_MainChat_C_CheckBlocked Parms{};

	Parms.Username = std::move(Username);

	UObject::ProcessEvent(Func, &Parms);

	if (Blocked_ != nullptr)
		*Blocked_ = Parms.Blocked_;
}


// Function W_MainChat.W_MainChat_C.CheckForAddMessage
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UW_MessageChat_C*                 MessageRef                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::CheckForAddMessage(class UW_MessageChat_C* MessageRef)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "CheckForAddMessage");

	Params::W_MainChat_C_CheckForAddMessage Parms{};

	Parms.MessageRef = MessageRef;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.CheckForAnimOnNewMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ChatCategory                          MessageCategory                                        (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ScrollToEnd_                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::CheckForAnimOnNewMessage(E_ChatCategory MessageCategory, bool* ScrollToEnd_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "CheckForAnimOnNewMessage");

	Params::W_MainChat_C_CheckForAnimOnNewMessage Parms{};

	Parms.MessageCategory = MessageCategory;

	UObject::ProcessEvent(Func, &Parms);

	if (ScrollToEnd_ != nullptr)
		*ScrollToEnd_ = Parms.ScrollToEnd_;
}


// Function W_MainChat.W_MainChat_C.CheckForChatCommand
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// bool                                    Continue_                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::CheckForChatCommand(const class FText& Message, bool* Continue_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "CheckForChatCommand");

	Params::W_MainChat_C_CheckForChatCommand Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);

	if (Continue_ != nullptr)
		*Continue_ = Parms.Continue_;
}


// Function W_MainChat.W_MainChat_C.CheckForMessageCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::CheckForMessageCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "CheckForMessageCount");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.ClearChatInstance
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::ClearChatInstance()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "ClearChatInstance");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UW_MainChat_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.ContinueOnClickedPrivateMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ToPlayerID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ToUsername                                             (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_MainChat_C::ContinueOnClickedPrivateMessage(int32 ToPlayerID_0, const class FText& ToUsername)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "ContinueOnClickedPrivateMessage");

	Params::W_MainChat_C_ContinueOnClickedPrivateMessage Parms{};

	Parms.ToPlayerID_0 = ToPlayerID_0;
	Parms.ToUsername = std::move(ToUsername);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.ContinuePrivateMessage
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ToPlayerID_0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             ToUsername                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// class FText                             Message                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
// class FText                             FromUsername                                           (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_MainChat_C::ContinuePrivateMessage(int32 ToPlayerID_0, const class FText& ToUsername, const class FText& Message, const class FText& FromUsername)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "ContinuePrivateMessage");

	Params::W_MainChat_C_ContinuePrivateMessage Parms{};

	Parms.ToPlayerID_0 = ToPlayerID_0;
	Parms.ToUsername = std::move(ToUsername);
	Parms.Message = std::move(Message);
	Parms.FromUsername = std::move(FromUsername);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.ExecuteUbergraph_W_MainChat
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::ExecuteUbergraph_W_MainChat(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "ExecuteUbergraph_W_MainChat");

	Params::W_MainChat_C_ExecuteUbergraph_W_MainChat Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.GetSkipParameterVerification
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// E_ChatCommand                           Command                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Skip_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::GetSkipParameterVerification(E_ChatCommand Command, bool* Skip_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "GetSkipParameterVerification");

	Params::W_MainChat_C_GetSkipParameterVerification Parms{};

	Parms.Command = Command;

	UObject::ProcessEvent(Func, &Parms);

	if (Skip_ != nullptr)
		*Skip_ = Parms.Skip_;
}


// Function W_MainChat.W_MainChat_C.LoadMessagesAndSettings
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::LoadMessagesAndSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "LoadMessagesAndSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.MyCommit
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_MainChat_C::MyCommit(const class FText& Text)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "MyCommit");

	Params::W_MainChat_C_MyCommit Parms{};

	Parms.Text = std::move(Text);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.OnClean
// (BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::OnClean()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "OnClean");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.OnClickedCategory
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// E_ChatCategory                          NewCategory                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::OnClickedCategory(E_ChatCategory NewCategory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "OnClickedCategory");

	Params::W_MainChat_C_OnClickedCategory Parms{};

	Parms.NewCategory = NewCategory;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.OnPreviewKeyDown
// (Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor)
// struct FKeyEvent                        InKeyEvent                                             (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UW_MainChat_C::OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "OnPreviewKeyDown");

	Params::W_MainChat_C_OnPreviewKeyDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InKeyEvent = std::move(InKeyEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function W_MainChat.W_MainChat_C.OpenCloseChat
// (BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::OpenCloseChat()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "OpenCloseChat");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.PlayerNotFound
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Username                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_MainChat_C::PlayerNotFound(const class FText& Username)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "PlayerNotFound");

	Params::W_MainChat_C_PlayerNotFound Parms{};

	Parms.Username = std::move(Username);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.ReceivedMessage
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FS_MessageData                   MessageData                                            (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, HasGetValueTypeHash)
// bool                                    Save_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::ReceivedMessage(const struct FS_MessageData& MessageData, bool Save_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "ReceivedMessage");

	Params::W_MainChat_C_ReceivedMessage Parms{};

	Parms.MessageData = std::move(MessageData);
	Parms.Save_ = Save_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.RefreshTimeVisibility
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowTime__0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::RefreshTimeVisibility(bool ShowTime__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "RefreshTimeVisibility");

	Params::W_MainChat_C_RefreshTimeVisibility Parms{};

	Parms.ShowTime__0 = ShowTime__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.RemoveBlocked
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Username                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_MainChat_C::RemoveBlocked(const class FText& Username)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "RemoveBlocked");

	Params::W_MainChat_C_RemoveBlocked Parms{};

	Parms.Username = std::move(Username);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.Reply
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_MainChat_C::Reply(const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "Reply");

	Params::W_MainChat_C_Reply Parms{};

	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.ResetChatboxSizePosition
// (BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::ResetChatboxSizePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "ResetChatboxSizePosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.ResetFocus
// (BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::ResetFocus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "ResetFocus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.SaveMessages
// (Public, BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::SaveMessages()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "SaveMessages");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.SaveSettings
// (Public, BlueprintCallable, BlueprintEvent)

void UW_MainChat_C::SaveSettings()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "SaveSettings");

	UObject::ProcessEvent(Func, nullptr);
}


// Function W_MainChat.W_MainChat_C.SelectNextTab
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Found_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::SelectNextTab(bool* Found_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "SelectNextTab");

	Params::W_MainChat_C_SelectNextTab Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Found_ != nullptr)
		*Found_ = Parms.Found_;
}


// Function W_MainChat.W_MainChat_C.SelectOldMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Next_                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::SelectOldMessage(bool Next_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "SelectOldMessage");

	Params::W_MainChat_C_SelectOldMessage Parms{};

	Parms.Next_ = Next_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.SendSystemMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (BlueprintVisible, BlueprintReadOnly, Parm)
// struct FLinearColor                     MessageColor                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::SendSystemMessage(const class FText& Message, const struct FLinearColor& MessageColor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "SendSystemMessage");

	Params::W_MainChat_C_SendSystemMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.MessageColor = std::move(MessageColor);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.SetBlockedPlayer
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Blocked_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             Username                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void UW_MainChat_C::SetBlockedPlayer(bool Blocked_, const class FText& Username)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "SetBlockedPlayer");

	Params::W_MainChat_C_SetBlockedPlayer Parms{};

	Parms.Blocked_ = Blocked_;
	Parms.Username = std::move(Username);

	UObject::ProcessEvent(Func, &Parms);
}


// Function W_MainChat.W_MainChat_C.ShowTeamMessage
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   TeamID                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UW_MainChat_C::ShowTeamMessage(int32 TeamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("W_MainChat_C", "ShowTeamMessage");

	Params::W_MainChat_C_ShowTeamMessage Parms{};

	Parms.TeamID = TeamID;

	UObject::ProcessEvent(Func, &Parms);
}

}

