#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_KeyBinderButtonBase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EWidgetStyleState_structs.hpp"
#include "Slate_structs.hpp"
#include "FEnhanchedActionKeyMappingWithContext_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "InputCore_structs.hpp"


namespace SDK::Params
{

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.ApplyWidgetStyleActive
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyBinderButtonBase_C_ApplyWidgetStyleActive final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleActive) == 0x000001, "Wrong alignment on WBP_KeyBinderButtonBase_C_ApplyWidgetStyleActive");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleActive) == 0x000001, "Wrong size on WBP_KeyBinderButtonBase_C_ApplyWidgetStyleActive");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleActive, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_ApplyWidgetStyleActive::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.ApplyWidgetStyleDisabled
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyBinderButtonBase_C_ApplyWidgetStyleDisabled final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleDisabled) == 0x000001, "Wrong alignment on WBP_KeyBinderButtonBase_C_ApplyWidgetStyleDisabled");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleDisabled) == 0x000001, "Wrong size on WBP_KeyBinderButtonBase_C_ApplyWidgetStyleDisabled");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleDisabled, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_ApplyWidgetStyleDisabled::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.ApplyWidgetStyleHighlighted
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyBinderButtonBase_C_ApplyWidgetStyleHighlighted final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleHighlighted) == 0x000001, "Wrong alignment on WBP_KeyBinderButtonBase_C_ApplyWidgetStyleHighlighted");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleHighlighted) == 0x000001, "Wrong size on WBP_KeyBinderButtonBase_C_ApplyWidgetStyleHighlighted");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleHighlighted, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_ApplyWidgetStyleHighlighted::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.ApplyWidgetStyleNormal
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyBinderButtonBase_C_ApplyWidgetStyleNormal final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleNormal) == 0x000001, "Wrong alignment on WBP_KeyBinderButtonBase_C_ApplyWidgetStyleNormal");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleNormal) == 0x000001, "Wrong size on WBP_KeyBinderButtonBase_C_ApplyWidgetStyleNormal");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_ApplyWidgetStyleNormal, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_ApplyWidgetStyleNormal::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.ClearBindingOnButton
// 0x0020 (0x0020 - 0x0000)
struct WBP_KeyBinderButtonBase_C_ClearBindingOnButton final
{
public:
	struct FInputChord                            K2Node_MakeStruct_InputChord;                      // 0x0000(0x0020)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_ClearBindingOnButton) == 0x000008, "Wrong alignment on WBP_KeyBinderButtonBase_C_ClearBindingOnButton");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_ClearBindingOnButton) == 0x000020, "Wrong size on WBP_KeyBinderButtonBase_C_ClearBindingOnButton");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_ClearBindingOnButton, K2Node_MakeStruct_InputChord) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_ClearBindingOnButton::K2Node_MakeStruct_InputChord' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.ExecuteUbergraph_WBP_KeyBinderButtonBase
// 0x0008 (0x0008 - 0x0000)
struct WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase) == 0x000004, "Wrong alignment on WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase) == 0x000008, "Wrong size on WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase, EntryPoint) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase, CallFunc_IsValid_ReturnValue) == 0x000005, "Member 'WBP_KeyBinderButtonBase_C_ExecuteUbergraph_WBP_KeyBinderButtonBase::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.GetKeyOrButtonFromInputSubsystem
// 0x0140 (0x0140 - 0x0000)
struct WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(Parm, OutParm, HasGetValueTypeHash)
	struct FKey                                   CurrentKey;                                        // 0x0018(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FFEnhanchedActionKeyMappingWithContext> CallFunc_GetCombinedInputBindings_CombinedInputBindings; // 0x0040(0x0050)(ContainsInstancedReference)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEnhanchedActionKeyMappingWithContext CallFunc_Map_Find_Value;                           // 0x0098(0x00A0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_IsNotEmpty_ReturnValue;               // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem) == 0x000008, "Wrong alignment on WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem) == 0x000140, "Wrong size on WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, Key) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::Key' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CurrentKey) == 0x000018, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CurrentKey' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CallFunc_GetOwningContainer_OwningContainer) == 0x000038, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CallFunc_GetCombinedInputBindings_CombinedInputBindings) == 0x000040, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CallFunc_GetCombinedInputBindings_CombinedInputBindings' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000090, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CallFunc_Map_Find_Value) == 0x000098, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CallFunc_Map_Find_ReturnValue) == 0x000138, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CallFunc_Map_IsNotEmpty_ReturnValue) == 0x000139, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CallFunc_Map_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x00013A, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem, K2Node_SwitchEnum_CmpSuccess_1) == 0x00013B, "Member 'WBP_KeyBinderButtonBase_C_GetKeyOrButtonFromInputSubsystem::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.IsGamepadMapping
// 0x0028 (0x0028 - 0x0000)
struct WBP_KeyBinderButtonBase_C_IsGamepadMapping final
{
public:
	class FName                                   InName;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0010(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Contains_ReturnValue;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_IsGamepadMapping) == 0x000008, "Wrong alignment on WBP_KeyBinderButtonBase_C_IsGamepadMapping");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_IsGamepadMapping) == 0x000028, "Wrong size on WBP_KeyBinderButtonBase_C_IsGamepadMapping");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_IsGamepadMapping, InName) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_IsGamepadMapping::InName' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_IsGamepadMapping, ReturnValue) == 0x000008, "Member 'WBP_KeyBinderButtonBase_C_IsGamepadMapping::ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_IsGamepadMapping, CallFunc_Conv_NameToString_ReturnValue) == 0x000010, "Member 'WBP_KeyBinderButtonBase_C_IsGamepadMapping::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_IsGamepadMapping, CallFunc_Contains_ReturnValue) == 0x000020, "Member 'WBP_KeyBinderButtonBase_C_IsGamepadMapping::CallFunc_Contains_ReturnValue' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.OnKeyBinderButtonHighlighted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_KeyBinderButtonBase_C_OnKeyBinderButtonHighlighted__DelegateSignature final
{
public:
	class UWBP_KeyBinderButtonBase_C*             KeyBinderButtonBase;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonHighlighted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_KeyBinderButtonBase_C_OnKeyBinderButtonHighlighted__DelegateSignature");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonHighlighted__DelegateSignature) == 0x000008, "Wrong size on WBP_KeyBinderButtonBase_C_OnKeyBinderButtonHighlighted__DelegateSignature");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonHighlighted__DelegateSignature, KeyBinderButtonBase) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_OnKeyBinderButtonHighlighted__DelegateSignature::KeyBinderButtonBase' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.OnKeyBinderButtonSelect__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_KeyBinderButtonBase_C_OnKeyBinderButtonSelect__DelegateSignature final
{
public:
	class UWBP_KeyBinderButtonBase_C*             KeyBinderButton;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonSelect__DelegateSignature) == 0x000008, "Wrong alignment on WBP_KeyBinderButtonBase_C_OnKeyBinderButtonSelect__DelegateSignature");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonSelect__DelegateSignature) == 0x000008, "Wrong size on WBP_KeyBinderButtonBase_C_OnKeyBinderButtonSelect__DelegateSignature");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonSelect__DelegateSignature, KeyBinderButton) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_OnKeyBinderButtonSelect__DelegateSignature::KeyBinderButton' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.OnKeyBinderButtonUnhighlighted__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct WBP_KeyBinderButtonBase_C_OnKeyBinderButtonUnhighlighted__DelegateSignature final
{
public:
	class UWBP_KeyBinderButtonBase_C*             KeyBinderButtonBase;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonUnhighlighted__DelegateSignature) == 0x000008, "Wrong alignment on WBP_KeyBinderButtonBase_C_OnKeyBinderButtonUnhighlighted__DelegateSignature");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonUnhighlighted__DelegateSignature) == 0x000008, "Wrong size on WBP_KeyBinderButtonBase_C_OnKeyBinderButtonUnhighlighted__DelegateSignature");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_OnKeyBinderButtonUnhighlighted__DelegateSignature, KeyBinderButtonBase) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_OnKeyBinderButtonUnhighlighted__DelegateSignature::KeyBinderButtonBase' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.OverrideWidgetStyleFromConfig
// 0x0044 (0x0044 - 0x0000)
struct WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetColorByName_Color;                     // 0x0004(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_1;                   // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_2;                   // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_GetColorByName_Color_3;                   // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig) == 0x000004, "Wrong alignment on WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig) == 0x000044, "Wrong size on WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color) == 0x000004, "Member 'WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_1) == 0x000014, "Member 'WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_2) == 0x000024, "Member 'WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig, CallFunc_GetColorByName_Color_3) == 0x000034, "Member 'WBP_KeyBinderButtonBase_C_OverrideWidgetStyleFromConfig::CallFunc_GetColorByName_Color_3' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_KeyBinderButtonBase_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_KeyBinderButtonBase_C_PreConstruct");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_PreConstruct) == 0x000001, "Wrong size on WBP_KeyBinderButtonBase_C_PreConstruct");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_PreConstruct::IsDesignTime' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.RebindKeyOrButton
// 0x03B8 (0x03B8 - 0x0000)
struct WBP_KeyBinderButtonBase_C_RebindKeyOrButton final
{
public:
	struct FInputChord                            NewKey;                                            // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
	bool                                          bClearKey;                                         // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFEnhanchedActionKeyMappingWithContext TempEnhancedActionKeyMappingWithContext;           // 0x0028(0x00A0)(Edit, BlueprintVisible, ContainsInstancedReference, HasGetValueTypeHash)
	TMap<class FName, struct FFEnhanchedActionKeyMappingWithContext> TempCombinedInputBindings;                         // 0x00C8(0x0050)(Edit, BlueprintVisible, ContainsInstancedReference)
	bool                                          CallFunc_IsGamepadMapping_ReturnValue;             // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsGamepadMapping_ReturnValue_1;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Remove_ReturnValue;                   // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11C[0x4];                                      // 0x011C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFEnhanchedActionKeyMappingWithContext> CallFunc_Map_Values_Values;                        // 0x0120(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0140(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1; // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager;       // 0x0170(0x0030)(HasGetValueTypeHash)
	TSoftObjectPtr<class UBP_SettingsManager_C>   CallFunc_GetSettingsManager_SettingsManager_1;     // 0x01A0(0x0030)(HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue; // 0x01D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UObject*                                CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1; // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager;          // 0x01E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E9[0x7];                                      // 0x01E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_SettingsManager_C*                  K2Node_DynamicCast_AsBP_Settings_Manager_1;        // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetInputBindings_bSuccess;                // 0x01F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FA[0x6];                                      // 0x01FA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_MenuContainer_C*                   CallFunc_GetOwningContainer_OwningContainer;       // 0x0200(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TMap<class FName, struct FFEnhanchedActionKeyMappingWithContext> CallFunc_GetCombinedInputBindings_CombinedInputBindings; // 0x0208(0x0050)(ContainsInstancedReference)
	struct FFEnhanchedActionKeyMappingWithContext CallFunc_Map_Find_Value;                           // 0x0258(0x00A0)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEnhancedActionKeyMapping              K2Node_MakeStruct_EnhancedActionKeyMapping;        // 0x0300(0x0098)(ContainsInstancedReference)
	bool                                          CallFunc_Key_IsValid_ReturnValue;                  // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue;             // 0x0399(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x039A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x039B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Key_IsGamepadKey_ReturnValue_1;           // 0x039C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x039D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x039E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39F[0x1];                                      // 0x039F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x03A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A9[0x7];                                      // 0x03A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MenuControllerComponent_C*          CallFunc_GetComponentByClass_ReturnValue;          // 0x03B0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton) == 0x000008, "Wrong alignment on WBP_KeyBinderButtonBase_C_RebindKeyOrButton");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton) == 0x0003B8, "Wrong size on WBP_KeyBinderButtonBase_C_RebindKeyOrButton");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, NewKey) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::NewKey' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, bClearKey) == 0x000020, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::bClearKey' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, TempEnhancedActionKeyMappingWithContext) == 0x000028, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::TempEnhancedActionKeyMappingWithContext' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, TempCombinedInputBindings) == 0x0000C8, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::TempCombinedInputBindings' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_IsGamepadMapping_ReturnValue) == 0x000118, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_IsGamepadMapping_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_IsGamepadMapping_ReturnValue_1) == 0x000119, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_IsGamepadMapping_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Not_PreBool_ReturnValue) == 0x00011A, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Map_Remove_ReturnValue) == 0x00011B, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Map_Remove_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Map_Values_Values) == 0x000120, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_GetGameInstance_ReturnValue) == 0x000130, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_GetGameInstance_ReturnValue_1) == 0x000138, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000140, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_DynamicCast_bSuccess) == 0x000150, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1) == 0x000158, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_DynamicCast_AsBPI_Game_Instance_Extension_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_DynamicCast_bSuccess_1) == 0x000168, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_GetSettingsManager_SettingsManager) == 0x000170, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_GetSettingsManager_SettingsManager' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_GetSettingsManager_SettingsManager_1) == 0x0001A0, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_GetSettingsManager_SettingsManager_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue) == 0x0001D0, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1) == 0x0001D8, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Conv_SoftObjectReferenceToObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_DynamicCast_AsBP_Settings_Manager) == 0x0001E0, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_DynamicCast_AsBP_Settings_Manager' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_DynamicCast_bSuccess_2) == 0x0001E8, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_DynamicCast_AsBP_Settings_Manager_1) == 0x0001F0, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_DynamicCast_AsBP_Settings_Manager_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_DynamicCast_bSuccess_3) == 0x0001F8, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_SetInputBindings_bSuccess) == 0x0001F9, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_SetInputBindings_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_GetOwningContainer_OwningContainer) == 0x000200, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_GetOwningContainer_OwningContainer' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_GetCombinedInputBindings_CombinedInputBindings) == 0x000208, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_GetCombinedInputBindings_CombinedInputBindings' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Map_Find_Value) == 0x000258, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Map_Find_ReturnValue) == 0x0002F8, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_MakeStruct_EnhancedActionKeyMapping) == 0x000300, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_MakeStruct_EnhancedActionKeyMapping' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Key_IsValid_ReturnValue) == 0x000398, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Key_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Key_IsGamepadKey_ReturnValue) == 0x000399, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Key_IsGamepadKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x00039A, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Not_PreBool_ReturnValue_1) == 0x00039B, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_Key_IsGamepadKey_ReturnValue_1) == 0x00039C, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_Key_IsGamepadKey_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_BooleanOR_ReturnValue) == 0x00039D, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_BooleanOR_ReturnValue_1) == 0x00039E, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_GetOwningPlayer_ReturnValue) == 0x0003A0, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, K2Node_SwitchEnum_CmpSuccess) == 0x0003A8, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_RebindKeyOrButton, CallFunc_GetComponentByClass_ReturnValue) == 0x0003B0, "Member 'WBP_KeyBinderButtonBase_C_RebindKeyOrButton::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.SetKeyTextOrIcon
// 0x0020 (0x0020 - 0x0000)
struct WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon final
{
public:
	bool                                          bIsWaitingForInput;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   CallFunc_GetKeyOrButtonFromInputSubsystem_Key;     // 0x0008(0x0018)(HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon) == 0x000008, "Wrong alignment on WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon) == 0x000020, "Wrong size on WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon, bIsWaitingForInput) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon::bIsWaitingForInput' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon, CallFunc_IsValid_ReturnValue) == 0x000002, "Member 'WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon, CallFunc_IsValid_ReturnValue_1) == 0x000003, "Member 'WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000004, "Member 'WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon, CallFunc_IsValid_ReturnValue_2) == 0x000005, "Member 'WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon, CallFunc_GetKeyOrButtonFromInputSubsystem_Key) == 0x000008, "Member 'WBP_KeyBinderButtonBase_C_SetKeyTextOrIcon::CallFunc_GetKeyOrButtonFromInputSubsystem_Key' has a wrong offset!");

// Function WBP_KeyBinderButtonBase.WBP_KeyBinderButtonBase_C.SetWidgetState
// 0x0002 (0x0002 - 0x0000)
struct WBP_KeyBinderButtonBase_C_SetWidgetState final
{
public:
	EWidgetStyleState                             WidgetState;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_KeyBinderButtonBase_C_SetWidgetState) == 0x000001, "Wrong alignment on WBP_KeyBinderButtonBase_C_SetWidgetState");
static_assert(sizeof(WBP_KeyBinderButtonBase_C_SetWidgetState) == 0x000002, "Wrong size on WBP_KeyBinderButtonBase_C_SetWidgetState");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetWidgetState, WidgetState) == 0x000000, "Member 'WBP_KeyBinderButtonBase_C_SetWidgetState::WidgetState' has a wrong offset!");
static_assert(offsetof(WBP_KeyBinderButtonBase_C_SetWidgetState, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'WBP_KeyBinderButtonBase_C_SetWidgetState::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

