#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Shell

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "STR_Shell_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Shell.Shell_C.BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'Shell_C_BndEvt__Shell_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function Shell.Shell_C.BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature
// 0x0080 (0x0080 - 0x0000)
struct Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature final
{
public:
	class FName                                   EventName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         EmitterTime;                                       // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ParticleTime;                                      // 0x000C(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Velocity;                                          // 0x0028(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Direction;                                         // 0x0040(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Normal;                                            // 0x0058(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0070(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhysMat;                                           // 0x0078(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature) == 0x000008, "Wrong alignment on Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature");
static_assert(sizeof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature) == 0x000080, "Wrong size on Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, EventName) == 0x000000, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::EventName' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, EmitterTime) == 0x000008, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::EmitterTime' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, ParticleTime) == 0x00000C, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::ParticleTime' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, Location) == 0x000010, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::Location' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, Velocity) == 0x000028, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::Velocity' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, Direction) == 0x000040, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::Direction' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, Normal) == 0x000058, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::Normal' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, BoneName) == 0x000070, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::BoneName' has a wrong offset!");
static_assert(offsetof(Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature, PhysMat) == 0x000078, "Member 'Shell_C_BndEvt__Shell_Shell_Eject_K2Node_ComponentBoundEvent_0_ParticleCollisionSignature__DelegateSignature::PhysMat' has a wrong offset!");

// Function Shell.Shell_C.ExecuteUbergraph_Shell
// 0x02B8 (0x02B8 - 0x0000)
struct Shell_C_ExecuteUbergraph_Shell final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_EventName;              // 0x0004(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_ComponentBoundEvent_EmitterTime;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_ParticleTime;           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_ComponentBoundEvent_Location;               // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_Velocity;               // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_Direction;              // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_Normal;                 // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_ComponentBoundEvent_BoneName;               // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      K2Node_ComponentBoundEvent_PhysMat;                // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult; // 0x0088(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0170(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0178(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0180(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x018C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18D[0x3];                                      // 0x018D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0190(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AALS_Base_CharacterBP_C*                K2Node_DynamicCast_AsALS_Base_Character_BP;        // 0x0278(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x02A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam;                   // 0x02A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Shell_C_ExecuteUbergraph_Shell) == 0x000008, "Wrong alignment on Shell_C_ExecuteUbergraph_Shell");
static_assert(sizeof(Shell_C_ExecuteUbergraph_Shell) == 0x0002B8, "Wrong size on Shell_C_ExecuteUbergraph_Shell");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, EntryPoint) == 0x000000, "Member 'Shell_C_ExecuteUbergraph_Shell::EntryPoint' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_EventName) == 0x000004, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_EventName' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_EmitterTime) == 0x00000C, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_EmitterTime' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_ParticleTime) == 0x000010, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_ParticleTime' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_Location) == 0x000018, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_Location' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_Velocity) == 0x000030, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_Velocity' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_Direction) == 0x000048, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_Direction' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_Normal) == 0x000060, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_Normal' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_BoneName) == 0x000078, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_BoneName' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_PhysMat) == 0x000080, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_PhysMat' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult) == 0x000088, "Member 'Shell_C_ExecuteUbergraph_Shell::CallFunc_K2_SetWorldLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000170, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_OtherActor) == 0x000178, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_OtherComp) == 0x000180, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000188, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_bFromSweep) == 0x00018C, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_ComponentBoundEvent_SweepResult) == 0x000190, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_DynamicCast_AsALS_Base_Character_BP) == 0x000278, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_DynamicCast_AsALS_Base_Character_BP' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_DynamicCast_bSuccess) == 0x000280, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000288, "Member 'Shell_C_ExecuteUbergraph_Shell::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, CallFunc_GetGameState_ReturnValue) == 0x0002A0, "Member 'Shell_C_ExecuteUbergraph_Shell::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_DynamicCast_AsGT_Bodycam) == 0x0002A8, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_DynamicCast_AsGT_Bodycam' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_DynamicCast_bSuccess_1) == 0x0002B0, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Shell_C_ExecuteUbergraph_Shell, K2Node_SwitchEnum_CmpSuccess) == 0x0002B1, "Member 'Shell_C_ExecuteUbergraph_Shell::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function Shell.Shell_C.Shell_Sounds
// 0x0038 (0x0038 - 0x0000)
struct Shell_C_Shell_Sounds final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      PhyscialMaterial;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         VolumeMultiplier;                                  // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Shell_C_Shell_Sounds) == 0x000008, "Wrong alignment on Shell_C_Shell_Sounds");
static_assert(sizeof(Shell_C_Shell_Sounds) == 0x000038, "Wrong size on Shell_C_Shell_Sounds");
static_assert(offsetof(Shell_C_Shell_Sounds, Location) == 0x000000, "Member 'Shell_C_Shell_Sounds::Location' has a wrong offset!");
static_assert(offsetof(Shell_C_Shell_Sounds, PhyscialMaterial) == 0x000018, "Member 'Shell_C_Shell_Sounds::PhyscialMaterial' has a wrong offset!");
static_assert(offsetof(Shell_C_Shell_Sounds, VolumeMultiplier) == 0x000020, "Member 'Shell_C_Shell_Sounds::VolumeMultiplier' has a wrong offset!");
static_assert(offsetof(Shell_C_Shell_Sounds, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000028, "Member 'Shell_C_Shell_Sounds::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Shell_C_Shell_Sounds, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000030, "Member 'Shell_C_Shell_Sounds::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");

// Function Shell.Shell_C.UserConstructionScript
// 0x0020 (0x0020 - 0x0000)
struct Shell_C_UserConstructionScript final
{
public:
	struct FSTR_Shell                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x0018)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Shell_C_UserConstructionScript) == 0x000008, "Wrong alignment on Shell_C_UserConstructionScript");
static_assert(sizeof(Shell_C_UserConstructionScript) == 0x000020, "Wrong size on Shell_C_UserConstructionScript");
static_assert(offsetof(Shell_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'Shell_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(Shell_C_UserConstructionScript, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000018, "Member 'Shell_C_UserConstructionScript::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

}

