#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weather_Mask_Projection_Box

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UDS_DLWE_Mode_structs.hpp"


namespace SDK::Params
{

// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.ExecuteUbergraph_Weather_Mask_Projection_Box
// 0x0038 (0x0038 - 0x0000)
struct Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Weather_C*               CallFunc_GetActorOfClass_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EEndPlayReason>                        K2Node_MakeArray_Array;                            // 0x0020(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Array_Contains_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_Contains_ReturnValue_1;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box) == 0x000008, "Wrong alignment on Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box");
static_assert(sizeof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box) == 0x000038, "Wrong size on Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, EntryPoint) == 0x000000, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::EntryPoint' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, CallFunc_GetActorOfClass_ReturnValue) == 0x000008, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, K2Node_Event_EndPlayReason) == 0x000010, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, CallFunc_Array_Add_ReturnValue) == 0x000014, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, K2Node_MakeArray_Array) == 0x000020, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, CallFunc_Array_Contains_ReturnValue) == 0x000030, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::CallFunc_Array_Contains_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, CallFunc_Array_Contains_ReturnValue_1) == 0x000031, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::CallFunc_Array_Contains_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box, CallFunc_Not_PreBool_ReturnValue) == 0x000032, "Member 'Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct Weather_Mask_Projection_Box_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weather_Mask_Projection_Box_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on Weather_Mask_Projection_Box_C_ReceiveEndPlay");
static_assert(sizeof(Weather_Mask_Projection_Box_C_ReceiveEndPlay) == 0x000001, "Wrong size on Weather_Mask_Projection_Box_C_ReceiveEndPlay");
static_assert(offsetof(Weather_Mask_Projection_Box_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'Weather_Mask_Projection_Box_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.Recycle Render Target
// 0x0001 (0x0001 - 0x0000)
struct Weather_Mask_Projection_Box_C_Recycle_Render_Target final
{
public:
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weather_Mask_Projection_Box_C_Recycle_Render_Target) == 0x000001, "Wrong alignment on Weather_Mask_Projection_Box_C_Recycle_Render_Target");
static_assert(sizeof(Weather_Mask_Projection_Box_C_Recycle_Render_Target) == 0x000001, "Wrong size on Weather_Mask_Projection_Box_C_Recycle_Render_Target");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Recycle_Render_Target, CallFunc_IsValid_ReturnValue) == 0x000000, "Member 'Weather_Mask_Projection_Box_C_Recycle_Render_Target::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.Test Point Occlusion
// 0x03C0 (0x03C0 - 0x0000)
struct Weather_Mask_Projection_Box_C_Test_Point_Occlusion final
{
public:
	struct FVector                                Location;                                          // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Mode;                                              // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          In_Volume;                                         // 0x0019(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Occlusion;                                         // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        One_Trace_Vector;                                  // 0x0028(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        Five_Trace_Vectors;                                // 0x0038(0x0010)(Edit, BlueprintVisible)
	TArray<struct FVector>                        Nine_Trace_Vectors;                                // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Number_of_Traces;                                  // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Total_Occlusion;                                   // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Trace_Hit;                                         // 0x0068(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Do_Trace;                                          // 0x0069(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x0070(0x0010)(ReferenceParm)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0098(0x0010)(ReferenceParm)
	TArray<struct FVector>                        K2Node_MakeArray_Array_2;                          // 0x00A8(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FCeil_ReturnValue;                        // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUDS_DLWE_Mode                                Temp_byte_Variable;                                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array_3;                          // 0x0120(0x0010)(ConstParm, ReferenceParm)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_Select_Default_1;                           // 0x0150(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17C[0x4];                                      // 0x017C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingleForObjects_OutHit;         // 0x0208(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingleForObjects_ReturnValue;    // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0310(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_InverseTransformLocation_ReturnValue;     // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_GetAbs_ReturnValue;                // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x03BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x03BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion) == 0x000010, "Wrong alignment on Weather_Mask_Projection_Box_C_Test_Point_Occlusion");
static_assert(sizeof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion) == 0x0003C0, "Wrong size on Weather_Mask_Projection_Box_C_Test_Point_Occlusion");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Location) == 0x000000, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Location' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Mode) == 0x000018, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Mode' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, In_Volume) == 0x000019, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::In_Volume' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Occlusion) == 0x000020, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Occlusion' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, One_Trace_Vector) == 0x000028, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::One_Trace_Vector' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Five_Trace_Vectors) == 0x000038, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Five_Trace_Vectors' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Nine_Trace_Vectors) == 0x000048, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Nine_Trace_Vectors' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Number_of_Traces) == 0x000058, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Number_of_Traces' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Total_Occlusion) == 0x000060, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Total_Occlusion' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Trace_Hit) == 0x000068, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Trace_Hit' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Do_Trace) == 0x000069, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Do_Trace' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, K2Node_MakeArray_Array) == 0x000070, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_X) == 0x000080, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_Y) == 0x000088, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_Z) == 0x000090, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, K2Node_MakeArray_Array_1) == 0x000098, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, K2Node_MakeArray_Array_2) == 0x0000A8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Temp_int_Array_Index_Variable) == 0x0000B8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Add_IntInt_ReturnValue) == 0x0000C0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000D0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000E0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_FCeil_ReturnValue) == 0x0000E8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_FCeil_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Clamp_ReturnValue) == 0x0000EC, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Temp_real_Variable) == 0x0000F0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Temp_byte_Variable) == 0x0000F8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000100, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, K2Node_Select_Default) == 0x000108, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000110, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000118, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, K2Node_MakeArray_Array_3) == 0x000120, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::K2Node_MakeArray_Array_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000130, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, Temp_int_Variable) == 0x000148, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, K2Node_Select_Default_1) == 0x000150, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Array_Get_Item) == 0x000160, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Array_Length_ReturnValue) == 0x000178, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000180, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Add_VectorVector_ReturnValue) == 0x0001A0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0001B8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_X_1) == 0x0001D0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_Y_1) == 0x0001D8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_Z_1) == 0x0001E0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Array_Length_ReturnValue_1) == 0x0001E8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_MakeVector_ReturnValue) == 0x0001F0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_LineTraceSingleForObjects_OutHit) == 0x000208, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_LineTraceSingleForObjects_OutHit' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_LineTraceSingleForObjects_ReturnValue) == 0x0002F0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_LineTraceSingleForObjects_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0002F1, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_X_2) == 0x0002F8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_Y_2) == 0x000300, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_Z_2) == 0x000308, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_GetTransform_ReturnValue) == 0x000310, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_InverseTransformLocation_ReturnValue) == 0x000370, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_InverseTransformLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Vector_GetAbs_ReturnValue) == 0x000388, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Vector_GetAbs_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_X_3) == 0x0003A0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_Y_3) == 0x0003A8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BreakVector_Z_3) == 0x0003B0, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x0003B8, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0003B9, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BooleanAND_ReturnValue) == 0x0003BA, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Test_Point_Occlusion, CallFunc_BooleanAND_ReturnValue_1) == 0x0003BB, "Member 'Weather_Mask_Projection_Box_C_Test_Point_Occlusion::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.Update Capture
// 0x00C8 (0x00C8 - 0x0000)
struct Weather_Mask_Projection_Box_C_Update_Capture final
{
public:
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_IntToVector_ReturnValue;             // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorVector_ReturnValue;          // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue_1;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Clamp_ReturnValue_1;                      // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UTextureRenderTarget2D*                 CallFunc_CreateRenderTarget2D_ReturnValue;         // 0x00C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weather_Mask_Projection_Box_C_Update_Capture) == 0x000008, "Wrong alignment on Weather_Mask_Projection_Box_C_Update_Capture");
static_assert(sizeof(Weather_Mask_Projection_Box_C_Update_Capture) == 0x0000C8, "Wrong size on Weather_Mask_Projection_Box_C_Update_Capture");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_GetActorScale3D_ReturnValue) == 0x000000, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_MakeVector_ReturnValue) == 0x000018, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_Conv_IntToVector_ReturnValue) == 0x000030, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_Conv_IntToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000050, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_Divide_VectorVector_ReturnValue) == 0x000080, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_Divide_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_BreakVector_X) == 0x000098, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_BreakVector_Y) == 0x0000A0, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_BreakVector_Z) == 0x0000A8, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_FTrunc_ReturnValue) == 0x0000B0, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_FTrunc_ReturnValue_1) == 0x0000B4, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_FTrunc_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_Clamp_ReturnValue) == 0x0000B8, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_Clamp_ReturnValue_1) == 0x0000BC, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_Clamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_Update_Capture, CallFunc_CreateRenderTarget2D_ReturnValue) == 0x0000C0, "Member 'Weather_Mask_Projection_Box_C_Update_Capture::CallFunc_CreateRenderTarget2D_ReturnValue' has a wrong offset!");

// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.UserConstructionScript
// 0x0550 (0x0550 - 0x0000)
struct Weather_Mask_Projection_Box_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Variable;                                 // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue;              // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_1;            // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_1;      // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorScale3D_ReturnValue_2;            // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_2;      // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue_3;      // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue;        // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable;                              // 0x01B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_1;                            // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_2;                            // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              Temp_struct_Variable_3;                            // 0x0210(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x7];                                      // 0x0229(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0230(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AUltra_Dynamic_Weather_C*               CallFunc_GetActorOfClass_ReturnValue;              // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Weather_C*               CallFunc_GetActorOfClass_ReturnValue_1;            // 0x0258(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0260(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_261[0x7];                                      // 0x0261(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SafeDivide_ReturnValue;                   // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_1;      // 0x02B0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAbsMax2D_ReturnValue;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x02E0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Hypotenuse_ReturnValue;                   // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x02F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0308(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_Conv_VectorToVector2D_ReturnValue_2;      // 0x0328(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              K2Node_Select_Default;                             // 0x0338(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DVector2D_ReturnValue;    // 0x0348(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_GetRotated2D_ReturnValue;                 // 0x0358(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_CreateDynamicMaterialInstance_ReturnValue; // 0x0380(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x03B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3DC[0x4];                                      // 0x03DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F9[0x7];                                      // 0x03F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_3;                          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetRelativeLocation_SweepHitResult;    // 0x0438(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast; // 0x0520(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_1; // 0x0524(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_OrthoWidth_ImplicitCast;        // 0x0528(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_2; // 0x052C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_3; // 0x0530(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_4; // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_5; // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_6; // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetScalarParameterValue_Value_ImplicitCast_7; // 0x0540(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRotated2D_AngleDeg_ImplicitCast;       // 0x0544(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Yaw_ImplicitCast;               // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Weather_Mask_Projection_Box_C_UserConstructionScript) == 0x000008, "Wrong alignment on Weather_Mask_Projection_Box_C_UserConstructionScript");
static_assert(sizeof(Weather_Mask_Projection_Box_C_UserConstructionScript) == 0x000550, "Wrong size on Weather_Mask_Projection_Box_C_UserConstructionScript");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, Temp_int_Variable) == 0x000000, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue) == 0x000008, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000020, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000024, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue) == 0x000028, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue_1) == 0x000040, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000058, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_1) == 0x000070, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue) == 0x000088, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue_1) == 0x0000A0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_X) == 0x0000B8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_Y) == 0x0000C0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_Z) == 0x0000C8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000D0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_GetActorScale3D_ReturnValue_2) == 0x0000F0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_GetActorScale3D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000108, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue_2) == 0x000110, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_2) == 0x000128, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x000140, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000158, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Multiply_VectorVector_ReturnValue_3) == 0x000170, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Multiply_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_X_1) == 0x000188, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_Y_1) == 0x000190, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_Z_1) == 0x000198, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Conv_VectorToVector2D_ReturnValue) == 0x0001A0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Conv_VectorToVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0001B0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, Temp_struct_Variable) == 0x0001B8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, Temp_struct_Variable_1) == 0x0001C8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, Temp_struct_Variable_2) == 0x0001D8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector2D_X) == 0x0001E8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector2D_Y) == 0x0001F0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0001F8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector2D_X_1) == 0x000200, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector2D_Y_1) == 0x000208, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, Temp_struct_Variable_3) == 0x000210, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000220, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x000228, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000230, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue) == 0x000248, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_GetActorOfClass_ReturnValue) == 0x000250, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_GetActorOfClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_GetActorOfClass_ReturnValue_1) == 0x000258, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_GetActorOfClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Not_PreBool_ReturnValue_1) == 0x000260, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000268, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000270, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SafeDivide_ReturnValue) == 0x000278, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SafeDivide_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000280, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000298, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Conv_VectorToVector2D_ReturnValue_1) == 0x0002B0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Conv_VectorToVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakRotator_Roll) == 0x0002C0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakRotator_Pitch) == 0x0002C4, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakRotator_Yaw) == 0x0002C8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_GetAbsMax2D_ReturnValue) == 0x0002D0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_GetAbsMax2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x0002D8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x0002E0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Hypotenuse_ReturnValue) == 0x0002F0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Hypotenuse_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0002F8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000308, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, Temp_int_Variable_1) == 0x000320, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Conv_VectorToVector2D_ReturnValue_2) == 0x000328, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Conv_VectorToVector2D_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, K2Node_Select_Default) == 0x000338, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Multiply_Vector2DVector2D_ReturnValue) == 0x000348, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Multiply_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_GetRotated2D_ReturnValue) == 0x000358, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_GetRotated2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000368, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_Array_Add_ReturnValue) == 0x000378, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_CreateDynamicMaterialInstance_ReturnValue) == 0x000380, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_CreateDynamicMaterialInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000388, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_X_2) == 0x0003A0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_Y_2) == 0x0003A8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_Z_2) == 0x0003B0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0003B8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakRotator_Roll_1) == 0x0003D0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakRotator_Pitch_1) == 0x0003D4, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakRotator_Yaw_1) == 0x0003D8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_MakeRotator_ReturnValue) == 0x0003E0, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_K2_SetActorRotation_ReturnValue) == 0x0003F8, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_X_3) == 0x000400, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_Y_3) == 0x000408, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_BreakVector_Z_3) == 0x000410, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_MakeVector_ReturnValue_3) == 0x000418, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_IsValid_ReturnValue) == 0x000430, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_K2_SetRelativeLocation_SweepHitResult) == 0x000438, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_K2_SetRelativeLocation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast) == 0x000520, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_1) == 0x000524, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, K2Node_VariableSet_OrthoWidth_ImplicitCast) == 0x000528, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::K2Node_VariableSet_OrthoWidth_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_2) == 0x00052C, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_3) == 0x000530, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_4) == 0x000534, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_5) == 0x000538, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_6) == 0x00053C, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_SetScalarParameterValue_Value_ImplicitCast_7) == 0x000540, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_SetScalarParameterValue_Value_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, CallFunc_GetRotated2D_AngleDeg_ImplicitCast) == 0x000544, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::CallFunc_GetRotated2D_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Weather_Mask_Projection_Box_C_UserConstructionScript, K2Node_VariableSet_Yaw_ImplicitCast) == 0x000548, "Member 'Weather_Mask_Projection_Box_C_UserConstructionScript::K2Node_VariableSet_Yaw_ImplicitCast' has a wrong offset!");

}

