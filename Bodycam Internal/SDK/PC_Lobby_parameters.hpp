#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Lobby

#include "Basic.hpp"

#include "SteamCorePro_structs.hpp"
#include "STR_TEST_structs.hpp"
#include "STR_PCInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Team_structs.hpp"
#include "STR_Actor_structs.hpp"
#include "STR_KickVote_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "STR_Score_structs.hpp"
#include "STR_PCStats_structs.hpp"
#include "GameMode_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PC_Lobby.PC_Lobby_C.AddReadyPlayer (Client)
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_AddReadyPlayer__Client_ final
{
public:
	class FName                                   LevelsName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_AddReadyPlayer__Client_) == 0x000004, "Wrong alignment on PC_Lobby_C_AddReadyPlayer__Client_");
static_assert(sizeof(PC_Lobby_C_AddReadyPlayer__Client_) == 0x000008, "Wrong size on PC_Lobby_C_AddReadyPlayer__Client_");
static_assert(offsetof(PC_Lobby_C_AddReadyPlayer__Client_, LevelsName) == 0x000000, "Member 'PC_Lobby_C_AddReadyPlayer__Client_::LevelsName' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.AddReadyPlayer (Server)
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_AddReadyPlayer__Server_ final
{
public:
	class FName                                   InputPin;                                          // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_AddReadyPlayer__Server_) == 0x000004, "Wrong alignment on PC_Lobby_C_AddReadyPlayer__Server_");
static_assert(sizeof(PC_Lobby_C_AddReadyPlayer__Server_) == 0x000008, "Wrong size on PC_Lobby_C_AddReadyPlayer__Server_");
static_assert(offsetof(PC_Lobby_C_AddReadyPlayer__Server_, InputPin) == 0x000000, "Member 'PC_Lobby_C_AddReadyPlayer__Server_::InputPin' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.AssignTeam (Server)
// 0x0014 (0x0014 - 0x0000)
struct PC_Lobby_C_AssignTeam__Server_ final
{
public:
	struct FSTR_PCStats                           Item_Stats;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Team_0;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_AssignTeam__Server_) == 0x000004, "Wrong alignment on PC_Lobby_C_AssignTeam__Server_");
static_assert(sizeof(PC_Lobby_C_AssignTeam__Server_) == 0x000014, "Wrong size on PC_Lobby_C_AssignTeam__Server_");
static_assert(offsetof(PC_Lobby_C_AssignTeam__Server_, Item_Stats) == 0x000000, "Member 'PC_Lobby_C_AssignTeam__Server_::Item_Stats' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_AssignTeam__Server_, Team_0) == 0x000010, "Member 'PC_Lobby_C_AssignTeam__Server_::Team_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.BndEvt__PC_Lobby_AudioCaptureVOIP_K2Node_ComponentBoundEvent_0_OnSynthEnvelopeValue__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct PC_Lobby_C_BndEvt__PC_Lobby_AudioCaptureVOIP_K2Node_ComponentBoundEvent_0_OnSynthEnvelopeValue__DelegateSignature final
{
public:
	float                                         EnvelopeValue;                                     // 0x0000(0x0004)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_BndEvt__PC_Lobby_AudioCaptureVOIP_K2Node_ComponentBoundEvent_0_OnSynthEnvelopeValue__DelegateSignature) == 0x000004, "Wrong alignment on PC_Lobby_C_BndEvt__PC_Lobby_AudioCaptureVOIP_K2Node_ComponentBoundEvent_0_OnSynthEnvelopeValue__DelegateSignature");
static_assert(sizeof(PC_Lobby_C_BndEvt__PC_Lobby_AudioCaptureVOIP_K2Node_ComponentBoundEvent_0_OnSynthEnvelopeValue__DelegateSignature) == 0x000004, "Wrong size on PC_Lobby_C_BndEvt__PC_Lobby_AudioCaptureVOIP_K2Node_ComponentBoundEvent_0_OnSynthEnvelopeValue__DelegateSignature");
static_assert(offsetof(PC_Lobby_C_BndEvt__PC_Lobby_AudioCaptureVOIP_K2Node_ComponentBoundEvent_0_OnSynthEnvelopeValue__DelegateSignature, EnvelopeValue) == 0x000000, "Member 'PC_Lobby_C_BndEvt__PC_Lobby_AudioCaptureVOIP_K2Node_ComponentBoundEvent_0_OnSynthEnvelopeValue__DelegateSignature::EnvelopeValue' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.CanCreateKickVote
// 0x0002 (0x0002 - 0x0000)
struct PC_Lobby_C_CanCreateKickVote final
{
public:
	bool                                          CanCreateKickVote_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_CanCreateKickVote) == 0x000001, "Wrong alignment on PC_Lobby_C_CanCreateKickVote");
static_assert(sizeof(PC_Lobby_C_CanCreateKickVote) == 0x000002, "Wrong size on PC_Lobby_C_CanCreateKickVote");
static_assert(offsetof(PC_Lobby_C_CanCreateKickVote, CanCreateKickVote_) == 0x000000, "Member 'PC_Lobby_C_CanCreateKickVote::CanCreateKickVote_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_CanCreateKickVote, CallFunc_IsServer_ReturnValue) == 0x000001, "Member 'PC_Lobby_C_CanCreateKickVote::CallFunc_IsServer_ReturnValue' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.CanKickThisPlayer?
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_CanKickThisPlayer_ final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          True_;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_CanKickThisPlayer_) == 0x000008, "Wrong alignment on PC_Lobby_C_CanKickThisPlayer_");
static_assert(sizeof(PC_Lobby_C_CanKickThisPlayer_) == 0x000018, "Wrong size on PC_Lobby_C_CanKickThisPlayer_");
static_assert(offsetof(PC_Lobby_C_CanKickThisPlayer_, PlayerID) == 0x000000, "Member 'PC_Lobby_C_CanKickThisPlayer_::PlayerID' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_CanKickThisPlayer_, True_) == 0x000010, "Member 'PC_Lobby_C_CanKickThisPlayer_::True_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.ExecuteUbergraph_PC_Lobby
// 0x0C60 (0x0C60 - 0x0000)
struct PC_Lobby_C_ExecuteUbergraph_PC_Lobby final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_1;                        // 0x0008(0x0018)(HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0020(0x0018)(HasGetValueTypeHash)
	struct FKey                                   Temp_struct_Variable;                              // 0x0038(0x0018)(HasGetValueTypeHash)
	TDelegate<void(struct FLeaderboardFindResult& Data, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate;              // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FLeaderboardFindResult                 K2Node_CustomEvent_data_1;                         // 0x0060(0x0010)(ConstParm, NoDestructor)
	bool                                          K2Node_CustomEvent_bWasSuccessful_1;               // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x6];                                       // 0x0072(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardFindResult                 Temp_struct_Variable_1;                            // 0x0078(0x0010)(NoDestructor)
	class USteamCoreProUserStatsAsyncActionFindLeaderboard* CallFunc_FindLeaderboardAsync_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(struct FLeaderboardScoresDownloadedForUsers& Data, bool bWasSuccessful)> K2Node_CreateDelegate_OutputDelegate_1;            // 0x0090(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardScoresDownloadedForUsers   K2Node_CustomEvent_data;                           // 0x00A8(0x0018)(ConstParm, NoDestructor)
	bool                                          K2Node_CustomEvent_bWasSuccessful;                 // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C2[0x6];                                       // 0x00C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLeaderboardScoresDownloadedForUsers   Temp_struct_Variable_2;                            // 0x00C8(0x0018)(NoDestructor)
	struct FSteamLeaderboardEntry                 CallFunc_GetDownloadedLeaderboardEntry_LeaderboardEntry; // 0x00E0(0x0020)(NoDestructor)
	TArray<int32>                                 CallFunc_GetDownloadedLeaderboardEntry_outDetails; // 0x0100(0x0010)(ReferenceParm)
	bool                                          CallFunc_GetDownloadedLeaderboardEntry_ReturnValue; // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11D[0x3];                                      // 0x011D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0xC];                                      // 0x0124(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0130(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BC_ShowCase_C*                      CallFunc_FinishSpawningActor_ReturnValue;          // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Xp;                                   // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Kill_;                                // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Death;                                // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Set;                                  // 0x01CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CD[0x3];                                      // 0x01CD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_String;                               // 0x01D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TimeCount;                            // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_NewParam;                             // 0x01F0(0x0018)()
	class FName                                   K2Node_Event_Selected_Level_Name;                  // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team_PlayerKilled_;                   // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MilitaryIndex;                        // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TerroristIndex;                       // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_WiiningTeam;                          // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_221[0x3];                                      // 0x0221(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_Event_Score;                                // 0x0224(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Win_;                                 // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Slomo;                                // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target_2;                             // 0x0238(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes_;                                 // 0x0278(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_279[0x7];                                      // 0x0279(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target_1;                             // 0x0280(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Event_Gamemode;                             // 0x02C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReady_;                             // 0x02C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsTalking;                            // 0x02C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C3[0x5];                                      // 0x02C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x02C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x02D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x02E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x3];                                      // 0x02E9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x02EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x02F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0300(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x0324(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0328(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x7];                                      // 0x0341(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_SteamID;                        // 0x0348(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team_3;                         // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Remove_;                        // 0x0359(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x035A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x035B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35C[0x4];                                      // 0x035C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_SteamID;                              // 0x0360(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue;                  // 0x0370(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x037C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37D[0x3];                                      // 0x037D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_384[0x4];                                      // 0x0384(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue_1;                // 0x0388(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0390(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_391[0x7];                                      // 0x0391(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x0398(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x03B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x03BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x03C0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes__1;                         // 0x03C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C9[0x7];                                      // 0x03C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1_1;                            // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x7];                                      // 0x03E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_KickVote                          K2Node_Event_PlayerInfo;                           // 0x03E8(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_CustomEvent_Player_info_2;                  // 0x0430(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_CustomEvent_Player_info_1;                  // 0x0478(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_CustomEvent_Player_info;                    // 0x04C0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes_;                           // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x7];                                      // 0x0501(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0508(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0510(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_521[0x7];                                      // 0x0521(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWidget*                                CallFunc_GetChildAt_ReturnValue;                   // 0x0528(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UKickVote_C*                            K2Node_DynamicCast_AsKick_Vote;                    // 0x0530(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target;                               // 0x0540(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0580(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_581[0x3];                                      // 0x0581(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0584(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0588(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_589[0x3];                                      // 0x0589(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x058C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EEndPlayReason                                K2Node_Event_EndPlayReason;                        // 0x0590(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team;                                 // 0x0591(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_592[0x6];                                      // 0x0592(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x0598(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_1;                 // 0x05A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x05A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A9[0x7];                                      // 0x05A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable_3;                            // 0x05B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0610(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UVOIPTalker*                            CallFunc_AddComponent_ReturnValue;                 // 0x0618(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           K2Node_CustomEvent_Item_Stats;                     // 0x0620(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team_2;                         // 0x0630(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_631[0x7];                                      // 0x0631(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team_1;                         // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x7];                                      // 0x0641(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby;                     // 0x0648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue;            // 0x0658(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0659(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65A[0x6];                                      // 0x065A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHUD_ScoreBoardMenu_C*>          CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0660(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue;                   // 0x0670(0x0008)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0678(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67C[0x4];                                      // 0x067C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0680(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalController_ReturnValue_1;          // 0x0690(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_691[0x3];                                      // 0x0691(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0694(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocalPlayerController_ReturnValue;      // 0x0698(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_699[0x7];                                      // 0x0699(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUD_ScoreBoardMenu_C*                  CallFunc_Array_Get_Item;                           // 0x06A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team;                           // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_2;            // 0x06B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B8[0x8];                                      // 0x06B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             K2Node_CustomEvent_SpawnTransform;                 // 0x06C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_2;                 // 0x0720(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0728(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_729[0x7];                                      // 0x0729(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0730(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0748(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0760(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_778[0x8];                                      // 0x0778(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0780(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key_2;                        // 0x07E0(0x0018)(HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x07F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0808(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABP_MenuSystemActor_C*>          CallFunc_GetAllActorsOfClass_OutActors;            // 0x0810(0x0010)(ReferenceParm)
	class FName                                   Temp_name_Variable;                                // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class ABP_MenuSystemActor_C*                  CallFunc_Array_Get_Item_1;                         // 0x0828(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_LevelsName;                     // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x0840(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby_1;                   // 0x0848(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_851[0x7];                                      // 0x0851(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby_2;                   // 0x0858(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_862[0x2];                                      // 0x0862(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_InputPin;                       // 0x0864(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x086C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x086D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86E[0x2];                                      // 0x086E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Select_Default;                             // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0878(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BC_ShowCase_C*                      K2Node_DynamicCast_AsBP_BC_Show_Case;              // 0x0880(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x0888(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_889[0x7];                                      // 0x0889(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x0890(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x0898(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_899[0x7];                                      // 0x0899(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKey                                   K2Node_InputKeyEvent_Key_3;                        // 0x08A0(0x0018)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x08B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x08BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x08BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8BE[0x2];                                      // 0x08BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x08C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x08C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C5[0x3];                                      // 0x08C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x08C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVoiceSettings                         K2Node_MakeStruct_VoiceSettings;                   // 0x08D0(0x0018)(NoDestructor, ContainsInstancedReference)
	bool                                          K2Node_CustomEvent_IsTalking_;                     // 0x08E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8E9[0x7];                                      // 0x08E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x08F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_NewRotation;                    // 0x08F8(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby_3;                   // 0x0910(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0918(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_919[0x7];                                      // 0x0919(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0920(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x0928(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0930(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby_4;                   // 0x0948(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0950(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_951[0xF];                                      // 0x0951(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_RandomSpawn_ReturnValue;                  // 0x0960(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UKickOverlay_C*                         CallFunc_Create_ReturnValue;                       // 0x09C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_3;            // 0x09C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_3;                 // 0x09D0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x09D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D9[0x7];                                      // 0x09D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby_5;                   // 0x09E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x09F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9F1[0x3];                                      // 0x09F1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TeamIndex_NoneIndex_Return;               // 0x09F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_MilitaryIndex_Return;           // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_TerroristIndex_Return;          // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamIndex_TeamNeedPlayer;                 // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeamIndex_TeamEmpty_;                     // 0x0A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A02[0x2];                                      // 0x0A02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_2;                         // 0x0A08(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0A48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A49[0x3];                                      // 0x0A49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats;                     // 0x0A4C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A5C[0x4];                                      // 0x0A5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo;                      // 0x0A60(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_Score                             K2Node_MakeStruct_STR_Score;                       // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats_1;                   // 0x0AA8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue_1;                 // 0x0AB8(0x0008)(NoDestructor)
	TArray<struct FSteamID>                       K2Node_MakeArray_Array;                            // 0x0AC0(0x0010)(ReferenceParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_4;            // 0x0AD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USteamCoreProUserStatsAsyncActionDownloadLeaderboardEntriesForUsers* CallFunc_DownloadLeaderboardEntriesForUsersAsync_ReturnValue; // 0x0AD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Xp_C>             K2Node_DynamicCast_AsBPI_Xp;                       // 0x0AE0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0AF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF1[0x7];                                      // 0x0AF1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetNewRank_Name;                          // 0x0AF8(0x0018)()
	class UTexture2D*                             CallFunc_GetNewRank_Image;                         // 0x0B10(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNewRank_RankScore;                     // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNewRank_RankPosition;                  // 0x0B1C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetNewRank_RankDivision;                  // 0x0B20(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B24[0x4];                                      // 0x0B24(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetNewRank_PreviousRankProgress;          // 0x0B28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetNewRank_RankProgress;                  // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetNewRank_NewRank_;                      // 0x0B38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B39[0x3];                                      // 0x0B39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            CallFunc_GetNewRank_Color;                         // 0x0B3C(0x0014)()
	int32                                         CallFunc_GetNewRank_Rank_Integer;                  // 0x0B50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0B54(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B55[0x3];                                      // 0x0B55(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_7;               // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue;                   // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B61[0x7];                                      // 0x0B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby_6;                   // 0x0B68(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0B70(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B71[0x7];                                      // 0x0B71(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_3;                         // 0x0B78(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0BBC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BBD[0x3];                                      // 0x0BBD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_1;                    // 0x0BC0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C01[0x3];                                      // 0x0C01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_ComponentBoundEvent_EnvelopeValue;          // 0x0C04(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Log_ReturnValue;                          // 0x0C08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_VOIP_Bar_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0C10(0x0010)(ReferenceParm, ContainsInstancedReference)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0C20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_VOIP_Bar_C*                        CallFunc_Array_Get_Item_4;                         // 0x0C28(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_LinearColorLerp_ReturnValue;              // 0x0C30(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0C40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0C44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_bNewActive;                     // 0x0C45(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C46[0x2];                                      // 0x0C46(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Log_A_ImplicitCast;                       // 0x0C48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetPercent_InPercent_ImplicitCast;        // 0x0C50(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LinearColorLerp_Alpha_ImplicitCast;       // 0x0C54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby) == 0x000010, "Wrong alignment on PC_Lobby_C_ExecuteUbergraph_PC_Lobby");
static_assert(sizeof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby) == 0x000C60, "Wrong size on PC_Lobby_C_ExecuteUbergraph_PC_Lobby");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, EntryPoint) == 0x000000, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::EntryPoint' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_InputKeyEvent_Key_1) == 0x000008, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_InputKeyEvent_Key_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_InputKeyEvent_Key) == 0x000020, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_struct_Variable) == 0x000038, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CreateDelegate_OutputDelegate) == 0x000050, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_data_1) == 0x000060, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_data_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_bWasSuccessful_1) == 0x000070, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_bWasSuccessful_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_bool_Variable) == 0x000071, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_struct_Variable_1) == 0x000078, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_FindLeaderboardAsync_ReturnValue) == 0x000088, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_FindLeaderboardAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CreateDelegate_OutputDelegate_1) == 0x000090, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsValid_ReturnValue) == 0x0000A0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_data) == 0x0000A8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_data' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_bWasSuccessful) == 0x0000C0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_bWasSuccessful' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_bool_Variable_1) == 0x0000C1, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_struct_Variable_2) == 0x0000C8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_struct_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetDownloadedLeaderboardEntry_LeaderboardEntry) == 0x0000E0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetDownloadedLeaderboardEntry_LeaderboardEntry' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetDownloadedLeaderboardEntry_outDetails) == 0x000100, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetDownloadedLeaderboardEntry_outDetails' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetDownloadedLeaderboardEntry_ReturnValue) == 0x000110, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetDownloadedLeaderboardEntry_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_int_Array_Index_Variable) == 0x000114, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_int_Loop_Counter_Variable) == 0x000118, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_bool_Variable_2) == 0x00011C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Add_IntInt_ReturnValue) == 0x000120, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_MakeTransform_ReturnValue) == 0x000130, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_HasAuthority_ReturnValue) == 0x000190, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000198, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_FinishSpawningActor_ReturnValue) == 0x0001A0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_int_Loop_Counter_Variable_1) == 0x0001A8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Add_IntInt_ReturnValue_1) == 0x0001AC, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_int_Array_Index_Variable_1) == 0x0001B0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_real_Variable) == 0x0001B8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Xp) == 0x0001C0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Xp' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Kill_) == 0x0001C4, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Kill_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Death) == 0x0001C8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Death' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Set) == 0x0001CC, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Set' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_String) == 0x0001D0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Delay) == 0x0001E0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_TimeCount) == 0x0001E8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_TimeCount' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_NewParam) == 0x0001F0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Selected_Level_Name) == 0x000208, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Index) == 0x000210, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Team_PlayerKilled_) == 0x000214, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_MilitaryIndex) == 0x000218, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_TerroristIndex) == 0x00021C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_TerroristIndex' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_WiiningTeam) == 0x000220, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_WiiningTeam' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Score) == 0x000224, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Win_) == 0x00022C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Win_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Slomo) == 0x000230, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Slomo' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Target_2) == 0x000238, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Yes_) == 0x000278, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Yes_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Target_1) == 0x000280, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Gamemode) == 0x0002C0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Gamemode' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_IsReady_) == 0x0002C1, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_IsReady_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_IsTalking) == 0x0002C2, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_IsTalking' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_PC) == 0x0002C8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameInstance_ReturnValue) == 0x0002D0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_int_Loop_Counter_Variable_2) == 0x0002D8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsBodycam_GI) == 0x0002E0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess) == 0x0002E8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Add_IntInt_ReturnValue_2) == 0x0002EC, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_real_Variable_1) == 0x0002F0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_object_Variable) == 0x0002F8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000300, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000320, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x000324, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000328, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_real_Variable_1_0) == 0x000330, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_real_Variable_0) == 0x000338, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000340, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_SteamID) == 0x000348, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_SteamID' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Team_3) == 0x000358, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Team_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Remove_) == 0x000359, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Remove_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsValid_ReturnValue_1) == 0x00035A, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsValid_ReturnValue_2) == 0x00035B, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_SteamID) == 0x000360, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_SteamID' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_MakeSteamID_ReturnValue) == 0x000370, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_MakeSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_AddUnique_ReturnValue) == 0x000378, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_RemoveItem_ReturnValue) == 0x00037C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Find_ReturnValue) == 0x000380, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_MakeSteamID_ReturnValue_1) == 0x000388, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_MakeSteamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000390, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x000398, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x0003B8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x0003BC, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x0003C0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Yes__1) == 0x0003C8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Yes__1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_real_Variable_1_1) == 0x0003D0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_real_Variable_1_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_real_Variable_1) == 0x0003D8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x0003E0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_PlayerInfo) == 0x0003E8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Player_info_2) == 0x000430, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Player_info_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Player_info_1) == 0x000478, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Player_info_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Player_info) == 0x0004C0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Player_info' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Yes_) == 0x000500, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Yes_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameState_ReturnValue) == 0x000508, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsBodycam_Interface) == 0x000510, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_1) == 0x000520, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetChildAt_ReturnValue) == 0x000528, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetChildAt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsKick_Vote) == 0x000530, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsKick_Vote' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_2) == 0x000538, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Target) == 0x000540, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000580, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Find_ReturnValue_1) == 0x000584, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000588, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_AddUnique_ReturnValue_1) == 0x00058C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_EndPlayReason) == 0x000590, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_EndPlayReason' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_Team) == 0x000591, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameInstance_ReturnValue_1) == 0x000598, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsBodycam_GI_1) == 0x0005A0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsBodycam_GI_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_3) == 0x0005A8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_struct_Variable_3) == 0x0005B0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_struct_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_K2_GetPawn_ReturnValue) == 0x000610, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_AddComponent_ReturnValue) == 0x000618, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Item_Stats) == 0x000620, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Item_Stats' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Team_2) == 0x000630, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Team_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameState_ReturnValue_1) == 0x000638, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Team_1) == 0x000640, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Team_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsGT_Lobby) == 0x000648, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsGT_Lobby' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_4) == 0x000650, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Length_ReturnValue) == 0x000654, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsLocalController_ReturnValue) == 0x000658, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsLocalController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Less_IntInt_ReturnValue) == 0x000659, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000660, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetSteamID_ReturnValue) == 0x000670, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Length_ReturnValue_1) == 0x000678, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_BreakSteamID_ReturnValue) == 0x000680, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsLocalController_ReturnValue_1) == 0x000690, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsLocalController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_int_Array_Index_Variable_2) == 0x000694, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsLocalPlayerController_ReturnValue) == 0x000698, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsLocalPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Get_Item) == 0x0006A0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_Team) == 0x0006A8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_Team' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameInstance_ReturnValue_2) == 0x0006B0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameInstance_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_SpawnTransform) == 0x0006C0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_SpawnTransform' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsBodycam_GI_2) == 0x000720, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsBodycam_GI_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_5) == 0x000728, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_BreakTransform_Location) == 0x000730, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_BreakTransform_Rotation) == 0x000748, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_BreakTransform_Scale) == 0x000760, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_MakeTransform_ReturnValue_1) == 0x000780, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_InputKeyEvent_Key_2) == 0x0007E0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_InputKeyEvent_Key_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x0007F8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000800, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000808, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetAllActorsOfClass_OutActors) == 0x000810, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_name_Variable) == 0x000820, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Get_Item_1) == 0x000828, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_LevelsName) == 0x000830, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_LevelsName' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameState_ReturnValue_2) == 0x000838, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameState_ReturnValue_3) == 0x000840, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsGT_Lobby_1) == 0x000848, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsGT_Lobby_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_6) == 0x000850, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsGT_Lobby_2) == 0x000858, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsGT_Lobby_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_7) == 0x000860, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_bool_Variable_3) == 0x000861, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_InputPin) == 0x000864, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_InputPin' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00086C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_HasAuthority_ReturnValue_1) == 0x00086D, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Select_Default) == 0x000870, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_Event_PossessedPawn) == 0x000878, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsBP_BC_Show_Case) == 0x000880, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsBP_BC_Show_Case' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_8) == 0x000888, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x000890, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_9) == 0x000898, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_InputKeyEvent_Key_3) == 0x0008A0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_InputKeyEvent_Key_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_int_Loop_Counter_Variable_3) == 0x0008B8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsValid_ReturnValue_3) == 0x0008BC, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Less_IntInt_ReturnValue_1) == 0x0008BD, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Add_IntInt_ReturnValue_3) == 0x0008C0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsValid_ReturnValue_4) == 0x0008C4, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetPlayerCharacter_ReturnValue) == 0x0008C8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_MakeStruct_VoiceSettings) == 0x0008D0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_MakeStruct_VoiceSettings' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_IsTalking_) == 0x0008E8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_IsTalking_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameState_ReturnValue_4) == 0x0008F0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_NewRotation) == 0x0008F8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_NewRotation' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsGT_Lobby_3) == 0x000910, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsGT_Lobby_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_10) == 0x000918, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000920, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameState_ReturnValue_5) == 0x000928, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000930, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsGT_Lobby_4) == 0x000948, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsGT_Lobby_4' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_11) == 0x000950, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_RandomSpawn_ReturnValue) == 0x000960, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_RandomSpawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Create_ReturnValue) == 0x0009C0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameInstance_ReturnValue_3) == 0x0009C8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameInstance_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsBodycam_GI_3) == 0x0009D0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsBodycam_GI_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_12) == 0x0009D8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameState_ReturnValue_6) == 0x0009E0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsGT_Lobby_5) == 0x0009E8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsGT_Lobby_5' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_13) == 0x0009F0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_TeamIndex_NoneIndex_Return) == 0x0009F4, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_TeamIndex_NoneIndex_Return' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_TeamIndex_MilitaryIndex_Return) == 0x0009F8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_TeamIndex_MilitaryIndex_Return' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_TeamIndex_TerroristIndex_Return) == 0x0009FC, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_TeamIndex_TerroristIndex_Return' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_TeamIndex_TeamNeedPlayer) == 0x000A00, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_TeamIndex_TeamNeedPlayer' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_TeamIndex_TeamEmpty_) == 0x000A01, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_TeamIndex_TeamEmpty_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, Temp_int_Array_Index_Variable_3) == 0x000A04, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Get_Item_2) == 0x000A08, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000A48, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_MakeStruct_STR_PCStats) == 0x000A4C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_MakeStruct_STR_PCStats' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_MakeStruct_STR_PCInfo) == 0x000A60, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_MakeStruct_STR_PCInfo' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_MakeStruct_STR_Score) == 0x000AA0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_MakeStruct_STR_Score' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_MakeStruct_STR_PCStats_1) == 0x000AA8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_MakeStruct_STR_PCStats_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetSteamID_ReturnValue_1) == 0x000AB8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetSteamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_MakeArray_Array) == 0x000AC0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameInstance_ReturnValue_4) == 0x000AD0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameInstance_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_DownloadLeaderboardEntriesForUsersAsync_ReturnValue) == 0x000AD8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_DownloadLeaderboardEntriesForUsersAsync_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsBPI_Xp) == 0x000AE0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsBPI_Xp' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_14) == 0x000AF0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_Name) == 0x000AF8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_Name' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_Image) == 0x000B10, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_Image' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_RankScore) == 0x000B18, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_RankScore' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_RankPosition) == 0x000B1C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_RankPosition' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_RankDivision) == 0x000B20, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_RankDivision' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_PreviousRankProgress) == 0x000B28, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_PreviousRankProgress' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_RankProgress) == 0x000B30, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_RankProgress' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_NewRank_) == 0x000B38, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_NewRank_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_Color) == 0x000B3C, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_Color' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetNewRank_Rank_Integer) == 0x000B50, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetNewRank_Rank_Integer' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_IsValid_ReturnValue_5) == 0x000B54, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetGameState_ReturnValue_7) == 0x000B58, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetGameState_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_KickPlayer_ReturnValue) == 0x000B60, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_KickPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_AsGT_Lobby_6) == 0x000B68, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_AsGT_Lobby_6' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_DynamicCast_bSuccess_15) == 0x000B70, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Get_Item_3) == 0x000B78, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Length_ReturnValue_2) == 0x000BB8, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Less_IntInt_ReturnValue_2) == 0x000BBC, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_MakeStruct_STR_PCInfo_1) == 0x000BC0, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_MakeStruct_STR_PCInfo_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000C00, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_ComponentBoundEvent_EnvelopeValue) == 0x000C04, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_ComponentBoundEvent_EnvelopeValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Log_ReturnValue) == 0x000C08, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Log_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000C10, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_MapRangeClamped_ReturnValue) == 0x000C20, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Get_Item_4) == 0x000C28, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_LinearColorLerp_ReturnValue) == 0x000C30, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_LinearColorLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Array_Length_ReturnValue_3) == 0x000C40, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Less_IntInt_ReturnValue_3) == 0x000C44, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, K2Node_CustomEvent_bNewActive) == 0x000C45, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::K2Node_CustomEvent_bNewActive' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_Log_A_ImplicitCast) == 0x000C48, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_Log_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_SetPercent_InPercent_ImplicitCast) == 0x000C50, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_SetPercent_InPercent_ImplicitCast' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_ExecuteUbergraph_PC_Lobby, CallFunc_LinearColorLerp_Alpha_ImplicitCast) == 0x000C54, "Member 'PC_Lobby_C_ExecuteUbergraph_PC_Lobby::CallFunc_LinearColorLerp_Alpha_ImplicitCast' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Get BP Menu Controller Component
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_Get_BP_Menu_Controller_Component final
{
public:
	class UBP_MenuControllerComponent_C*          BP_Menu_Controller_Component;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong alignment on PC_Lobby_C_Get_BP_Menu_Controller_Component");
static_assert(sizeof(PC_Lobby_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong size on PC_Lobby_C_Get_BP_Menu_Controller_Component");
static_assert(offsetof(PC_Lobby_C_Get_BP_Menu_Controller_Component, BP_Menu_Controller_Component) == 0x000000, "Member 'PC_Lobby_C_Get_BP_Menu_Controller_Component::BP_Menu_Controller_Component' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Get Stamina
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_Get_Stamina final
{
public:
	double                                        Stamina;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Get_Stamina) == 0x000008, "Wrong alignment on PC_Lobby_C_Get_Stamina");
static_assert(sizeof(PC_Lobby_C_Get_Stamina) == 0x000008, "Wrong size on PC_Lobby_C_Get_Stamina");
static_assert(offsetof(PC_Lobby_C_Get_Stamina, Stamina) == 0x000000, "Member 'PC_Lobby_C_Get_Stamina::Stamina' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetBlured
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_GetBlured final
{
public:
	double                                        Blured;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetBlured) == 0x000008, "Wrong alignment on PC_Lobby_C_GetBlured");
static_assert(sizeof(PC_Lobby_C_GetBlured) == 0x000008, "Wrong size on PC_Lobby_C_GetBlured");
static_assert(offsetof(PC_Lobby_C_GetBlured, Blured) == 0x000000, "Member 'PC_Lobby_C_GetBlured::Blured' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetBurnedRef
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_GetBurnedRef final
{
public:
	class USceneComponent*                        BurnedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetBurnedRef) == 0x000008, "Wrong alignment on PC_Lobby_C_GetBurnedRef");
static_assert(sizeof(PC_Lobby_C_GetBurnedRef) == 0x000008, "Wrong size on PC_Lobby_C_GetBurnedRef");
static_assert(offsetof(PC_Lobby_C_GetBurnedRef, BurnedMesh) == 0x000000, "Member 'PC_Lobby_C_GetBurnedRef::BurnedMesh' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetCurrentRank
// 0x0020 (0x0020 - 0x0000)
struct PC_Lobby_C_GetCurrentRank final
{
public:
	int32                                         RankScore_0;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank__0;                                           // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CurrentRank;                                       // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(PC_Lobby_C_GetCurrentRank) == 0x000008, "Wrong alignment on PC_Lobby_C_GetCurrentRank");
static_assert(sizeof(PC_Lobby_C_GetCurrentRank) == 0x000020, "Wrong size on PC_Lobby_C_GetCurrentRank");
static_assert(offsetof(PC_Lobby_C_GetCurrentRank, RankScore_0) == 0x000000, "Member 'PC_Lobby_C_GetCurrentRank::RankScore_0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetCurrentRank, Rank__0) == 0x000004, "Member 'PC_Lobby_C_GetCurrentRank::Rank__0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetCurrentRank, CurrentRank) == 0x000008, "Member 'PC_Lobby_C_GetCurrentRank::CurrentRank' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetFlashBangEffect
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_GetFlashBangEffect final
{
public:
	double                                        FlashEffect;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetFlashBangEffect) == 0x000008, "Wrong alignment on PC_Lobby_C_GetFlashBangEffect");
static_assert(sizeof(PC_Lobby_C_GetFlashBangEffect) == 0x000008, "Wrong size on PC_Lobby_C_GetFlashBangEffect");
static_assert(offsetof(PC_Lobby_C_GetFlashBangEffect, FlashEffect) == 0x000000, "Member 'PC_Lobby_C_GetFlashBangEffect::FlashEffect' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetGameMode
// 0x0040 (0x0040 - 0x0000)
struct PC_Lobby_C_GetGameMode final
{
public:
	struct FSTR_GamemodeWinInfo                   GameMode;                                          // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetGameMode) == 0x000008, "Wrong alignment on PC_Lobby_C_GetGameMode");
static_assert(sizeof(PC_Lobby_C_GetGameMode) == 0x000040, "Wrong size on PC_Lobby_C_GetGameMode");
static_assert(offsetof(PC_Lobby_C_GetGameMode, GameMode) == 0x000000, "Member 'PC_Lobby_C_GetGameMode::GameMode' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_GetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetHealth) == 0x000008, "Wrong alignment on PC_Lobby_C_GetHealth");
static_assert(sizeof(PC_Lobby_C_GetHealth) == 0x000008, "Wrong size on PC_Lobby_C_GetHealth");
static_assert(offsetof(PC_Lobby_C_GetHealth, Health) == 0x000000, "Member 'PC_Lobby_C_GetHealth::Health' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetKickedPlayerVoted
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_GetKickedPlayerVoted final
{
public:
	TArray<class FString>                         KickplayerAlreadyVote;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Lobby_C_GetKickedPlayerVoted) == 0x000008, "Wrong alignment on PC_Lobby_C_GetKickedPlayerVoted");
static_assert(sizeof(PC_Lobby_C_GetKickedPlayerVoted) == 0x000010, "Wrong size on PC_Lobby_C_GetKickedPlayerVoted");
static_assert(offsetof(PC_Lobby_C_GetKickedPlayerVoted, KickplayerAlreadyVote) == 0x000000, "Member 'PC_Lobby_C_GetKickedPlayerVoted::KickplayerAlreadyVote' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetMenuSettings
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_GetMenuSettings final
{
public:
	class UBP_MenuControllerComponent_C*          Bp_MenuController;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetMenuSettings) == 0x000008, "Wrong alignment on PC_Lobby_C_GetMenuSettings");
static_assert(sizeof(PC_Lobby_C_GetMenuSettings) == 0x000008, "Wrong size on PC_Lobby_C_GetMenuSettings");
static_assert(offsetof(PC_Lobby_C_GetMenuSettings, Bp_MenuController) == 0x000000, "Member 'PC_Lobby_C_GetMenuSettings::Bp_MenuController' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_GetMutePlayer final
{
public:
	TArray<class FString>                         MutePlayer;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Lobby_C_GetMutePlayer) == 0x000008, "Wrong alignment on PC_Lobby_C_GetMutePlayer");
static_assert(sizeof(PC_Lobby_C_GetMutePlayer) == 0x000010, "Wrong size on PC_Lobby_C_GetMutePlayer");
static_assert(offsetof(PC_Lobby_C_GetMutePlayer, MutePlayer) == 0x000000, "Member 'PC_Lobby_C_GetMutePlayer::MutePlayer' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetNewRank
// 0x0060 (0x0060 - 0x0000)
struct PC_Lobby_C_GetNewRank final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(Parm, OutParm)
	class UTexture2D*                             Image;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RankScore_0;                                       // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankPosition;                                      // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankDivision;                                      // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PreviousRankProgress;                              // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RankProgress;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewRank_;                                          // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Color;                                             // 0x0044(0x0014)(Parm, OutParm)
	int32                                         Rank_Integer;                                      // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetNewRank) == 0x000008, "Wrong alignment on PC_Lobby_C_GetNewRank");
static_assert(sizeof(PC_Lobby_C_GetNewRank) == 0x000060, "Wrong size on PC_Lobby_C_GetNewRank");
static_assert(offsetof(PC_Lobby_C_GetNewRank, Name_0) == 0x000000, "Member 'PC_Lobby_C_GetNewRank::Name_0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, Image) == 0x000018, "Member 'PC_Lobby_C_GetNewRank::Image' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, RankScore_0) == 0x000020, "Member 'PC_Lobby_C_GetNewRank::RankScore_0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, RankPosition) == 0x000024, "Member 'PC_Lobby_C_GetNewRank::RankPosition' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, RankDivision) == 0x000028, "Member 'PC_Lobby_C_GetNewRank::RankDivision' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, PreviousRankProgress) == 0x000030, "Member 'PC_Lobby_C_GetNewRank::PreviousRankProgress' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, RankProgress) == 0x000038, "Member 'PC_Lobby_C_GetNewRank::RankProgress' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, NewRank_) == 0x000040, "Member 'PC_Lobby_C_GetNewRank::NewRank_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, Color) == 0x000044, "Member 'PC_Lobby_C_GetNewRank::Color' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetNewRank, Rank_Integer) == 0x000058, "Member 'PC_Lobby_C_GetNewRank::Rank_Integer' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetPlayerConnected
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_GetPlayerConnected final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerConnected;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Lobby_C_GetPlayerConnected) == 0x000008, "Wrong alignment on PC_Lobby_C_GetPlayerConnected");
static_assert(sizeof(PC_Lobby_C_GetPlayerConnected) == 0x000010, "Wrong size on PC_Lobby_C_GetPlayerConnected");
static_assert(offsetof(PC_Lobby_C_GetPlayerConnected, PlayerConnected) == 0x000000, "Member 'PC_Lobby_C_GetPlayerConnected::PlayerConnected' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetPlayerKickVote
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_GetPlayerKickVote final
{
public:
	TArray<struct FSTR_KickVote>                  KickVotePlayer;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Lobby_C_GetPlayerKickVote) == 0x000008, "Wrong alignment on PC_Lobby_C_GetPlayerKickVote");
static_assert(sizeof(PC_Lobby_C_GetPlayerKickVote) == 0x000010, "Wrong size on PC_Lobby_C_GetPlayerKickVote");
static_assert(offsetof(PC_Lobby_C_GetPlayerKickVote, KickVotePlayer) == 0x000000, "Member 'PC_Lobby_C_GetPlayerKickVote::KickVotePlayer' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetPlayerSkin
// 0x02E8 (0x02E8 - 0x0000)
struct PC_Lobby_C_GetPlayerSkin final
{
public:
	struct FSTR_TEST                              Player_Skin;                                       // 0x0000(0x02E0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetPlayerSkin) == 0x000008, "Wrong alignment on PC_Lobby_C_GetPlayerSkin");
static_assert(sizeof(PC_Lobby_C_GetPlayerSkin) == 0x0002E8, "Wrong size on PC_Lobby_C_GetPlayerSkin");
static_assert(offsetof(PC_Lobby_C_GetPlayerSkin, Player_Skin) == 0x000000, "Member 'PC_Lobby_C_GetPlayerSkin::Player_Skin' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetPlayerSkin, Valid_) == 0x0002E0, "Member 'PC_Lobby_C_GetPlayerSkin::Valid_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetRagdollSystem
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_GetRagdollSystem final
{
public:
	class UWW_RagdollSystem_C*                    Ragdoll_System;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetRagdollSystem) == 0x000008, "Wrong alignment on PC_Lobby_C_GetRagdollSystem");
static_assert(sizeof(PC_Lobby_C_GetRagdollSystem) == 0x000008, "Wrong size on PC_Lobby_C_GetRagdollSystem");
static_assert(offsetof(PC_Lobby_C_GetRagdollSystem, Ragdoll_System) == 0x000000, "Member 'PC_Lobby_C_GetRagdollSystem::Ragdoll_System' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetReady?
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_GetReady_ final
{
public:
	bool                                          IsReady_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetReady_) == 0x000001, "Wrong alignment on PC_Lobby_C_GetReady_");
static_assert(sizeof(PC_Lobby_C_GetReady_) == 0x000001, "Wrong size on PC_Lobby_C_GetReady_");
static_assert(offsetof(PC_Lobby_C_GetReady_, IsReady_) == 0x000000, "Member 'PC_Lobby_C_GetReady_::IsReady_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetServerSteamID
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_GetServerSteamID final
{
public:
	class FString                                 SteamID_0;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetServerSteamID) == 0x000008, "Wrong alignment on PC_Lobby_C_GetServerSteamID");
static_assert(sizeof(PC_Lobby_C_GetServerSteamID) == 0x000010, "Wrong size on PC_Lobby_C_GetServerSteamID");
static_assert(offsetof(PC_Lobby_C_GetServerSteamID, SteamID_0) == 0x000000, "Member 'PC_Lobby_C_GetServerSteamID::SteamID_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetStarterWeapons
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_GetStarterWeapons final
{
public:
	TArray<struct FSTR_Actor>                     Weapons;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Lobby_C_GetStarterWeapons) == 0x000008, "Wrong alignment on PC_Lobby_C_GetStarterWeapons");
static_assert(sizeof(PC_Lobby_C_GetStarterWeapons) == 0x000010, "Wrong size on PC_Lobby_C_GetStarterWeapons");
static_assert(offsetof(PC_Lobby_C_GetStarterWeapons, Weapons) == 0x000000, "Member 'PC_Lobby_C_GetStarterWeapons::Weapons' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_GetSteamID final
{
public:
	class FString                                 SteamID_0;                                         // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetSteamID) == 0x000008, "Wrong alignment on PC_Lobby_C_GetSteamID");
static_assert(sizeof(PC_Lobby_C_GetSteamID) == 0x000010, "Wrong size on PC_Lobby_C_GetSteamID");
static_assert(offsetof(PC_Lobby_C_GetSteamID, SteamID_0) == 0x000000, "Member 'PC_Lobby_C_GetSteamID::SteamID_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetSurvivorStatuts
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_GetSurvivorStatuts final
{
public:
	class UWW_SurvivorStatus_C*                   SurvivorComponant;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetSurvivorStatuts) == 0x000008, "Wrong alignment on PC_Lobby_C_GetSurvivorStatuts");
static_assert(sizeof(PC_Lobby_C_GetSurvivorStatuts) == 0x000008, "Wrong size on PC_Lobby_C_GetSurvivorStatuts");
static_assert(offsetof(PC_Lobby_C_GetSurvivorStatuts, SurvivorComponant) == 0x000000, "Member 'PC_Lobby_C_GetSurvivorStatuts::SurvivorComponant' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetTeam
// 0x0098 (0x0098 - 0x0000)
struct PC_Lobby_C_GetTeam final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0050(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_GetTeam) == 0x000008, "Wrong alignment on PC_Lobby_C_GetTeam");
static_assert(sizeof(PC_Lobby_C_GetTeam) == 0x000098, "Wrong size on PC_Lobby_C_GetTeam");
static_assert(offsetof(PC_Lobby_C_GetTeam, Team_0) == 0x000000, "Member 'PC_Lobby_C_GetTeam::Team_0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'PC_Lobby_C_GetTeam::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PC_Lobby_C_GetTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'PC_Lobby_C_GetTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'PC_Lobby_C_GetTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'PC_Lobby_C_GetTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'PC_Lobby_C_GetTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, K2Node_DynamicCast_AsBodycam_Interface) == 0x000020, "Member 'PC_Lobby_C_GetTeam::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PC_Lobby_C_GetTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_GetPlayerConnected_PlayerConnected) == 0x000038, "Member 'PC_Lobby_C_GetTeam::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'PC_Lobby_C_GetTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_Array_Get_Item) == 0x000050, "Member 'PC_Lobby_C_GetTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'PC_Lobby_C_GetTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'PC_Lobby_C_GetTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeam, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000092, "Member 'PC_Lobby_C_GetTeam::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetTeamList
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_GetTeamList final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Info;                                              // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Lobby_C_GetTeamList) == 0x000008, "Wrong alignment on PC_Lobby_C_GetTeamList");
static_assert(sizeof(PC_Lobby_C_GetTeamList) == 0x000018, "Wrong size on PC_Lobby_C_GetTeamList");
static_assert(offsetof(PC_Lobby_C_GetTeamList, Team_0) == 0x000000, "Member 'PC_Lobby_C_GetTeamList::Team_0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_GetTeamList, Info) == 0x000008, "Member 'PC_Lobby_C_GetTeamList::Info' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.GetTopScore
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_GetTopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScore;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Lobby_C_GetTopScore) == 0x000008, "Wrong alignment on PC_Lobby_C_GetTopScore");
static_assert(sizeof(PC_Lobby_C_GetTopScore) == 0x000010, "Wrong size on PC_Lobby_C_GetTopScore");
static_assert(offsetof(PC_Lobby_C_GetTopScore, TopScore) == 0x000000, "Member 'PC_Lobby_C_GetTopScore::TopScore' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Init SteamID (Server)
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_Init_SteamID__Server_ final
{
public:
	class FString                                 SteamID_0;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	E_Team                                        Team_0;                                            // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Init_SteamID__Server_) == 0x000008, "Wrong alignment on PC_Lobby_C_Init_SteamID__Server_");
static_assert(sizeof(PC_Lobby_C_Init_SteamID__Server_) == 0x000018, "Wrong size on PC_Lobby_C_Init_SteamID__Server_");
static_assert(offsetof(PC_Lobby_C_Init_SteamID__Server_, SteamID_0) == 0x000000, "Member 'PC_Lobby_C_Init_SteamID__Server_::SteamID_0' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_Init_SteamID__Server_, Team_0) == 0x000010, "Member 'PC_Lobby_C_Init_SteamID__Server_::Team_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.InpActEvt_F1_K2Node_InputKeyEvent_3
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_InpActEvt_F1_K2Node_InputKeyEvent_3 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_InpActEvt_F1_K2Node_InputKeyEvent_3) == 0x000008, "Wrong alignment on PC_Lobby_C_InpActEvt_F1_K2Node_InputKeyEvent_3");
static_assert(sizeof(PC_Lobby_C_InpActEvt_F1_K2Node_InputKeyEvent_3) == 0x000018, "Wrong size on PC_Lobby_C_InpActEvt_F1_K2Node_InputKeyEvent_3");
static_assert(offsetof(PC_Lobby_C_InpActEvt_F1_K2Node_InputKeyEvent_3, Key) == 0x000000, "Member 'PC_Lobby_C_InpActEvt_F1_K2Node_InputKeyEvent_3::Key' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.InpActEvt_F2_K2Node_InputKeyEvent_2
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_InpActEvt_F2_K2Node_InputKeyEvent_2 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_InpActEvt_F2_K2Node_InputKeyEvent_2) == 0x000008, "Wrong alignment on PC_Lobby_C_InpActEvt_F2_K2Node_InputKeyEvent_2");
static_assert(sizeof(PC_Lobby_C_InpActEvt_F2_K2Node_InputKeyEvent_2) == 0x000018, "Wrong size on PC_Lobby_C_InpActEvt_F2_K2Node_InputKeyEvent_2");
static_assert(offsetof(PC_Lobby_C_InpActEvt_F2_K2Node_InputKeyEvent_2, Key) == 0x000000, "Member 'PC_Lobby_C_InpActEvt_F2_K2Node_InputKeyEvent_2::Key' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'PC_Lobby_C_InpActEvt_IA_PushToTalk_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.InpActEvt_V_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_0");
static_assert(sizeof(PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_0");
static_assert(offsetof(PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.InpActEvt_V_K2Node_InputKeyEvent_1
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_1 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_1) == 0x000008, "Wrong alignment on PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_1");
static_assert(sizeof(PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_1) == 0x000018, "Wrong size on PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_1");
static_assert(offsetof(PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_1, Key) == 0x000000, "Member 'PC_Lobby_C_InpActEvt_V_K2Node_InputKeyEvent_1::Key' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_IsDead final
{
public:
	bool                                          Dead_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_IsDead) == 0x000001, "Wrong alignment on PC_Lobby_C_IsDead");
static_assert(sizeof(PC_Lobby_C_IsDead) == 0x000001, "Wrong size on PC_Lobby_C_IsDead");
static_assert(offsetof(PC_Lobby_C_IsDead, Dead_) == 0x000000, "Member 'PC_Lobby_C_IsDead::Dead_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.IsDestroyabe?
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_IsDestroyabe_ final
{
public:
	bool                                          Destroyable_;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_IsDestroyabe_) == 0x000001, "Wrong alignment on PC_Lobby_C_IsDestroyabe_");
static_assert(sizeof(PC_Lobby_C_IsDestroyabe_) == 0x000001, "Wrong size on PC_Lobby_C_IsDestroyabe_");
static_assert(offsetof(PC_Lobby_C_IsDestroyabe_, Destroyable_) == 0x000000, "Member 'PC_Lobby_C_IsDestroyabe_::Destroyable_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.IsReady?
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_IsReady_ final
{
public:
	bool                                          IsReady__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_IsReady_) == 0x000001, "Wrong alignment on PC_Lobby_C_IsReady_");
static_assert(sizeof(PC_Lobby_C_IsReady_) == 0x000001, "Wrong size on PC_Lobby_C_IsReady_");
static_assert(offsetof(PC_Lobby_C_IsReady_, IsReady__0) == 0x000000, "Member 'PC_Lobby_C_IsReady_::IsReady__0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.IsStress
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_IsStress final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_IsStress) == 0x000001, "Wrong alignment on PC_Lobby_C_IsStress");
static_assert(sizeof(PC_Lobby_C_IsStress) == 0x000001, "Wrong size on PC_Lobby_C_IsStress");
static_assert(offsetof(PC_Lobby_C_IsStress, Yes_) == 0x000000, "Member 'PC_Lobby_C_IsStress::Yes_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.IsTalking?
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_IsTalking_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_IsTalking_) == 0x000001, "Wrong alignment on PC_Lobby_C_IsTalking_");
static_assert(sizeof(PC_Lobby_C_IsTalking_) == 0x000001, "Wrong size on PC_Lobby_C_IsTalking_");
static_assert(offsetof(PC_Lobby_C_IsTalking_, IsTalking__0) == 0x000000, "Member 'PC_Lobby_C_IsTalking_::IsTalking__0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.IsTalking? (Server)
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_IsTalking___Server_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_IsTalking___Server_) == 0x000001, "Wrong alignment on PC_Lobby_C_IsTalking___Server_");
static_assert(sizeof(PC_Lobby_C_IsTalking___Server_) == 0x000001, "Wrong size on PC_Lobby_C_IsTalking___Server_");
static_assert(offsetof(PC_Lobby_C_IsTalking___Server_, IsTalking__0) == 0x000000, "Member 'PC_Lobby_C_IsTalking___Server_::IsTalking__0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Kick Player (server)
// 0x0048 (0x0048 - 0x0000)
struct PC_Lobby_C_Kick_Player__server_ final
{
public:
	struct FSTR_KickVote                          Player_info;                                       // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Kick_Player__server_) == 0x000008, "Wrong alignment on PC_Lobby_C_Kick_Player__server_");
static_assert(sizeof(PC_Lobby_C_Kick_Player__server_) == 0x000048, "Wrong size on PC_Lobby_C_Kick_Player__server_");
static_assert(offsetof(PC_Lobby_C_Kick_Player__server_, Player_info) == 0x000000, "Member 'PC_Lobby_C_Kick_Player__server_::Player_info' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Kick?
// 0x0040 (0x0040 - 0x0000)
struct PC_Lobby_C_Kick_ final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Kick_) == 0x000008, "Wrong alignment on PC_Lobby_C_Kick_");
static_assert(sizeof(PC_Lobby_C_Kick_) == 0x000040, "Wrong size on PC_Lobby_C_Kick_");
static_assert(offsetof(PC_Lobby_C_Kick_, Target) == 0x000000, "Member 'PC_Lobby_C_Kick_::Target' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.KickPlayer
// 0x0048 (0x0048 - 0x0000)
struct PC_Lobby_C_KickPlayer final
{
public:
	struct FSTR_KickVote                          PlayerInfo;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_KickPlayer) == 0x000008, "Wrong alignment on PC_Lobby_C_KickPlayer");
static_assert(sizeof(PC_Lobby_C_KickPlayer) == 0x000048, "Wrong size on PC_Lobby_C_KickPlayer");
static_assert(offsetof(PC_Lobby_C_KickPlayer, PlayerInfo) == 0x000000, "Member 'PC_Lobby_C_KickPlayer::PlayerInfo' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.KickPlayer (Client)
// 0x0048 (0x0048 - 0x0000)
struct PC_Lobby_C_KickPlayer__Client_ final
{
public:
	struct FSTR_KickVote                          Player_info;                                       // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_KickPlayer__Client_) == 0x000008, "Wrong alignment on PC_Lobby_C_KickPlayer__Client_");
static_assert(sizeof(PC_Lobby_C_KickPlayer__Client_) == 0x000048, "Wrong size on PC_Lobby_C_KickPlayer__Client_");
static_assert(offsetof(PC_Lobby_C_KickPlayer__Client_, Player_info) == 0x000000, "Member 'PC_Lobby_C_KickPlayer__Client_::Player_info' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.KickVote
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_KickVote final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_KickVote) == 0x000001, "Wrong alignment on PC_Lobby_C_KickVote");
static_assert(sizeof(PC_Lobby_C_KickVote) == 0x000001, "Wrong size on PC_Lobby_C_KickVote");
static_assert(offsetof(PC_Lobby_C_KickVote, Yes_) == 0x000000, "Member 'PC_Lobby_C_KickVote::Yes_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.KickVote (Server)
// 0x0048 (0x0048 - 0x0000)
struct PC_Lobby_C_KickVote__Server_ final
{
public:
	struct FSTR_PCInfo                            Player_info;                                       // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_KickVote__Server_) == 0x000008, "Wrong alignment on PC_Lobby_C_KickVote__Server_");
static_assert(sizeof(PC_Lobby_C_KickVote__Server_) == 0x000048, "Wrong size on PC_Lobby_C_KickVote__Server_");
static_assert(offsetof(PC_Lobby_C_KickVote__Server_, Player_info) == 0x000000, "Member 'PC_Lobby_C_KickVote__Server_::Player_info' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_KickVote__Server_, Yes_) == 0x000040, "Member 'PC_Lobby_C_KickVote__Server_::Yes_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.MuteID
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_MuteID final
{
public:
	class FString                                 SteamID_0;                                         // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_MuteID) == 0x000008, "Wrong alignment on PC_Lobby_C_MuteID");
static_assert(sizeof(PC_Lobby_C_MuteID) == 0x000010, "Wrong size on PC_Lobby_C_MuteID");
static_assert(offsetof(PC_Lobby_C_MuteID, SteamID_0) == 0x000000, "Member 'PC_Lobby_C_MuteID::SteamID_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.NewKickVote
// 0x0040 (0x0040 - 0x0000)
struct PC_Lobby_C_NewKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_NewKickVote) == 0x000008, "Wrong alignment on PC_Lobby_C_NewKickVote");
static_assert(sizeof(PC_Lobby_C_NewKickVote) == 0x000040, "Wrong size on PC_Lobby_C_NewKickVote");
static_assert(offsetof(PC_Lobby_C_NewKickVote, Target) == 0x000000, "Member 'PC_Lobby_C_NewKickVote::Target' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.On Try selectTeam
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_On_Try_selectTeam final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_On_Try_selectTeam) == 0x000001, "Wrong alignment on PC_Lobby_C_On_Try_selectTeam");
static_assert(sizeof(PC_Lobby_C_On_Try_selectTeam) == 0x000001, "Wrong size on PC_Lobby_C_On_Try_selectTeam");
static_assert(offsetof(PC_Lobby_C_On_Try_selectTeam, Team_0) == 0x000000, "Member 'PC_Lobby_C_On_Try_selectTeam::Team_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.OnCallback_14E63BBC438A94FA691929ABFADBEF74
// 0x0020 (0x0020 - 0x0000)
struct PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74 final
{
public:
	struct FLeaderboardScoresDownloadedForUsers   Data;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bWasSuccessful;                                    // 0x0018(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74) == 0x000008, "Wrong alignment on PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74");
static_assert(sizeof(PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74) == 0x000020, "Wrong size on PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74");
static_assert(offsetof(PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74, Data) == 0x000000, "Member 'PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74::Data' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74, bWasSuccessful) == 0x000018, "Member 'PC_Lobby_C_OnCallback_14E63BBC438A94FA691929ABFADBEF74::bWasSuccessful' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D final
{
public:
	struct FLeaderboardFindResult                 Data;                                              // 0x0000(0x0010)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, NoDestructor)
	bool                                          bWasSuccessful;                                    // 0x0010(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D) == 0x000008, "Wrong alignment on PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D");
static_assert(sizeof(PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D) == 0x000018, "Wrong size on PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D");
static_assert(offsetof(PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D, Data) == 0x000000, "Member 'PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D::Data' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D, bWasSuccessful) == 0x000010, "Member 'PC_Lobby_C_OnCallback_D2DBA09F41E6113C2A70CF9D8A11AC3D::bWasSuccessful' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.OnPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_OnPlayerDeath final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_OnPlayerDeath) == 0x000008, "Wrong alignment on PC_Lobby_C_OnPlayerDeath");
static_assert(sizeof(PC_Lobby_C_OnPlayerDeath) == 0x000008, "Wrong size on PC_Lobby_C_OnPlayerDeath");
static_assert(offsetof(PC_Lobby_C_OnPlayerDeath, PC) == 0x000000, "Member 'PC_Lobby_C_OnPlayerDeath::PC' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.OnRep_SteamID
// 0x0078 (0x0078 - 0x0000)
struct PC_Lobby_C_OnRep_SteamID final
{
public:
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo;                      // 0x0028(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby;                     // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_OnRep_SteamID) == 0x000008, "Wrong alignment on PC_Lobby_C_OnRep_SteamID");
static_assert(sizeof(PC_Lobby_C_OnRep_SteamID) == 0x000078, "Wrong size on PC_Lobby_C_OnRep_SteamID");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, CallFunc_GetGameInstance_ReturnValue) == 0x000000, "Member 'PC_Lobby_C_OnRep_SteamID::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'PC_Lobby_C_OnRep_SteamID::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, K2Node_DynamicCast_AsBodycam_GI) == 0x000010, "Member 'PC_Lobby_C_OnRep_SteamID::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PC_Lobby_C_OnRep_SteamID::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, CallFunc_GetGameState_ReturnValue) == 0x000020, "Member 'PC_Lobby_C_OnRep_SteamID::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, K2Node_MakeStruct_STR_PCInfo) == 0x000028, "Member 'PC_Lobby_C_OnRep_SteamID::K2Node_MakeStruct_STR_PCInfo' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, K2Node_DynamicCast_AsGT_Lobby) == 0x000068, "Member 'PC_Lobby_C_OnRep_SteamID::K2Node_DynamicCast_AsGT_Lobby' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, K2Node_DynamicCast_bSuccess_1) == 0x000070, "Member 'PC_Lobby_C_OnRep_SteamID::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_OnRep_SteamID, CallFunc_Array_Add_ReturnValue) == 0x000074, "Member 'PC_Lobby_C_OnRep_SteamID::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.OnTrySelectTeam
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_OnTrySelectTeam final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_OnTrySelectTeam) == 0x000001, "Wrong alignment on PC_Lobby_C_OnTrySelectTeam");
static_assert(sizeof(PC_Lobby_C_OnTrySelectTeam) == 0x000001, "Wrong size on PC_Lobby_C_OnTrySelectTeam");
static_assert(offsetof(PC_Lobby_C_OnTrySelectTeam, Team_0) == 0x000000, "Member 'PC_Lobby_C_OnTrySelectTeam::Team_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.RandomSpawn
// 0x00F0 (0x00F0 - 0x0000)
struct PC_Lobby_C_RandomSpawn final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(ConstParm, Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RandomIntegerInRange_ReturnValue;         // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_88[0x8];                                       // 0x0088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_RandomSpawn) == 0x000010, "Wrong alignment on PC_Lobby_C_RandomSpawn");
static_assert(sizeof(PC_Lobby_C_RandomSpawn) == 0x0000F0, "Wrong size on PC_Lobby_C_RandomSpawn");
static_assert(offsetof(PC_Lobby_C_RandomSpawn, ReturnValue) == 0x000000, "Member 'PC_Lobby_C_RandomSpawn::ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_RandomSpawn, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'PC_Lobby_C_RandomSpawn::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_RandomSpawn, CallFunc_Array_Length_ReturnValue) == 0x000070, "Member 'PC_Lobby_C_RandomSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_RandomSpawn, CallFunc_Subtract_IntInt_ReturnValue) == 0x000074, "Member 'PC_Lobby_C_RandomSpawn::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_RandomSpawn, CallFunc_RandomIntegerInRange_ReturnValue) == 0x000078, "Member 'PC_Lobby_C_RandomSpawn::CallFunc_RandomIntegerInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_RandomSpawn, CallFunc_Array_Get_Item) == 0x000080, "Member 'PC_Lobby_C_RandomSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_RandomSpawn, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'PC_Lobby_C_RandomSpawn::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.ReceiveEndPlay
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_ReceiveEndPlay final
{
public:
	EEndPlayReason                                EndPlayReason;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_ReceiveEndPlay) == 0x000001, "Wrong alignment on PC_Lobby_C_ReceiveEndPlay");
static_assert(sizeof(PC_Lobby_C_ReceiveEndPlay) == 0x000001, "Wrong size on PC_Lobby_C_ReceiveEndPlay");
static_assert(offsetof(PC_Lobby_C_ReceiveEndPlay, EndPlayReason) == 0x000000, "Member 'PC_Lobby_C_ReceiveEndPlay::EndPlayReason' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_ReceivePossess) == 0x000008, "Wrong alignment on PC_Lobby_C_ReceivePossess");
static_assert(sizeof(PC_Lobby_C_ReceivePossess) == 0x000008, "Wrong size on PC_Lobby_C_ReceivePossess");
static_assert(offsetof(PC_Lobby_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'PC_Lobby_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.ServerTravel
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_ServerTravel final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_ServerTravel) == 0x000008, "Wrong alignment on PC_Lobby_C_ServerTravel");
static_assert(sizeof(PC_Lobby_C_ServerTravel) == 0x000008, "Wrong size on PC_Lobby_C_ServerTravel");
static_assert(offsetof(PC_Lobby_C_ServerTravel, Delay) == 0x000000, "Member 'PC_Lobby_C_ServerTravel::Delay' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.SetActiveTESTVOIP
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_SetActiveTESTVOIP final
{
public:
	bool                                          bNewActive;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_SetActiveTESTVOIP) == 0x000001, "Wrong alignment on PC_Lobby_C_SetActiveTESTVOIP");
static_assert(sizeof(PC_Lobby_C_SetActiveTESTVOIP) == 0x000001, "Wrong size on PC_Lobby_C_SetActiveTESTVOIP");
static_assert(offsetof(PC_Lobby_C_SetActiveTESTVOIP, bNewActive) == 0x000000, "Member 'PC_Lobby_C_SetActiveTESTVOIP::bNewActive' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Slomo
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_Slomo final
{
public:
	double                                        Slomo_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Slomo) == 0x000008, "Wrong alignment on PC_Lobby_C_Slomo");
static_assert(sizeof(PC_Lobby_C_Slomo) == 0x000008, "Wrong size on PC_Lobby_C_Slomo");
static_assert(offsetof(PC_Lobby_C_Slomo, Slomo_0) == 0x000000, "Member 'PC_Lobby_C_Slomo::Slomo_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Spawn Character (Server)
// 0x0060 (0x0060 - 0x0000)
struct PC_Lobby_C_Spawn_Character__Server_ final
{
public:
	struct FTransform                             SpawnTransform;                                    // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Spawn_Character__Server_) == 0x000010, "Wrong alignment on PC_Lobby_C_Spawn_Character__Server_");
static_assert(sizeof(PC_Lobby_C_Spawn_Character__Server_) == 0x000060, "Wrong size on PC_Lobby_C_Spawn_Character__Server_");
static_assert(offsetof(PC_Lobby_C_Spawn_Character__Server_, SpawnTransform) == 0x000000, "Member 'PC_Lobby_C_Spawn_Character__Server_::SpawnTransform' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Talk
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_Talk final
{
public:
	bool                                          IsTalking_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Talk) == 0x000001, "Wrong alignment on PC_Lobby_C_Talk");
static_assert(sizeof(PC_Lobby_C_Talk) == 0x000001, "Wrong size on PC_Lobby_C_Talk");
static_assert(offsetof(PC_Lobby_C_Talk, IsTalking_0) == 0x000000, "Member 'PC_Lobby_C_Talk::IsTalking_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Update ControlRotation
// 0x0018 (0x0018 - 0x0000)
struct PC_Lobby_C_Update_ControlRotation final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PC_Lobby_C_Update_ControlRotation) == 0x000008, "Wrong alignment on PC_Lobby_C_Update_ControlRotation");
static_assert(sizeof(PC_Lobby_C_Update_ControlRotation) == 0x000018, "Wrong size on PC_Lobby_C_Update_ControlRotation");
static_assert(offsetof(PC_Lobby_C_Update_ControlRotation, NewRotation) == 0x000000, "Member 'PC_Lobby_C_Update_ControlRotation::NewRotation' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Update Death
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_Update_Death final
{
public:
	int32                                         Death;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Update_Death) == 0x000004, "Wrong alignment on PC_Lobby_C_Update_Death");
static_assert(sizeof(PC_Lobby_C_Update_Death) == 0x000008, "Wrong size on PC_Lobby_C_Update_Death");
static_assert(offsetof(PC_Lobby_C_Update_Death, Death) == 0x000000, "Member 'PC_Lobby_C_Update_Death::Death' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_Update_Death, Set) == 0x000004, "Member 'PC_Lobby_C_Update_Death::Set' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Update Kill
// 0x0004 (0x0004 - 0x0000)
struct PC_Lobby_C_Update_Kill final
{
public:
	int32                                         Kill_;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Update_Kill) == 0x000004, "Wrong alignment on PC_Lobby_C_Update_Kill");
static_assert(sizeof(PC_Lobby_C_Update_Kill) == 0x000004, "Wrong size on PC_Lobby_C_Update_Kill");
static_assert(offsetof(PC_Lobby_C_Update_Kill, Kill_) == 0x000000, "Member 'PC_Lobby_C_Update_Kill::Kill_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.Update Team Selection (HUD)
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_Update_Team_Selection__HUD_ final
{
public:
	bool                                          Remove_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_Update_Team_Selection__HUD_) == 0x000001, "Wrong alignment on PC_Lobby_C_Update_Team_Selection__HUD_");
static_assert(sizeof(PC_Lobby_C_Update_Team_Selection__HUD_) == 0x000001, "Wrong size on PC_Lobby_C_Update_Team_Selection__HUD_");
static_assert(offsetof(PC_Lobby_C_Update_Team_Selection__HUD_, Remove_) == 0x000000, "Member 'PC_Lobby_C_Update_Team_Selection__HUD_::Remove_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateGamemode
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_UpdateGamemode final
{
public:
	EGameMode                                     GameMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateGamemode) == 0x000001, "Wrong alignment on PC_Lobby_C_UpdateGamemode");
static_assert(sizeof(PC_Lobby_C_UpdateGamemode) == 0x000001, "Wrong size on PC_Lobby_C_UpdateGamemode");
static_assert(offsetof(PC_Lobby_C_UpdateGamemode, GameMode) == 0x000000, "Member 'PC_Lobby_C_UpdateGamemode::GameMode' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateKickVote
// 0x0048 (0x0048 - 0x0000)
struct PC_Lobby_C_UpdateKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateKickVote) == 0x000008, "Wrong alignment on PC_Lobby_C_UpdateKickVote");
static_assert(sizeof(PC_Lobby_C_UpdateKickVote) == 0x000048, "Wrong size on PC_Lobby_C_UpdateKickVote");
static_assert(offsetof(PC_Lobby_C_UpdateKickVote, Target) == 0x000000, "Member 'PC_Lobby_C_UpdateKickVote::Target' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_UpdateKickVote, Yes_) == 0x000040, "Member 'PC_Lobby_C_UpdateKickVote::Yes_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateMapSelection
// 0x000C (0x000C - 0x0000)
struct PC_Lobby_C_UpdateMapSelection final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateMapSelection) == 0x000004, "Wrong alignment on PC_Lobby_C_UpdateMapSelection");
static_assert(sizeof(PC_Lobby_C_UpdateMapSelection) == 0x00000C, "Wrong size on PC_Lobby_C_UpdateMapSelection");
static_assert(offsetof(PC_Lobby_C_UpdateMapSelection, Selected_Level_Name) == 0x000000, "Member 'PC_Lobby_C_UpdateMapSelection::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_UpdateMapSelection, Index_0) == 0x000008, "Member 'PC_Lobby_C_UpdateMapSelection::Index_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateScore
// 0x0008 (0x0008 - 0x0000)
struct PC_Lobby_C_UpdateScore final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateScore) == 0x000004, "Wrong alignment on PC_Lobby_C_UpdateScore");
static_assert(sizeof(PC_Lobby_C_UpdateScore) == 0x000008, "Wrong size on PC_Lobby_C_UpdateScore");
static_assert(offsetof(PC_Lobby_C_UpdateScore, Score) == 0x000000, "Member 'PC_Lobby_C_UpdateScore::Score' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateTeam (Client)
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_UpdateTeam__Client_ final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateTeam__Client_) == 0x000001, "Wrong alignment on PC_Lobby_C_UpdateTeam__Client_");
static_assert(sizeof(PC_Lobby_C_UpdateTeam__Client_) == 0x000001, "Wrong size on PC_Lobby_C_UpdateTeam__Client_");
static_assert(offsetof(PC_Lobby_C_UpdateTeam__Client_, Team_0) == 0x000000, "Member 'PC_Lobby_C_UpdateTeam__Client_::Team_0' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateTeamIndex (PlayerKilled)
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_UpdateTeamIndex__PlayerKilled_ final
{
public:
	E_Team                                        Team_PlayerKilled_;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateTeamIndex__PlayerKilled_) == 0x000004, "Wrong alignment on PC_Lobby_C_UpdateTeamIndex__PlayerKilled_");
static_assert(sizeof(PC_Lobby_C_UpdateTeamIndex__PlayerKilled_) == 0x000010, "Wrong size on PC_Lobby_C_UpdateTeamIndex__PlayerKilled_");
static_assert(offsetof(PC_Lobby_C_UpdateTeamIndex__PlayerKilled_, Team_PlayerKilled_) == 0x000000, "Member 'PC_Lobby_C_UpdateTeamIndex__PlayerKilled_::Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_UpdateTeamIndex__PlayerKilled_, MilitaryIndex) == 0x000004, "Member 'PC_Lobby_C_UpdateTeamIndex__PlayerKilled_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_UpdateTeamIndex__PlayerKilled_, TerroristIndex) == 0x000008, "Member 'PC_Lobby_C_UpdateTeamIndex__PlayerKilled_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_UpdateTeamIndex__PlayerKilled_, WiiningTeam) == 0x00000C, "Member 'PC_Lobby_C_UpdateTeamIndex__PlayerKilled_::WiiningTeam' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateTeamXP
// 0x0001 (0x0001 - 0x0000)
struct PC_Lobby_C_UpdateTeamXP final
{
public:
	bool                                          Win_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateTeamXP) == 0x000001, "Wrong alignment on PC_Lobby_C_UpdateTeamXP");
static_assert(sizeof(PC_Lobby_C_UpdateTeamXP) == 0x000001, "Wrong size on PC_Lobby_C_UpdateTeamXP");
static_assert(offsetof(PC_Lobby_C_UpdateTeamXP, Win_) == 0x000000, "Member 'PC_Lobby_C_UpdateTeamXP::Win_' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateTimer
// 0x0020 (0x0020 - 0x0000)
struct PC_Lobby_C_UpdateTimer final
{
public:
	double                                        TimeCount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PC_Lobby_C_UpdateTimer) == 0x000008, "Wrong alignment on PC_Lobby_C_UpdateTimer");
static_assert(sizeof(PC_Lobby_C_UpdateTimer) == 0x000020, "Wrong size on PC_Lobby_C_UpdateTimer");
static_assert(offsetof(PC_Lobby_C_UpdateTimer, TimeCount) == 0x000000, "Member 'PC_Lobby_C_UpdateTimer::TimeCount' has a wrong offset!");
static_assert(offsetof(PC_Lobby_C_UpdateTimer, NewParam) == 0x000008, "Member 'PC_Lobby_C_UpdateTimer::NewParam' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateWarning
// 0x0010 (0x0010 - 0x0000)
struct PC_Lobby_C_UpdateWarning final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateWarning) == 0x000008, "Wrong alignment on PC_Lobby_C_UpdateWarning");
static_assert(sizeof(PC_Lobby_C_UpdateWarning) == 0x000010, "Wrong size on PC_Lobby_C_UpdateWarning");
static_assert(offsetof(PC_Lobby_C_UpdateWarning, String) == 0x000000, "Member 'PC_Lobby_C_UpdateWarning::String' has a wrong offset!");

// Function PC_Lobby.PC_Lobby_C.UpdateXp
// 0x0004 (0x0004 - 0x0000)
struct PC_Lobby_C_UpdateXp final
{
public:
	int32                                         Xp;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Lobby_C_UpdateXp) == 0x000004, "Wrong alignment on PC_Lobby_C_UpdateXp");
static_assert(sizeof(PC_Lobby_C_UpdateXp) == 0x000004, "Wrong size on PC_Lobby_C_UpdateXp");
static_assert(offsetof(PC_Lobby_C_UpdateXp, Xp) == 0x000000, "Member 'PC_Lobby_C_UpdateXp::Xp' has a wrong offset!");

}

