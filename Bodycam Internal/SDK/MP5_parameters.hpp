#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Mp5

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function Mp5.Mp5_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct Mp5_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(Mp5_C_AnimGraph) == 0x000008, "Wrong alignment on Mp5_C_AnimGraph");
static_assert(sizeof(Mp5_C_AnimGraph) == 0x000010, "Wrong size on Mp5_C_AnimGraph");
static_assert(offsetof(Mp5_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'Mp5_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function Mp5.Mp5_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct Mp5_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mp5_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on Mp5_C_BlueprintUpdateAnimation");
static_assert(sizeof(Mp5_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on Mp5_C_BlueprintUpdateAnimation");
static_assert(offsetof(Mp5_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'Mp5_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function Mp5.Mp5_C.ExecuteUbergraph_Mp5
// 0x0030 (0x0030 - 0x0000)
struct Mp5_C_ExecuteUbergraph_Mp5 final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AWEP_C*                                 K2Node_Event_Wep;                                  // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mp5_C_ExecuteUbergraph_Mp5) == 0x000008, "Wrong alignment on Mp5_C_ExecuteUbergraph_Mp5");
static_assert(sizeof(Mp5_C_ExecuteUbergraph_Mp5) == 0x000030, "Wrong size on Mp5_C_ExecuteUbergraph_Mp5");
static_assert(offsetof(Mp5_C_ExecuteUbergraph_Mp5, EntryPoint) == 0x000000, "Member 'Mp5_C_ExecuteUbergraph_Mp5::EntryPoint' has a wrong offset!");
static_assert(offsetof(Mp5_C_ExecuteUbergraph_Mp5, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Mp5_C_ExecuteUbergraph_Mp5::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mp5_C_ExecuteUbergraph_Mp5, K2Node_Event_DeltaTimeX) == 0x000010, "Member 'Mp5_C_ExecuteUbergraph_Mp5::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(Mp5_C_ExecuteUbergraph_Mp5, K2Node_Event_Wep) == 0x000018, "Member 'Mp5_C_ExecuteUbergraph_Mp5::K2Node_Event_Wep' has a wrong offset!");
static_assert(offsetof(Mp5_C_ExecuteUbergraph_Mp5, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'Mp5_C_ExecuteUbergraph_Mp5::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Mp5_C_ExecuteUbergraph_Mp5, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'Mp5_C_ExecuteUbergraph_Mp5::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");

// Function Mp5.Mp5_C.Init Wep
// 0x0008 (0x0008 - 0x0000)
struct Mp5_C_Init_Wep final
{
public:
	class AWEP_C*                                 WEP;                                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Mp5_C_Init_Wep) == 0x000008, "Wrong alignment on Mp5_C_Init_Wep");
static_assert(sizeof(Mp5_C_Init_Wep) == 0x000008, "Wrong size on Mp5_C_Init_Wep");
static_assert(offsetof(Mp5_C_Init_Wep, WEP) == 0x000000, "Member 'Mp5_C_Init_Wep::WEP' has a wrong offset!");

}

