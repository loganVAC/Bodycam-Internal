#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Vhs

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SteamCorePro_structs.hpp"


namespace SDK::Params
{

// Function WBP_Vhs.WBP_Vhs_C.ExecuteUbergraph_WBP_Vhs
// 0x0138 (0x0138 - 0x0000)
struct WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDateTime                              CallFunc_UtcNow_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Year;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Month;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Day;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Hour;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Minute;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Second;                     // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakDateTime_Millisecond;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue;                   // 0x0030(0x0008)(NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0038(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0048(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0068(0x0018)()
	class FString                                 CallFunc_GetFriendPersonaName_ReturnValue;         // 0x0080(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0090(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x00A0(0x0018)()
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_2;           // 0x00C8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x00D8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x00E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x00F8(0x0018)()
	class FString                                 CallFunc_FL_GetProjectVersion_Version;             // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0120(0x0018)()
};
static_assert(alignof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs) == 0x000008, "Wrong alignment on WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs");
static_assert(sizeof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs) == 0x000138, "Wrong size on WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, EntryPoint) == 0x000000, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, K2Node_Event_IsDesignTime) == 0x000004, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_UtcNow_ReturnValue) == 0x000008, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_UtcNow_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_BreakDateTime_Year) == 0x000010, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_BreakDateTime_Year' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_BreakDateTime_Month) == 0x000014, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_BreakDateTime_Month' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_BreakDateTime_Day) == 0x000018, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_BreakDateTime_Day' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_BreakDateTime_Hour) == 0x00001C, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_BreakDateTime_Hour' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_BreakDateTime_Minute) == 0x000020, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_BreakDateTime_Minute' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_BreakDateTime_Second) == 0x000024, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_BreakDateTime_Second' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_BreakDateTime_Millisecond) == 0x000028, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_BreakDateTime_Millisecond' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_GetSteamID_ReturnValue) == 0x000030, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_GetSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Conv_IntToString_ReturnValue) == 0x000038, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_BreakSteamID_ReturnValue) == 0x000048, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Concat_StrStr_ReturnValue) == 0x000058, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Conv_StringToText_ReturnValue) == 0x000068, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_GetFriendPersonaName_ReturnValue) == 0x000080, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_GetFriendPersonaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000090, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0000A0, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Concat_StrStr_ReturnValue_1) == 0x0000B8, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Conv_IntToString_ReturnValue_2) == 0x0000C8, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Conv_IntToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Concat_StrStr_ReturnValue_2) == 0x0000D8, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Concat_StrStr_ReturnValue_3) == 0x0000E8, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Conv_StringToText_ReturnValue_2) == 0x0000F8, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_FL_GetProjectVersion_Version) == 0x000110, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_FL_GetProjectVersion_Version' has a wrong offset!");
static_assert(offsetof(WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000120, "Member 'WBP_Vhs_C_ExecuteUbergraph_WBP_Vhs::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");

// Function WBP_Vhs.WBP_Vhs_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Vhs_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Vhs_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Vhs_C_PreConstruct");
static_assert(sizeof(WBP_Vhs_C_PreConstruct) == 0x000001, "Wrong size on WBP_Vhs_C_PreConstruct");
static_assert(offsetof(WBP_Vhs_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Vhs_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

