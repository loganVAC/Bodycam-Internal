#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GM_Menu

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "SteamCorePro_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass GM_Menu.GM_Menu_C
// 0x00B8 (0x03E8 - 0x0330)
class AGM_Menu_C final : public AGameModeBase
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0330(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UMediaSoundComponent*                   MediaSound;                                        // 0x0338(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class UBP_MenuSystemGameModeComponent_C*      BP_MenuGameModeComponent;                          // 0x0340(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0348(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSteamID                               SteamID;                                           // 0x0350(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)
	class FString                                 Session_Name;                                      // 0x0358(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 IPCountry;                                         // 0x0368(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 Session_Password;                                  // 0x0378(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FName                                   Selected_Level_Name;                               // 0x0388(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Session_Max_Players;                               // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Session_Use_LAN;                                   // 0x0394(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bIsCreatingSession;                                // 0x0395(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_396[0x2];                                      // 0x0396(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        WaitingSoundRef;                                   // 0x0398(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Steam_ID;                                          // 0x03A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	TArray<class AController*>                    ConnectedPlayers;                                  // 0x03B0(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate, DisableEditOnInstance)
	int32                                         UniquePlayerID;                                    // 0x03C0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C4[0x4];                                      // 0x03C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            Exiting_Controller;                                // 0x03C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	class FText                                   Kick_Reason;                                       // 0x03D0(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)

public:
	void ExecuteUbergraph_GM_Menu(int32 EntryPoint);
	void HandleStartingNewPlayer(class APlayerController* NewPlayer);
	void K2_OnLogout(class AController* ExitingController);
	void K2_PostLogin(class APlayerController* NewPlayer);
	void LogoutEvent(class AController* ExitingController);
	void MSG_ChatGetConnectedPlayers(TArray<class AController*>* Players);
	void MSG_ChatGetPlayerID(int32* PlayerID);
	void MSG_ChatGetTeamID(int32* TeamID);
	void MSG_ChatGetUsername(bool* Success_, class FText* Username);
	void MSG_ChatRequestPlayerID(int32* PlayerID, bool* Success_);
	void ReceiveBeginPlay();
	void SendsSystemMessageToPlayers(const class FText& Message);
	void SetSessionSettings();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"GM_Menu_C">();
	}
	static class AGM_Menu_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AGM_Menu_C>();
	}
};
static_assert(alignof(AGM_Menu_C) == 0x000008, "Wrong alignment on AGM_Menu_C");
static_assert(sizeof(AGM_Menu_C) == 0x0003E8, "Wrong size on AGM_Menu_C");
static_assert(offsetof(AGM_Menu_C, UberGraphFrame) == 0x000330, "Member 'AGM_Menu_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, MediaSound) == 0x000338, "Member 'AGM_Menu_C::MediaSound' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, BP_MenuGameModeComponent) == 0x000340, "Member 'AGM_Menu_C::BP_MenuGameModeComponent' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, DefaultSceneRoot) == 0x000348, "Member 'AGM_Menu_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, SteamID) == 0x000350, "Member 'AGM_Menu_C::SteamID' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, Session_Name) == 0x000358, "Member 'AGM_Menu_C::Session_Name' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, IPCountry) == 0x000368, "Member 'AGM_Menu_C::IPCountry' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, Session_Password) == 0x000378, "Member 'AGM_Menu_C::Session_Password' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, Selected_Level_Name) == 0x000388, "Member 'AGM_Menu_C::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, Session_Max_Players) == 0x000390, "Member 'AGM_Menu_C::Session_Max_Players' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, Session_Use_LAN) == 0x000394, "Member 'AGM_Menu_C::Session_Use_LAN' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, bIsCreatingSession) == 0x000395, "Member 'AGM_Menu_C::bIsCreatingSession' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, WaitingSoundRef) == 0x000398, "Member 'AGM_Menu_C::WaitingSoundRef' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, Steam_ID) == 0x0003A0, "Member 'AGM_Menu_C::Steam_ID' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, ConnectedPlayers) == 0x0003B0, "Member 'AGM_Menu_C::ConnectedPlayers' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, UniquePlayerID) == 0x0003C0, "Member 'AGM_Menu_C::UniquePlayerID' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, Exiting_Controller) == 0x0003C8, "Member 'AGM_Menu_C::Exiting_Controller' has a wrong offset!");
static_assert(offsetof(AGM_Menu_C, Kick_Reason) == 0x0003D0, "Member 'AGM_Menu_C::Kick_Reason' has a wrong offset!");

}

