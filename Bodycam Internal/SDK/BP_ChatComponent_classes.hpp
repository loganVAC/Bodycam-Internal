#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_ChatComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_ChatComponent.BP_ChatComponent_C
// 0x0038 (0x00D8 - 0x00A0)
class UBP_ChatComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class APlayerController*                      ControllerRef;                                     // 0x00A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	int32                                         PlayerID;                                          // 0x00B0(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, RepNotify, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UW_MainChat_C*                          MainChatRef;                                       // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UW_PlayerList_C*                        PlayerLisrRef;                                     // 0x00C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         TeamID;                                            // 0x00C8(0x0004)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Attempt;                                           // 0x00CC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxProximityDistance;                              // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void AddCombatLog(const class FText& Message);
	void CallSetBlockedPlayer(bool Blocked_, const class FText& Username);
	void Client_GetPlayerIsOnline(bool PlayerOnline_, int32 ToPlayerID, const class FText& ToUsername);
	void Client_ReceivedMessage(const struct FS_MessageData& MessageData);
	void Client_RefreshTeam(int32 TeamID_0);
	void Client_RequestSendPrivateMessage(bool PlayerOnline_, int32 ToPlayerID, const class FText& ToUsername, const class FText& Message, const class FText& FromUsername);
	void ExecuteUbergraph_BP_ChatComponent(int32 EntryPoint);
	void GetIsBlocked(const class FText& Username, bool* IsBlocked_);
	void OnNewMessage(bool Received_, const struct FS_MessageData& MessageData);
	void OnRep_PlayerId();
	void OnRequestSendPrivateMessage(bool ByCommand_, int32 ToPlayerID, const class FText& ToUsername, const class FText& Message, const class FText& FromUsername);
	void OnServer_GetPlayerIDFromUsername(const class FText& Username, int32* PlayerID_0);
	void OnServer_GetPlayerIsOnline(int32 ToPlayerID, bool* Online_);
	void OnServer_SendMessage(int32 OwnTeamID, class AController* OwnController, const struct FS_MessageData& MessageData);
	void OpenChat(bool Lobby_);
	void OpenPlayerList();
	void ReceiveBeginPlay();
	void Server_GetPlayerIsOnline(int32 ToPlayerID, const class FText& ToUsername);
	void Server_RequestPlayerID();
	void Server_RequestSendPrivateMessage(bool ByCommand_, int32 ToPlayerID, const class FText& ToUsername, const class FText& Message, const class FText& FromUsername);
	void Server_SendMessage(class AController* OwnControler, const struct FS_MessageData& MessageDate);
	void Server_SetTeamID(int32 TeamID_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_ChatComponent_C">();
	}
	static class UBP_ChatComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_ChatComponent_C>();
	}
};
static_assert(alignof(UBP_ChatComponent_C) == 0x000008, "Wrong alignment on UBP_ChatComponent_C");
static_assert(sizeof(UBP_ChatComponent_C) == 0x0000D8, "Wrong size on UBP_ChatComponent_C");
static_assert(offsetof(UBP_ChatComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_ChatComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_ChatComponent_C, ControllerRef) == 0x0000A8, "Member 'UBP_ChatComponent_C::ControllerRef' has a wrong offset!");
static_assert(offsetof(UBP_ChatComponent_C, PlayerID) == 0x0000B0, "Member 'UBP_ChatComponent_C::PlayerID' has a wrong offset!");
static_assert(offsetof(UBP_ChatComponent_C, MainChatRef) == 0x0000B8, "Member 'UBP_ChatComponent_C::MainChatRef' has a wrong offset!");
static_assert(offsetof(UBP_ChatComponent_C, PlayerLisrRef) == 0x0000C0, "Member 'UBP_ChatComponent_C::PlayerLisrRef' has a wrong offset!");
static_assert(offsetof(UBP_ChatComponent_C, TeamID) == 0x0000C8, "Member 'UBP_ChatComponent_C::TeamID' has a wrong offset!");
static_assert(offsetof(UBP_ChatComponent_C, Attempt) == 0x0000CC, "Member 'UBP_ChatComponent_C::Attempt' has a wrong offset!");
static_assert(offsetof(UBP_ChatComponent_C, MaxProximityDistance) == 0x0000D0, "Member 'UBP_ChatComponent_C::MaxProximityDistance' has a wrong offset!");

}

