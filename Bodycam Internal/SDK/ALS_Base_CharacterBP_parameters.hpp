#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_Base_CharacterBP

#include "Basic.hpp"

#include "ALS_MovementAction_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "ALS_RotationMode_structs.hpp"
#include "Engine_structs.hpp"
#include "MovementSettings_State_structs.hpp"
#include "ALS_ViewMode_structs.hpp"
#include "ALS_MovementState_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "ALS_Stance_structs.hpp"
#include "ALS_OverlayState_structs.hpp"
#include "MantleType_structs.hpp"
#include "Mantle_Asset_structs.hpp"
#include "ALS_ComponentAndTransform_structs.hpp"
#include "Mantle_Params_structs.hpp"
#include "Mantle_TraceSettings_structs.hpp"
#include "MovementSettings_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"


namespace SDK::Params
{

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.AddToCharacterRotation
// 0x0118 (0x0118 - 0x0000)
struct ALS_Base_CharacterBP_C_AddToCharacterRotation final
{
public:
	struct FRotator                               DeltaRotation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_K2_AddActorWorldRotation_SweepHitResult;  // 0x0030(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ALS_Base_CharacterBP_C_AddToCharacterRotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_AddToCharacterRotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_AddToCharacterRotation) == 0x000118, "Wrong size on ALS_Base_CharacterBP_C_AddToCharacterRotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_AddToCharacterRotation, DeltaRotation) == 0x000000, "Member 'ALS_Base_CharacterBP_C_AddToCharacterRotation::DeltaRotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_AddToCharacterRotation, CallFunc_ComposeRotators_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_AddToCharacterRotation::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_AddToCharacterRotation, CallFunc_K2_AddActorWorldRotation_SweepHitResult) == 0x000030, "Member 'ALS_Base_CharacterBP_C_AddToCharacterRotation::CallFunc_K2_AddActorWorldRotation_SweepHitResult' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.ApplyPointDamage
// 0x0058 (0x0058 - 0x0000)
struct ALS_Base_CharacterBP_C_ApplyPointDamage final
{
public:
	double                                        Damage;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RagdollForce;                                      // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   BoneName;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Location;                                          // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ShotFromDirection;                                 // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      KillerPC;                                          // 0x0048(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          DisableHeadShot;                                   // 0x0050(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_ApplyPointDamage) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_ApplyPointDamage");
static_assert(sizeof(ALS_Base_CharacterBP_C_ApplyPointDamage) == 0x000058, "Wrong size on ALS_Base_CharacterBP_C_ApplyPointDamage");
static_assert(offsetof(ALS_Base_CharacterBP_C_ApplyPointDamage, Damage) == 0x000000, "Member 'ALS_Base_CharacterBP_C_ApplyPointDamage::Damage' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ApplyPointDamage, RagdollForce) == 0x000008, "Member 'ALS_Base_CharacterBP_C_ApplyPointDamage::RagdollForce' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ApplyPointDamage, BoneName) == 0x000010, "Member 'ALS_Base_CharacterBP_C_ApplyPointDamage::BoneName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ApplyPointDamage, Location) == 0x000018, "Member 'ALS_Base_CharacterBP_C_ApplyPointDamage::Location' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ApplyPointDamage, ShotFromDirection) == 0x000030, "Member 'ALS_Base_CharacterBP_C_ApplyPointDamage::ShotFromDirection' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ApplyPointDamage, KillerPC) == 0x000048, "Member 'ALS_Base_CharacterBP_C_ApplyPointDamage::KillerPC' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ApplyPointDamage, DisableHeadShot) == 0x000050, "Member 'ALS_Base_CharacterBP_C_ApplyPointDamage::DisableHeadShot' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'ALS_Base_CharacterBP_C_BndEvt__ALS_Base_CharacterBP_Mesh_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_3P_PivotTarget
// 0x00C0 (0x00C0 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget final
{
public:
	struct FTransform                             ReturnValue;                                       // 0x0000(0x0060)(Parm, OutParm, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0060(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget) == 0x0000C0, "Wrong size on ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget, CallFunc_GetTransform_ReturnValue) == 0x000060, "Member 'ALS_Base_CharacterBP_C_BPI_Get_3P_PivotTarget::CallFunc_GetTransform_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_3P_TraceParams
// 0x0040 (0x0040 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams final
{
public:
	struct FVector                                TraceOrigin;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        TraceRadius;                                       // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ETraceTypeQuery                               TraceChannel;                                      // 0x0020(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams) == 0x000040, "Wrong size on ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams, TraceOrigin) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams::TraceOrigin' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams, TraceRadius) == 0x000018, "Member 'ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams::TraceRadius' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams, TraceChannel) == 0x000020, "Member 'ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams::TraceChannel' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_BPI_Get_3P_TraceParams::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_CameraParameters
// 0x0018 (0x0018 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Get_CameraParameters final
{
public:
	double                                        TP_FOV;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FP_FOV;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RightShoulder_0;                                   // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Get_CameraParameters) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Get_CameraParameters");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Get_CameraParameters) == 0x000018, "Wrong size on ALS_Base_CharacterBP_C_BPI_Get_CameraParameters");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CameraParameters, TP_FOV) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CameraParameters::TP_FOV' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CameraParameters, FP_FOV) == 0x000008, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CameraParameters::FP_FOV' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CameraParameters, RightShoulder_0) == 0x000010, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CameraParameters::RightShoulder_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_CurrentStates
// 0x000A (0x000A - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Get_CurrentStates final
{
public:
	EMovementMode                                 PawnMovementMode;                                  // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            MovementState_0;                                   // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            PrevMovementState_0;                               // 0x0002(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           MovementAction_0;                                  // 0x0003(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             RotationMode_0;                                    // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     ActualGait;                                        // 0x0005(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Stance                                   ActualStance;                                      // 0x0006(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 ViewMode_0;                                        // 0x0007(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             OverlayState_0;                                    // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             OverlayState__Client_;                             // 0x0009(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Get_CurrentStates");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates) == 0x00000A, "Wrong size on ALS_Base_CharacterBP_C_BPI_Get_CurrentStates");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, PawnMovementMode) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::PawnMovementMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, MovementState_0) == 0x000001, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::MovementState_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, PrevMovementState_0) == 0x000002, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::PrevMovementState_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, MovementAction_0) == 0x000003, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::MovementAction_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, RotationMode_0) == 0x000004, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::RotationMode_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, ActualGait) == 0x000005, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::ActualGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, ActualStance) == 0x000006, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::ActualStance' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, ViewMode_0) == 0x000007, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::ViewMode_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, OverlayState_0) == 0x000008, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::OverlayState_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_CurrentStates, OverlayState__Client_) == 0x000009, "Member 'ALS_Base_CharacterBP_C_BPI_Get_CurrentStates::OverlayState__Client_' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_EssentialValues
// 0x00D0 (0x00D0 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Get_EssentialValues final
{
public:
	struct FVector                                Velocity;                                          // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                Acceleration_0;                                    // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                MovementInput;                                     // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsMoving_0;                                        // 0x0048(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasMovementInput_0;                                // 0x0049(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Speed_0;                                           // 0x0050(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MovementInputAmount_0;                             // 0x0058(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               AimingRotation;                                    // 0x0060(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        AimYawRate_0;                                      // 0x0078(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMovementInput__ReturnValue;            // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMovementInputAmount_ReturnValue;       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoving__ReturnValue;                    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeed_ReturnValue;                     // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Get_EssentialValues");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues) == 0x0000D0, "Wrong size on ALS_Base_CharacterBP_C_BPI_Get_EssentialValues");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, Velocity) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::Velocity' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, Acceleration_0) == 0x000018, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::Acceleration_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, MovementInput) == 0x000030, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::MovementInput' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, IsMoving_0) == 0x000048, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::IsMoving_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, HasMovementInput_0) == 0x000049, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::HasMovementInput_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, Speed_0) == 0x000050, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::Speed_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, MovementInputAmount_0) == 0x000058, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::MovementInputAmount_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, AimingRotation) == 0x000060, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::AimingRotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, AimYawRate_0) == 0x000078, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::AimYawRate_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, CallFunc_HasMovementInput__ReturnValue) == 0x000080, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::CallFunc_HasMovementInput__ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, CallFunc_GetMovementInputAmount_ReturnValue) == 0x000088, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::CallFunc_GetMovementInputAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, CallFunc_IsMoving__ReturnValue) == 0x000090, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::CallFunc_IsMoving__ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, CallFunc_GetSpeed_ReturnValue) == 0x000098, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, CallFunc_GetVelocity_ReturnValue) == 0x0000A0, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_EssentialValues, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x0000B8, "Member 'ALS_Base_CharacterBP_C_BPI_Get_EssentialValues::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Get_FP_CameraTarget
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget, CallFunc_GetSocketLocation_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_BPI_Get_FP_CameraTarget::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_Gait
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Set_Gait final
{
public:
	EALS_Gait                                     NewGait;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Set_Gait) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Set_Gait");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Set_Gait) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_BPI_Set_Gait");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Set_Gait, NewGait) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Set_Gait::NewGait' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_MovementAction
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Set_MovementAction final
{
public:
	EALS_MovementAction                           NewMovementAction;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Set_MovementAction) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Set_MovementAction");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Set_MovementAction) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_BPI_Set_MovementAction");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Set_MovementAction, NewMovementAction) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Set_MovementAction::NewMovementAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_MovementState
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Set_MovementState final
{
public:
	EALS_MovementState                            NewMovementState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Set_MovementState) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Set_MovementState");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Set_MovementState) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_BPI_Set_MovementState");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Set_MovementState, NewMovementState) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Set_MovementState::NewMovementState' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_OverlayState
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Set_OverlayState final
{
public:
	EALS_OverlayState                             NewOverlayState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Set_OverlayState) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Set_OverlayState");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Set_OverlayState) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_BPI_Set_OverlayState");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Set_OverlayState, NewOverlayState) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Set_OverlayState::NewOverlayState' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_RotationMode
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Set_RotationMode final
{
public:
	EALS_RotationMode                             NewRotationMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Set_RotationMode) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Set_RotationMode");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Set_RotationMode) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_BPI_Set_RotationMode");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Set_RotationMode, NewRotationMode) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Set_RotationMode::NewRotationMode' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.BPI_Set_ViewMode
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_BPI_Set_ViewMode final
{
public:
	EALS_ViewMode                                 NewViewMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_BPI_Set_ViewMode) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_BPI_Set_ViewMode");
static_assert(sizeof(ALS_Base_CharacterBP_C_BPI_Set_ViewMode) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_BPI_Set_ViewMode");
static_assert(offsetof(ALS_Base_CharacterBP_C_BPI_Set_ViewMode, NewViewMode) == 0x000000, "Member 'ALS_Base_CharacterBP_C_BPI_Set_ViewMode::NewViewMode' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CacheValues
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_CacheValues final
{
public:
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_PreviousAimYaw_ImplicitCast;    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_CacheValues) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_CacheValues");
static_assert(sizeof(ALS_Base_CharacterBP_C_CacheValues) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_CacheValues");
static_assert(offsetof(ALS_Base_CharacterBP_C_CacheValues, CallFunc_GetVelocity_ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_CacheValues::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CacheValues, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'ALS_Base_CharacterBP_C_CacheValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CacheValues, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'ALS_Base_CharacterBP_C_CacheValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CacheValues, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'ALS_Base_CharacterBP_C_CacheValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CacheValues, K2Node_VariableSet_PreviousAimYaw_ImplicitCast) == 0x000028, "Member 'ALS_Base_CharacterBP_C_CacheValues::K2Node_VariableSet_PreviousAimYaw_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CalculateAcceleration
// 0x0068 (0x0068 - 0x0000)
struct ALS_Base_CharacterBP_C_CalculateAcceleration final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_CalculateAcceleration) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_CalculateAcceleration");
static_assert(sizeof(ALS_Base_CharacterBP_C_CalculateAcceleration) == 0x000068, "Wrong size on ALS_Base_CharacterBP_C_CalculateAcceleration");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateAcceleration, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_CalculateAcceleration::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateAcceleration, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_CalculateAcceleration::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateAcceleration, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000030, "Member 'ALS_Base_CharacterBP_C_CalculateAcceleration::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateAcceleration, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_CalculateAcceleration::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateAcceleration, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_CalculateAcceleration::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CalculateGroundedRotationRate
// 0x0038 (0x0038 - 0x0000)
struct ALS_Base_CharacterBP_C_CalculateGroundedRotationRate final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMappedSpeed_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_CalculateGroundedRotationRate");
static_assert(sizeof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate) == 0x000038, "Wrong size on ALS_Base_CharacterBP_C_CalculateGroundedRotationRate");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_CalculateGroundedRotationRate::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate, CallFunc_GetMappedSpeed_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_CalculateGroundedRotationRate::CallFunc_GetMappedSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_CalculateGroundedRotationRate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_CalculateGroundedRotationRate::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_CalculateGroundedRotationRate::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000028, "Member 'ALS_Base_CharacterBP_C_CalculateGroundedRotationRate::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CalculateGroundedRotationRate, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000030, "Member 'ALS_Base_CharacterBP_C_CalculateGroundedRotationRate::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CanSprint
// 0x00B0 (0x00B0 - 0x0000)
struct ALS_Base_CharacterBP_C_CanSprint final
{
public:
	bool                                          CanSprint_0;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMovementInput__ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMovementInputAmount_ReturnValue;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetMovementInputAmount_ReturnValue_1;     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x6];                                       // 0x002A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_CanSprint) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_CanSprint");
static_assert(sizeof(ALS_Base_CharacterBP_C_CanSprint) == 0x0000B0, "Wrong size on ALS_Base_CharacterBP_C_CanSprint");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CanSprint_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_CanSprint::CanSprint_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_GetAnimInstance_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_GetCurveValue_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_HasMovementInput__ReturnValue) == 0x000014, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_HasMovementInput__ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000015, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_GetMovementInputAmount_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_GetMovementInputAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_GetMovementInputAmount_ReturnValue_1) == 0x000020, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_GetMovementInputAmount_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000029, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000030, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'ALS_Base_CharacterBP_C_CanSprint::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000068, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_BreakRotator_Roll) == 0x000080, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_BreakRotator_Pitch) == 0x000084, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_BreakRotator_Yaw) == 0x000088, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_Abs_ReturnValue) == 0x000090, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000098, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_BooleanAND_ReturnValue) == 0x000099, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_BooleanAND_ReturnValue_1) == 0x00009A, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_BooleanAND_ReturnValue_2) == 0x00009B, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0000A0, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanSprint, CallFunc_Abs_A_ImplicitCast) == 0x0000A8, "Member 'ALS_Base_CharacterBP_C_CanSprint::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CanUpdateMovingRotation
// 0x0018 (0x0018 - 0x0000)
struct ALS_Base_CharacterBP_C_CanUpdateMovingRotation final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMovementInput__ReturnValue;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsMoving__ReturnValue;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeed_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAnyRootMotion_ReturnValue;             // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0013(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_CanUpdateMovingRotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation) == 0x000018, "Wrong size on ALS_Base_CharacterBP_C_CanUpdateMovingRotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_HasMovementInput__ReturnValue) == 0x000001, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_HasMovementInput__ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_IsMoving__ReturnValue) == 0x000002, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_IsMoving__ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_GetSpeed_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_BooleanAND_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000011, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_HasAnyRootMotion_ReturnValue) == 0x000012, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_HasAnyRootMotion_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_BooleanOR_ReturnValue) == 0x000013, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_Not_PreBool_ReturnValue) == 0x000014, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CanUpdateMovingRotation, CallFunc_BooleanAND_ReturnValue_1) == 0x000015, "Member 'ALS_Base_CharacterBP_C_CanUpdateMovingRotation::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.CapsuleHasRoomCheck
// 0x0178 (0x0178 - 0x0000)
struct ALS_Base_CharacterBP_C_CapsuleHasRoomCheck final
{
public:
	class UCapsuleComponent*                      Capsule;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                TargetLocation;                                    // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        HeightOffset;                                      // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RadiusOffset;                                      // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugType;                                         // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          HasRoom;                                           // 0x0031(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0038(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0080(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_CapsuleHasRoomCheck");
static_assert(sizeof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck) == 0x000178, "Wrong size on ALS_Base_CharacterBP_C_CapsuleHasRoomCheck");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, Capsule) == 0x000000, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::Capsule' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, TargetLocation) == 0x000008, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::TargetLocation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, HeightOffset) == 0x000020, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::HeightOffset' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, RadiusOffset) == 0x000028, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::RadiusOffset' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, DebugType) == 0x000030, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::DebugType' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, HasRoom) == 0x000031, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::HasRoom' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, Temp_object_Variable) == 0x000038, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000048, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, CallFunc_MakeVector_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, CallFunc_Add_VectorVector_ReturnValue) == 0x000068, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, CallFunc_LineTraceSingle_OutHit) == 0x000080, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, CallFunc_LineTraceSingle_ReturnValue) == 0x000168, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_CapsuleHasRoomCheck, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000170, "Member 'ALS_Base_CharacterBP_C_CapsuleHasRoomCheck::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.DrawDebugShapes
// 0x03F0 (0x03F0 - 0x0000)
struct ALS_Base_CharacterBP_C_DrawDebugShapes final
{
public:
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_NormalUnsafe_ReturnValue;          // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue;                  // 0x00DC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_1;       // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLastVelocityRotation_ReturnValue;      // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Vector_NormalUnsafe_ReturnValue_1;        // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_2;       // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLastMovementInputRotation_ReturnValue; // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue_3;       // 0x0180(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_NormalUnsafe_ReturnValue_2;        // 0x0198(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x01B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1; // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x01F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2; // 0x0250(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_254[0x4];                                      // 0x0254(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAcceleration_ReturnValue;           // 0x0260(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_264[0x4];                                      // 0x0264(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue_1;    // 0x02B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B9[0x7];                                      // 0x02B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           CallFunc_SelectColor_ReturnValue_1;                // 0x02C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue_1;               // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_NormalUnsafe_ReturnValue_3;        // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleRadius_ReturnValue;       // 0x0310(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_314[0x4];                                      // 0x0314(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_3; // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0398(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IALS_Controller_BPI_C> K2Node_DynamicCast_AsALS_Controller_BPI;           // 0x03A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B1[0x7];                                      // 0x03B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter;    // 0x03B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_DebugView;              // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowHUD;                // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowTraces;             // 0x03C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowDebugShapes;        // 0x03C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowLayerColors;        // 0x03C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_Slomo;                  // 0x03C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo;      // 0x03C6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C7[0x1];                                      // 0x03C7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector_Z_ImplicitCast;                // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_DrawDebugShapes) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_DrawDebugShapes");
static_assert(sizeof(ALS_Base_CharacterBP_C_DrawDebugShapes) == 0x0003F0, "Wrong size on ALS_Base_CharacterBP_C_DrawDebugShapes");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Vector_NormalUnsafe_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Vector_NormalUnsafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_MakeVector_ReturnValue) == 0x000058, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000070, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000088, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetVelocity_ReturnValue) == 0x0000A0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Add_VectorVector_ReturnValue) == 0x0000B8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_VSize_ReturnValue) == 0x0000D0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0000D8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_SelectColor_ReturnValue) == 0x0000DC, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_SelectColor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Conv_RotatorToVector_ReturnValue_1) == 0x0000F0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Conv_RotatorToVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetLastVelocityRotation_ReturnValue) == 0x000108, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetLastVelocityRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Vector_NormalUnsafe_ReturnValue_1) == 0x000120, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Vector_NormalUnsafe_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Conv_RotatorToVector_ReturnValue_2) == 0x000138, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Conv_RotatorToVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetLastMovementInputRotation_ReturnValue) == 0x000150, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetLastMovementInputRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_SelectVector_ReturnValue) == 0x000168, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Conv_RotatorToVector_ReturnValue_3) == 0x000180, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Conv_RotatorToVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Vector_NormalUnsafe_ReturnValue_2) == 0x000198, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Vector_NormalUnsafe_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x0001B0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1) == 0x0001C8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_MakeVector_ReturnValue_1) == 0x0001D0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_MapRangeClamped_ReturnValue) == 0x0001E8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0001F0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000208, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000220, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000238, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2) == 0x000250, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000258, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetMaxAcceleration_ReturnValue) == 0x000260, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetMaxAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_MakeVector_ReturnValue_2) == 0x000268, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000280, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000298, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_VSize_ReturnValue_1) == 0x0002B0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_EqualEqual_VectorVector_ReturnValue_1) == 0x0002B8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_EqualEqual_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002C0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_SelectColor_ReturnValue_1) == 0x0002C8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_SelectColor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_MapRangeClamped_ReturnValue_1) == 0x0002D8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_SelectVector_ReturnValue_1) == 0x0002E0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_SelectVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Vector_NormalUnsafe_ReturnValue_3) == 0x0002F8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Vector_NormalUnsafe_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetScaledCapsuleRadius_ReturnValue) == 0x000310, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetScaledCapsuleRadius_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000318, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_3) == 0x000330, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000338, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000350, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000368, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetSocketLocation_ReturnValue) == 0x000380, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_GetPlayerController_ReturnValue) == 0x000398, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, K2Node_DynamicCast_AsALS_Controller_BPI) == 0x0003A0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::K2Node_DynamicCast_AsALS_Controller_BPI' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, K2Node_DynamicCast_bSuccess) == 0x0003B0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter) == 0x0003B8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_BPI_Get_DebugInfo_DebugView) == 0x0003C0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_BPI_Get_DebugInfo_DebugView' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_BPI_Get_DebugInfo_ShowHUD) == 0x0003C1, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_BPI_Get_DebugInfo_ShowHUD' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_BPI_Get_DebugInfo_ShowTraces) == 0x0003C2, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_BPI_Get_DebugInfo_ShowTraces' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_BPI_Get_DebugInfo_ShowDebugShapes) == 0x0003C3, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_BPI_Get_DebugInfo_ShowDebugShapes' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_BPI_Get_DebugInfo_ShowLayerColors) == 0x0003C4, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_BPI_Get_DebugInfo_ShowLayerColors' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_BPI_Get_DebugInfo_Slomo) == 0x0003C5, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_BPI_Get_DebugInfo_Slomo' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo) == 0x0003C6, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0003C8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_MakeVector_Z_ImplicitCast) == 0x0003D0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_MakeVector_Z_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x0003D8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x0003E0, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_DrawDebugShapes, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0003E8, "Member 'ALS_Base_CharacterBP_C_DrawDebugShapes::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.ExecuteUbergraph_ALS_Base_CharacterBP
// 0x0DE0 (0x0DE0 - 0x0000)
struct ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0008(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0030(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable;                              // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_0;                              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Stance                                   Temp_byte_Variable;                                // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IALS_Animation_BPI_C>  K2Node_DynamicCast_AsALS_Animation_BPI;            // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87[0x1];                                       // 0x0087(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IALS_Animation_BPI_C>  K2Node_DynamicCast_AsALS_Animation_BPI_1;          // 0x0088(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_2;               // 0x009B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_2;                              // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_3;               // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Damage;                               // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_RagdollForce;                         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_BoneName;                             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_Location;                             // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Event_ShotFromDirection;                    // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      K2Node_Event_KillerPC;                             // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_DisableHeadShot;                      // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            K2Node_CustomEvent_MovementState;                  // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0x6];                                      // 0x0102(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_3;                              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           K2Node_CustomEvent_MovementAction;                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_4;               // 0x0111(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             K2Node_CustomEvent_RotationMode;                   // 0x0112(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     K2Node_CustomEvent_Gait;                           // 0x0113(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 K2Node_CustomEvent_ViewMode;                       // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_1;                            // 0x0118(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             K2Node_CustomEvent_OverlayState_1;                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_5;               // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     K2Node_CustomEvent_DesiredGait;                    // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_2;     // 0x0128(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_2;     // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_2;   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_2;    // 0x0150(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_0;                            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2_0;                            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_6;               // 0x0169(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16A[0x6];                                      // 0x016A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_MantleHeight_1;                 // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_178[0x8];                                      // 0x0178(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             K2Node_CustomEvent_MantleLedgeWS_1;                // 0x0180(0x0070)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EMantleType                                   K2Node_CustomEvent_MantleType_1;                   // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_MantleHeight;                   // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FALS_ComponentAndTransform             K2Node_CustomEvent_MantleLedgeWS;                  // 0x0200(0x0070)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EMantleType                                   K2Node_CustomEvent_MantleType;                     // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_272[0x6];                                      // 0x0272(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_CustomEvent_RagdollLocation;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             K2Node_CustomEvent_OverlayState;                   // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_291[0x7];                                      // 0x0291(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 K2Node_CustomEvent_Class;                          // 0x0298(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_CustomEvent_SpawnTransform;                 // 0x02A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_7;               // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x7];                                      // 0x0301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_FinishSpawningActor_ReturnValue;          // 0x0310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_MantleCheck_CanClimb_Vault;               // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_3;     // 0x0320(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_3;     // 0x0340(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_3;   // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_3;    // 0x0348(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_3_1;                            // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_2_1;                            // 0x0358(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_2; // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0361(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0362(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMovementInput__ReturnValue;            // 0x0363(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Delay;                          // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_8;               // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_4;                              // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_5;                              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_2;                            // 0x0388(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_4;     // 0x0390(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_4;     // 0x03B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_4;   // 0x03B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_4;    // 0x03B8(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x03C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x03C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C2[0x6];                                      // 0x03C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5_0;                            // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4_0;                            // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_3; // 0x03D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3D9[0x7];                                      // 0x03D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x03E0(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x0404(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x0408(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_1;                            // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_4; // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_9;               // 0x0423(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_6;                    // 0x0424(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_7;                    // 0x0425(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_426[0x2];                                      // 0x0426(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_5;     // 0x0428(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_5;     // 0x0448(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_5;   // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_5;    // 0x0450(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_10;              // 0x0458(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_459[0x7];                                      // 0x0459(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_5_1;                            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_4_1;                            // 0x0468(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_5; // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_8;                    // 0x0471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0472(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_7;                    // 0x0473(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_474[0x4];                                      // 0x0474(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam;                   // 0x0480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_489[0x3];                                      // 0x0489(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x048C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x3];                                      // 0x0491(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0498(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_499[0x7];                                      // 0x0499(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_6;                              // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7;                              // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_9;                    // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x3];                                      // 0x04B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaSeconds;                         // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x04B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B9[0x7];                                      // 0x04B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_DoubleToVector_ReturnValue;          // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x04D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x04E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x7];                                      // 0x0559(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0560(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0568(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0580(0x0010)(ConstParm, ReferenceParm)
	class UInputAction*                           Temp_object_Variable_3;                            // 0x0590(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_Select_Default;                             // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_HalfHeightAdjust_1;                   // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust_1;             // 0x05B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x05B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x05D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x06B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B9[0x3];                                      // 0x06B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_HalfHeightAdjust;                     // 0x06BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_ScaledHalfHeightAdjust;               // 0x06C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x06C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x06C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C6[0x2];                                      // 0x06C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x06CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x06D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0718(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0730(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0738(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0740(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0758(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0760(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_764[0x4];                                      // 0x0764(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0798(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x07A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_PrevMovementMode;                     // 0x07A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 K2Node_Event_NewMovementMode;                      // 0x07A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_PrevCustomMode;                       // 0x07AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         K2Node_Event_NewCustomMode;                        // 0x07AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7AC[0x4];                                      // 0x07AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             K2Node_Event_Hit;                                  // 0x07C8(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x08B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B1[0x3];                                      // 0x08B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x08B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x08B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B9[0x3];                                      // 0x08B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x08BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C1[0x7];                                      // 0x08C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_6;     // 0x08C8(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_6;     // 0x08E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_6;   // 0x08EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_6;    // 0x08F0(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_7_0;                            // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6_0;                            // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_6; // 0x0908(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x0909(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            K2Node_Event_NewMovementState;                     // 0x090A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x090B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           K2Node_Event_NewMovementAction;                    // 0x090C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             K2Node_Event_NewRotationMode;                      // 0x090D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x090E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x090F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     K2Node_Event_NewGait;                              // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 K2Node_Event_NewViewMode;                          // 0x0911(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x0912(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0913(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             K2Node_Event_NewOverlayState;                      // 0x0914(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_3;        // 0x0915(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0916(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_917[0x1];                                      // 0x0917(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetRollAnimation_ReturnValue;             // 0x0918(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetRollAnimation_ReturnValue_1;           // 0x0920(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0928(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_1;               // 0x092C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_7;     // 0x0930(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_7;     // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_7;   // 0x0954(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_7;    // 0x0958(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_GetRollAnimation_ReturnValue_2;           // 0x0960(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_2;               // 0x0968(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_96C[0x4];                                      // 0x096C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_7_1;                            // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_6_1;                            // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_7; // 0x0980(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_981[0x7];                                      // 0x0981(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_GetRollAnimation_ReturnValue_3;           // 0x0988(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Montage_Play_ReturnValue_3;               // 0x0990(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0994(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_4;        // 0x0995(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_996[0x2];                                      // 0x0996(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_GetLastVelocityRotation_ReturnValue;      // 0x0998(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetSpeed_ReturnValue;                     // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMovementInput__ReturnValue_1;          // 0x09B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x09B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9BA[0x6];                                      // 0x09BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               K2Node_Select_Default_1;                           // 0x09C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x09D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x09F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x09F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0A00(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0A08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0A20(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0B08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0B09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B0A[0x2];                                      // 0x0B0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0B0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B14[0x4];                                      // 0x0B14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0B18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0B30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x0B48(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x0B60(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x0B78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x0B80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x0B88(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0BA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0BA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BAC[0x4];                                      // 0x0BAC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0BB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0BC8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0BE0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE4[0x4];                                      // 0x0BE4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0BF0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0BF1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BF2[0x6];                                      // 0x0BF2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0BF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0C00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C01[0x7];                                      // 0x0C01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0C08(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8;                              // 0x0C10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0C18(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0C20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0C28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0C38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C39[0x7];                                      // 0x0C39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBPI_Xp_C>             K2Node_DynamicCast_AsBPI_Xp;                       // 0x0C40(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C51[0x7];                                      // 0x0C51(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_CustomEvent_PC;                             // 0x0C58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_5;        // 0x0C60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C61[0x7];                                      // 0x0C61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_9;                              // 0x0C68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0C70(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_4;                            // 0x0C78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam_1;                 // 0x0C80(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0C88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C89[0x7];                                      // 0x0C89(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0C90(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_8;                    // 0x0CD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0CD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_6;        // 0x0CD2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CD3[0x5];                                      // 0x0CD3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_8;     // 0x0CD8(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_8;     // 0x0CF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_8;   // 0x0CFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_8;    // 0x0D00(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0D08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_9_0;                            // 0x0D10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_8_0;                            // 0x0D18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_8; // 0x0D20(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_7;        // 0x0D21(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D22[0x6];                                      // 0x0D22(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Temp_struct_Variable;                              // 0x0D28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10;                             // 0x0D38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11;                             // 0x0D40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_8;        // 0x0D48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D49[0x7];                                      // 0x0D49(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInputAction*                           Temp_object_Variable_5;                            // 0x0D50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_9;     // 0x0D58(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_9;     // 0x0D78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_9;   // 0x0D7C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_9;    // 0x0D80(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_11_0;                           // 0x0D88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_10_0;                           // 0x0D90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Conv_InputActionValueToAxis2D_ReturnValue; // 0x0D98(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_9;        // 0x0DA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_10;                   // 0x0DA9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DAA[0x6];                                      // 0x0DAA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MantleUpdate_BlendIn_ImplicitCast;        // 0x0DB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0DB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DBC[0x4];                                      // 0x0DBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0DC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0DC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_DistanceCamera_ImplicitCast;    // 0x0DD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast; // 0x0DD4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0DD8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RetriggerableDelay_Duration_ImplicitCast; // 0x0DDC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP");
static_assert(sizeof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP) == 0x000DE0, "Wrong size on ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, EntryPoint) == 0x000000, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000028, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x00002C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000030, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_object_Variable) == 0x000038, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable) == 0x000048, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_1) == 0x000050, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_0) == 0x000058, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_1_0) == 0x000060, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_Variable) == 0x000068, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_byte_Variable) == 0x000069, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_Variable_1) == 0x00006A, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue) == 0x00006B, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_AsALS_Animation_BPI) == 0x000070, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_AsALS_Animation_BPI' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue_1) == 0x000081, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue_2) == 0x000082, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue_3) == 0x000083, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue_4) == 0x000084, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue) == 0x000085, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue_5) == 0x000086, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_AsALS_Animation_BPI_1) == 0x000088, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_AsALS_Animation_BPI_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_bSuccess_1) == 0x000098, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_1) == 0x000099, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_Variable_2) == 0x00009A, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_2) == 0x00009B, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_2) == 0x0000A0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_3) == 0x0000A8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_Damage) == 0x0000B0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_Damage' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_RagdollForce) == 0x0000B8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_RagdollForce' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_BoneName) == 0x0000C0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_BoneName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_Location) == 0x0000C8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_Location' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_ShotFromDirection) == 0x0000E0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_ShotFromDirection' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_KillerPC) == 0x0000F8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_KillerPC' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_DisableHeadShot) == 0x000100, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_DisableHeadShot' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_MovementState) == 0x000101, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_MovementState' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_3) == 0x000108, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_MovementAction) == 0x000110, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_MovementAction' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_4) == 0x000111, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_RotationMode) == 0x000112, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_RotationMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_Gait) == 0x000113, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_Gait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_ViewMode) == 0x000114, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_ViewMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_object_Variable_1) == 0x000118, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_OverlayState_1) == 0x000120, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_OverlayState_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_5) == 0x000121, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_DesiredGait) == 0x000122, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_DesiredGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_2) == 0x000128, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_2) == 0x000148, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_2) == 0x00014C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_2) == 0x000150, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_3_0) == 0x000158, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_3_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_2_0) == 0x000160, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_2_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x000168, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_6) == 0x000169, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_MantleHeight_1) == 0x000170, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_MantleHeight_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_MantleLedgeWS_1) == 0x000180, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_MantleLedgeWS_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_MantleType_1) == 0x0001F0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_MantleType_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_MantleHeight) == 0x0001F8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_MantleHeight' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_MantleLedgeWS) == 0x000200, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_MantleLedgeWS' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_MantleType) == 0x000270, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_MantleType' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_IsClosed_Variable) == 0x000271, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_RagdollLocation) == 0x000278, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_RagdollLocation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_OverlayState) == 0x000290, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_OverlayState' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_Class) == 0x000298, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_Class' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_SpawnTransform) == 0x0002A0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_SpawnTransform' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_7) == 0x000300, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000308, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_FinishSpawningActor_ReturnValue) == 0x000310, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_MantleCheck_CanClimb_Vault) == 0x000318, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_MantleCheck_CanClimb_Vault' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess) == 0x000319, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_1) == 0x00031A, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_2) == 0x00031B, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_3) == 0x000320, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_3) == 0x000340, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_3) == 0x000344, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_3) == 0x000348, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_3_1) == 0x000350, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_3_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_2_1) == 0x000358, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_2_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue_2) == 0x000360, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_3) == 0x000361, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_4) == 0x000362, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasMovementInput__ReturnValue) == 0x000363, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasMovementInput__ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_Delay) == 0x000368, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_Variable_3) == 0x000370, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_8) == 0x000371, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_4) == 0x000378, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_5) == 0x000380, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_object_Variable_2) == 0x000388, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_4) == 0x000390, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_4) == 0x0003B0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_4) == 0x0003B4, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_4) == 0x0003B8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue_6) == 0x0003C0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0003C1, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_5_0) == 0x0003C8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_5_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_4_0) == 0x0003D0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_4_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue_3) == 0x0003D8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x0003E0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x000400, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x000404, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x000408, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_1) == 0x000410, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_1_1) == 0x000418, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_1_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue_4) == 0x000420, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000421, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_5) == 0x000422, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_9) == 0x000423, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_6) == 0x000424, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_7) == 0x000425, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_5) == 0x000428, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_5) == 0x000448, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_5) == 0x00044C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_5) == 0x000450, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasAuthority_ReturnValue_10) == 0x000458, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasAuthority_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_5_1) == 0x000460, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_5_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_4_1) == 0x000468, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_4_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue_5) == 0x000470, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_8) == 0x000471, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_Has_Been_Initd_Variable) == 0x000472, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue_7) == 0x000473, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetGameState_ReturnValue) == 0x000478, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_AsGT_Bodycam) == 0x000480, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_AsGT_Bodycam' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_bSuccess_2) == 0x000488, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_int_Variable) == 0x00048C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Less_IntInt_ReturnValue) == 0x000490, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Add_IntInt_ReturnValue) == 0x000494, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_Variable_4) == 0x000498, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_6) == 0x0004A0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_7) == 0x0004A8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_9) == 0x0004B0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_DeltaSeconds) == 0x0004B4, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_IsClosed_Variable_1) == 0x0004B8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_DoubleToVector_ReturnValue) == 0x0004C0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_DoubleToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0004D8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetActorForwardVector_ReturnValue) == 0x0004E0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0004F8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakVector_X) == 0x000510, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakVector_Y) == 0x000518, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakVector_Z) == 0x000520, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_MakeVector_ReturnValue) == 0x000528, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000540, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue) == 0x000558, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000560, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000568, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_MakeArray_Array) == 0x000580, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_object_Variable_3) == 0x000590, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Select_Default) == 0x000598, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_HalfHeightAdjust_1) == 0x0005B0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_HalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_ScaledHalfHeightAdjust_1) == 0x0005B4, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_ScaledHalfHeightAdjust_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Add_VectorVector_ReturnValue) == 0x0005B8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_LineTraceSingle_OutHit) == 0x0005D0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_LineTraceSingle_ReturnValue) == 0x0006B8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_HalfHeightAdjust) == 0x0006BC, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_ScaledHalfHeightAdjust) == 0x0006C0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_ScaledHalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_bBlockingHit) == 0x0006C4, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_bInitialOverlap) == 0x0006C5, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_Time) == 0x0006C8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_Distance) == 0x0006CC, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_Location) == 0x0006D0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_ImpactPoint) == 0x0006E8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_Normal) == 0x000700, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_ImpactNormal) == 0x000718, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_PhysMat) == 0x000730, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_HitActor) == 0x000738, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_HitComponent) == 0x000740, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_HitBoneName) == 0x000748, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_BoneName) == 0x000750, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_HitItem) == 0x000758, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_ElementIndex) == 0x00075C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_FaceIndex) == 0x000760, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_TraceStart) == 0x000768, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_TraceEnd) == 0x000780, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_SelectFloat_ReturnValue) == 0x000798, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_FInterpTo_ReturnValue) == 0x0007A0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_PrevMovementMode) == 0x0007A8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_NewMovementMode) == 0x0007A9, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_NewMovementMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_PrevCustomMode) == 0x0007AA, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_PrevCustomMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_NewCustomMode) == 0x0007AB, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_NewCustomMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0007B0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_Hit) == 0x0007C8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_Hit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0008B0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_int_Variable_1) == 0x0008B4, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Less_IntInt_ReturnValue_1) == 0x0008B8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Add_IntInt_ReturnValue_1) == 0x0008BC, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_Has_Been_Initd_Variable_1) == 0x0008C0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_6) == 0x0008C8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_6) == 0x0008E8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_6) == 0x0008EC, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_6) == 0x0008F0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_7_0) == 0x0008F8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_7_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_6_0) == 0x000900, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_6_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue_6) == 0x000908, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x000909, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_NewMovementState) == 0x00090A, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_NewMovementState' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x00090B, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_NewMovementAction) == 0x00090C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_NewMovementAction' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_NewRotationMode) == 0x00090D, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_NewRotationMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00090E, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00090F, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_NewGait) == 0x000910, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_NewGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_NewViewMode) == 0x000911, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_NewViewMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x000912, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000913, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Event_NewOverlayState) == 0x000914, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Event_NewOverlayState' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_3) == 0x000915, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000916, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetRollAnimation_ReturnValue) == 0x000918, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetRollAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetRollAnimation_ReturnValue_1) == 0x000920, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetRollAnimation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Montage_Play_ReturnValue) == 0x000928, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Montage_Play_ReturnValue_1) == 0x00092C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Montage_Play_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_7) == 0x000930, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_7) == 0x000950, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_7) == 0x000954, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_7) == 0x000958, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetRollAnimation_ReturnValue_2) == 0x000960, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetRollAnimation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Montage_Play_ReturnValue_2) == 0x000968, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Montage_Play_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_7_1) == 0x000970, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_7_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_6_1) == 0x000978, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_6_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue_7) == 0x000980, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetRollAnimation_ReturnValue_3) == 0x000988, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetRollAnimation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Montage_Play_ReturnValue_3) == 0x000990, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Montage_Play_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_bool_Variable_5) == 0x000994, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_4) == 0x000995, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetLastVelocityRotation_ReturnValue) == 0x000998, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetLastVelocityRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetSpeed_ReturnValue) == 0x0009B0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_HasMovementInput__ReturnValue_1) == 0x0009B8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_HasMovementInput__ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0009B9, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_Select_Default_1) == 0x0009C0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x0009D8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_ComponentBoundEvent_HitComponent) == 0x0009F0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_ComponentBoundEvent_OtherActor) == 0x0009F8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_ComponentBoundEvent_OtherComp) == 0x000A00, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000A08, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_ComponentBoundEvent_Hit) == 0x000A20, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000B08, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000B09, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_Time_1) == 0x000B0C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_Distance_1) == 0x000B10, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_Location_1) == 0x000B18, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000B30, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_Normal_1) == 0x000B48, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_ImpactNormal_1) == 0x000B60, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_PhysMat_1) == 0x000B78, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_HitActor_1) == 0x000B80, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_HitComponent_1) == 0x000B88, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_HitBoneName_1) == 0x000B90, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_BoneName_1) == 0x000B98, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_HitItem_1) == 0x000BA0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_ElementIndex_1) == 0x000BA4, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_FaceIndex_1) == 0x000BA8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_TraceStart_1) == 0x000BB0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BreakHitResult_TraceEnd_1) == 0x000BC8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000BE0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_VSize_ReturnValue) == 0x000BE8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000BF0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BooleanAND_ReturnValue) == 0x000BF1, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_MapRangeClamped_ReturnValue) == 0x000BF8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_BooleanAND_ReturnValue_1) == 0x000C00, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000C08, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_8) == 0x000C10, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetGameMode_ReturnValue) == 0x000C18, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetPlayerController_ReturnValue) == 0x000C20, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_AsBodycam_Interface) == 0x000C28, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_bSuccess_3) == 0x000C38, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_AsBPI_Xp) == 0x000C40, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_AsBPI_Xp' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_bSuccess_4) == 0x000C50, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_CustomEvent_PC) == 0x000C58, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_CustomEvent_PC' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_5) == 0x000C60, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_9) == 0x000C68, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetGameState_ReturnValue_1) == 0x000C70, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_object_Variable_4) == 0x000C78, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_AsGT_Bodycam_1) == 0x000C80, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_AsGT_Bodycam_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_DynamicCast_bSuccess_5) == 0x000C88, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000C90, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsValid_ReturnValue_8) == 0x000CD0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsValid_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsPlayerControlled_ReturnValue) == 0x000CD1, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_6) == 0x000CD2, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_8) == 0x000CD8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_8) == 0x000CF8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_8) == 0x000CFC, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_8) == 0x000D00, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_RandomFloatInRange_ReturnValue) == 0x000D08, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_9_0) == 0x000D10, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_9_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_8_0) == 0x000D18, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_8_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToBool_ReturnValue_8) == 0x000D20, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToBool_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_7) == 0x000D21, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_struct_Variable) == 0x000D28, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_10) == 0x000D38, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_10' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_11) == 0x000D40, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_11' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_8) == 0x000D48, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_object_Variable_5) == 0x000D50, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_object_Variable_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ActionValue_9) == 0x000D58, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ActionValue_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_ElapsedTime_9) == 0x000D78, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_ElapsedTime_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_TriggeredTime_9) == 0x000D7C, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_TriggeredTime_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_EnhancedInputActionEvent_SourceAction_9) == 0x000D80, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_EnhancedInputActionEvent_SourceAction_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_11_0) == 0x000D88, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_11_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, Temp_real_Variable_10_0) == 0x000D90, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::Temp_real_Variable_10_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Conv_InputActionValueToAxis2D_ReturnValue) == 0x000D98, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Conv_InputActionValueToAxis2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_IsLocallyControlled_ReturnValue_9) == 0x000DA8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_IsLocallyControlled_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_SwitchEnum_CmpSuccess_10) == 0x000DA9, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_SwitchEnum_CmpSuccess_10' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_MantleUpdate_BlendIn_ImplicitCast) == 0x000DB0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_MantleUpdate_BlendIn_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Delay_Duration_ImplicitCast) == 0x000DB8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000DC0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_SelectFloat_A_ImplicitCast) == 0x000DC8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, K2Node_VariableSet_DistanceCamera_ImplicitCast) == 0x000DD0, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::K2Node_VariableSet_DistanceCamera_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast) == 0x000DD4, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000DD8, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP, CallFunc_RetriggerableDelay_Duration_ImplicitCast) == 0x000DDC, "Member 'ALS_Base_CharacterBP_C_ExecuteUbergraph_ALS_Base_CharacterBP::CallFunc_RetriggerableDelay_Duration_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.FixDiagonalGamepadValues
// 0x0060 (0x0060 - 0x0000)
struct ALS_Base_CharacterBP_C_FixDiagonalGamepadValues final
{
public:
	double                                        Y_in;                                              // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_in;                                              // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Y_Out;                                             // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        X_Out;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_FixDiagonalGamepadValues");
static_assert(sizeof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues) == 0x000060, "Wrong size on ALS_Base_CharacterBP_C_FixDiagonalGamepadValues");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, Y_in) == 0x000000, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::Y_in' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, X_in) == 0x000008, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::X_in' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, Y_Out) == 0x000010, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::Y_Out' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, X_Out) == 0x000018, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::X_Out' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, CallFunc_Abs_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, CallFunc_Abs_ReturnValue_1) == 0x000028, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000038, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_FixDiagonalGamepadValues, CallFunc_FClamp_ReturnValue_1) == 0x000058, "Member 'ALS_Base_CharacterBP_C_FixDiagonalGamepadValues::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C. Right Vector
// 0x00A0 (0x00A0 - 0x0000)
struct ALS_Base_CharacterBP_C__Right_Vector final
{
public:
	struct FVector                                ForwardVector;                                     // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RightVector;                                       // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetForwardVector_ReturnValue;             // 0x0070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C__Right_Vector) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C__Right_Vector");
static_assert(sizeof(ALS_Base_CharacterBP_C__Right_Vector) == 0x0000A0, "Wrong size on ALS_Base_CharacterBP_C__Right_Vector");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, ForwardVector) == 0x000000, "Member 'ALS_Base_CharacterBP_C__Right_Vector::ForwardVector' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, RightVector) == 0x000018, "Member 'ALS_Base_CharacterBP_C__Right_Vector::RightVector' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, CallFunc_BreakRotator_Roll) == 0x000030, "Member 'ALS_Base_CharacterBP_C__Right_Vector::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, CallFunc_BreakRotator_Pitch) == 0x000034, "Member 'ALS_Base_CharacterBP_C__Right_Vector::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, CallFunc_BreakRotator_Yaw) == 0x000038, "Member 'ALS_Base_CharacterBP_C__Right_Vector::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, CallFunc_MakeRotator_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C__Right_Vector::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, CallFunc_MakeRotator_ReturnValue_1) == 0x000058, "Member 'ALS_Base_CharacterBP_C__Right_Vector::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, CallFunc_GetForwardVector_ReturnValue) == 0x000070, "Member 'ALS_Base_CharacterBP_C__Right_Vector::CallFunc_GetForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C__Right_Vector, CallFunc_GetRightVector_ReturnValue) == 0x000088, "Member 'ALS_Base_CharacterBP_C__Right_Vector::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Get Player Movement Input
// 0x00A8 (0x00A8 - 0x0000)
struct ALS_Base_CharacterBP_C_Get_Player_Movement_Input final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Control_Forward__Right_Vector_ForwardVector; // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Control_Forward__Right_Vector_RightVector; // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_Get_Player_Movement_Input");
static_assert(sizeof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input) == 0x0000A8, "Wrong size on ALS_Base_CharacterBP_C_Get_Player_Movement_Input");
static_assert(offsetof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Get_Player_Movement_Input::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input, CallFunc_Get_Control_Forward__Right_Vector_ForwardVector) == 0x000018, "Member 'ALS_Base_CharacterBP_C_Get_Player_Movement_Input::CallFunc_Get_Control_Forward__Right_Vector_ForwardVector' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input, CallFunc_Get_Control_Forward__Right_Vector_RightVector) == 0x000030, "Member 'ALS_Base_CharacterBP_C_Get_Player_Movement_Input::CallFunc_Get_Control_Forward__Right_Vector_RightVector' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000048, "Member 'ALS_Base_CharacterBP_C_Get_Player_Movement_Input::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000060, "Member 'ALS_Base_CharacterBP_C_Get_Player_Movement_Input::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input, CallFunc_Add_VectorVector_ReturnValue) == 0x000078, "Member 'ALS_Base_CharacterBP_C_Get_Player_Movement_Input::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Get_Player_Movement_Input, CallFunc_Normal_ReturnValue) == 0x000090, "Member 'ALS_Base_CharacterBP_C_Get_Player_Movement_Input::CallFunc_Normal_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetActorComponent
// 0x0018 (0x0018 - 0x0000)
struct ALS_Base_CharacterBP_C_GetActorComponent final
{
public:
	TSubclassOf<class UActorComponent>            ComponentClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	class UActorComponent*                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UActorComponent*                        CallFunc_GetComponentByClass_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetActorComponent) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetActorComponent");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetActorComponent) == 0x000018, "Wrong size on ALS_Base_CharacterBP_C_GetActorComponent");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActorComponent, ComponentClass) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetActorComponent::ComponentClass' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActorComponent, ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetActorComponent::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActorComponent, CallFunc_GetComponentByClass_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_GetActorComponent::CallFunc_GetComponentByClass_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetActorComponents
// 0x0028 (0x0028 - 0x0000)
struct ALS_Base_CharacterBP_C_GetActorComponents final
{
public:
	TSubclassOf<class UActorComponent>            ComponentClass;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	TArray<class UActorComponent*>                ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ReturnParm, ContainsInstancedReference)
	TArray<class UActorComponent*>                CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0018(0x0010)(ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetActorComponents) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetActorComponents");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetActorComponents) == 0x000028, "Wrong size on ALS_Base_CharacterBP_C_GetActorComponents");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActorComponents, ComponentClass) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetActorComponents::ComponentClass' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActorComponents, ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetActorComponents::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActorComponents, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_GetActorComponents::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetActualGait
// 0x0068 (0x0068 - 0x0000)
struct ALS_Base_CharacterBP_C_GetActualGait final
{
public:
	EALS_Gait                                     AllowedGait;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     ActualGait;                                        // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        LocalSprintSpeed;                                  // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalRunSpeed;                                     // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocalWalkSpeed;                                    // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeed_ReturnValue;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeed_ReturnValue_1;                   // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_LocalWalkSpeed_ImplicitCast;    // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LocalRunSpeed_ImplicitCast;     // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LocalSprintSpeed_ImplicitCast;  // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetActualGait) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetActualGait");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetActualGait) == 0x000068, "Wrong size on ALS_Base_CharacterBP_C_GetActualGait");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, AllowedGait) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetActualGait::AllowedGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, ActualGait) == 0x000001, "Member 'ALS_Base_CharacterBP_C_GetActualGait::ActualGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, LocalSprintSpeed) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetActualGait::LocalSprintSpeed' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, LocalRunSpeed) == 0x000010, "Member 'ALS_Base_CharacterBP_C_GetActualGait::LocalRunSpeed' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, LocalWalkSpeed) == 0x000018, "Member 'ALS_Base_CharacterBP_C_GetActualGait::LocalWalkSpeed' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, CallFunc_GetSpeed_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_GetActualGait::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, CallFunc_GetSpeed_ReturnValue_1) == 0x000028, "Member 'ALS_Base_CharacterBP_C_GetActualGait::CallFunc_GetSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'ALS_Base_CharacterBP_C_GetActualGait::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_GetActualGait::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'ALS_Base_CharacterBP_C_GetActualGait::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000048, "Member 'ALS_Base_CharacterBP_C_GetActualGait::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000049, "Member 'ALS_Base_CharacterBP_C_GetActualGait::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, K2Node_VariableSet_LocalWalkSpeed_ImplicitCast) == 0x000050, "Member 'ALS_Base_CharacterBP_C_GetActualGait::K2Node_VariableSet_LocalWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, K2Node_VariableSet_LocalRunSpeed_ImplicitCast) == 0x000058, "Member 'ALS_Base_CharacterBP_C_GetActualGait::K2Node_VariableSet_LocalRunSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetActualGait, K2Node_VariableSet_LocalSprintSpeed_ImplicitCast) == 0x000060, "Member 'ALS_Base_CharacterBP_C_GetActualGait::K2Node_VariableSet_LocalSprintSpeed_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetAllowedGait
// 0x0006 (0x0006 - 0x0000)
struct ALS_Base_CharacterBP_C_GetAllowedGait final
{
public:
	EALS_Gait                                     AllowedGait;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSprint_CanSprint;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanSprint_CanSprint_1;                    // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetAllowedGait) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_GetAllowedGait");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetAllowedGait) == 0x000006, "Wrong size on ALS_Base_CharacterBP_C_GetAllowedGait");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAllowedGait, AllowedGait) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetAllowedGait::AllowedGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAllowedGait, K2Node_SwitchEnum_CmpSuccess) == 0x000001, "Member 'ALS_Base_CharacterBP_C_GetAllowedGait::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAllowedGait, K2Node_SwitchEnum_CmpSuccess_1) == 0x000002, "Member 'ALS_Base_CharacterBP_C_GetAllowedGait::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAllowedGait, CallFunc_CanSprint_CanSprint) == 0x000003, "Member 'ALS_Base_CharacterBP_C_GetAllowedGait::CallFunc_CanSprint_CanSprint' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAllowedGait, K2Node_SwitchEnum_CmpSuccess_2) == 0x000004, "Member 'ALS_Base_CharacterBP_C_GetAllowedGait::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAllowedGait, CallFunc_CanSprint_CanSprint_1) == 0x000005, "Member 'ALS_Base_CharacterBP_C_GetAllowedGait::CallFunc_CanSprint_CanSprint_1' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetAnimCurveValue
// 0x0020 (0x0020 - 0x0000)
struct ALS_Base_CharacterBP_C_GetAnimCurveValue final
{
public:
	class FName                                   CurveName;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetAnimCurveValue) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetAnimCurveValue");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetAnimCurveValue) == 0x000020, "Wrong size on ALS_Base_CharacterBP_C_GetAnimCurveValue");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAnimCurveValue, CurveName) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetAnimCurveValue::CurveName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAnimCurveValue, ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetAnimCurveValue::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAnimCurveValue, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_GetAnimCurveValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAnimCurveValue, CallFunc_GetCurveValue_ReturnValue) == 0x000014, "Member 'ALS_Base_CharacterBP_C_GetAnimCurveValue::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetAnimCurveValue, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000018, "Member 'ALS_Base_CharacterBP_C_GetAnimCurveValue::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetCalpsuleBaseLocation
// 0x0098 (0x0098 - 0x0000)
struct ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation final
{
public:
	double                                        ZOffset;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0008(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation) == 0x000098, "Wrong size on ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, ZOffset) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::ZOffset' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, CallFunc_GetUpVector_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000048, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000060, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000078, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000090, "Member 'ALS_Base_CharacterBP_C_GetCalpsuleBaseLocation::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetCapsuleLocationFromBase
// 0x0080 (0x0080 - 0x0000)
struct ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase final
{
public:
	struct FVector                                BaseLocation;                                      // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZOffset;                                           // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ReturnValue;                                       // 0x0020(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase) == 0x000080, "Wrong size on ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase, BaseLocation) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase::BaseLocation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase, ZOffset) == 0x000018, "Member 'ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase::ZOffset' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase, ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase, CallFunc_MakeVector_ReturnValue) == 0x000048, "Member 'ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase, CallFunc_Add_VectorVector_ReturnValue) == 0x000060, "Member 'ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000078, "Member 'ALS_Base_CharacterBP_C_GetCapsuleLocationFromBase::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetGetUpAnimation
// 0x0010 (0x0010 - 0x0000)
struct ALS_Base_CharacterBP_C_GetGetUpAnimation final
{
public:
	bool                                          RagdollFaceUp_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetGetUpAnimation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetGetUpAnimation");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetGetUpAnimation) == 0x000010, "Wrong size on ALS_Base_CharacterBP_C_GetGetUpAnimation");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetGetUpAnimation, RagdollFaceUp_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetGetUpAnimation::RagdollFaceUp_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetGetUpAnimation, ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetGetUpAnimation::ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetLastMovementInputRotation
// 0x0048 (0x0048 - 0x0000)
struct ALS_Base_CharacterBP_C_GetLastMovementInputRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetLastMovementInputRotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetLastMovementInputRotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetLastMovementInputRotation) == 0x000048, "Wrong size on ALS_Base_CharacterBP_C_GetLastMovementInputRotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetLastMovementInputRotation, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetLastMovementInputRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetLastMovementInputRotation, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_GetLastMovementInputRotation::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetLastMovementInputRotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000030, "Member 'ALS_Base_CharacterBP_C_GetLastMovementInputRotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetLastVelocityRotation
// 0x0048 (0x0048 - 0x0000)
struct ALS_Base_CharacterBP_C_GetLastVelocityRotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetLastVelocityRotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetLastVelocityRotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetLastVelocityRotation) == 0x000048, "Wrong size on ALS_Base_CharacterBP_C_GetLastVelocityRotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetLastVelocityRotation, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetLastVelocityRotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetLastVelocityRotation, CallFunc_GetVelocity_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_GetLastVelocityRotation::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetLastVelocityRotation, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000030, "Member 'ALS_Base_CharacterBP_C_GetLastVelocityRotation::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetMantleAsset
// 0x0110 (0x0110 - 0x0000)
struct ALS_Base_CharacterBP_C_GetMantleAsset final
{
public:
	EMantleType                                   MantleType;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantle_Asset                          ReturnValue;                                       // 0x0008(0x0040)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Asset                          K2Node_MakeStruct_Mantle_Asset;                    // 0x0048(0x0040)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantle_Asset                          K2Node_MakeStruct_Mantle_Asset_1;                  // 0x0090(0x0040)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Asset                          K2Node_MakeStruct_Mantle_Asset_2;                  // 0x00D0(0x0040)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetMantleAsset) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetMantleAsset");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetMantleAsset) == 0x000110, "Wrong size on ALS_Base_CharacterBP_C_GetMantleAsset");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMantleAsset, MantleType) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetMantleAsset::MantleType' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMantleAsset, ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetMantleAsset::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMantleAsset, K2Node_MakeStruct_Mantle_Asset) == 0x000048, "Member 'ALS_Base_CharacterBP_C_GetMantleAsset::K2Node_MakeStruct_Mantle_Asset' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMantleAsset, K2Node_SwitchEnum_CmpSuccess) == 0x000088, "Member 'ALS_Base_CharacterBP_C_GetMantleAsset::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMantleAsset, K2Node_MakeStruct_Mantle_Asset_1) == 0x000090, "Member 'ALS_Base_CharacterBP_C_GetMantleAsset::K2Node_MakeStruct_Mantle_Asset_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMantleAsset, K2Node_MakeStruct_Mantle_Asset_2) == 0x0000D0, "Member 'ALS_Base_CharacterBP_C_GetMantleAsset::K2Node_MakeStruct_Mantle_Asset_2' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetMappedSpeed
// 0x0088 (0x0088 - 0x0000)
struct ALS_Base_CharacterBP_C_GetMappedSpeed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocSprintSpeed;                                    // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocRunSpeed;                                       // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        LocWalkSpeed;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeed_ReturnValue;                     // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeed_ReturnValue_1;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetSpeed_ReturnValue_2;                   // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default_1;                           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LocWalkSpeed_ImplicitCast;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LocRunSpeed_ImplicitCast;       // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_LocSprintSpeed_ImplicitCast;    // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetMappedSpeed) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetMappedSpeed");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetMappedSpeed) == 0x000088, "Wrong size on ALS_Base_CharacterBP_C_GetMappedSpeed");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, LocSprintSpeed) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::LocSprintSpeed' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, LocRunSpeed) == 0x000010, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::LocRunSpeed' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, LocWalkSpeed) == 0x000018, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::LocWalkSpeed' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, Temp_bool_Variable) == 0x000020, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, Temp_bool_Variable_1) == 0x000021, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, CallFunc_GetSpeed_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, CallFunc_GetSpeed_ReturnValue_1) == 0x000030, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::CallFunc_GetSpeed_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, CallFunc_GetSpeed_ReturnValue_2) == 0x000038, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::CallFunc_GetSpeed_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, CallFunc_MapRangeClamped_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000050, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000058, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000059, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, K2Node_Select_Default) == 0x000060, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, K2Node_Select_Default_1) == 0x000068, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, K2Node_VariableSet_LocWalkSpeed_ImplicitCast) == 0x000070, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::K2Node_VariableSet_LocWalkSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, K2Node_VariableSet_LocRunSpeed_ImplicitCast) == 0x000078, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::K2Node_VariableSet_LocRunSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMappedSpeed, K2Node_VariableSet_LocSprintSpeed_ImplicitCast) == 0x000080, "Member 'ALS_Base_CharacterBP_C_GetMappedSpeed::K2Node_VariableSet_LocSprintSpeed_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetMovementInputAmount
// 0x0040 (0x0040 - 0x0000)
struct ALS_Base_CharacterBP_C_GetMovementInputAmount final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCurrentAcceleration_ReturnValue;       // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAcceleration_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetMovementInputAmount) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetMovementInputAmount");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetMovementInputAmount) == 0x000040, "Wrong size on ALS_Base_CharacterBP_C_GetMovementInputAmount");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMovementInputAmount, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetMovementInputAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMovementInputAmount, CallFunc_GetCurrentAcceleration_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetMovementInputAmount::CallFunc_GetCurrentAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMovementInputAmount, CallFunc_GetMaxAcceleration_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_GetMovementInputAmount::CallFunc_GetMaxAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMovementInputAmount, CallFunc_VSize_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_GetMovementInputAmount::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMovementInputAmount, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000030, "Member 'ALS_Base_CharacterBP_C_GetMovementInputAmount::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetMovementInputAmount, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x000038, "Member 'ALS_Base_CharacterBP_C_GetMovementInputAmount::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetRollAnimation
// 0x0008 (0x0008 - 0x0000)
struct ALS_Base_CharacterBP_C_GetRollAnimation final
{
public:
	class UAnimMontage*                           ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetRollAnimation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetRollAnimation");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetRollAnimation) == 0x000008, "Wrong size on ALS_Base_CharacterBP_C_GetRollAnimation");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetRollAnimation, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetRollAnimation::ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetSpeed
// 0x0058 (0x0058 - 0x0000)
struct ALS_Base_CharacterBP_C_GetSpeed final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVelocity_ReturnValue;                  // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetSpeed) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetSpeed");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetSpeed) == 0x000058, "Wrong size on ALS_Base_CharacterBP_C_GetSpeed");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetSpeed, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetSpeed::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetSpeed, CallFunc_GetVelocity_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetSpeed::CallFunc_GetVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetSpeed, CallFunc_BreakVector_X) == 0x000020, "Member 'ALS_Base_CharacterBP_C_GetSpeed::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetSpeed, CallFunc_BreakVector_Y) == 0x000028, "Member 'ALS_Base_CharacterBP_C_GetSpeed::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetSpeed, CallFunc_BreakVector_Z) == 0x000030, "Member 'ALS_Base_CharacterBP_C_GetSpeed::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetSpeed, CallFunc_MakeVector_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_GetSpeed::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetSpeed, CallFunc_VSize_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_GetSpeed::CallFunc_VSize_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetTargetMovementSettings
// 0x0028 (0x0028 - 0x0000)
struct ALS_Base_CharacterBP_C_GetTargetMovementSettings final
{
public:
	struct FMovementSettings                      MovementSettings;                                  // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetTargetMovementSettings) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetTargetMovementSettings");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetTargetMovementSettings) == 0x000028, "Wrong size on ALS_Base_CharacterBP_C_GetTargetMovementSettings");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTargetMovementSettings, MovementSettings) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetTargetMovementSettings::MovementSettings' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTargetMovementSettings, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'ALS_Base_CharacterBP_C_GetTargetMovementSettings::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTargetMovementSettings, K2Node_SwitchEnum_CmpSuccess_1) == 0x000021, "Member 'ALS_Base_CharacterBP_C_GetTargetMovementSettings::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTargetMovementSettings, K2Node_SwitchEnum_CmpSuccess_2) == 0x000022, "Member 'ALS_Base_CharacterBP_C_GetTargetMovementSettings::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTargetMovementSettings, K2Node_SwitchEnum_CmpSuccess_3) == 0x000023, "Member 'ALS_Base_CharacterBP_C_GetTargetMovementSettings::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.GetTraceDebugType
// 0x0038 (0x0038 - 0x0000)
struct ALS_Base_CharacterBP_C_GetTraceDebugType final
{
public:
	EDrawDebugTrace                               ShowTraceType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IALS_Controller_BPI_C> K2Node_DynamicCast_AsALS_Controller_BPI;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_DebugView;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowHUD;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowTraces;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowDebugShapes;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowLayerColors;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_Slomo;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo;      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_GetTraceDebugType) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_GetTraceDebugType");
static_assert(sizeof(ALS_Base_CharacterBP_C_GetTraceDebugType) == 0x000038, "Wrong size on ALS_Base_CharacterBP_C_GetTraceDebugType");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, ShowTraceType) == 0x000000, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::ShowTraceType' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, ReturnValue) == 0x000001, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, K2Node_DynamicCast_AsALS_Controller_BPI) == 0x000010, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::K2Node_DynamicCast_AsALS_Controller_BPI' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter) == 0x000028, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_BPI_Get_DebugInfo_DebugView) == 0x000030, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_BPI_Get_DebugInfo_DebugView' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_BPI_Get_DebugInfo_ShowHUD) == 0x000031, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_BPI_Get_DebugInfo_ShowHUD' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_BPI_Get_DebugInfo_ShowTraces) == 0x000032, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_BPI_Get_DebugInfo_ShowTraces' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_BPI_Get_DebugInfo_ShowDebugShapes) == 0x000033, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_BPI_Get_DebugInfo_ShowDebugShapes' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_BPI_Get_DebugInfo_ShowLayerColors) == 0x000034, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_BPI_Get_DebugInfo_ShowLayerColors' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_BPI_Get_DebugInfo_Slomo) == 0x000035, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_BPI_Get_DebugInfo_Slomo' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_GetTraceDebugType, CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo) == 0x000036, "Member 'ALS_Base_CharacterBP_C_GetTraceDebugType::CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.HasMovementInput?
// 0x0018 (0x0018 - 0x0000)
struct ALS_Base_CharacterBP_C_HasMovementInput_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMovementInputAmount_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_HasMovementInput_) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_HasMovementInput_");
static_assert(sizeof(ALS_Base_CharacterBP_C_HasMovementInput_) == 0x000018, "Wrong size on ALS_Base_CharacterBP_C_HasMovementInput_");
static_assert(offsetof(ALS_Base_CharacterBP_C_HasMovementInput_, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_HasMovementInput_::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_HasMovementInput_, CallFunc_GetMovementInputAmount_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_HasMovementInput_::CallFunc_GetMovementInputAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_HasMovementInput_, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_HasMovementInput_::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Crouch_K2Node_EnhancedInputActionEvent_8::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_CrouchToggle_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_2::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jog_K2Node_EnhancedInputActionEvent_3::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_6::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Jump_K2Node_EnhancedInputActionEvent_7::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Move_K2Node_EnhancedInputActionEvent_9::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_4::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5
// 0x0030 (0x0030 - 0x0000)
struct ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5");
static_assert(sizeof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5) == 0x000030, "Wrong size on ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5, ActionValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5::ActionValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5, ElapsedTime) == 0x000020, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5::ElapsedTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5, TriggeredTime) == 0x000024, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5::TriggeredTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5, SourceAction) == 0x000028, "Member 'ALS_Base_CharacterBP_C_InpActEvt_IA_Sprint_K2Node_EnhancedInputActionEvent_5::SourceAction' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.IsMoving?
// 0x0018 (0x0018 - 0x0000)
struct ALS_Base_CharacterBP_C_IsMoving_ final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetSpeed_ReturnValue;                     // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_IsMoving_) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_IsMoving_");
static_assert(sizeof(ALS_Base_CharacterBP_C_IsMoving_) == 0x000018, "Wrong size on ALS_Base_CharacterBP_C_IsMoving_");
static_assert(offsetof(ALS_Base_CharacterBP_C_IsMoving_, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_IsMoving_::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_IsMoving_, CallFunc_GetSpeed_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_IsMoving_::CallFunc_GetSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_IsMoving_, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_IsMoving_::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.K2_OnEndCrouch
// 0x0008 (0x0008 - 0x0000)
struct ALS_Base_CharacterBP_C_K2_OnEndCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_K2_OnEndCrouch) == 0x000004, "Wrong alignment on ALS_Base_CharacterBP_C_K2_OnEndCrouch");
static_assert(sizeof(ALS_Base_CharacterBP_C_K2_OnEndCrouch) == 0x000008, "Wrong size on ALS_Base_CharacterBP_C_K2_OnEndCrouch");
static_assert(offsetof(ALS_Base_CharacterBP_C_K2_OnEndCrouch, HalfHeightAdjust) == 0x000000, "Member 'ALS_Base_CharacterBP_C_K2_OnEndCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_K2_OnEndCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'ALS_Base_CharacterBP_C_K2_OnEndCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.K2_OnMovementModeChanged
// 0x0004 (0x0004 - 0x0000)
struct ALS_Base_CharacterBP_C_K2_OnMovementModeChanged final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PrevCustomMode;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCustomMode;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_K2_OnMovementModeChanged) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_K2_OnMovementModeChanged");
static_assert(sizeof(ALS_Base_CharacterBP_C_K2_OnMovementModeChanged) == 0x000004, "Wrong size on ALS_Base_CharacterBP_C_K2_OnMovementModeChanged");
static_assert(offsetof(ALS_Base_CharacterBP_C_K2_OnMovementModeChanged, PrevMovementMode) == 0x000000, "Member 'ALS_Base_CharacterBP_C_K2_OnMovementModeChanged::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_K2_OnMovementModeChanged, NewMovementMode) == 0x000001, "Member 'ALS_Base_CharacterBP_C_K2_OnMovementModeChanged::NewMovementMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_K2_OnMovementModeChanged, PrevCustomMode) == 0x000002, "Member 'ALS_Base_CharacterBP_C_K2_OnMovementModeChanged::PrevCustomMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_K2_OnMovementModeChanged, NewCustomMode) == 0x000003, "Member 'ALS_Base_CharacterBP_C_K2_OnMovementModeChanged::NewCustomMode' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.K2_OnStartCrouch
// 0x0008 (0x0008 - 0x0000)
struct ALS_Base_CharacterBP_C_K2_OnStartCrouch final
{
public:
	float                                         HalfHeightAdjust;                                  // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         ScaledHalfHeightAdjust;                            // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_K2_OnStartCrouch) == 0x000004, "Wrong alignment on ALS_Base_CharacterBP_C_K2_OnStartCrouch");
static_assert(sizeof(ALS_Base_CharacterBP_C_K2_OnStartCrouch) == 0x000008, "Wrong size on ALS_Base_CharacterBP_C_K2_OnStartCrouch");
static_assert(offsetof(ALS_Base_CharacterBP_C_K2_OnStartCrouch, HalfHeightAdjust) == 0x000000, "Member 'ALS_Base_CharacterBP_C_K2_OnStartCrouch::HalfHeightAdjust' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_K2_OnStartCrouch, ScaledHalfHeightAdjust) == 0x000004, "Member 'ALS_Base_CharacterBP_C_K2_OnStartCrouch::ScaledHalfHeightAdjust' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.LimitRotation
// 0x00C0 (0x00C0 - 0x0000)
struct ALS_Base_CharacterBP_C_LimitRotation final
{
public:
	double                                        AimYawMin;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        AimYawMax;                                         // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_InRange_FloatFloat_Value_ImplicitCast;    // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_LimitRotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_LimitRotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_LimitRotation) == 0x0000C0, "Wrong size on ALS_Base_CharacterBP_C_LimitRotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, AimYawMin) == 0x000000, "Member 'ALS_Base_CharacterBP_C_LimitRotation::AimYawMin' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, AimYawMax) == 0x000008, "Member 'ALS_Base_CharacterBP_C_LimitRotation::AimYawMax' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, InterpSpeed) == 0x000010, "Member 'ALS_Base_CharacterBP_C_LimitRotation::InterpSpeed' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000048, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000060, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_BreakRotator_Roll_1) == 0x000068, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_BreakRotator_Pitch_1) == 0x00006C, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_BreakRotator_Yaw_1) == 0x000070, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000074, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000075, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_SelectFloat_ReturnValue) == 0x000078, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_MakeRotator_ReturnValue) == 0x000080, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000098, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0000A0, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_InRange_FloatFloat_Value_ImplicitCast) == 0x0000A8, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_InRange_FloatFloat_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_LimitRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0000B8, "Member 'ALS_Base_CharacterBP_C_LimitRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleCheck
// 0x0990 (0x0990 - 0x0000)
struct ALS_Base_CharacterBP_C_MantleCheck final
{
public:
	struct FMantle_TraceSettings                  Trace_Settings;                                    // 0x0000(0x0014)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugType;                                         // 0x0014(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Vault;                                             // 0x0015(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMantleType                                   MantleType;                                        // 0x0016(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17[0x1];                                       // 0x0017(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        MantleHeight;                                      // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             TargetTransform;                                   // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                DownTraceLocation;                                 // 0x0088(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitialTrace_Normal;                               // 0x00A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                InitialTrace_ImpactPoint;                          // 0x00B8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00D0(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x00E0(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               CallFunc_GetTraceDebugType_ReturnValue;            // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0xF];                                      // 0x0111(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             K2Node_MakeStruct_ALS_ComponentAndTransform;       // 0x0120(0x0070)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FALS_ComponentAndTransform             K2Node_MakeStruct_ALS_ComponentAndTransform_1;     // 0x0190(0x0070)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x7];                                      // 0x0201(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCalpsuleBaseLocation_ReturnValue;      // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCalpsuleBaseLocation_ReturnValue_1;    // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SphereTraceSingle_OutHit;                 // 0x0300(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SphereTraceSingle_ReturnValue;            // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E9[0x7];                                      // 0x03E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0470(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0478(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0498(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49C[0x4];                                      // 0x049C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x04F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x04F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0510(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0518(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0520(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_3;                 // 0x0528(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Player_Movement_Input_ReturnValue;    // 0x0540(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0558(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0570(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0588(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x05A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B8[0x8];                                      // 0x05B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             K2Node_MakeStruct_ALS_ComponentAndTransform_2;     // 0x05C0(0x0070)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingle_OutHit;                // 0x0648(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingle_ReturnValue;           // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue;                   // 0x0731(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_732[0x6];                                      // 0x0732(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorVector_ReturnValue;        // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0750(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_751[0x7];                                      // 0x0751(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0758(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_772[0x2];                                      // 0x0772(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0774(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_77C[0x4];                                      // 0x077C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x07C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x07E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x07F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x080C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_814[0x4];                                      // 0x0814(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0818(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0830(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetCapsuleLocationFromBase_ReturnValue;   // 0x0848(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0860(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x08C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x08C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x08C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CapsuleHasRoomCheck_HasRoom;              // 0x08C3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C4[0x4];                                      // 0x08C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x08C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x08E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x08F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue_1;                 // 0x0910(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_911[0x7];                                      // 0x0911(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0918(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0930(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_931[0x7];                                      // 0x0931(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_4;                          // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x0940(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0958(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_VectorFloat_B_ImplicitCast;      // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_CapsuleTraceSingle_HalfHeight_ImplicitCast; // 0x0988(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_MantleCheck) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_MantleCheck");
static_assert(sizeof(ALS_Base_CharacterBP_C_MantleCheck) == 0x000990, "Wrong size on ALS_Base_CharacterBP_C_MantleCheck");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, Trace_Settings) == 0x000000, "Member 'ALS_Base_CharacterBP_C_MantleCheck::Trace_Settings' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, DebugType) == 0x000014, "Member 'ALS_Base_CharacterBP_C_MantleCheck::DebugType' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, Vault) == 0x000015, "Member 'ALS_Base_CharacterBP_C_MantleCheck::Vault' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, MantleType) == 0x000016, "Member 'ALS_Base_CharacterBP_C_MantleCheck::MantleType' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, MantleHeight) == 0x000018, "Member 'ALS_Base_CharacterBP_C_MantleCheck::MantleHeight' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, TargetTransform) == 0x000020, "Member 'ALS_Base_CharacterBP_C_MantleCheck::TargetTransform' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, HitComponent) == 0x000080, "Member 'ALS_Base_CharacterBP_C_MantleCheck::HitComponent' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, DownTraceLocation) == 0x000088, "Member 'ALS_Base_CharacterBP_C_MantleCheck::DownTraceLocation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, InitialTrace_Normal) == 0x0000A0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::InitialTrace_Normal' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, InitialTrace_ImpactPoint) == 0x0000B8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::InitialTrace_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, Temp_object_Variable) == 0x0000D0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, Temp_object_Variable_1) == 0x0000E0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_K2_GetActorLocation_ReturnValue) == 0x0000F8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_GetTraceDebugType_ReturnValue) == 0x000110, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_GetTraceDebugType_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, K2Node_MakeStruct_ALS_ComponentAndTransform) == 0x000120, "Member 'ALS_Base_CharacterBP_C_MantleCheck::K2Node_MakeStruct_ALS_ComponentAndTransform' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, K2Node_MakeStruct_ALS_ComponentAndTransform_1) == 0x000190, "Member 'ALS_Base_CharacterBP_C_MantleCheck::K2Node_MakeStruct_ALS_ComponentAndTransform_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_HasAuthority_ReturnValue) == 0x000200, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_GetCalpsuleBaseLocation_ReturnValue) == 0x000208, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_GetCalpsuleBaseLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_X) == 0x000220, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Y) == 0x000228, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Z) == 0x000230, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_GetCalpsuleBaseLocation_ReturnValue_1) == 0x000238, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_GetCalpsuleBaseLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000250, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_X_1) == 0x000268, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Y_1) == 0x000270, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Z_1) == 0x000278, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_MakeVector_ReturnValue) == 0x000280, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_VectorVector_ReturnValue) == 0x000298, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0002B0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0002B8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_MakeVector_ReturnValue_1) == 0x0002C0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0002D8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0002E0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0002F8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_SphereTraceSingle_OutHit) == 0x000300, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_SphereTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_SphereTraceSingle_ReturnValue) == 0x0003E8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_SphereTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x0003F0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_bBlockingHit) == 0x0003F8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_bInitialOverlap) == 0x0003F9, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_Time) == 0x0003FC, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_Distance) == 0x000400, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_Location) == 0x000408, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_ImpactPoint) == 0x000420, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_Normal) == 0x000438, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_ImpactNormal) == 0x000450, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_PhysMat) == 0x000468, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_HitActor) == 0x000470, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_HitComponent) == 0x000478, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_HitBoneName) == 0x000480, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_BoneName) == 0x000488, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_HitItem) == 0x000490, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_ElementIndex) == 0x000494, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_FaceIndex) == 0x000498, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_TraceStart) == 0x0004A0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_TraceEnd) == 0x0004B8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x0004D0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0004D8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_X_2) == 0x0004E0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Y_2) == 0x0004E8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Z_2) == 0x0004F0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_MakeVector_ReturnValue_2) == 0x0004F8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_X_3) == 0x000510, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Y_3) == 0x000518, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Z_3) == 0x000520, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_MakeVector_ReturnValue_3) == 0x000528, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_MakeVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Get_Player_Movement_Input_ReturnValue) == 0x000540, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Get_Player_Movement_Input_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000558, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000570, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000588, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0005A0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, K2Node_MakeStruct_ALS_ComponentAndTransform_2) == 0x0005C0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::K2Node_MakeStruct_ALS_ComponentAndTransform_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000630, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_CapsuleTraceSingle_OutHit) == 0x000648, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_CapsuleTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_CapsuleTraceSingle_ReturnValue) == 0x000730, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_CapsuleTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_IsWalkable_ReturnValue) == 0x000731, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_IsWalkable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Multiply_VectorVector_ReturnValue) == 0x000738, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Multiply_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Not_PreBool_ReturnValue) == 0x000750, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000758, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000770, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000771, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_Time_1) == 0x000774, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_Distance_1) == 0x000778, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_Location_1) == 0x000780, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000798, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_Normal_1) == 0x0007B0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0007C8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_PhysMat_1) == 0x0007E0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_HitActor_1) == 0x0007E8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_HitComponent_1) == 0x0007F0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_HitBoneName_1) == 0x0007F8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_BoneName_1) == 0x000800, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_HitItem_1) == 0x000808, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_ElementIndex_1) == 0x00080C, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_FaceIndex_1) == 0x000810, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_TraceStart_1) == 0x000818, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakHitResult_TraceEnd_1) == 0x000830, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_GetCapsuleLocationFromBase_ReturnValue) == 0x000848, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_GetCapsuleLocationFromBase_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_MakeTransform_ReturnValue) == 0x000860, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Not_PreBool_ReturnValue_1) == 0x0008C0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BooleanAND_ReturnValue) == 0x0008C1, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BooleanAND_ReturnValue_1) == 0x0008C2, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_CapsuleHasRoomCheck_HasRoom) == 0x0008C3, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_CapsuleHasRoomCheck_HasRoom' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakTransform_Location) == 0x0008C8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakTransform_Rotation) == 0x0008E0, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakTransform_Scale) == 0x0008F8, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_IsWalkable_ReturnValue_1) == 0x000910, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_IsWalkable_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000918, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BooleanAND_ReturnValue_2) == 0x000930, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_X_4) == 0x000938, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Y_4) == 0x000940, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_BreakVector_Z_4) == 0x000948, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000950, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000958, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000960, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000968, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000970, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000978, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_Multiply_VectorFloat_B_ImplicitCast) == 0x000980, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_Multiply_VectorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleCheck, CallFunc_CapsuleTraceSingle_HalfHeight_ImplicitCast) == 0x000988, "Member 'ALS_Base_CharacterBP_C_MantleCheck::CallFunc_CapsuleTraceSingle_HalfHeight_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleStart
// 0x08B0 (0x08B0 - 0x0000)
struct ALS_Base_CharacterBP_C_MantleStart final
{
public:
	double                                        MantleHeight;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             MantleLedgeWS;                                     // 0x0010(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EMantleType                                   MantleType;                                        // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantle_Asset                          MantleAsset;                                       // 0x0088(0x0040)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FMantle_Asset                          CallFunc_GetMantleAsset_ReturnValue;               // 0x00D0(0x0040)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMantle_Params                         K2Node_MakeStruct_Mantle_Params;                   // 0x0120(0x0030)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x3];                                      // 0x0151(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Montage_Play_ReturnValue;                 // 0x0154(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_158[0x8];                                      // 0x0158(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_InvertTransform_ReturnValue;              // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_268[0x8];                                      // 0x0268(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0270(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x02D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x02D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x02D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2DC[0x4];                                      // 0x02DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             K2Node_MakeStruct_ALS_ComponentAndTransform;       // 0x02E0(0x0070)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0350(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x03E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0408(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x0420(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x0438(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0450(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x0468(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x0480(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x04B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x04B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4BC[0x4];                                      // 0x04BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Conv_RotatorToVector_ReturnValue;         // 0x04C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x04D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x04E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x04E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x04F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0508(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0520(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0580(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0588(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0590(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0608(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_2;      // 0x0628(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0640(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x06A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x06B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x06D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_3;      // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MinTime;                     // 0x0700(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetTimeRange_MaxTime;                     // 0x0704(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x0708(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x070C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0710(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_714[0x4];                                      // 0x0714(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_3;      // 0x0718(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_4;      // 0x0720(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_5;      // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_6;      // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_4;      // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0750(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_768[0x8];                                      // 0x0768(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0770(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast;    // 0x07D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1;  // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeA_ImplicitCast;   // 0x07E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeA_ImplicitCast_1; // 0x07E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast;    // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1;  // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast;   // 0x0800(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1; // 0x0808(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_StartingPosition_15_6F68E2244B632497DCA448A29CBDA0C8_ImplicitCast; // 0x0810(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_PlayRate_13_BBABD3264A1E44D275287FAE4C6D5556_ImplicitCast; // 0x0814(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x0818(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1;   // 0x0820(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2;   // 0x0828(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0830(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1;   // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2;   // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3;   // 0x0848(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_4;   // 0x0850(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_5;   // 0x0858(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0860(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0864(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0868(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_86C[0x4];                                      // 0x086C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast_6;   // 0x0870(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3;   // 0x0878(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_4;   // 0x0880(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_5;   // 0x0888(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast_6;   // 0x0890(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetTimelineLength_NewLength_ImplicitCast; // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x089C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x08A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x08A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_MantleStart) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_MantleStart");
static_assert(sizeof(ALS_Base_CharacterBP_C_MantleStart) == 0x0008B0, "Wrong size on ALS_Base_CharacterBP_C_MantleStart");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, MantleHeight) == 0x000000, "Member 'ALS_Base_CharacterBP_C_MantleStart::MantleHeight' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, MantleLedgeWS) == 0x000010, "Member 'ALS_Base_CharacterBP_C_MantleStart::MantleLedgeWS' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, MantleType) == 0x000080, "Member 'ALS_Base_CharacterBP_C_MantleStart::MantleType' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, MantleAsset) == 0x000088, "Member 'ALS_Base_CharacterBP_C_MantleStart::MantleAsset' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_IsValid_ReturnValue) == 0x0000C8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_GetMantleAsset_ReturnValue) == 0x0000D0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_GetMantleAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_ReturnValue) == 0x000110, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000118, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, K2Node_MakeStruct_Mantle_Params) == 0x000120, "Member 'ALS_Base_CharacterBP_C_MantleStart::K2Node_MakeStruct_Mantle_Params' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_IsValid_ReturnValue_1) == 0x000150, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Montage_Play_ReturnValue) == 0x000154, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Montage_Play_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x000160, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_InvertTransform_ReturnValue) == 0x0001C0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_InvertTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Location) == 0x000220, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Rotation) == 0x000238, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Scale) == 0x000250, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_ComposeTransforms_ReturnValue) == 0x000270, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Roll) == 0x0002D0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Pitch) == 0x0002D4, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Yaw) == 0x0002D8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, K2Node_MakeStruct_ALS_ComponentAndTransform) == 0x0002E0, "Member 'ALS_Base_CharacterBP_C_MantleStart::K2Node_MakeStruct_ALS_ComponentAndTransform' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_GetTransform_ReturnValue) == 0x000350, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Location_1) == 0x0003B0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Rotation_1) == 0x0003C8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Scale_1) == 0x0003E0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Roll_1) == 0x0003F8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Pitch_1) == 0x0003FC, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Yaw_1) == 0x000400, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Location_2) == 0x000408, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Rotation_2) == 0x000420, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Scale_2) == 0x000438, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000450, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Location_3) == 0x000468, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Rotation_3) == 0x000480, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Scale_3) == 0x000498, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Roll_2) == 0x0004B0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Pitch_2) == 0x0004B4, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Yaw_2) == 0x0004B8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Conv_RotatorToVector_ReturnValue) == 0x0004C0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Conv_RotatorToVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0004D8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0004E0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x0004E8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x0004F0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeRotator_ReturnValue) == 0x000508, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeTransform_ReturnValue) == 0x000520, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakVector_X) == 0x000580, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakVector_Y) == 0x000588, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakVector_Z) == 0x000590, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000598, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Location_4) == 0x0005B0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Rotation_4) == 0x0005C8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Scale_4) == 0x0005E0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakVector_X_1) == 0x0005F8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakVector_Y_1) == 0x000600, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakVector_Z_1) == 0x000608, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeVector_ReturnValue) == 0x000610, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_VectorVector_ReturnValue_2) == 0x000628, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeTransform_ReturnValue_1) == 0x000640, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Location_5) == 0x0006A0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Rotation_5) == 0x0006B8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakTransform_Scale_5) == 0x0006D0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_VectorVector_ReturnValue_3) == 0x0006E8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_GetTimeRange_MinTime) == 0x000700, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_GetTimeRange_MinTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_GetTimeRange_MaxTime) == 0x000704, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_GetTimeRange_MaxTime' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Roll_3) == 0x000708, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Pitch_3) == 0x00070C, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_BreakRotator_Yaw_3) == 0x000710, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_ReturnValue_3) == 0x000718, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_ReturnValue_4) == 0x000720, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_ReturnValue_5) == 0x000728, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_ReturnValue_6) == 0x000730, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_VectorVector_ReturnValue_4) == 0x000738, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeRotator_ReturnValue_1) == 0x000750, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeTransform_ReturnValue_2) == 0x000770, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_InRangeA_ImplicitCast) == 0x0007D0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_InRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1) == 0x0007D8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_InRangeA_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_OutRangeA_ImplicitCast) == 0x0007E0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_OutRangeA_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_OutRangeA_ImplicitCast_1) == 0x0007E8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_OutRangeA_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_InRangeB_ImplicitCast) == 0x0007F0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_InRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1) == 0x0007F8, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_InRangeB_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast) == 0x000800, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1) == 0x000808, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MapRangeClamped_OutRangeB_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, K2Node_MakeStruct_StartingPosition_15_6F68E2244B632497DCA448A29CBDA0C8_ImplicitCast) == 0x000810, "Member 'ALS_Base_CharacterBP_C_MantleStart::K2Node_MakeStruct_StartingPosition_15_6F68E2244B632497DCA448A29CBDA0C8_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, K2Node_MakeStruct_PlayRate_13_BBABD3264A1E44D275287FAE4C6D5556_ImplicitCast) == 0x000814, "Member 'ALS_Base_CharacterBP_C_MantleStart::K2Node_MakeStruct_PlayRate_13_BBABD3264A1E44D275287FAE4C6D5556_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x000818, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1) == 0x000820, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2) == 0x000828, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000830, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1) == 0x000838, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2) == 0x000840, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3) == 0x000848, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_4) == 0x000850, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_5) == 0x000858, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000860, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000864, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000868, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_B_ImplicitCast_6) == 0x000870, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3) == 0x000878, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_4) == 0x000880, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_5) == 0x000888, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_Subtract_DoubleDouble_A_ImplicitCast_6) == 0x000890, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_Subtract_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_SetTimelineLength_NewLength_ImplicitCast) == 0x000898, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_SetTimelineLength_NewLength_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x00089C, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x0008A0, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleStart, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x0008A4, "Member 'ALS_Base_CharacterBP_C_MantleStart::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.MantleUpdate
// 0x0C10 (0x0C10 - 0x0000)
struct ALS_Base_CharacterBP_C_MantleUpdate final
{
public:
	double                                        BlendIn;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             LerpedTarget;                                      // 0x0010(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ZCorrectionAlpha;                                  // 0x0070(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        XYCorrectionAlpha;                                 // 0x0078(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        PositionAlpha;                                     // 0x0080(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_SetActorLocationAndRotation_UpdateTarget__SweepHitResult; // 0x00D0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_SetActorLocationAndRotation_UpdateTarget__ReturnValue; // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_K2_GetComponentToWorld_ReturnValue;       // 0x01C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0220(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FALS_ComponentAndTransform             K2Node_MakeStruct_ALS_ComponentAndTransform;       // 0x0280(0x0070)(NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	float                                         CallFunc_GetPlaybackPosition_ReturnValue;          // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0310(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x034C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0388(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x03A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x03B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x03D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x03E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x03F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x03F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0428(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0440(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x04A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0530(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0538(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0550(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_578[0x8];                                      // 0x0578(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0580(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0610(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_628[0x8];                                      // 0x0628(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue;                        // 0x0630(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0690(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0698(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x06A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x06A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x06C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x06D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x06F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x0700(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_7;                // 0x0708(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_7;                // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_7;                   // 0x0738(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x0750(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x0758(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0768(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_8;                // 0x0780(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_8;                // 0x0798(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_8;                   // 0x07B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C8[0x8];                                      // 0x07C8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x07D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0830(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0838(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_83C[0x4];                                      // 0x083C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_TLerp_ReturnValue_1;                      // 0x0840(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_9;                // 0x08A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_9;                // 0x08B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_9;                   // 0x08D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0900(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_918[0x8];                                      // 0x0918(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0920(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_10;               // 0x0980(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_10;               // 0x0998(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_10;                  // 0x09B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x09C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x09E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_3;                      // 0x09F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_3;                     // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_3;                       // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A04[0x4];                                      // 0x0A04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0A08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0A20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A38[0x8];                                      // 0x0A38(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0A40(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TLerp_ReturnValue_2;                      // 0x0AA0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_TLerp_ReturnValue_3;                      // 0x0B00(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TLerp_Alpha_ImplicitCast;                 // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B64[0x4];                                      // 0x0B64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0B70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorValue_InTime_ImplicitCast;       // 0x0B78(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B7C[0x4];                                      // 0x0B7C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0B80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x0B88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_3;        // 0x0B90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_1;        // 0x0B98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_2;        // 0x0BA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_3;        // 0x0BA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0BB0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0BB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0BB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TLerp_Alpha_ImplicitCast_1;               // 0x0BBC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TLerp_Alpha_ImplicitCast_2;               // 0x0BC0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_TLerp_Alpha_ImplicitCast_3;               // 0x0BC4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_4;        // 0x0BC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_5;        // 0x0BD0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_6;        // 0x0BD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_4;        // 0x0BE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_5;        // 0x0BE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast_6;        // 0x0BF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0BF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast_1;           // 0x0BFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0C00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_MantleUpdate) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_MantleUpdate");
static_assert(sizeof(ALS_Base_CharacterBP_C_MantleUpdate) == 0x000C10, "Wrong size on ALS_Base_CharacterBP_C_MantleUpdate");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, BlendIn) == 0x000000, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::BlendIn' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, LerpedTarget) == 0x000010, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::LerpedTarget' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, ZCorrectionAlpha) == 0x000070, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::ZCorrectionAlpha' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, XYCorrectionAlpha) == 0x000078, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::XYCorrectionAlpha' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, PositionAlpha) == 0x000080, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::PositionAlpha' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location) == 0x000088, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation) == 0x0000A0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale) == 0x0000B8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_SetActorLocationAndRotation_UpdateTarget__SweepHitResult) == 0x0000D0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_SetActorLocationAndRotation_UpdateTarget__SweepHitResult' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_SetActorLocationAndRotation_UpdateTarget__ReturnValue) == 0x0001B8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_SetActorLocationAndRotation_UpdateTarget__ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_K2_GetComponentToWorld_ReturnValue) == 0x0001C0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_K2_GetComponentToWorld_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_ComposeTransforms_ReturnValue) == 0x000220, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, K2Node_MakeStruct_ALS_ComponentAndTransform) == 0x000280, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::K2Node_MakeStruct_ALS_ComponentAndTransform' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_GetPlaybackPosition_ReturnValue) == 0x0002F0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_GetPlaybackPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_1) == 0x0002F8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_1) == 0x000310, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_1) == 0x000328, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000340, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Roll) == 0x000348, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Pitch) == 0x00034C, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Yaw) == 0x000350, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_GetVectorValue_ReturnValue) == 0x000358, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_X) == 0x000370, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Y) == 0x000378, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Z) == 0x000380, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_2) == 0x000388, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_2) == 0x0003A0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_2) == 0x0003B8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_VectorVector_ReturnValue) == 0x0003D0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Roll_1) == 0x0003E8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Pitch_1) == 0x0003EC, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Yaw_1) == 0x0003F0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0003F8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000410, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000418, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000420, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeRotator_ReturnValue) == 0x000428, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeTransform_ReturnValue) == 0x000440, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_3) == 0x0004A0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_3) == 0x0004B8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_3) == 0x0004D0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_4) == 0x0004E8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_4) == 0x000500, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_4) == 0x000518, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_X_1) == 0x000530, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Y_1) == 0x000538, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Z_1) == 0x000540, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_X_2) == 0x000548, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Y_2) == 0x000550, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Z_2) == 0x000558, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeVector_ReturnValue) == 0x000560, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeTransform_ReturnValue_1) == 0x000580, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_5) == 0x0005E0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_5) == 0x0005F8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_5) == 0x000610, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_TLerp_ReturnValue) == 0x000630, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_TLerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_X_3) == 0x000690, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Y_3) == 0x000698, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Z_3) == 0x0006A0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_6) == 0x0006A8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_6) == 0x0006C0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_6) == 0x0006D8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_X_4) == 0x0006F0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Y_4) == 0x0006F8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Z_4) == 0x000700, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_7) == 0x000708, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_7) == 0x000720, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_7) == 0x000738, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_7' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_X_5) == 0x000750, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Y_5) == 0x000758, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Z_5) == 0x000760, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeVector_ReturnValue_1) == 0x000768, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_8) == 0x000780, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_8) == 0x000798, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_8) == 0x0007B0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_8' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeTransform_ReturnValue_2) == 0x0007D0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Roll_2) == 0x000830, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Pitch_2) == 0x000834, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Yaw_2) == 0x000838, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_TLerp_ReturnValue_1) == 0x000840, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_TLerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_9) == 0x0008A0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_9) == 0x0008B8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_9) == 0x0008D0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_9' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_X_6) == 0x0008E8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Y_6) == 0x0008F0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakVector_Z_6) == 0x0008F8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeVector_ReturnValue_2) == 0x000900, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeTransform_ReturnValue_3) == 0x000920, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Location_10) == 0x000980, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Location_10' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Rotation_10) == 0x000998, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Rotation_10' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakTransform_Scale_10) == 0x0009B0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakTransform_Scale_10' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0009C8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0009E0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Roll_3) == 0x0009F8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Roll_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Pitch_3) == 0x0009FC, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Pitch_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_BreakRotator_Yaw_3) == 0x000A00, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_BreakRotator_Yaw_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000A08, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x000A10, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000A18, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeRotator_ReturnValue_1) == 0x000A20, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeTransform_ReturnValue_4) == 0x000A40, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_TLerp_ReturnValue_2) == 0x000AA0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_TLerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_TLerp_ReturnValue_3) == 0x000B00, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_TLerp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_TLerp_Alpha_ImplicitCast) == 0x000B60, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_TLerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000B68, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000B70, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_GetVectorValue_InTime_ImplicitCast) == 0x000B78, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_GetVectorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000B80, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x000B88, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_A_ImplicitCast_3) == 0x000B90, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_B_ImplicitCast_1) == 0x000B98, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_B_ImplicitCast_2) == 0x000BA0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_B_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_B_ImplicitCast_3) == 0x000BA8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_B_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000BB0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000BB4, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000BB8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_TLerp_Alpha_ImplicitCast_1) == 0x000BBC, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_TLerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_TLerp_Alpha_ImplicitCast_2) == 0x000BC0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_TLerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_TLerp_Alpha_ImplicitCast_3) == 0x000BC4, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_TLerp_Alpha_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_A_ImplicitCast_4) == 0x000BC8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_A_ImplicitCast_5) == 0x000BD0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_A_ImplicitCast_6) == 0x000BD8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_B_ImplicitCast_4) == 0x000BE0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_B_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_B_ImplicitCast_5) == 0x000BE8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_B_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_Add_DoubleDouble_B_ImplicitCast_6) == 0x000BF0, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_Add_DoubleDouble_B_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000BF8, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeRotator_Yaw_ImplicitCast_1) == 0x000BFC, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeRotator_Yaw_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_MantleUpdate, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000C00, "Member 'ALS_Base_CharacterBP_C_MantleUpdate::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Multicast Mantle
// 0x0090 (0x0090 - 0x0000)
struct ALS_Base_CharacterBP_C_Multicast_Mantle final
{
public:
	double                                        MantleHeight;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             MantleLedgeWS;                                     // 0x0010(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EMantleType                                   MantleType;                                        // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Multicast_Mantle) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_Multicast_Mantle");
static_assert(sizeof(ALS_Base_CharacterBP_C_Multicast_Mantle) == 0x000090, "Wrong size on ALS_Base_CharacterBP_C_Multicast_Mantle");
static_assert(offsetof(ALS_Base_CharacterBP_C_Multicast_Mantle, MantleHeight) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Multicast_Mantle::MantleHeight' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Multicast_Mantle, MantleLedgeWS) == 0x000010, "Member 'ALS_Base_CharacterBP_C_Multicast_Mantle::MantleLedgeWS' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Multicast_Mantle, MantleType) == 0x000080, "Member 'ALS_Base_CharacterBP_C_Multicast_Mantle::MantleType' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.On Begin Play
// 0x00A0 (0x00A0 - 0x0000)
struct ALS_Base_CharacterBP_C_On_Begin_Play final
{
public:
	class ACharacter*                             CallFunc_GetPlayerCharacter_ReturnValue;           // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue_1;        // 0x0020(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0028(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam;                   // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBP_MenuControllerComponent_C*          CallFunc_Get_BP_Menu_Controller_Component_BP_Menu_Controller_Component; // 0x0050(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam;                   // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x0072(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0073(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_75[0x3];                                       // 0x0075(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue_1;            // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_On_Begin_Play) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_On_Begin_Play");
static_assert(sizeof(ALS_Base_CharacterBP_C_On_Begin_Play) == 0x0000A0, "Wrong size on ALS_Base_CharacterBP_C_On_Begin_Play");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_GetPlayerCharacter_ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_GetPlayerCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x000008, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_GetLocalRole_ReturnValue) == 0x000011, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_GetPlayerController_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_GetPlayerController_ReturnValue_1) == 0x000020, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_GetPlayerController_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_DynamicCast_AsBodycam_Interface) == 0x000028, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_DynamicCast_bSuccess_1) == 0x000038, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_DynamicCast_AsPC_Bodycam) == 0x000040, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_DynamicCast_AsPC_Bodycam' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_DynamicCast_bSuccess_2) == 0x000048, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_Get_BP_Menu_Controller_Component_BP_Menu_Controller_Component) == 0x000050, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_Get_BP_Menu_Controller_Component_BP_Menu_Controller_Component' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_GetAnimInstance_ReturnValue) == 0x000058, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_GetGameState_ReturnValue) == 0x000060, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_DynamicCast_AsGT_Bodycam) == 0x000068, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_DynamicCast_AsGT_Bodycam' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_DynamicCast_bSuccess_3) == 0x000070, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, K2Node_SwitchEnum_CmpSuccess) == 0x000071, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_MakeLiteralByte_ReturnValue) == 0x000072, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_HasAuthority_ReturnValue) == 0x000073, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000074, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000078, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_GetAnimInstance_ReturnValue_1) == 0x000090, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_GetAnimInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Begin_Play, CallFunc_IsValid_ReturnValue) == 0x000098, "Member 'ALS_Base_CharacterBP_C_On_Begin_Play::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.On Character Movement Mode Changed
// 0x0005 (0x0005 - 0x0000)
struct ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed final
{
public:
	EMovementMode                                 PrevMovementMode;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 NewMovementMode;                                   // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         PrevCustomMode;                                    // 0x0002(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         NewCustomMode;                                     // 0x0003(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed");
static_assert(sizeof(ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed) == 0x000005, "Wrong size on ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed, PrevMovementMode) == 0x000000, "Member 'ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed::PrevMovementMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed, NewMovementMode) == 0x000001, "Member 'ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed::NewMovementMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed, PrevCustomMode) == 0x000002, "Member 'ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed::PrevCustomMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed, NewCustomMode) == 0x000003, "Member 'ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed::NewCustomMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed, K2Node_SwitchEnum_CmpSuccess) == 0x000004, "Member 'ALS_Base_CharacterBP_C_On_Character_Movement_Mode_Changed::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnGaitChanged
// 0x0003 (0x0003 - 0x0000)
struct ALS_Base_CharacterBP_C_OnGaitChanged final
{
public:
	EALS_Gait                                     NewActualGait;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     PreviousActualGait;                                // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_OnGaitChanged) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_OnGaitChanged");
static_assert(sizeof(ALS_Base_CharacterBP_C_OnGaitChanged) == 0x000003, "Wrong size on ALS_Base_CharacterBP_C_OnGaitChanged");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnGaitChanged, NewActualGait) == 0x000000, "Member 'ALS_Base_CharacterBP_C_OnGaitChanged::NewActualGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnGaitChanged, PreviousActualGait) == 0x000001, "Member 'ALS_Base_CharacterBP_C_OnGaitChanged::PreviousActualGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnGaitChanged, CallFunc_IsLocallyControlled_ReturnValue) == 0x000002, "Member 'ALS_Base_CharacterBP_C_OnGaitChanged::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnLanded
// 0x00E8 (0x00E8 - 0x0000)
struct ALS_Base_CharacterBP_C_OnLanded final
{
public:
	struct FHitResult                             Hit;                                               // 0x0000(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(ALS_Base_CharacterBP_C_OnLanded) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_OnLanded");
static_assert(sizeof(ALS_Base_CharacterBP_C_OnLanded) == 0x0000E8, "Wrong size on ALS_Base_CharacterBP_C_OnLanded");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnLanded, Hit) == 0x000000, "Member 'ALS_Base_CharacterBP_C_OnLanded::Hit' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnMovementActionChanged
// 0x0005 (0x0005 - 0x0000)
struct ALS_Base_CharacterBP_C_OnMovementActionChanged final
{
public:
	EALS_MovementAction                           NewMovementAction;                                 // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           PreviousMovementAction;                            // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_OnMovementActionChanged) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_OnMovementActionChanged");
static_assert(sizeof(ALS_Base_CharacterBP_C_OnMovementActionChanged) == 0x000005, "Wrong size on ALS_Base_CharacterBP_C_OnMovementActionChanged");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementActionChanged, NewMovementAction) == 0x000000, "Member 'ALS_Base_CharacterBP_C_OnMovementActionChanged::NewMovementAction' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementActionChanged, PreviousMovementAction) == 0x000001, "Member 'ALS_Base_CharacterBP_C_OnMovementActionChanged::PreviousMovementAction' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementActionChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'ALS_Base_CharacterBP_C_OnMovementActionChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementActionChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x000003, "Member 'ALS_Base_CharacterBP_C_OnMovementActionChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementActionChanged, K2Node_SwitchEnum_CmpSuccess_2) == 0x000004, "Member 'ALS_Base_CharacterBP_C_OnMovementActionChanged::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnMovementStateChanged
// 0x0028 (0x0028 - 0x0000)
struct ALS_Base_CharacterBP_C_OnMovementStateChanged final
{
public:
	EALS_MovementState                            NewMovementState;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            PreviousMovementState;                             // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_OnMovementStateChanged) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_OnMovementStateChanged");
static_assert(sizeof(ALS_Base_CharacterBP_C_OnMovementStateChanged) == 0x000028, "Wrong size on ALS_Base_CharacterBP_C_OnMovementStateChanged");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementStateChanged, NewMovementState) == 0x000000, "Member 'ALS_Base_CharacterBP_C_OnMovementStateChanged::NewMovementState' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementStateChanged, PreviousMovementState) == 0x000001, "Member 'ALS_Base_CharacterBP_C_OnMovementStateChanged::PreviousMovementState' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementStateChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'ALS_Base_CharacterBP_C_OnMovementStateChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementStateChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x000003, "Member 'ALS_Base_CharacterBP_C_OnMovementStateChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementStateChanged, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_OnMovementStateChanged::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementStateChanged, K2Node_SwitchEnum_CmpSuccess_2) == 0x000020, "Member 'ALS_Base_CharacterBP_C_OnMovementStateChanged::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnMovementStateChanged, K2Node_SwitchEnum_CmpSuccess_3) == 0x000021, "Member 'ALS_Base_CharacterBP_C_OnMovementStateChanged::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnOverlayStateChanged
// 0x0002 (0x0002 - 0x0000)
struct ALS_Base_CharacterBP_C_OnOverlayStateChanged final
{
public:
	EALS_OverlayState                             NewOverlayState;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             PreviousOverlayState;                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_OnOverlayStateChanged) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_OnOverlayStateChanged");
static_assert(sizeof(ALS_Base_CharacterBP_C_OnOverlayStateChanged) == 0x000002, "Wrong size on ALS_Base_CharacterBP_C_OnOverlayStateChanged");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnOverlayStateChanged, NewOverlayState) == 0x000000, "Member 'ALS_Base_CharacterBP_C_OnOverlayStateChanged::NewOverlayState' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnOverlayStateChanged, PreviousOverlayState) == 0x000001, "Member 'ALS_Base_CharacterBP_C_OnOverlayStateChanged::PreviousOverlayState' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnRotationModeChanged
// 0x0004 (0x0004 - 0x0000)
struct ALS_Base_CharacterBP_C_OnRotationModeChanged final
{
public:
	EALS_RotationMode                             NewRotationMode;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             PreviousRotationMode;                              // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_OnRotationModeChanged) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_OnRotationModeChanged");
static_assert(sizeof(ALS_Base_CharacterBP_C_OnRotationModeChanged) == 0x000004, "Wrong size on ALS_Base_CharacterBP_C_OnRotationModeChanged");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnRotationModeChanged, NewRotationMode) == 0x000000, "Member 'ALS_Base_CharacterBP_C_OnRotationModeChanged::NewRotationMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnRotationModeChanged, PreviousRotationMode) == 0x000001, "Member 'ALS_Base_CharacterBP_C_OnRotationModeChanged::PreviousRotationMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnRotationModeChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'ALS_Base_CharacterBP_C_OnRotationModeChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnRotationModeChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x000003, "Member 'ALS_Base_CharacterBP_C_OnRotationModeChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnStanceChanged
// 0x0002 (0x0002 - 0x0000)
struct ALS_Base_CharacterBP_C_OnStanceChanged final
{
public:
	EALS_Stance                                   NewStance;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Stance                                   PreviousStance;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_OnStanceChanged) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_OnStanceChanged");
static_assert(sizeof(ALS_Base_CharacterBP_C_OnStanceChanged) == 0x000002, "Wrong size on ALS_Base_CharacterBP_C_OnStanceChanged");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnStanceChanged, NewStance) == 0x000000, "Member 'ALS_Base_CharacterBP_C_OnStanceChanged::NewStance' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnStanceChanged, PreviousStance) == 0x000001, "Member 'ALS_Base_CharacterBP_C_OnStanceChanged::PreviousStance' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.OnViewModeChanged
// 0x0005 (0x0005 - 0x0000)
struct ALS_Base_CharacterBP_C_OnViewModeChanged final
{
public:
	EALS_ViewMode                                 NewViewMode;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 PreviousViewMode;                                  // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_OnViewModeChanged) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_OnViewModeChanged");
static_assert(sizeof(ALS_Base_CharacterBP_C_OnViewModeChanged) == 0x000005, "Wrong size on ALS_Base_CharacterBP_C_OnViewModeChanged");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnViewModeChanged, NewViewMode) == 0x000000, "Member 'ALS_Base_CharacterBP_C_OnViewModeChanged::NewViewMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnViewModeChanged, PreviousViewMode) == 0x000001, "Member 'ALS_Base_CharacterBP_C_OnViewModeChanged::PreviousViewMode' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnViewModeChanged, K2Node_SwitchEnum_CmpSuccess) == 0x000002, "Member 'ALS_Base_CharacterBP_C_OnViewModeChanged::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnViewModeChanged, K2Node_SwitchEnum_CmpSuccess_1) == 0x000003, "Member 'ALS_Base_CharacterBP_C_OnViewModeChanged::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_OnViewModeChanged, K2Node_SwitchEnum_CmpSuccess_2) == 0x000004, "Member 'ALS_Base_CharacterBP_C_OnViewModeChanged::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.PlayerMovementInput
// 0x0090 (0x0090 - 0x0000)
struct ALS_Base_CharacterBP_C_PlayerMovementInput final
{
public:
	bool                                          IsForwardAxis;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              Mouvement;                                         // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FixDiagonalGamepadValues_Y_Out;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FixDiagonalGamepadValues_X_Out;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Get_Control_Forward__Right_Vector_ForwardVector; // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Get_Control_Forward__Right_Vector_RightVector; // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_PlayerMovementInput) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_PlayerMovementInput");
static_assert(sizeof(ALS_Base_CharacterBP_C_PlayerMovementInput) == 0x000090, "Wrong size on ALS_Base_CharacterBP_C_PlayerMovementInput");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, IsForwardAxis) == 0x000000, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::IsForwardAxis' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, Mouvement) == 0x000008, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::Mouvement' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_BreakVector2D_X) == 0x000018, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_BreakVector2D_Y) == 0x000020, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_FixDiagonalGamepadValues_Y_Out) == 0x000030, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_FixDiagonalGamepadValues_Y_Out' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_FixDiagonalGamepadValues_X_Out) == 0x000038, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_FixDiagonalGamepadValues_X_Out' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_Get_Control_Forward__Right_Vector_ForwardVector) == 0x000048, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_Get_Control_Forward__Right_Vector_ForwardVector' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_Get_Control_Forward__Right_Vector_RightVector) == 0x000060, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_Get_Control_Forward__Right_Vector_RightVector' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, K2Node_SwitchEnum_CmpSuccess) == 0x000078, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000080, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_AddMovementInput_ScaleValue_ImplicitCast) == 0x000088, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_AddMovementInput_ScaleValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_PlayerMovementInput, CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1) == 0x00008C, "Member 'ALS_Base_CharacterBP_C_PlayerMovementInput::CallFunc_AddMovementInput_ScaleValue_ImplicitCast_1' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Ragdoll Start (Replicated)
// 0x0008 (0x0008 - 0x0000)
struct ALS_Base_CharacterBP_C_Ragdoll_Start__Replicated_ final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Ragdoll_Start__Replicated_) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_Ragdoll_Start__Replicated_");
static_assert(sizeof(ALS_Base_CharacterBP_C_Ragdoll_Start__Replicated_) == 0x000008, "Wrong size on ALS_Base_CharacterBP_C_Ragdoll_Start__Replicated_");
static_assert(offsetof(ALS_Base_CharacterBP_C_Ragdoll_Start__Replicated_, Delay) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Ragdoll_Start__Replicated_::Delay' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.RagdollEnd
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_RagdollEnd final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_RagdollEnd) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_RagdollEnd");
static_assert(sizeof(ALS_Base_CharacterBP_C_RagdollEnd) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_RagdollEnd");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollEnd, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_RagdollEnd::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.RagdollStart
// 0x0028 (0x0028 - 0x0000)
struct ALS_Base_CharacterBP_C_RagdollStart final
{
public:
	bool                                          CallFunc_IsDedicatedServer_ReturnValue;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_MakeLiteralName_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_RagdollStart) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_RagdollStart");
static_assert(sizeof(ALS_Base_CharacterBP_C_RagdollStart) == 0x000028, "Wrong size on ALS_Base_CharacterBP_C_RagdollStart");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollStart, CallFunc_IsDedicatedServer_ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_RagdollStart::CallFunc_IsDedicatedServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollStart, CallFunc_GetSocketLocation_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_RagdollStart::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollStart, CallFunc_MakeLiteralName_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_RagdollStart::CallFunc_MakeLiteralName_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.RagdollUpdate
// 0x0120 (0x0120 - 0x0000)
struct ALS_Base_CharacterBP_C_RagdollUpdate final
{
public:
	struct FVector                                NewLastRagdollVelocity;                            // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18[0x8];                                       // 0x0018(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             ActorTransformDuringRagdoll;                       // 0x0020(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Vector_IsZero_ReturnValue;                // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x008B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Divide_VectorInt_ReturnValue;             // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                K2Node_Select_Default;                             // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetPhysicsLinearVelocity_ReturnValue;     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_109[0x7];                                      // 0x0109(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetAllMotorsAngularDriveParams_InSpring_ImplicitCast; // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_RagdollUpdate) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_RagdollUpdate");
static_assert(sizeof(ALS_Base_CharacterBP_C_RagdollUpdate) == 0x000120, "Wrong size on ALS_Base_CharacterBP_C_RagdollUpdate");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, NewLastRagdollVelocity) == 0x000000, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::NewLastRagdollVelocity' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, ActorTransformDuringRagdoll) == 0x000020, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::ActorTransformDuringRagdoll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_VSize_ReturnValue) == 0x000080, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000088, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_Vector_IsZero_ReturnValue) == 0x000089, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_Vector_IsZero_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_IsLocallyControlled_ReturnValue) == 0x00008A, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x00008B, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_BooleanAND_ReturnValue) == 0x00008C, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_Divide_VectorInt_ReturnValue) == 0x000090, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_Divide_VectorInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, Temp_bool_Variable) == 0x0000A8, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, K2Node_Select_Default) == 0x0000B0, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_SelectFloat_ReturnValue) == 0x0000C8, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_GetPhysicsLinearVelocity_ReturnValue) == 0x0000D0, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_GetPhysicsLinearVelocity_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_MapRangeClamped_ReturnValue) == 0x0000E8, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_BreakVector_X) == 0x0000F0, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_BreakVector_Y) == 0x0000F8, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_BreakVector_Z) == 0x000100, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000108, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_RagdollUpdate, CallFunc_SetAllMotorsAngularDriveParams_InSpring_ImplicitCast) == 0x000118, "Member 'ALS_Base_CharacterBP_C_RagdollUpdate::CallFunc_SetAllMotorsAngularDriveParams_InSpring_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct ALS_Base_CharacterBP_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_ReceiveTick) == 0x000004, "Wrong alignment on ALS_Base_CharacterBP_C_ReceiveTick");
static_assert(sizeof(ALS_Base_CharacterBP_C_ReceiveTick) == 0x000004, "Wrong size on ALS_Base_CharacterBP_C_ReceiveTick");
static_assert(offsetof(ALS_Base_CharacterBP_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'ALS_Base_CharacterBP_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Rinterp Control Rotation
// 0x0070 (0x0070 - 0x0000)
struct ALS_Base_CharacterBP_C_Rinterp_Control_Rotation final
{
public:
	struct FRotator                               ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	struct FRotator                               AimRotation;                                       // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Rinterp_Control_Rotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_Rinterp_Control_Rotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_Rinterp_Control_Rotation) == 0x000070, "Wrong size on ALS_Base_CharacterBP_C_Rinterp_Control_Rotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_Rinterp_Control_Rotation, ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Rinterp_Control_Rotation::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Rinterp_Control_Rotation, AimRotation) == 0x000018, "Member 'ALS_Base_CharacterBP_C_Rinterp_Control_Rotation::AimRotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Rinterp_Control_Rotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000030, "Member 'ALS_Base_CharacterBP_C_Rinterp_Control_Rotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Rinterp_Control_Rotation, CallFunc_GetControlRotation_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_Rinterp_Control_Rotation::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Rinterp_Control_Rotation, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_Rinterp_Control_Rotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Rinterp_Control_Rotation, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000068, "Member 'ALS_Base_CharacterBP_C_Rinterp_Control_Rotation::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Server Mantle
// 0x0090 (0x0090 - 0x0000)
struct ALS_Base_CharacterBP_C_Server_Mantle final
{
public:
	double                                        MantleHeight;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FALS_ComponentAndTransform             MantleLedgeWS;                                     // 0x0010(0x0070)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor, ContainsInstancedReference, HasGetValueTypeHash)
	EMantleType                                   MantleType;                                        // 0x0080(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Server_Mantle) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_Server_Mantle");
static_assert(sizeof(ALS_Base_CharacterBP_C_Server_Mantle) == 0x000090, "Wrong size on ALS_Base_CharacterBP_C_Server_Mantle");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Mantle, MantleHeight) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Server_Mantle::MantleHeight' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Mantle, MantleLedgeWS) == 0x000010, "Member 'ALS_Base_CharacterBP_C_Server_Mantle::MantleLedgeWS' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Mantle, MantleType) == 0x000080, "Member 'ALS_Base_CharacterBP_C_Server_Mantle::MantleType' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Server Set Desired Gait
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_Server_Set_Desired_Gait final
{
public:
	EALS_Gait                                     DesiredGait_0;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Server_Set_Desired_Gait) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_Server_Set_Desired_Gait");
static_assert(sizeof(ALS_Base_CharacterBP_C_Server_Set_Desired_Gait) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_Server_Set_Desired_Gait");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Set_Desired_Gait, DesiredGait_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Server_Set_Desired_Gait::DesiredGait_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Server Set Gait
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_Server_Set_Gait final
{
public:
	EALS_Gait                                     Gait_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Server_Set_Gait) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_Server_Set_Gait");
static_assert(sizeof(ALS_Base_CharacterBP_C_Server_Set_Gait) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_Server_Set_Gait");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Set_Gait, Gait_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Server_Set_Gait::Gait_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Server Set Movement Action
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_Server_Set_Movement_Action final
{
public:
	EALS_MovementAction                           MovementAction_0;                                  // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Server_Set_Movement_Action) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_Server_Set_Movement_Action");
static_assert(sizeof(ALS_Base_CharacterBP_C_Server_Set_Movement_Action) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_Server_Set_Movement_Action");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Set_Movement_Action, MovementAction_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Server_Set_Movement_Action::MovementAction_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Server Set Movement State
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_Server_Set_Movement_State final
{
public:
	EALS_MovementState                            MovementState_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Server_Set_Movement_State) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_Server_Set_Movement_State");
static_assert(sizeof(ALS_Base_CharacterBP_C_Server_Set_Movement_State) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_Server_Set_Movement_State");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Set_Movement_State, MovementState_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Server_Set_Movement_State::MovementState_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Server Set Overlay State
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_Server_Set_Overlay_State final
{
public:
	EALS_OverlayState                             OverlayState_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Server_Set_Overlay_State) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_Server_Set_Overlay_State");
static_assert(sizeof(ALS_Base_CharacterBP_C_Server_Set_Overlay_State) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_Server_Set_Overlay_State");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Set_Overlay_State, OverlayState_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Server_Set_Overlay_State::OverlayState_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Server Set Rotation Mode
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_Server_Set_Rotation_Mode final
{
public:
	EALS_RotationMode                             RotationMode_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Server_Set_Rotation_Mode) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_Server_Set_Rotation_Mode");
static_assert(sizeof(ALS_Base_CharacterBP_C_Server_Set_Rotation_Mode) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_Server_Set_Rotation_Mode");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Set_Rotation_Mode, RotationMode_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Server_Set_Rotation_Mode::RotationMode_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Server Set View Mode
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_Server_Set_View_Mode final
{
public:
	EALS_ViewMode                                 ViewMode_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Server_Set_View_Mode) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_Server_Set_View_Mode");
static_assert(sizeof(ALS_Base_CharacterBP_C_Server_Set_View_Mode) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_Server_Set_View_Mode");
static_assert(offsetof(ALS_Base_CharacterBP_C_Server_Set_View_Mode, ViewMode_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Server_Set_View_Mode::ViewMode_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.ServerSetRagdollLocation
// 0x0018 (0x0018 - 0x0000)
struct ALS_Base_CharacterBP_C_ServerSetRagdollLocation final
{
public:
	struct FVector                                RagdollLocation_0;                                 // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_ServerSetRagdollLocation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_ServerSetRagdollLocation");
static_assert(sizeof(ALS_Base_CharacterBP_C_ServerSetRagdollLocation) == 0x000018, "Wrong size on ALS_Base_CharacterBP_C_ServerSetRagdollLocation");
static_assert(offsetof(ALS_Base_CharacterBP_C_ServerSetRagdollLocation, RagdollLocation_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_ServerSetRagdollLocation::RagdollLocation_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Set Overlay State (Client)
// 0x0001 (0x0001 - 0x0000)
struct ALS_Base_CharacterBP_C_Set_Overlay_State__Client_ final
{
public:
	EALS_OverlayState                             OverlayState_0;                                    // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Set_Overlay_State__Client_) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_Set_Overlay_State__Client_");
static_assert(sizeof(ALS_Base_CharacterBP_C_Set_Overlay_State__Client_) == 0x000001, "Wrong size on ALS_Base_CharacterBP_C_Set_Overlay_State__Client_");
static_assert(offsetof(ALS_Base_CharacterBP_C_Set_Overlay_State__Client_, OverlayState_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Set_Overlay_State__Client_::OverlayState_0' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SetActorLocationAndRotation(UpdateTarget)
// 0x0218 (0x0218 - 0x0000)
struct ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_ final
{
public:
	struct FVector                                NewLocation;                                       // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               NewRotation;                                       // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bSweep;                                            // 0x0030(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bTeleport;                                         // 0x0031(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepHitResult;                                    // 0x0038(0x00E8)(Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          ReturnValue;                                       // 0x0120(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0128(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_");
static_assert(sizeof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_) == 0x000218, "Wrong size on ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_, NewLocation) == 0x000000, "Member 'ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_::NewLocation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_, NewRotation) == 0x000018, "Member 'ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_::NewRotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_, bSweep) == 0x000030, "Member 'ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_::bSweep' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_, bTeleport) == 0x000031, "Member 'ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_::bTeleport' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_, SweepHitResult) == 0x000038, "Member 'ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_::SweepHitResult' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_, ReturnValue) == 0x000120, "Member 'ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000128, "Member 'ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000210, "Member 'ALS_Base_CharacterBP_C_SetActorLocationAndRotation_UpdateTarget_::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SetActorLocationDuringRagdoll
// 0x02F8 (0x02F8 - 0x0000)
struct ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll final
{
public:
	class FName                                   RagdollSocketPullName;                             // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RagdollSpeed;                                      // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               TargetRagdollRotation;                             // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                TargetRagdollLocation;                             // 0x0028(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0040(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetSocketRotation_ReturnValue;            // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetScaledCapsuleHalfHeight_ReturnValue;   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x00E8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D3[0x1];                                      // 0x01D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DC[0x4];                                      // 0x01DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0210(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0228(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0250(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0290(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x02A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x02A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2AA[0x6];                                      // 0x02AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Select_Default;                             // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Option_0_ImplicitCast;               // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_B_ImplicitCast;     // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll");
static_assert(sizeof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll) == 0x0002F8, "Wrong size on ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, RagdollSocketPullName) == 0x000000, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::RagdollSocketPullName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, RagdollSpeed) == 0x000008, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::RagdollSpeed' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, TargetRagdollRotation) == 0x000010, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::TargetRagdollRotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, TargetRagdollLocation) == 0x000028, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::TargetRagdollLocation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, Temp_object_Variable) == 0x000040, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_IsLocallyControlled_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakVector_X) == 0x000058, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakVector_Y) == 0x000060, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakVector_Z) == 0x000068, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000070, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_GetSocketLocation_ReturnValue) == 0x000078, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_GetSocketRotation_ReturnValue) == 0x000090, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_GetSocketRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakRotator_Roll) == 0x0000A8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakRotator_Pitch) == 0x0000AC, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakRotator_Yaw) == 0x0000B0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_GetScaledCapsuleHalfHeight_ReturnValue) == 0x0000B4, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_GetScaledCapsuleHalfHeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x0000B8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x0000C0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_MakeVector_ReturnValue) == 0x0000D0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_LineTraceSingle_OutHit) == 0x0000E8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_LineTraceSingle_ReturnValue) == 0x0001D0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_bBlockingHit) == 0x0001D1, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001D2, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_Time) == 0x0001D4, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_Distance) == 0x0001D8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_Location) == 0x0001E0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_ImpactPoint) == 0x0001F8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_Normal) == 0x000210, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_ImpactNormal) == 0x000228, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_PhysMat) == 0x000240, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_HitActor) == 0x000248, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_HitComponent) == 0x000250, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_HitBoneName) == 0x000258, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_BoneName) == 0x000260, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_HitItem) == 0x000268, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_ElementIndex) == 0x00026C, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_FaceIndex) == 0x000270, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_TraceStart) == 0x000278, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_BreakHitResult_TraceEnd) == 0x000290, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0002A8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, Temp_bool_Variable) == 0x0002A9, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, K2Node_Select_Default) == 0x0002B0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_MakeRotator_ReturnValue) == 0x0002B8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0002D0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x0002D8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, K2Node_Select_Option_0_ImplicitCast) == 0x0002E0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_Subtract_DoubleDouble_B_ImplicitCast) == 0x0002E8, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_Subtract_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0002F0, "Member 'ALS_Base_CharacterBP_C_SetActorLocationDuringRagdoll::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SetEssentialValues
// 0x0070 (0x0070 - 0x0000)
struct ALS_Base_CharacterBP_C_SetEssentialValues final
{
public:
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_CalculateAcceleration_ReturnValue;        // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Rinterp_Control_Rotation_ReturnValue;     // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_A_ImplicitCast;     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_SetEssentialValues) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_SetEssentialValues");
static_assert(sizeof(ALS_Base_CharacterBP_C_SetEssentialValues) == 0x000070, "Wrong size on ALS_Base_CharacterBP_C_SetEssentialValues");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_BreakRotator_Roll) == 0x000000, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_BreakRotator_Pitch) == 0x000004, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_BreakRotator_Yaw) == 0x000008, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_GetLocalRole_ReturnValue) == 0x00000C, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_CalculateAcceleration_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_CalculateAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_Rinterp_Control_Rotation_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_Rinterp_Control_Rotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetEssentialValues, CallFunc_Subtract_DoubleDouble_A_ImplicitCast) == 0x000068, "Member 'ALS_Base_CharacterBP_C_SetEssentialValues::CallFunc_Subtract_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SetMovementModel
// 0x00C8 (0x00C8 - 0x0000)
struct ALS_Base_CharacterBP_C_SetMovementModel final
{
public:
	struct FMovementSettings_State                CallFunc_GetDataTableRowFromName_OutRow;           // 0x0000(0x00C0)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_SetMovementModel) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_SetMovementModel");
static_assert(sizeof(ALS_Base_CharacterBP_C_SetMovementModel) == 0x0000C8, "Wrong size on ALS_Base_CharacterBP_C_SetMovementModel");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetMovementModel, CallFunc_GetDataTableRowFromName_OutRow) == 0x000000, "Member 'ALS_Base_CharacterBP_C_SetMovementModel::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SetMovementModel, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000C0, "Member 'ALS_Base_CharacterBP_C_SetMovementModel::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SmoothCharacterRotation
// 0x0098 (0x0098 - 0x0000)
struct ALS_Base_CharacterBP_C_SmoothCharacterRotation final
{
public:
	struct FRotator                               Target;                                            // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        TargetInterpSpeed_Const_;                          // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        ActorInterpSpeed_Smooth_;                          // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_Constant_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x3];                                       // 0x0081(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_Constant_DeltaTime_ImplicitCast; // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_Constant_InterpSpeed_ImplicitCast; // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_SmoothCharacterRotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_SmoothCharacterRotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_SmoothCharacterRotation) == 0x000098, "Wrong size on ALS_Base_CharacterBP_C_SmoothCharacterRotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, Target) == 0x000000, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::Target' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, TargetInterpSpeed_Const_) == 0x000018, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::TargetInterpSpeed_Const_' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, ActorInterpSpeed_Smooth_) == 0x000020, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::ActorInterpSpeed_Smooth_' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000030, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_RInterpTo_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_RInterpTo_Constant_ReturnValue) == 0x000068, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_RInterpTo_Constant_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000080, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000084, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_RInterpTo_Constant_DeltaTime_ImplicitCast) == 0x000088, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_RInterpTo_Constant_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x00008C, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SmoothCharacterRotation, CallFunc_RInterpTo_Constant_InterpSpeed_ImplicitCast) == 0x000090, "Member 'ALS_Base_CharacterBP_C_SmoothCharacterRotation::CallFunc_RInterpTo_Constant_InterpSpeed_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.SpawnActor (Server)
// 0x0070 (0x0070 - 0x0000)
struct ALS_Base_CharacterBP_C_SpawnActor__Server_ final
{
public:
	class UClass*                                 Class_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8[0x8];                                        // 0x0008(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             SpawnTransform;                                    // 0x0010(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_SpawnActor__Server_) == 0x000010, "Wrong alignment on ALS_Base_CharacterBP_C_SpawnActor__Server_");
static_assert(sizeof(ALS_Base_CharacterBP_C_SpawnActor__Server_) == 0x000070, "Wrong size on ALS_Base_CharacterBP_C_SpawnActor__Server_");
static_assert(offsetof(ALS_Base_CharacterBP_C_SpawnActor__Server_, Class_0) == 0x000000, "Member 'ALS_Base_CharacterBP_C_SpawnActor__Server_::Class_0' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_SpawnActor__Server_, SpawnTransform) == 0x000010, "Member 'ALS_Base_CharacterBP_C_SpawnActor__Server_::SpawnTransform' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.Update Team (server)
// 0x0008 (0x0008 - 0x0000)
struct ALS_Base_CharacterBP_C_Update_Team__server_ final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_Update_Team__server_) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_Update_Team__server_");
static_assert(sizeof(ALS_Base_CharacterBP_C_Update_Team__server_) == 0x000008, "Wrong size on ALS_Base_CharacterBP_C_Update_Team__server_");
static_assert(offsetof(ALS_Base_CharacterBP_C_Update_Team__server_, PC) == 0x000000, "Member 'ALS_Base_CharacterBP_C_Update_Team__server_::PC' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.UpdateCharacterMovement
// 0x0005 (0x0005 - 0x0000)
struct ALS_Base_CharacterBP_C_UpdateCharacterMovement final
{
public:
	EALS_Gait                                     ActualGait;                                        // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     AllowedGait;                                       // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     CallFunc_GetActualGait_ActualGait;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     CallFunc_GetAllowedGait_AllowedGait;               // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_UpdateCharacterMovement) == 0x000001, "Wrong alignment on ALS_Base_CharacterBP_C_UpdateCharacterMovement");
static_assert(sizeof(ALS_Base_CharacterBP_C_UpdateCharacterMovement) == 0x000005, "Wrong size on ALS_Base_CharacterBP_C_UpdateCharacterMovement");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateCharacterMovement, ActualGait) == 0x000000, "Member 'ALS_Base_CharacterBP_C_UpdateCharacterMovement::ActualGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateCharacterMovement, AllowedGait) == 0x000001, "Member 'ALS_Base_CharacterBP_C_UpdateCharacterMovement::AllowedGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateCharacterMovement, CallFunc_GetActualGait_ActualGait) == 0x000002, "Member 'ALS_Base_CharacterBP_C_UpdateCharacterMovement::CallFunc_GetActualGait_ActualGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateCharacterMovement, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'ALS_Base_CharacterBP_C_UpdateCharacterMovement::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateCharacterMovement, CallFunc_GetAllowedGait_AllowedGait) == 0x000004, "Member 'ALS_Base_CharacterBP_C_UpdateCharacterMovement::CallFunc_GetAllowedGait_AllowedGait' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.UpdateDynamicMovementSettings
// 0x00A0 (0x00A0 - 0x0000)
struct ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings final
{
public:
	EALS_Gait                                     AllowedGait;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetMappedSpeed_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_Default;                             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FMovementSettings                      CallFunc_GetTargetMovementSettings_MovementSettings; // 0x0050(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetVectorValue_InTime_ImplicitCast;       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxAcceleration_ImplicitCast;   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast; // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_GroundFriction_ImplicitCast;    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator0_ImplicitCast;         // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Select_NewEnumerator1_ImplicitCast;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_A_ImplicitCast;               // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_VariableSet_MaxWalkSpeed_ImplicitCast;      // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings");
static_assert(sizeof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings) == 0x0000A0, "Wrong size on ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, AllowedGait) == 0x000000, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::AllowedGait' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_GetLocalRole_ReturnValue) == 0x000001, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, Temp_byte_Variable) == 0x000002, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_IsPlayerControlled_ReturnValue) == 0x000004, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_GetMappedSpeed_ReturnValue) == 0x000008, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_GetMappedSpeed_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_GetVectorValue_ReturnValue) == 0x000010, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_BreakVector_X) == 0x000028, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_BreakVector_Y) == 0x000030, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_BreakVector_Z) == 0x000038, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_SelectFloat_ReturnValue) == 0x000040, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, K2Node_Select_Default) == 0x000048, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_GetTargetMovementSettings_MovementSettings) == 0x000050, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_GetTargetMovementSettings_MovementSettings' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_GetVectorValue_InTime_ImplicitCast) == 0x000070, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_GetVectorValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, K2Node_VariableSet_MaxAcceleration_ImplicitCast) == 0x000074, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::K2Node_VariableSet_MaxAcceleration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast) == 0x000078, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::K2Node_VariableSet_BrakingDecelerationWalking_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, K2Node_VariableSet_GroundFriction_ImplicitCast) == 0x00007C, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::K2Node_VariableSet_GroundFriction_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, K2Node_Select_NewEnumerator0_ImplicitCast) == 0x000080, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::K2Node_Select_NewEnumerator0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, K2Node_Select_NewEnumerator1_ImplicitCast) == 0x000088, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::K2Node_Select_NewEnumerator1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, CallFunc_SelectFloat_A_ImplicitCast) == 0x000090, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::CallFunc_SelectFloat_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings, K2Node_VariableSet_MaxWalkSpeed_ImplicitCast) == 0x000098, "Member 'ALS_Base_CharacterBP_C_UpdateDynamicMovementSettings::K2Node_VariableSet_MaxWalkSpeed_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.UpdateGroudedRotation
// 0x0228 (0x0228 - 0x0000)
struct ALS_Base_CharacterBP_C_UpdateGroudedRotation final
{
public:
	struct FRotator                               DesiredRotation;                                   // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanUpdateMovingRotation_ReturnValue;      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_K2_SetActorRotation_ReturnValue;          // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasMovementInput__ReturnValue;            // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetLastMovementInputRotation_ReturnValue; // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetAnimCurveValue_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ENetRole                                      CallFunc_GetLocalRole_ReturnValue;                 // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00CB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_2;                // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_AddActorWorldRotation_SweepHitResult;  // 0x0108(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_ReturnValue;                // 0x01F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1FC[0x4];                                      // 0x01FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_3;                // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0220(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_NormalizeAxis_Angle_ImplicitCast;         // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_Base_CharacterBP_C_UpdateGroudedRotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_UpdateGroudedRotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_UpdateGroudedRotation) == 0x000228, "Wrong size on ALS_Base_CharacterBP_C_UpdateGroudedRotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, DesiredRotation) == 0x000000, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::DesiredRotation' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_CanUpdateMovingRotation_ReturnValue) == 0x000018, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_CanUpdateMovingRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_K2_SetActorRotation_ReturnValue) == 0x000019, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_K2_SetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000020, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, K2Node_SwitchEnum_CmpSuccess) == 0x000028, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_HasMovementInput__ReturnValue) == 0x000029, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_HasMovementInput__ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Roll) == 0x00002C, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Pitch) == 0x000030, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Yaw) == 0x000034, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_GetLastMovementInputRotation_ReturnValue) == 0x000050, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_GetLastMovementInputRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Roll_1) == 0x000068, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Pitch_1) == 0x00006C, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Yaw_1) == 0x000070, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_MakeRotator_ReturnValue_1) == 0x000078, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Roll_2) == 0x000090, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Pitch_2) == 0x000094, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_BreakRotator_Yaw_2) == 0x000098, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_MakeLiteralByte_ReturnValue) == 0x00009C, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_GetAnimCurveValue_ReturnValue) == 0x0000A0, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_GetAnimCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_Abs_ReturnValue) == 0x0000A8, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000B0, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_GetLocalRole_ReturnValue) == 0x0000C9, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_GetLocalRole_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000CA, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000CB, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000D0, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x0000D8, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_MakeRotator_ReturnValue_2) == 0x0000E8, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_MakeRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, K2Node_SwitchEnum_CmpSuccess_2) == 0x000100, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_K2_AddActorWorldRotation_SweepHitResult) == 0x000108, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_K2_AddActorWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001F0, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_NormalizeAxis_ReturnValue) == 0x0001F8, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_NormalizeAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_MakeRotator_ReturnValue_3) == 0x000200, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_MakeRotator_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000218, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000220, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateGroudedRotation, CallFunc_NormalizeAxis_Angle_ImplicitCast) == 0x000224, "Member 'ALS_Base_CharacterBP_C_UpdateGroudedRotation::CallFunc_NormalizeAxis_Angle_ImplicitCast' has a wrong offset!");

// Function ALS_Base_CharacterBP.ALS_Base_CharacterBP_C.UpdateInAirRotation
// 0x0040 (0x0040 - 0x0000)
struct ALS_Base_CharacterBP_C_UpdateInAirRotation final
{
public:
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ALS_Base_CharacterBP_C_UpdateInAirRotation) == 0x000008, "Wrong alignment on ALS_Base_CharacterBP_C_UpdateInAirRotation");
static_assert(sizeof(ALS_Base_CharacterBP_C_UpdateInAirRotation) == 0x000040, "Wrong size on ALS_Base_CharacterBP_C_UpdateInAirRotation");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateInAirRotation, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000000, "Member 'ALS_Base_CharacterBP_C_UpdateInAirRotation::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateInAirRotation, CallFunc_BreakRotator_Roll) == 0x000018, "Member 'ALS_Base_CharacterBP_C_UpdateInAirRotation::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateInAirRotation, CallFunc_BreakRotator_Pitch) == 0x00001C, "Member 'ALS_Base_CharacterBP_C_UpdateInAirRotation::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateInAirRotation, CallFunc_BreakRotator_Yaw) == 0x000020, "Member 'ALS_Base_CharacterBP_C_UpdateInAirRotation::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_Base_CharacterBP_C_UpdateInAirRotation, CallFunc_MakeRotator_ReturnValue) == 0x000028, "Member 'ALS_Base_CharacterBP_C_UpdateInAirRotation::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");

}

