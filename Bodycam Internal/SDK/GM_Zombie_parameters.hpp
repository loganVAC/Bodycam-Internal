#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GM_Zombie

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_Team_structs.hpp"
#include "STR_TEST_structs.hpp"
#include "STR_PCInfo_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"
#include "STR_KickVote_structs.hpp"
#include "STR_ZombieAnimations_structs.hpp"
#include "STR_Actor_structs.hpp"
#include "STR_Score_structs.hpp"
#include "GameMode_structs.hpp"
#include "EN_WaveClass_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function GM_Zombie.GM_Zombie_C.CanCreateKickVote
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_CanCreateKickVote final
{
public:
	bool                                          CanCreateKickVote_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_CanCreateKickVote) == 0x000001, "Wrong alignment on GM_Zombie_C_CanCreateKickVote");
static_assert(sizeof(GM_Zombie_C_CanCreateKickVote) == 0x000001, "Wrong size on GM_Zombie_C_CanCreateKickVote");
static_assert(offsetof(GM_Zombie_C_CanCreateKickVote, CanCreateKickVote_) == 0x000000, "Member 'GM_Zombie_C_CanCreateKickVote::CanCreateKickVote_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.CanKickThisPlayer?
// 0x0018 (0x0018 - 0x0000)
struct GM_Zombie_C_CanKickThisPlayer_ final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          True_;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_CanKickThisPlayer_) == 0x000008, "Wrong alignment on GM_Zombie_C_CanKickThisPlayer_");
static_assert(sizeof(GM_Zombie_C_CanKickThisPlayer_) == 0x000018, "Wrong size on GM_Zombie_C_CanKickThisPlayer_");
static_assert(offsetof(GM_Zombie_C_CanKickThisPlayer_, PlayerID) == 0x000000, "Member 'GM_Zombie_C_CanKickThisPlayer_::PlayerID' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_CanKickThisPlayer_, True_) == 0x000010, "Member 'GM_Zombie_C_CanKickThisPlayer_::True_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.CanReachDestination
// 0x0068 (0x0068 - 0x0000)
struct GM_Zombie_C_CanReachDestination final
{
public:
	struct FVector                                PathStart;                                         // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PathEnd;                                           // 0x0018(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0030(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item;                           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_CanReachDestination) == 0x000008, "Wrong alignment on GM_Zombie_C_CanReachDestination");
static_assert(sizeof(GM_Zombie_C_CanReachDestination) == 0x000068, "Wrong size on GM_Zombie_C_CanReachDestination");
static_assert(offsetof(GM_Zombie_C_CanReachDestination, PathStart) == 0x000000, "Member 'GM_Zombie_C_CanReachDestination::PathStart' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_CanReachDestination, PathEnd) == 0x000018, "Member 'GM_Zombie_C_CanReachDestination::PathEnd' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_CanReachDestination, ReturnValue) == 0x000030, "Member 'GM_Zombie_C_CanReachDestination::ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_CanReachDestination, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000038, "Member 'GM_Zombie_C_CanReachDestination::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_CanReachDestination, CallFunc_Array_LastIndex_ReturnValue) == 0x000040, "Member 'GM_Zombie_C_CanReachDestination::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_CanReachDestination, CallFunc_Array_Get_Item) == 0x000048, "Member 'GM_Zombie_C_CanReachDestination::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_CanReachDestination, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000060, "Member 'GM_Zombie_C_CanReachDestination::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.ConnectionInfos
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_ConnectionInfos final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_ConnectionInfos) == 0x000004, "Wrong alignment on GM_Zombie_C_ConnectionInfos");
static_assert(sizeof(GM_Zombie_C_ConnectionInfos) == 0x000010, "Wrong size on GM_Zombie_C_ConnectionInfos");
static_assert(offsetof(GM_Zombie_C_ConnectionInfos, Color) == 0x000000, "Member 'GM_Zombie_C_ConnectionInfos::Color' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.DeleteZombies
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_DeleteZombies final
{
public:
	class AActor*                                 Target;                                            // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_DeleteZombies) == 0x000008, "Wrong alignment on GM_Zombie_C_DeleteZombies");
static_assert(sizeof(GM_Zombie_C_DeleteZombies) == 0x000008, "Wrong size on GM_Zombie_C_DeleteZombies");
static_assert(offsetof(GM_Zombie_C_DeleteZombies, Target) == 0x000000, "Member 'GM_Zombie_C_DeleteZombies::Target' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.DestroyAllDeadbodies
// 0x0068 (0x0068 - 0x0000)
struct GM_Zombie_C_DestroyAllDeadbodies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0018(0x0010)(ReferenceParm)
	TArray<class AZombie_C*>                      CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0028(0x0010)(ReferenceParm)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              CallFunc_Array_Get_Item_1;                         // 0x0040(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_DestroyAllDeadbodies) == 0x000008, "Wrong alignment on GM_Zombie_C_DestroyAllDeadbodies");
static_assert(sizeof(GM_Zombie_C_DestroyAllDeadbodies) == 0x000068, "Wrong size on GM_Zombie_C_DestroyAllDeadbodies");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GM_Zombie_C_DestroyAllDeadbodies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GM_Zombie_C_DestroyAllDeadbodies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, Temp_int_Array_Index_Variable_1) == 0x00000C, "Member 'GM_Zombie_C_DestroyAllDeadbodies::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, Temp_int_Loop_Counter_Variable_1) == 0x000010, "Member 'GM_Zombie_C_DestroyAllDeadbodies::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_GetAllActorsOfClass_OutActors) == 0x000018, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000028, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_Array_Get_Item) == 0x000038, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_Array_Get_Item_1) == 0x000040, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, K2Node_DynamicCast_AsBodycam_Interface) == 0x000048, "Member 'GM_Zombie_C_DestroyAllDeadbodies::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GM_Zombie_C_DestroyAllDeadbodies::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_IsDead_Dead_) == 0x000059, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_Array_Length_ReturnValue) == 0x00005C, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_Array_Length_ReturnValue_1) == 0x000060, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_DestroyAllDeadbodies, CallFunc_Less_IntInt_ReturnValue_1) == 0x000065, "Member 'GM_Zombie_C_DestroyAllDeadbodies::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.EndWave
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_EndWave final
{
public:
	int32                                         Wave_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  EN_WaveClass_0;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_EndWave) == 0x000004, "Wrong alignment on GM_Zombie_C_EndWave");
static_assert(sizeof(GM_Zombie_C_EndWave) == 0x000008, "Wrong size on GM_Zombie_C_EndWave");
static_assert(offsetof(GM_Zombie_C_EndWave, Wave_0) == 0x000000, "Member 'GM_Zombie_C_EndWave::Wave_0' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_EndWave, EN_WaveClass_0) == 0x000004, "Member 'GM_Zombie_C_EndWave::EN_WaveClass_0' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.ExecuteUbergraph_GM_Zombie
// 0x04D0 (0x04D0 - 0x0000)
struct GM_Zombie_C_ExecuteUbergraph_GM_Zombie final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)(NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_String;                               // 0x0058(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TimeCount;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_NewParam;                             // 0x0078(0x0018)()
	E_Team                                        K2Node_Event_Team;                                 // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Selected_Level_Name;                  // 0x0094(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team_PlayerKilled_;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MilitaryIndex;                        // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TerroristIndex;                       // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_WiiningTeam;                          // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_Event_Score;                                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Win_;                                 // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Slomo;                                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_Event_PlayerInfo;                           // 0x00C8(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_SteamID;                              // 0x0110(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target_2;                             // 0x0120(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes_;                                 // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x7];                                      // 0x0161(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target_1;                             // 0x0168(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target;                               // 0x01A8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Event_Gamemode;                             // 0x01E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReady_;                             // 0x01E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsTalking;                            // 0x01EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_On_;                                  // 0x01EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Wave_1;                               // 0x01EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  K2Node_Event_EN_WaveClass_1;                       // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Destroy_;                             // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F2[0x2];                                      // 0x01F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_Color;                                // 0x01F4(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_FirstWave_;                     // 0x0204(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_205[0x3];                                      // 0x0205(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x021C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AZombie_C*>                      CallFunc_GetZombiesDeaths_ZombiesDeaths_Return;    // 0x0220(0x0010)(ReferenceParm)
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0230(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_239[0x7];                                      // 0x0239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie;                    // 0x0248(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_251[0x7];                                      // 0x0251(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors;      // 0x0258(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26D[0x3];                                      // 0x026D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_1;    // 0x0278(0x0010)(ReferenceParm)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item_1;                         // 0x0290(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue_1;          // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IZombie_Interface_C>   K2Node_DynamicCast_AsZombie_Interface;             // 0x02A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B1[0x7];                                      // 0x02B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x02C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithInterface_OutActors_2;    // 0x02C8(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item_2;                         // 0x02D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x02E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IZombie_Interface_C>   K2Node_DynamicCast_AsZombie_Interface_1;           // 0x02F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0304(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0308(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_309[0x3];                                      // 0x0309(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x030C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0324(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_1;        // 0x0325(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_326[0x2];                                      // 0x0326(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x0328(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Zombie_C*                           K2Node_DynamicCast_AsPC_Zombie;                    // 0x0338(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_All_Players_Dead_AllPlayersDead_Return; // 0x0341(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_342[0x6];                                      // 0x0342(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0348(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0350(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie_1;                  // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  Temp_byte_Variable;                                // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_372[0x6];                                      // 0x0372(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0388(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_389[0x7];                                      // 0x0389(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_ExitingController;                    // 0x0390(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0398(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_399[0x7];                                      // 0x0399(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x03A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie_2;                  // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x03B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  Temp_byte_Variable_1;                              // 0x03B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B2[0x6];                                      // 0x03B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_3;                         // 0x03B8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x03F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x03FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FD[0x3];                                      // 0x03FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0400(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_404[0x4];                                      // 0x0404(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item_4;                         // 0x0408(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IZombie_Interface_C>   K2Node_DynamicCast_AsZombie_Interface_2;           // 0x0410(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0420(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  Temp_byte_Variable_2;                              // 0x0421(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0422(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0423(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0430(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_431[0x7];                                      // 0x0431(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombieSpawnVolume_C*>           CallFunc_GetAvailableSpawn_availableSpawn_Return;  // 0x0438(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsNotEmpty_ReturnValue;             // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x3];                                      // 0x0449(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x044C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_2;            // 0x0450(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_454[0x4];                                      // 0x0454(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombieSpawnVolume_C*                   CallFunc_Array_Random_OutItem;                     // 0x0458(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0460(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0464(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0465(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_466[0x2];                                      // 0x0466(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 K2Node_CustomEvent_Target;                         // 0x0468(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  K2Node_Select_Default_1;                           // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x3];                                      // 0x0471(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_3;            // 0x0474(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x047C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47D[0x3];                                      // 0x047D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue_1;           // 0x0480(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Wave;                                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  K2Node_Event_EN_WaveClass;                         // 0x0494(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0495(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_496[0x2];                                      // 0x0496(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x04A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x04A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A2[0x2];                                      // 0x04A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_4;            // 0x04A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x04A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue_2;        // 0x04AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4AD[0x3];                                      // 0x04AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default_2;                           // 0x04B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B4[0x4];                                      // 0x04B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x04B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Option_0_ImplicitCast;               // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie) == 0x000008, "Wrong alignment on GM_Zombie_C_ExecuteUbergraph_GM_Zombie");
static_assert(sizeof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie) == 0x0004D0, "Wrong size on GM_Zombie_C_ExecuteUbergraph_GM_Zombie");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, EntryPoint) == 0x000000, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::EntryPoint' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_bool_Variable) == 0x000004, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Array_Index_Variable) == 0x000018, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Loop_Counter_Variable) == 0x000028, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_HasAuthority_ReturnValue) == 0x00002C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Loop_Counter_Variable_1) == 0x000034, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_IntInt_ReturnValue_1) == 0x000038, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Array_Index_Variable_1) == 0x00003C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Array_Index_Variable_2) == 0x000040, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Variable) == 0x000048, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_IntInt_ReturnValue_2) == 0x00004C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_IntInt_ReturnValue_3) == 0x000050, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_String) == 0x000058, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Delay) == 0x000068, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_TimeCount) == 0x000070, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_TimeCount' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_NewParam) == 0x000078, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Team) == 0x000090, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Selected_Level_Name) == 0x000094, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Index) == 0x00009C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Team_PlayerKilled_) == 0x0000A0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_MilitaryIndex) == 0x0000A4, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_TerroristIndex) == 0x0000A8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_TerroristIndex' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_WiiningTeam) == 0x0000AC, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_WiiningTeam' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Score) == 0x0000B0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Win_) == 0x0000B8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Win_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Slomo) == 0x0000C0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Slomo' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_PlayerInfo) == 0x0000C8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_SteamID) == 0x000110, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_SteamID' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Target_2) == 0x000120, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Yes_) == 0x000160, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Yes_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Target_1) == 0x000168, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Target) == 0x0001A8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Gamemode) == 0x0001E8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Gamemode' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_IsReady_) == 0x0001E9, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_IsReady_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_IsTalking) == 0x0001EA, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_IsTalking' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_On_) == 0x0001EB, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_On_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Wave_1) == 0x0001EC, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Wave_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_EN_WaveClass_1) == 0x0001F0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_EN_WaveClass_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Destroy_) == 0x0001F1, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Destroy_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Color) == 0x0001F4, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Color' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_CustomEvent_FirstWave_) == 0x000204, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_CustomEvent_FirstWave_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000208, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000210, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_IntInt_ReturnValue_4) == 0x000218, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_IntInt_ReturnValue_5) == 0x00021C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GetZombiesDeaths_ZombiesDeaths_Return) == 0x000220, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GetZombiesDeaths_ZombiesDeaths_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Get_Item) == 0x000230, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_IsValid_ReturnValue) == 0x000238, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GetGameState_ReturnValue) == 0x000240, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_AsGT_Zombie) == 0x000248, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_AsGT_Zombie' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_bSuccess) == 0x000250, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GetAllActorsWithInterface_OutActors) == 0x000258, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GetAllActorsWithInterface_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Length_ReturnValue) == 0x000268, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Less_IntInt_ReturnValue) == 0x00026C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Length_ReturnValue_1) == 0x000270, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GetAllActorsWithInterface_OutActors_1) == 0x000278, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GetAllActorsWithInterface_OutActors_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000288, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Get_Item_1) == 0x000290, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_MapRangeUnclamped_ReturnValue_1) == 0x000298, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_MapRangeUnclamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_AsZombie_Interface) == 0x0002A0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_AsZombie_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_bSuccess_1) == 0x0002B0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0002B8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Length_ReturnValue_2) == 0x0002C0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_FTrunc_ReturnValue) == 0x0002C4, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GetAllActorsWithInterface_OutActors_2) == 0x0002C8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GetAllActorsWithInterface_OutActors_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Get_Item_2) == 0x0002D8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Conv_IntToString_ReturnValue) == 0x0002E0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_AsZombie_Interface_1) == 0x0002F0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_AsZombie_Interface_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_bSuccess_2) == 0x000300, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Length_ReturnValue_3) == 0x000304, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Less_IntInt_ReturnValue_1) == 0x000308, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Loop_Counter_Variable_3) == 0x00030C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Less_IntInt_ReturnValue_2) == 0x000310, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_IntInt_ReturnValue_6) == 0x000314, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Variable_1) == 0x000318, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Subtract_IntInt_ReturnValue) == 0x00031C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_IntInt_ReturnValue_7) == 0x000320, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000324, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GreaterEqual_IntInt_ReturnValue_1) == 0x000325, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GreaterEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_PC) == 0x000328, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Variable_2) == 0x000330, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_AsPC_Zombie) == 0x000338, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_AsPC_Zombie' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_bSuccess_3) == 0x000340, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Is_All_Players_Dead_AllPlayersDead_Return) == 0x000341, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Is_All_Players_Dead_AllPlayersDead_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GetGameState_ReturnValue_1) == 0x000348, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_AsBodycam_Interface) == 0x000350, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_bSuccess_4) == 0x000360, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_AsGT_Zombie_1) == 0x000368, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_AsGT_Zombie_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_bSuccess_5) == 0x000370, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_byte_Variable) == 0x000371, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000378, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_MapRangeClamped_ReturnValue) == 0x000380, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000388, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_ExitingController) == 0x000390, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_HasAuthority_ReturnValue_1) == 0x000398, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GetGameState_ReturnValue_2) == 0x0003A0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_AsGT_Zombie_2) == 0x0003A8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_AsGT_Zombie_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_bSuccess_6) == 0x0003B0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_byte_Variable_1) == 0x0003B1, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Get_Item_3) == 0x0003B8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Length_ReturnValue_4) == 0x0003F8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Less_IntInt_ReturnValue_3) == 0x0003FC, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_int_Array_Index_Variable_3) == 0x000400, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Get_Item_4) == 0x000408, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_AsZombie_Interface_2) == 0x000410, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_AsZombie_Interface_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_DynamicCast_bSuccess_7) == 0x000420, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_byte_Variable_2) == 0x000421, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000422, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Greater_IntInt_ReturnValue) == 0x000423, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Select_Default) == 0x000424, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_BooleanAND_ReturnValue) == 0x000428, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Divide_IntInt_ReturnValue) == 0x00042C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_SwitchEnum_CmpSuccess) == 0x000430, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GetAvailableSpawn_availableSpawn_Return) == 0x000438, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GetAvailableSpawn_availableSpawn_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_IsNotEmpty_ReturnValue) == 0x000448, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_IsNotEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x00044C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Subtract_IntInt_ReturnValue_2) == 0x000450, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Subtract_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Random_OutItem) == 0x000458, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Array_Random_OutIndex) == 0x000460, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000464, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_bool_Variable_1) == 0x000465, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_CustomEvent_Target) == 0x000468, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_CustomEvent_Target' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Select_Default_1) == 0x000470, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Subtract_IntInt_ReturnValue_3) == 0x000474, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Subtract_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_DeltaSeconds) == 0x000478, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00047C, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Conv_IntToString_ReturnValue_1) == 0x000480, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Conv_IntToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_Wave) == 0x000490, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_Wave' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Event_EN_WaveClass) == 0x000494, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Event_EN_WaveClass' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000495, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000498, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_SwitchEnum_CmpSuccess_1) == 0x0004A0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Greater_IntInt_ReturnValue_1) == 0x0004A1, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Subtract_IntInt_ReturnValue_4) == 0x0004A4, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Subtract_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, Temp_real_Variable) == 0x0004A8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_GreaterEqual_IntInt_ReturnValue_2) == 0x0004AC, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_GreaterEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Select_Default_2) == 0x0004B0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0004B8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, K2Node_Select_Option_0_ImplicitCast) == 0x0004C0, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::K2Node_Select_Option_0_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_ExecuteUbergraph_GM_Zombie, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x0004C8, "Member 'GM_Zombie_C_ExecuteUbergraph_GM_Zombie::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.Get BP Menu Controller Component
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_Get_BP_Menu_Controller_Component final
{
public:
	class UBP_MenuControllerComponent_C*          BP_Menu_Controller_Component;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong alignment on GM_Zombie_C_Get_BP_Menu_Controller_Component");
static_assert(sizeof(GM_Zombie_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong size on GM_Zombie_C_Get_BP_Menu_Controller_Component");
static_assert(offsetof(GM_Zombie_C_Get_BP_Menu_Controller_Component, BP_Menu_Controller_Component) == 0x000000, "Member 'GM_Zombie_C_Get_BP_Menu_Controller_Component::BP_Menu_Controller_Component' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.Get Stamina
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_Get_Stamina final
{
public:
	double                                        Stamina;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_Get_Stamina) == 0x000008, "Wrong alignment on GM_Zombie_C_Get_Stamina");
static_assert(sizeof(GM_Zombie_C_Get_Stamina) == 0x000008, "Wrong size on GM_Zombie_C_Get_Stamina");
static_assert(offsetof(GM_Zombie_C_Get_Stamina, Stamina) == 0x000000, "Member 'GM_Zombie_C_Get_Stamina::Stamina' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetAvailableSpawn
// 0x0058 (0x0058 - 0x0000)
struct GM_Zombie_C_GetAvailableSpawn final
{
public:
	TArray<class AZombieSpawnVolume_C*>           AvailableSpawn_Return;                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AZombieSpawnVolume_C*>           AvailableSpawn;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombieSpawnVolume_C*>           CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombieSpawnVolume_C*                   CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SpawnAvailable_CanSpawn_;                 // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_52[0x2];                                       // 0x0052(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetAvailableSpawn) == 0x000008, "Wrong alignment on GM_Zombie_C_GetAvailableSpawn");
static_assert(sizeof(GM_Zombie_C_GetAvailableSpawn) == 0x000058, "Wrong size on GM_Zombie_C_GetAvailableSpawn");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, AvailableSpawn_Return) == 0x000000, "Member 'GM_Zombie_C_GetAvailableSpawn::AvailableSpawn_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, AvailableSpawn) == 0x000010, "Member 'GM_Zombie_C_GetAvailableSpawn::AvailableSpawn' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GM_Zombie_C_GetAvailableSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GM_Zombie_C_GetAvailableSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GM_Zombie_C_GetAvailableSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'GM_Zombie_C_GetAvailableSpawn::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GM_Zombie_C_GetAvailableSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, CallFunc_Array_Get_Item) == 0x000048, "Member 'GM_Zombie_C_GetAvailableSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GM_Zombie_C_GetAvailableSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, CallFunc_SpawnAvailable_CanSpawn_) == 0x000051, "Member 'GM_Zombie_C_GetAvailableSpawn::CallFunc_SpawnAvailable_CanSpawn_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetAvailableSpawn, CallFunc_Array_AddUnique_ReturnValue) == 0x000054, "Member 'GM_Zombie_C_GetAvailableSpawn::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetBlured
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_GetBlured final
{
public:
	double                                        Blured;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetBlured) == 0x000008, "Wrong alignment on GM_Zombie_C_GetBlured");
static_assert(sizeof(GM_Zombie_C_GetBlured) == 0x000008, "Wrong size on GM_Zombie_C_GetBlured");
static_assert(offsetof(GM_Zombie_C_GetBlured, Blured) == 0x000000, "Member 'GM_Zombie_C_GetBlured::Blured' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetBurnedRef
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_GetBurnedRef final
{
public:
	class USceneComponent*                        BurnedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetBurnedRef) == 0x000008, "Wrong alignment on GM_Zombie_C_GetBurnedRef");
static_assert(sizeof(GM_Zombie_C_GetBurnedRef) == 0x000008, "Wrong size on GM_Zombie_C_GetBurnedRef");
static_assert(offsetof(GM_Zombie_C_GetBurnedRef, BurnedMesh) == 0x000000, "Member 'GM_Zombie_C_GetBurnedRef::BurnedMesh' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetFlashBangEffect
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_GetFlashBangEffect final
{
public:
	double                                        FlashEffect;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetFlashBangEffect) == 0x000008, "Wrong alignment on GM_Zombie_C_GetFlashBangEffect");
static_assert(sizeof(GM_Zombie_C_GetFlashBangEffect) == 0x000008, "Wrong size on GM_Zombie_C_GetFlashBangEffect");
static_assert(offsetof(GM_Zombie_C_GetFlashBangEffect, FlashEffect) == 0x000000, "Member 'GM_Zombie_C_GetFlashBangEffect::FlashEffect' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetGameMode
// 0x0040 (0x0040 - 0x0000)
struct GM_Zombie_C_GetGameMode final
{
public:
	struct FSTR_GamemodeWinInfo                   GameMode;                                          // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetGameMode) == 0x000008, "Wrong alignment on GM_Zombie_C_GetGameMode");
static_assert(sizeof(GM_Zombie_C_GetGameMode) == 0x000040, "Wrong size on GM_Zombie_C_GetGameMode");
static_assert(offsetof(GM_Zombie_C_GetGameMode, GameMode) == 0x000000, "Member 'GM_Zombie_C_GetGameMode::GameMode' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_GetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetHealth) == 0x000008, "Wrong alignment on GM_Zombie_C_GetHealth");
static_assert(sizeof(GM_Zombie_C_GetHealth) == 0x000008, "Wrong size on GM_Zombie_C_GetHealth");
static_assert(offsetof(GM_Zombie_C_GetHealth, Health) == 0x000000, "Member 'GM_Zombie_C_GetHealth::Health' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetKickedPlayerVoted
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_GetKickedPlayerVoted final
{
public:
	TArray<class FString>                         KickplayerAlreadyVote;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Zombie_C_GetKickedPlayerVoted) == 0x000008, "Wrong alignment on GM_Zombie_C_GetKickedPlayerVoted");
static_assert(sizeof(GM_Zombie_C_GetKickedPlayerVoted) == 0x000010, "Wrong size on GM_Zombie_C_GetKickedPlayerVoted");
static_assert(offsetof(GM_Zombie_C_GetKickedPlayerVoted, KickplayerAlreadyVote) == 0x000000, "Member 'GM_Zombie_C_GetKickedPlayerVoted::KickplayerAlreadyVote' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetMenuSettings
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_GetMenuSettings final
{
public:
	class UBP_MenuControllerComponent_C*          Bp_MenuController;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetMenuSettings) == 0x000008, "Wrong alignment on GM_Zombie_C_GetMenuSettings");
static_assert(sizeof(GM_Zombie_C_GetMenuSettings) == 0x000008, "Wrong size on GM_Zombie_C_GetMenuSettings");
static_assert(offsetof(GM_Zombie_C_GetMenuSettings, Bp_MenuController) == 0x000000, "Member 'GM_Zombie_C_GetMenuSettings::Bp_MenuController' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_GetMutePlayer final
{
public:
	TArray<class FString>                         MutePlayer;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Zombie_C_GetMutePlayer) == 0x000008, "Wrong alignment on GM_Zombie_C_GetMutePlayer");
static_assert(sizeof(GM_Zombie_C_GetMutePlayer) == 0x000010, "Wrong size on GM_Zombie_C_GetMutePlayer");
static_assert(offsetof(GM_Zombie_C_GetMutePlayer, MutePlayer) == 0x000000, "Member 'GM_Zombie_C_GetMutePlayer::MutePlayer' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetPlayerAlives
// 0x0070 (0x0070 - 0x0000)
struct GM_Zombie_C_GetPlayerAlives final
{
public:
	TArray<class AALS_AnimMan_CharacterBP_C*>     Players_Alives_Return;                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AALS_AnimMan_CharacterBP_C*>     Players_Alives;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetPlayerAlives) == 0x000008, "Wrong alignment on GM_Zombie_C_GetPlayerAlives");
static_assert(sizeof(GM_Zombie_C_GetPlayerAlives) == 0x000070, "Wrong size on GM_Zombie_C_GetPlayerAlives");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, Players_Alives_Return) == 0x000000, "Member 'GM_Zombie_C_GetPlayerAlives::Players_Alives_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, Players_Alives) == 0x000010, "Member 'GM_Zombie_C_GetPlayerAlives::Players_Alives' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GM_Zombie_C_GetPlayerAlives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GM_Zombie_C_GetPlayerAlives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GM_Zombie_C_GetPlayerAlives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'GM_Zombie_C_GetPlayerAlives::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GM_Zombie_C_GetPlayerAlives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, CallFunc_Array_Get_Item) == 0x000048, "Member 'GM_Zombie_C_GetPlayerAlives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GM_Zombie_C_GetPlayerAlives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, K2Node_DynamicCast_AsBodycam_Interface) == 0x000058, "Member 'GM_Zombie_C_GetPlayerAlives::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GM_Zombie_C_GetPlayerAlives::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, CallFunc_IsDead_Dead_) == 0x000069, "Member 'GM_Zombie_C_GetPlayerAlives::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerAlives, CallFunc_Array_AddUnique_ReturnValue) == 0x00006C, "Member 'GM_Zombie_C_GetPlayerAlives::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetPlayerConnected
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_GetPlayerConnected final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerConnected;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Zombie_C_GetPlayerConnected) == 0x000008, "Wrong alignment on GM_Zombie_C_GetPlayerConnected");
static_assert(sizeof(GM_Zombie_C_GetPlayerConnected) == 0x000010, "Wrong size on GM_Zombie_C_GetPlayerConnected");
static_assert(offsetof(GM_Zombie_C_GetPlayerConnected, PlayerConnected) == 0x000000, "Member 'GM_Zombie_C_GetPlayerConnected::PlayerConnected' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetPlayerKickVote
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_GetPlayerKickVote final
{
public:
	TArray<struct FSTR_KickVote>                  KickVotePlayer;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Zombie_C_GetPlayerKickVote) == 0x000008, "Wrong alignment on GM_Zombie_C_GetPlayerKickVote");
static_assert(sizeof(GM_Zombie_C_GetPlayerKickVote) == 0x000010, "Wrong size on GM_Zombie_C_GetPlayerKickVote");
static_assert(offsetof(GM_Zombie_C_GetPlayerKickVote, KickVotePlayer) == 0x000000, "Member 'GM_Zombie_C_GetPlayerKickVote::KickVotePlayer' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetPlayersDeaths
// 0x00D0 (0x00D0 - 0x0000)
struct GM_Zombie_C_GetPlayersDeaths final
{
public:
	TArray<class APC_Zombie_C*>                   Players_Alives_Return;                             // 0x0000(0x0010)(Parm, OutParm)
	TArray<class APC_Zombie_C*>                   Players_Alives;                                    // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x0050(0x0010)(ReferenceParm)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0060(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Zombie_C*                           K2Node_DynamicCast_AsPC_Zombie;                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_1;          // 0x00B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetPlayersDeaths) == 0x000008, "Wrong alignment on GM_Zombie_C_GetPlayersDeaths");
static_assert(sizeof(GM_Zombie_C_GetPlayersDeaths) == 0x0000D0, "Wrong size on GM_Zombie_C_GetPlayersDeaths");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, Players_Alives_Return) == 0x000000, "Member 'GM_Zombie_C_GetPlayersDeaths::Players_Alives_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, Players_Alives) == 0x000010, "Member 'GM_Zombie_C_GetPlayersDeaths::Players_Alives' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GM_Zombie_C_GetPlayersDeaths::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GM_Zombie_C_GetPlayersDeaths::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GM_Zombie_C_GetPlayersDeaths::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, CallFunc_GetGameState_ReturnValue) == 0x000030, "Member 'GM_Zombie_C_GetPlayersDeaths::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, K2Node_DynamicCast_AsBodycam_Interface) == 0x000038, "Member 'GM_Zombie_C_GetPlayersDeaths::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'GM_Zombie_C_GetPlayersDeaths::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, CallFunc_GetPlayerConnected_PlayerConnected) == 0x000050, "Member 'GM_Zombie_C_GetPlayersDeaths::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, CallFunc_Array_Get_Item) == 0x000060, "Member 'GM_Zombie_C_GetPlayersDeaths::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, CallFunc_Array_Length_ReturnValue) == 0x0000A0, "Member 'GM_Zombie_C_GetPlayersDeaths::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, K2Node_DynamicCast_AsPC_Zombie) == 0x0000A8, "Member 'GM_Zombie_C_GetPlayersDeaths::K2Node_DynamicCast_AsPC_Zombie' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, K2Node_DynamicCast_bSuccess_1) == 0x0000B0, "Member 'GM_Zombie_C_GetPlayersDeaths::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, CallFunc_Less_IntInt_ReturnValue) == 0x0000B1, "Member 'GM_Zombie_C_GetPlayersDeaths::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, K2Node_DynamicCast_AsBodycam_Interface_1) == 0x0000B8, "Member 'GM_Zombie_C_GetPlayersDeaths::K2Node_DynamicCast_AsBodycam_Interface_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, K2Node_DynamicCast_bSuccess_2) == 0x0000C8, "Member 'GM_Zombie_C_GetPlayersDeaths::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, CallFunc_IsDead_Dead_) == 0x0000C9, "Member 'GM_Zombie_C_GetPlayersDeaths::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayersDeaths, CallFunc_Array_AddUnique_ReturnValue) == 0x0000CC, "Member 'GM_Zombie_C_GetPlayersDeaths::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetPlayerSkin
// 0x02E8 (0x02E8 - 0x0000)
struct GM_Zombie_C_GetPlayerSkin final
{
public:
	struct FSTR_TEST                              Player_Skin;                                       // 0x0000(0x02E0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetPlayerSkin) == 0x000008, "Wrong alignment on GM_Zombie_C_GetPlayerSkin");
static_assert(sizeof(GM_Zombie_C_GetPlayerSkin) == 0x0002E8, "Wrong size on GM_Zombie_C_GetPlayerSkin");
static_assert(offsetof(GM_Zombie_C_GetPlayerSkin, Player_Skin) == 0x000000, "Member 'GM_Zombie_C_GetPlayerSkin::Player_Skin' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetPlayerSkin, Valid_) == 0x0002E0, "Member 'GM_Zombie_C_GetPlayerSkin::Valid_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetRagdollSystem
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_GetRagdollSystem final
{
public:
	class UWW_RagdollSystem_C*                    Ragdoll_System;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetRagdollSystem) == 0x000008, "Wrong alignment on GM_Zombie_C_GetRagdollSystem");
static_assert(sizeof(GM_Zombie_C_GetRagdollSystem) == 0x000008, "Wrong size on GM_Zombie_C_GetRagdollSystem");
static_assert(offsetof(GM_Zombie_C_GetRagdollSystem, Ragdoll_System) == 0x000000, "Member 'GM_Zombie_C_GetRagdollSystem::Ragdoll_System' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetRandomSpeedForZombies
// 0x00A8 (0x00A8 - 0x0000)
struct GM_Zombie_C_GetRandomSpeedForZombies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_Zombie_C*                           K2Node_DynamicCast_AsGM_Zombie;                    // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_2;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0048(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_ZombieAnimations                  CallFunc_GetDataTableRowFromName_OutRow;           // 0x0068(0x0030)(HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_DoubleDouble_ReturnValue;       // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetRandomSpeedForZombies) == 0x000008, "Wrong alignment on GM_Zombie_C_GetRandomSpeedForZombies");
static_assert(sizeof(GM_Zombie_C_GetRandomSpeedForZombies) == 0x0000A8, "Wrong size on GM_Zombie_C_GetRandomSpeedForZombies");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_GetGameMode_ReturnValue) == 0x000010, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, K2Node_DynamicCast_AsGM_Zombie) == 0x000018, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::K2Node_DynamicCast_AsGM_Zombie' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000028, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000038, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_Conv_IntToDouble_ReturnValue_2) == 0x000040, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_Conv_IntToDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000048, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_Array_Get_Item) == 0x00005C, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_Less_IntInt_ReturnValue) == 0x000064, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_GetDataTableRowFromName_OutRow) == 0x000068, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000098, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_Array_AddUnique_ReturnValue) == 0x00009C, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x0000A0, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_LessEqual_DoubleDouble_ReturnValue) == 0x0000A1, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_LessEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetRandomSpeedForZombies, CallFunc_BooleanAND_ReturnValue) == 0x0000A2, "Member 'GM_Zombie_C_GetRandomSpeedForZombies::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetReady?
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_GetReady_ final
{
public:
	bool                                          IsReady_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetReady_) == 0x000001, "Wrong alignment on GM_Zombie_C_GetReady_");
static_assert(sizeof(GM_Zombie_C_GetReady_) == 0x000001, "Wrong size on GM_Zombie_C_GetReady_");
static_assert(offsetof(GM_Zombie_C_GetReady_, IsReady_) == 0x000000, "Member 'GM_Zombie_C_GetReady_::IsReady_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetServerSteamID
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_GetServerSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetServerSteamID) == 0x000008, "Wrong alignment on GM_Zombie_C_GetServerSteamID");
static_assert(sizeof(GM_Zombie_C_GetServerSteamID) == 0x000010, "Wrong size on GM_Zombie_C_GetServerSteamID");
static_assert(offsetof(GM_Zombie_C_GetServerSteamID, SteamID) == 0x000000, "Member 'GM_Zombie_C_GetServerSteamID::SteamID' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetStarterWeapons
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_GetStarterWeapons final
{
public:
	TArray<struct FSTR_Actor>                     Weapons;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Zombie_C_GetStarterWeapons) == 0x000008, "Wrong alignment on GM_Zombie_C_GetStarterWeapons");
static_assert(sizeof(GM_Zombie_C_GetStarterWeapons) == 0x000010, "Wrong size on GM_Zombie_C_GetStarterWeapons");
static_assert(offsetof(GM_Zombie_C_GetStarterWeapons, Weapons) == 0x000000, "Member 'GM_Zombie_C_GetStarterWeapons::Weapons' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_GetSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetSteamID) == 0x000008, "Wrong alignment on GM_Zombie_C_GetSteamID");
static_assert(sizeof(GM_Zombie_C_GetSteamID) == 0x000010, "Wrong size on GM_Zombie_C_GetSteamID");
static_assert(offsetof(GM_Zombie_C_GetSteamID, SteamID) == 0x000000, "Member 'GM_Zombie_C_GetSteamID::SteamID' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetSurvivorStatuts
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_GetSurvivorStatuts final
{
public:
	class UWW_SurvivorStatus_C*                   SurvivorComponant;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetSurvivorStatuts) == 0x000008, "Wrong alignment on GM_Zombie_C_GetSurvivorStatuts");
static_assert(sizeof(GM_Zombie_C_GetSurvivorStatuts) == 0x000008, "Wrong size on GM_Zombie_C_GetSurvivorStatuts");
static_assert(offsetof(GM_Zombie_C_GetSurvivorStatuts, SurvivorComponant) == 0x000000, "Member 'GM_Zombie_C_GetSurvivorStatuts::SurvivorComponant' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetTeam
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_GetTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetTeam) == 0x000001, "Wrong alignment on GM_Zombie_C_GetTeam");
static_assert(sizeof(GM_Zombie_C_GetTeam) == 0x000001, "Wrong size on GM_Zombie_C_GetTeam");
static_assert(offsetof(GM_Zombie_C_GetTeam, Team) == 0x000000, "Member 'GM_Zombie_C_GetTeam::Team' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetTeamList
// 0x0018 (0x0018 - 0x0000)
struct GM_Zombie_C_GetTeamList final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Info;                                              // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Zombie_C_GetTeamList) == 0x000008, "Wrong alignment on GM_Zombie_C_GetTeamList");
static_assert(sizeof(GM_Zombie_C_GetTeamList) == 0x000018, "Wrong size on GM_Zombie_C_GetTeamList");
static_assert(offsetof(GM_Zombie_C_GetTeamList, Team) == 0x000000, "Member 'GM_Zombie_C_GetTeamList::Team' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetTeamList, Info) == 0x000008, "Member 'GM_Zombie_C_GetTeamList::Info' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetTopScore
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_GetTopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScore;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Zombie_C_GetTopScore) == 0x000008, "Wrong alignment on GM_Zombie_C_GetTopScore");
static_assert(sizeof(GM_Zombie_C_GetTopScore) == 0x000010, "Wrong size on GM_Zombie_C_GetTopScore");
static_assert(offsetof(GM_Zombie_C_GetTopScore, TopScore) == 0x000000, "Member 'GM_Zombie_C_GetTopScore::TopScore' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetZombiesAlives
// 0x0070 (0x0070 - 0x0000)
struct GM_Zombie_C_GetZombiesAlives final
{
public:
	TArray<class AZombie_C*>                      ZombiesAlives_Return;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AZombie_C*>                      ZombiesAlives;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_C*>                      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetZombiesAlives) == 0x000008, "Wrong alignment on GM_Zombie_C_GetZombiesAlives");
static_assert(sizeof(GM_Zombie_C_GetZombiesAlives) == 0x000070, "Wrong size on GM_Zombie_C_GetZombiesAlives");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, ZombiesAlives_Return) == 0x000000, "Member 'GM_Zombie_C_GetZombiesAlives::ZombiesAlives_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, ZombiesAlives) == 0x000010, "Member 'GM_Zombie_C_GetZombiesAlives::ZombiesAlives' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GM_Zombie_C_GetZombiesAlives::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GM_Zombie_C_GetZombiesAlives::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GM_Zombie_C_GetZombiesAlives::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'GM_Zombie_C_GetZombiesAlives::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GM_Zombie_C_GetZombiesAlives::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, CallFunc_Array_Get_Item) == 0x000048, "Member 'GM_Zombie_C_GetZombiesAlives::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GM_Zombie_C_GetZombiesAlives::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, K2Node_DynamicCast_AsBodycam_Interface) == 0x000058, "Member 'GM_Zombie_C_GetZombiesAlives::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GM_Zombie_C_GetZombiesAlives::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, CallFunc_IsDead_Dead_) == 0x000069, "Member 'GM_Zombie_C_GetZombiesAlives::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesAlives, CallFunc_Array_AddUnique_ReturnValue) == 0x00006C, "Member 'GM_Zombie_C_GetZombiesAlives::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.GetZombiesDeaths
// 0x0070 (0x0070 - 0x0000)
struct GM_Zombie_C_GetZombiesDeaths final
{
public:
	TArray<class AZombie_C*>                      ZombiesDeaths_Return;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<class AZombie_C*>                      ZombiesDeaths;                                     // 0x0010(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_C*>                      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6B[0x1];                                       // 0x006B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_GetZombiesDeaths) == 0x000008, "Wrong alignment on GM_Zombie_C_GetZombiesDeaths");
static_assert(sizeof(GM_Zombie_C_GetZombiesDeaths) == 0x000070, "Wrong size on GM_Zombie_C_GetZombiesDeaths");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, ZombiesDeaths_Return) == 0x000000, "Member 'GM_Zombie_C_GetZombiesDeaths::ZombiesDeaths_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, ZombiesDeaths) == 0x000010, "Member 'GM_Zombie_C_GetZombiesDeaths::ZombiesDeaths' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GM_Zombie_C_GetZombiesDeaths::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, Temp_int_Loop_Counter_Variable) == 0x000024, "Member 'GM_Zombie_C_GetZombiesDeaths::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, CallFunc_Add_IntInt_ReturnValue) == 0x000028, "Member 'GM_Zombie_C_GetZombiesDeaths::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, CallFunc_GetAllActorsOfClass_OutActors) == 0x000030, "Member 'GM_Zombie_C_GetZombiesDeaths::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GM_Zombie_C_GetZombiesDeaths::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, CallFunc_Array_Get_Item) == 0x000048, "Member 'GM_Zombie_C_GetZombiesDeaths::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, CallFunc_Less_IntInt_ReturnValue) == 0x000050, "Member 'GM_Zombie_C_GetZombiesDeaths::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, K2Node_DynamicCast_AsBodycam_Interface) == 0x000058, "Member 'GM_Zombie_C_GetZombiesDeaths::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GM_Zombie_C_GetZombiesDeaths::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, CallFunc_IsDead_Dead_) == 0x000069, "Member 'GM_Zombie_C_GetZombiesDeaths::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, CallFunc_BooleanAND_ReturnValue) == 0x00006A, "Member 'GM_Zombie_C_GetZombiesDeaths::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_GetZombiesDeaths, CallFunc_Array_AddUnique_ReturnValue) == 0x00006C, "Member 'GM_Zombie_C_GetZombiesDeaths::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.Is All Players Dead
// 0x00A8 (0x00A8 - 0x0000)
struct GM_Zombie_C_Is_All_Players_Dead final
{
public:
	bool                                          AllPlayersDead_Return;                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllPlayersDead;                                    // 0x0001(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0048(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_1;          // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_Is_All_Players_Dead) == 0x000008, "Wrong alignment on GM_Zombie_C_Is_All_Players_Dead");
static_assert(sizeof(GM_Zombie_C_Is_All_Players_Dead) == 0x0000A8, "Wrong size on GM_Zombie_C_Is_All_Players_Dead");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, AllPlayersDead_Return) == 0x000000, "Member 'GM_Zombie_C_Is_All_Players_Dead::AllPlayersDead_Return' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, AllPlayersDead) == 0x000001, "Member 'GM_Zombie_C_Is_All_Players_Dead::AllPlayersDead' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GM_Zombie_C_Is_All_Players_Dead::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GM_Zombie_C_Is_All_Players_Dead::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, Temp_int_Array_Index_Variable) == 0x00000C, "Member 'GM_Zombie_C_Is_All_Players_Dead::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'GM_Zombie_C_Is_All_Players_Dead::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, K2Node_DynamicCast_AsBodycam_Interface) == 0x000018, "Member 'GM_Zombie_C_Is_All_Players_Dead::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GM_Zombie_C_Is_All_Players_Dead::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, CallFunc_GetPlayerConnected_PlayerConnected) == 0x000030, "Member 'GM_Zombie_C_Is_All_Players_Dead::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GM_Zombie_C_Is_All_Players_Dead::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, CallFunc_Array_Get_Item) == 0x000048, "Member 'GM_Zombie_C_Is_All_Players_Dead::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'GM_Zombie_C_Is_All_Players_Dead::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, K2Node_DynamicCast_AsBodycam_Interface_1) == 0x000090, "Member 'GM_Zombie_C_Is_All_Players_Dead::K2Node_DynamicCast_AsBodycam_Interface_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'GM_Zombie_C_Is_All_Players_Dead::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'GM_Zombie_C_Is_All_Players_Dead::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_Is_All_Players_Dead, CallFunc_IsDead_Dead_) == 0x0000A2, "Member 'GM_Zombie_C_Is_All_Players_Dead::CallFunc_IsDead_Dead_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_IsDead final
{
public:
	bool                                          Dead_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_IsDead) == 0x000001, "Wrong alignment on GM_Zombie_C_IsDead");
static_assert(sizeof(GM_Zombie_C_IsDead) == 0x000001, "Wrong size on GM_Zombie_C_IsDead");
static_assert(offsetof(GM_Zombie_C_IsDead, Dead_) == 0x000000, "Member 'GM_Zombie_C_IsDead::Dead_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.IsDestroyabe?
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_IsDestroyabe_ final
{
public:
	bool                                          Destroyable_;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_IsDestroyabe_) == 0x000001, "Wrong alignment on GM_Zombie_C_IsDestroyabe_");
static_assert(sizeof(GM_Zombie_C_IsDestroyabe_) == 0x000001, "Wrong size on GM_Zombie_C_IsDestroyabe_");
static_assert(offsetof(GM_Zombie_C_IsDestroyabe_, Destroyable_) == 0x000000, "Member 'GM_Zombie_C_IsDestroyabe_::Destroyable_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.IsReady?
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_IsReady_ final
{
public:
	bool                                          IsReady__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_IsReady_) == 0x000001, "Wrong alignment on GM_Zombie_C_IsReady_");
static_assert(sizeof(GM_Zombie_C_IsReady_) == 0x000001, "Wrong size on GM_Zombie_C_IsReady_");
static_assert(offsetof(GM_Zombie_C_IsReady_, IsReady__0) == 0x000000, "Member 'GM_Zombie_C_IsReady_::IsReady__0' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.IsStress
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_IsStress final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_IsStress) == 0x000001, "Wrong alignment on GM_Zombie_C_IsStress");
static_assert(sizeof(GM_Zombie_C_IsStress) == 0x000001, "Wrong size on GM_Zombie_C_IsStress");
static_assert(offsetof(GM_Zombie_C_IsStress, Yes_) == 0x000000, "Member 'GM_Zombie_C_IsStress::Yes_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.IsTalking?
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_IsTalking_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_IsTalking_) == 0x000001, "Wrong alignment on GM_Zombie_C_IsTalking_");
static_assert(sizeof(GM_Zombie_C_IsTalking_) == 0x000001, "Wrong size on GM_Zombie_C_IsTalking_");
static_assert(offsetof(GM_Zombie_C_IsTalking_, IsTalking__0) == 0x000000, "Member 'GM_Zombie_C_IsTalking_::IsTalking__0' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_K2_OnLogout) == 0x000008, "Wrong alignment on GM_Zombie_C_K2_OnLogout");
static_assert(sizeof(GM_Zombie_C_K2_OnLogout) == 0x000008, "Wrong size on GM_Zombie_C_K2_OnLogout");
static_assert(offsetof(GM_Zombie_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'GM_Zombie_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.Kick?
// 0x0040 (0x0040 - 0x0000)
struct GM_Zombie_C_Kick_ final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_Kick_) == 0x000008, "Wrong alignment on GM_Zombie_C_Kick_");
static_assert(sizeof(GM_Zombie_C_Kick_) == 0x000040, "Wrong size on GM_Zombie_C_Kick_");
static_assert(offsetof(GM_Zombie_C_Kick_, Target) == 0x000000, "Member 'GM_Zombie_C_Kick_::Target' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.KickPlayer
// 0x0048 (0x0048 - 0x0000)
struct GM_Zombie_C_KickPlayer final
{
public:
	struct FSTR_KickVote                          PlayerInfo;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_KickPlayer) == 0x000008, "Wrong alignment on GM_Zombie_C_KickPlayer");
static_assert(sizeof(GM_Zombie_C_KickPlayer) == 0x000048, "Wrong size on GM_Zombie_C_KickPlayer");
static_assert(offsetof(GM_Zombie_C_KickPlayer, PlayerInfo) == 0x000000, "Member 'GM_Zombie_C_KickPlayer::PlayerInfo' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.KillAllZombies
// 0x0038 (0x0038 - 0x0000)
struct GM_Zombie_C_KillAllZombies final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AZombie_C*>                      CallFunc_GetAllActorsOfClass_OutActors;            // 0x0010(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AZombie_C*                              CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_KillAllZombies) == 0x000008, "Wrong alignment on GM_Zombie_C_KillAllZombies");
static_assert(sizeof(GM_Zombie_C_KillAllZombies) == 0x000038, "Wrong size on GM_Zombie_C_KillAllZombies");
static_assert(offsetof(GM_Zombie_C_KillAllZombies, Temp_int_Array_Index_Variable) == 0x000000, "Member 'GM_Zombie_C_KillAllZombies::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_KillAllZombies, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'GM_Zombie_C_KillAllZombies::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_KillAllZombies, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GM_Zombie_C_KillAllZombies::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_KillAllZombies, CallFunc_GetAllActorsOfClass_OutActors) == 0x000010, "Member 'GM_Zombie_C_KillAllZombies::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_KillAllZombies, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'GM_Zombie_C_KillAllZombies::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_KillAllZombies, CallFunc_Array_Get_Item) == 0x000028, "Member 'GM_Zombie_C_KillAllZombies::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_KillAllZombies, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'GM_Zombie_C_KillAllZombies::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.MuteID
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_MuteID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_MuteID) == 0x000008, "Wrong alignment on GM_Zombie_C_MuteID");
static_assert(sizeof(GM_Zombie_C_MuteID) == 0x000010, "Wrong size on GM_Zombie_C_MuteID");
static_assert(offsetof(GM_Zombie_C_MuteID, SteamID) == 0x000000, "Member 'GM_Zombie_C_MuteID::SteamID' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.NewKickVote
// 0x0040 (0x0040 - 0x0000)
struct GM_Zombie_C_NewKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_NewKickVote) == 0x000008, "Wrong alignment on GM_Zombie_C_NewKickVote");
static_assert(sizeof(GM_Zombie_C_NewKickVote) == 0x000040, "Wrong size on GM_Zombie_C_NewKickVote");
static_assert(offsetof(GM_Zombie_C_NewKickVote, Target) == 0x000000, "Member 'GM_Zombie_C_NewKickVote::Target' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.NewWaves
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_NewWaves final
{
public:
	int32                                         Wave_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  EN_WaveClass_0;                                    // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_NewWaves) == 0x000004, "Wrong alignment on GM_Zombie_C_NewWaves");
static_assert(sizeof(GM_Zombie_C_NewWaves) == 0x000008, "Wrong size on GM_Zombie_C_NewWaves");
static_assert(offsetof(GM_Zombie_C_NewWaves, Wave_0) == 0x000000, "Member 'GM_Zombie_C_NewWaves::Wave_0' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_NewWaves, EN_WaveClass_0) == 0x000004, "Member 'GM_Zombie_C_NewWaves::EN_WaveClass_0' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.OnPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_OnPlayerDeath final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_OnPlayerDeath) == 0x000008, "Wrong alignment on GM_Zombie_C_OnPlayerDeath");
static_assert(sizeof(GM_Zombie_C_OnPlayerDeath) == 0x000008, "Wrong size on GM_Zombie_C_OnPlayerDeath");
static_assert(offsetof(GM_Zombie_C_OnPlayerDeath, PC) == 0x000000, "Member 'GM_Zombie_C_OnPlayerDeath::PC' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.OnTrySelectTeam
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_OnTrySelectTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_OnTrySelectTeam) == 0x000001, "Wrong alignment on GM_Zombie_C_OnTrySelectTeam");
static_assert(sizeof(GM_Zombie_C_OnTrySelectTeam) == 0x000001, "Wrong size on GM_Zombie_C_OnTrySelectTeam");
static_assert(offsetof(GM_Zombie_C_OnTrySelectTeam, Team) == 0x000000, "Member 'GM_Zombie_C_OnTrySelectTeam::Team' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct GM_Zombie_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_ReceiveTick) == 0x000004, "Wrong alignment on GM_Zombie_C_ReceiveTick");
static_assert(sizeof(GM_Zombie_C_ReceiveTick) == 0x000004, "Wrong size on GM_Zombie_C_ReceiveTick");
static_assert(offsetof(GM_Zombie_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'GM_Zombie_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.RespawnDeadPlayer
// 0x00B8 (0x00B8 - 0x0000)
struct GM_Zombie_C_RespawnDeadPlayer final
{
public:
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x0030(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0048(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_1;          // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A3[0x5];                                       // 0x00A3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Zombie_C*                           K2Node_DynamicCast_AsPC_Zombie;                    // 0x00A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_RespawnDeadPlayer) == 0x000008, "Wrong alignment on GM_Zombie_C_RespawnDeadPlayer");
static_assert(sizeof(GM_Zombie_C_RespawnDeadPlayer) == 0x0000B8, "Wrong size on GM_Zombie_C_RespawnDeadPlayer");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, Temp_int_Loop_Counter_Variable) == 0x000000, "Member 'GM_Zombie_C_RespawnDeadPlayer::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'GM_Zombie_C_RespawnDeadPlayer::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, Temp_int_Array_Index_Variable) == 0x000008, "Member 'GM_Zombie_C_RespawnDeadPlayer::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, CallFunc_GetGameState_ReturnValue) == 0x000010, "Member 'GM_Zombie_C_RespawnDeadPlayer::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, K2Node_DynamicCast_AsBodycam_Interface) == 0x000018, "Member 'GM_Zombie_C_RespawnDeadPlayer::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GM_Zombie_C_RespawnDeadPlayer::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, CallFunc_GetPlayerConnected_PlayerConnected) == 0x000030, "Member 'GM_Zombie_C_RespawnDeadPlayer::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GM_Zombie_C_RespawnDeadPlayer::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, CallFunc_Array_Get_Item) == 0x000048, "Member 'GM_Zombie_C_RespawnDeadPlayer::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, CallFunc_Less_IntInt_ReturnValue) == 0x000088, "Member 'GM_Zombie_C_RespawnDeadPlayer::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, K2Node_DynamicCast_AsBodycam_Interface_1) == 0x000090, "Member 'GM_Zombie_C_RespawnDeadPlayer::K2Node_DynamicCast_AsBodycam_Interface_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, K2Node_DynamicCast_bSuccess_1) == 0x0000A0, "Member 'GM_Zombie_C_RespawnDeadPlayer::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, CallFunc_IsValid_ReturnValue) == 0x0000A1, "Member 'GM_Zombie_C_RespawnDeadPlayer::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, CallFunc_IsDead_Dead_) == 0x0000A2, "Member 'GM_Zombie_C_RespawnDeadPlayer::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, K2Node_DynamicCast_AsPC_Zombie) == 0x0000A8, "Member 'GM_Zombie_C_RespawnDeadPlayer::K2Node_DynamicCast_AsPC_Zombie' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_RespawnDeadPlayer, K2Node_DynamicCast_bSuccess_2) == 0x0000B0, "Member 'GM_Zombie_C_RespawnDeadPlayer::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.ServerTravel
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_ServerTravel final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_ServerTravel) == 0x000008, "Wrong alignment on GM_Zombie_C_ServerTravel");
static_assert(sizeof(GM_Zombie_C_ServerTravel) == 0x000008, "Wrong size on GM_Zombie_C_ServerTravel");
static_assert(offsetof(GM_Zombie_C_ServerTravel, Delay) == 0x000000, "Member 'GM_Zombie_C_ServerTravel::Delay' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.Slomo
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_Slomo final
{
public:
	double                                        Slomo_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_Slomo) == 0x000008, "Wrong alignment on GM_Zombie_C_Slomo");
static_assert(sizeof(GM_Zombie_C_Slomo) == 0x000008, "Wrong size on GM_Zombie_C_Slomo");
static_assert(offsetof(GM_Zombie_C_Slomo, Slomo_0) == 0x000000, "Member 'GM_Zombie_C_Slomo::Slomo_0' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.SpawnScreamer
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_SpawnScreamer final
{
public:
	bool                                          Destroy_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_SpawnScreamer) == 0x000001, "Wrong alignment on GM_Zombie_C_SpawnScreamer");
static_assert(sizeof(GM_Zombie_C_SpawnScreamer) == 0x000001, "Wrong size on GM_Zombie_C_SpawnScreamer");
static_assert(offsetof(GM_Zombie_C_SpawnScreamer, Destroy_) == 0x000000, "Member 'GM_Zombie_C_SpawnScreamer::Destroy_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.Start Wave
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_Start_Wave final
{
public:
	bool                                          FirstWave_;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_Start_Wave) == 0x000001, "Wrong alignment on GM_Zombie_C_Start_Wave");
static_assert(sizeof(GM_Zombie_C_Start_Wave) == 0x000001, "Wrong size on GM_Zombie_C_Start_Wave");
static_assert(offsetof(GM_Zombie_C_Start_Wave, FirstWave_) == 0x000000, "Member 'GM_Zombie_C_Start_Wave::FirstWave_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.Talk
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_Talk final
{
public:
	bool                                          IsTalking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_Talk) == 0x000001, "Wrong alignment on GM_Zombie_C_Talk");
static_assert(sizeof(GM_Zombie_C_Talk) == 0x000001, "Wrong size on GM_Zombie_C_Talk");
static_assert(offsetof(GM_Zombie_C_Talk, IsTalking) == 0x000000, "Member 'GM_Zombie_C_Talk::IsTalking' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdateGamemode
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_UpdateGamemode final
{
public:
	EGameMode                                     GameMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_UpdateGamemode) == 0x000001, "Wrong alignment on GM_Zombie_C_UpdateGamemode");
static_assert(sizeof(GM_Zombie_C_UpdateGamemode) == 0x000001, "Wrong size on GM_Zombie_C_UpdateGamemode");
static_assert(offsetof(GM_Zombie_C_UpdateGamemode, GameMode) == 0x000000, "Member 'GM_Zombie_C_UpdateGamemode::GameMode' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdateKickVote
// 0x0048 (0x0048 - 0x0000)
struct GM_Zombie_C_UpdateKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_UpdateKickVote) == 0x000008, "Wrong alignment on GM_Zombie_C_UpdateKickVote");
static_assert(sizeof(GM_Zombie_C_UpdateKickVote) == 0x000048, "Wrong size on GM_Zombie_C_UpdateKickVote");
static_assert(offsetof(GM_Zombie_C_UpdateKickVote, Target) == 0x000000, "Member 'GM_Zombie_C_UpdateKickVote::Target' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_UpdateKickVote, Yes_) == 0x000040, "Member 'GM_Zombie_C_UpdateKickVote::Yes_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdateMapSelection
// 0x000C (0x000C - 0x0000)
struct GM_Zombie_C_UpdateMapSelection final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_UpdateMapSelection) == 0x000004, "Wrong alignment on GM_Zombie_C_UpdateMapSelection");
static_assert(sizeof(GM_Zombie_C_UpdateMapSelection) == 0x00000C, "Wrong size on GM_Zombie_C_UpdateMapSelection");
static_assert(offsetof(GM_Zombie_C_UpdateMapSelection, Selected_Level_Name) == 0x000000, "Member 'GM_Zombie_C_UpdateMapSelection::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_UpdateMapSelection, Index_0) == 0x000008, "Member 'GM_Zombie_C_UpdateMapSelection::Index_0' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdatePower
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_UpdatePower final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_UpdatePower) == 0x000001, "Wrong alignment on GM_Zombie_C_UpdatePower");
static_assert(sizeof(GM_Zombie_C_UpdatePower) == 0x000001, "Wrong size on GM_Zombie_C_UpdatePower");
static_assert(offsetof(GM_Zombie_C_UpdatePower, On_) == 0x000000, "Member 'GM_Zombie_C_UpdatePower::On_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdateScore
// 0x0008 (0x0008 - 0x0000)
struct GM_Zombie_C_UpdateScore final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_UpdateScore) == 0x000004, "Wrong alignment on GM_Zombie_C_UpdateScore");
static_assert(sizeof(GM_Zombie_C_UpdateScore) == 0x000008, "Wrong size on GM_Zombie_C_UpdateScore");
static_assert(offsetof(GM_Zombie_C_UpdateScore, Score) == 0x000000, "Member 'GM_Zombie_C_UpdateScore::Score' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdateTeamIndex (PlayerKilled)
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_UpdateTeamIndex__PlayerKilled_ final
{
public:
	E_Team                                        Team_PlayerKilled_;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_UpdateTeamIndex__PlayerKilled_) == 0x000004, "Wrong alignment on GM_Zombie_C_UpdateTeamIndex__PlayerKilled_");
static_assert(sizeof(GM_Zombie_C_UpdateTeamIndex__PlayerKilled_) == 0x000010, "Wrong size on GM_Zombie_C_UpdateTeamIndex__PlayerKilled_");
static_assert(offsetof(GM_Zombie_C_UpdateTeamIndex__PlayerKilled_, Team_PlayerKilled_) == 0x000000, "Member 'GM_Zombie_C_UpdateTeamIndex__PlayerKilled_::Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_UpdateTeamIndex__PlayerKilled_, MilitaryIndex) == 0x000004, "Member 'GM_Zombie_C_UpdateTeamIndex__PlayerKilled_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_UpdateTeamIndex__PlayerKilled_, TerroristIndex) == 0x000008, "Member 'GM_Zombie_C_UpdateTeamIndex__PlayerKilled_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_UpdateTeamIndex__PlayerKilled_, WiiningTeam) == 0x00000C, "Member 'GM_Zombie_C_UpdateTeamIndex__PlayerKilled_::WiiningTeam' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdateTeamXP
// 0x0001 (0x0001 - 0x0000)
struct GM_Zombie_C_UpdateTeamXP final
{
public:
	bool                                          Win_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_UpdateTeamXP) == 0x000001, "Wrong alignment on GM_Zombie_C_UpdateTeamXP");
static_assert(sizeof(GM_Zombie_C_UpdateTeamXP) == 0x000001, "Wrong size on GM_Zombie_C_UpdateTeamXP");
static_assert(offsetof(GM_Zombie_C_UpdateTeamXP, Win_) == 0x000000, "Member 'GM_Zombie_C_UpdateTeamXP::Win_' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdateTimer
// 0x0020 (0x0020 - 0x0000)
struct GM_Zombie_C_UpdateTimer final
{
public:
	double                                        TimeCount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GM_Zombie_C_UpdateTimer) == 0x000008, "Wrong alignment on GM_Zombie_C_UpdateTimer");
static_assert(sizeof(GM_Zombie_C_UpdateTimer) == 0x000020, "Wrong size on GM_Zombie_C_UpdateTimer");
static_assert(offsetof(GM_Zombie_C_UpdateTimer, TimeCount) == 0x000000, "Member 'GM_Zombie_C_UpdateTimer::TimeCount' has a wrong offset!");
static_assert(offsetof(GM_Zombie_C_UpdateTimer, NewParam) == 0x000008, "Member 'GM_Zombie_C_UpdateTimer::NewParam' has a wrong offset!");

// Function GM_Zombie.GM_Zombie_C.UpdateWarning
// 0x0010 (0x0010 - 0x0000)
struct GM_Zombie_C_UpdateWarning final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Zombie_C_UpdateWarning) == 0x000008, "Wrong alignment on GM_Zombie_C_UpdateWarning");
static_assert(sizeof(GM_Zombie_C_UpdateWarning) == 0x000010, "Wrong size on GM_Zombie_C_UpdateWarning");
static_assert(offsetof(GM_Zombie_C_UpdateWarning, String) == 0x000000, "Member 'GM_Zombie_C_UpdateWarning::String' has a wrong offset!");

}

