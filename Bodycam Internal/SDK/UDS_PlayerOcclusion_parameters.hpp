#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDS_PlayerOcclusion

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.ExecuteUbergraph_UDS_PlayerOcclusion
// 0x0008 (0x0008 - 0x0000)
struct UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion) == 0x000004, "Wrong alignment on UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion");
static_assert(sizeof(UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion) == 0x000008, "Wrong size on UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion");
static_assert(offsetof(UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion, EntryPoint) == 0x000000, "Member 'UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion::EntryPoint' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'UDS_PlayerOcclusion_C_ExecuteUbergraph_UDS_PlayerOcclusion::K2Node_Event_DeltaSeconds' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.Get Occlusion Location
// 0x0028 (0x0028 - 0x0000)
struct UDS_PlayerOcclusion_C_Get_Occlusion_Location final
{
public:
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetCameraLocation_ReturnValue;            // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_PlayerOcclusion_C_Get_Occlusion_Location) == 0x000008, "Wrong alignment on UDS_PlayerOcclusion_C_Get_Occlusion_Location");
static_assert(sizeof(UDS_PlayerOcclusion_C_Get_Occlusion_Location) == 0x000028, "Wrong size on UDS_PlayerOcclusion_C_Get_Occlusion_Location");
static_assert(offsetof(UDS_PlayerOcclusion_C_Get_Occlusion_Location, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000000, "Member 'UDS_PlayerOcclusion_C_Get_Occlusion_Location::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Get_Occlusion_Location, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'UDS_PlayerOcclusion_C_Get_Occlusion_Location::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Get_Occlusion_Location, CallFunc_GetCameraLocation_ReturnValue) == 0x000010, "Member 'UDS_PlayerOcclusion_C_Get_Occlusion_Location::CallFunc_GetCameraLocation_ReturnValue' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.Get Starting Occlusion Profile
// 0x0018 (0x0018 - 0x0000)
struct UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimer_ReturnValue;                  // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0008(0x0008)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_K2_SetTimer_Time_ImplicitCast;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile) == 0x000008, "Wrong alignment on UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile");
static_assert(sizeof(UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile) == 0x000018, "Wrong size on UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile");
static_assert(offsetof(UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile, CallFunc_K2_SetTimer_ReturnValue) == 0x000000, "Member 'UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile::CallFunc_K2_SetTimer_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000008, "Member 'UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000010, "Member 'UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile, CallFunc_K2_SetTimer_Time_ImplicitCast) == 0x000014, "Member 'UDS_PlayerOcclusion_C_Get_Starting_Occlusion_Profile::CallFunc_K2_SetTimer_Time_ImplicitCast' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.Initialize
// 0x0008 (0x0008 - 0x0000)
struct UDS_PlayerOcclusion_C_Initialize final
{
public:
	struct FTimerHandle                           CallFunc_K2_SetTimerForNextTick_ReturnValue;       // 0x0000(0x0008)(NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_PlayerOcclusion_C_Initialize) == 0x000008, "Wrong alignment on UDS_PlayerOcclusion_C_Initialize");
static_assert(sizeof(UDS_PlayerOcclusion_C_Initialize) == 0x000008, "Wrong size on UDS_PlayerOcclusion_C_Initialize");
static_assert(offsetof(UDS_PlayerOcclusion_C_Initialize, CallFunc_K2_SetTimerForNextTick_ReturnValue) == 0x000000, "Member 'UDS_PlayerOcclusion_C_Initialize::CallFunc_K2_SetTimerForNextTick_ReturnValue' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct UDS_PlayerOcclusion_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_PlayerOcclusion_C_ReceiveTick) == 0x000004, "Wrong alignment on UDS_PlayerOcclusion_C_ReceiveTick");
static_assert(sizeof(UDS_PlayerOcclusion_C_ReceiveTick) == 0x000004, "Wrong size on UDS_PlayerOcclusion_C_ReceiveTick");
static_assert(offsetof(UDS_PlayerOcclusion_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'UDS_PlayerOcclusion_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.Set Target Fully Occluded
// 0x0010 (0x0010 - 0x0000)
struct UDS_PlayerOcclusion_C_Set_Target_Fully_Occluded final
{
public:
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(UDS_PlayerOcclusion_C_Set_Target_Fully_Occluded) == 0x000008, "Wrong alignment on UDS_PlayerOcclusion_C_Set_Target_Fully_Occluded");
static_assert(sizeof(UDS_PlayerOcclusion_C_Set_Target_Fully_Occluded) == 0x000010, "Wrong size on UDS_PlayerOcclusion_C_Set_Target_Fully_Occluded");
static_assert(offsetof(UDS_PlayerOcclusion_C_Set_Target_Fully_Occluded, K2Node_MakeArray_Array) == 0x000000, "Member 'UDS_PlayerOcclusion_C_Set_Target_Fully_Occluded::K2Node_MakeArray_Array' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.Set Target Fully Unoccluded
// 0x0010 (0x0010 - 0x0000)
struct UDS_PlayerOcclusion_C_Set_Target_Fully_Unoccluded final
{
public:
	TArray<double>                                K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ReferenceParm)
};
static_assert(alignof(UDS_PlayerOcclusion_C_Set_Target_Fully_Unoccluded) == 0x000008, "Wrong alignment on UDS_PlayerOcclusion_C_Set_Target_Fully_Unoccluded");
static_assert(sizeof(UDS_PlayerOcclusion_C_Set_Target_Fully_Unoccluded) == 0x000010, "Wrong size on UDS_PlayerOcclusion_C_Set_Target_Fully_Unoccluded");
static_assert(offsetof(UDS_PlayerOcclusion_C_Set_Target_Fully_Unoccluded, K2Node_MakeArray_Array) == 0x000000, "Member 'UDS_PlayerOcclusion_C_Set_Target_Fully_Unoccluded::K2Node_MakeArray_Array' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.Test Point for Occlusion
// 0x0630 (0x0630 - 0x0000)
struct UDS_PlayerOcclusion_C_Test_Point_for_Occlusion final
{
public:
	TArray<class AActor*>                         Actors_to_Ignore;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
	struct FVector                                Test_Location;                                     // 0x0010(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                Occlusion_Profile;                                 // 0x0028(0x0010)(Parm, OutParm)
	double                                        Overall_Occlusion;                                 // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Total_Occlusion;                                   // 0x0040(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                New_Occlusion_Profile;                             // 0x0048(0x0010)(Edit, BlueprintVisible)
	int32                                         Total_Hits;                                        // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Directional_Hits;                                  // 0x005C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x00A0(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_IntFloat_ReturnValue_1;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_1;           // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_3;                               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_2;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9[0x3];                                       // 0x00C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_4;                               // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_5;                               // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15C[0x4];                                      // 0x015C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0160(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item;                           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue_3;           // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x027C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x02B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x02C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2CC[0x4];                                      // 0x02CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array;                            // 0x02D0(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x02F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FC[0x4];                                      // 0x02FC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_2;       // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0318(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_6;                               // 0x0330(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_334[0x4];                                      // 0x0334(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Normal_ReturnValue_1;                     // 0x0338(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_3;                  // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_354[0x4];                                      // 0x0354(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_3;       // 0x0358(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0370(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_4;                  // 0x0388(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_38C[0x4];                                      // 0x038C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0390(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0478(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_479[0x7];                                      // 0x0479(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FVector>                        K2Node_MakeArray_Array_1;                          // 0x0480(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0490(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_494[0x4];                                      // 0x0494(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_2;                         // 0x0498(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x04B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4B1[0x7];                                      // 0x04B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x04D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue_2;                     // 0x04E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_4;       // 0x0500(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0518(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x0530(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x0618(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_619[0x3];                                      // 0x0619(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast;    // 0x061C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LineTraceSingle_DrawTime_ImplicitCast;    // 0x0620(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LineTraceSingle_DrawTime_ImplicitCast_1;  // 0x0624(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_LineTraceSingle_DrawTime_ImplicitCast_2;  // 0x0628(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion) == 0x000008, "Wrong alignment on UDS_PlayerOcclusion_C_Test_Point_for_Occlusion");
static_assert(sizeof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion) == 0x000630, "Wrong size on UDS_PlayerOcclusion_C_Test_Point_for_Occlusion");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Actors_to_Ignore) == 0x000000, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Actors_to_Ignore' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Test_Location) == 0x000010, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Test_Location' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Occlusion_Profile) == 0x000028, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Occlusion_Profile' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Overall_Occlusion) == 0x000038, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Overall_Occlusion' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Total_Occlusion) == 0x000040, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Total_Occlusion' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, New_Occlusion_Profile) == 0x000048, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::New_Occlusion_Profile' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Total_Hits) == 0x000058, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Total_Hits' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Directional_Hits) == 0x00005C, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Directional_Hits' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Variable) == 0x000060, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000068, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000070, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LessEqual_IntInt_ReturnValue) == 0x000078, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_MakeVector_ReturnValue) == 0x000080, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_IntInt_ReturnValue) == 0x000098, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_real_Variable) == 0x0000A0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Variable_1) == 0x0000A8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_IntFloat_ReturnValue_1) == 0x0000B0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_IntFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LessEqual_IntInt_ReturnValue_1) == 0x0000B8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LessEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000BC, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Variable_2) == 0x0000C0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Variable_3) == 0x0000C4, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Variable_3' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LessEqual_IntInt_ReturnValue_2) == 0x0000C8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LessEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000CC, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Loop_Counter_Variable) == 0x0000D0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_IntInt_ReturnValue_3) == 0x0000D4, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Array_Index_Variable) == 0x0000D8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Variable_4) == 0x0000DC, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Variable_4' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0000E0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Add_ReturnValue) == 0x0000F0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000F8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Normal_ReturnValue) == 0x000110, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000128, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Variable_5) == 0x000158, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Variable_5' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_OutHit) == 0x000160, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_ReturnValue) == 0x000248, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Get_Item) == 0x000250, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_SelectFloat_ReturnValue) == 0x000258, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000260, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LessEqual_IntInt_ReturnValue_3) == 0x000268, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LessEqual_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Lerp_ReturnValue) == 0x000270, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Add_ReturnValue_1) == 0x000278, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_IntInt_ReturnValue_4) == 0x00027C, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_IntInt_ReturnValue_5) == 0x000280, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000288, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_MapRangeClamped_ReturnValue) == 0x000290, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000298, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Lerp_ReturnValue_1) == 0x0002A0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x0002A8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Add_ReturnValue_2) == 0x0002B0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x0002B8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_MapRangeClamped_ReturnValue_2) == 0x0002C0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_IntInt_ReturnValue_6) == 0x0002C8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, K2Node_MakeArray_Array) == 0x0002D0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Get_Item_1) == 0x0002E0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_IntInt_ReturnValue_7) == 0x0002F8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_VectorFloat_ReturnValue_2) == 0x000300, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_VectorFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000318, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, Temp_int_Variable_6) == 0x000330, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::Temp_int_Variable_6' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Normal_ReturnValue_1) == 0x000338, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Normal_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Add_ReturnValue_3) == 0x000350, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Add_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_VectorFloat_ReturnValue_3) == 0x000358, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_VectorFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000370, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Add_ReturnValue_4) == 0x000388, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Add_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_OutHit_1) == 0x000390, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000478, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, K2Node_MakeArray_Array_1) == 0x000480, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Length_ReturnValue) == 0x000490, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Array_Get_Item_2) == 0x000498, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Less_IntInt_ReturnValue) == 0x0004B0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_RotateAngleAxis_ReturnValue) == 0x0004B8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0004D0, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Normal_ReturnValue_2) == 0x0004E8, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Normal_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Multiply_VectorFloat_ReturnValue_4) == 0x000500, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Multiply_VectorFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000518, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_OutHit_2) == 0x000530, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_ReturnValue_2) == 0x000618, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast) == 0x00061C, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_RotateAngleAxis_AngleDeg_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_DrawTime_ImplicitCast) == 0x000620, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_DrawTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_DrawTime_ImplicitCast_1) == 0x000624, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_DrawTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Test_Point_for_Occlusion, CallFunc_LineTraceSingle_DrawTime_ImplicitCast_2) == 0x000628, "Member 'UDS_PlayerOcclusion_C_Test_Point_for_Occlusion::CallFunc_LineTraceSingle_DrawTime_ImplicitCast_2' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.Update Current Occlusion Profile
// 0x0080 (0x0080 - 0x0000)
struct UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile final
{
public:
	double                                        Interp_Speed_Multiplier;                           // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Array_Get_Item_2;                         // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6C[0x4];                                       // 0x006C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile) == 0x000008, "Wrong alignment on UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile");
static_assert(sizeof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile) == 0x000080, "Wrong size on UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, Interp_Speed_Multiplier) == 0x000000, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::Interp_Speed_Multiplier' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, Temp_int_Array_Index_Variable) == 0x000008, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue) == 0x000014, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_SelectFloat_ReturnValue) == 0x000020, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_SelectFloat_ReturnValue_1) == 0x000028, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000030, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Array_Get_Item) == 0x000038, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000048, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000050, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Array_Get_Item_1) == 0x000058, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Array_Get_Item_2) == 0x000060, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_FInterpTo_ReturnValue) == 0x000070, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile, CallFunc_Less_IntInt_ReturnValue_1) == 0x000078, "Member 'UDS_PlayerOcclusion_C_Update_Current_Occlusion_Profile::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function UDS_PlayerOcclusion.UDS_PlayerOcclusion_C.Update Target Occlusion Profile
// 0x00D8 (0x00D8 - 0x0000)
struct UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile final
{
public:
	bool                                          Finished;                                          // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Actors_to_Ignore;                                  // 0x0008(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<double>                                CallFunc_Test_Point_for_Occlusion_Occlusion_Profile; // 0x0020(0x0010)(ReferenceParm)
	double                                        CallFunc_Test_Point_for_Occlusion_Overall_Occlusion; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<EObjectTypeQuery>                      K2Node_MakeArray_Array;                            // 0x0048(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0058(0x0010)(ConstParm, ReferenceParm)
	TArray<class AActor*>                         CallFunc_SphereOverlapActors_OutActors;            // 0x0068(0x0010)(ReferenceParm)
	bool                                          CallFunc_SphereOverlapActors_ReturnValue;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8C[0x4];                                       // 0x008C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUDS_Occlusion_Volume_Interface_C> K2Node_DynamicCast_AsUDS_Occlusion_Volume_Interface; // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Get_Occlusion_Result_Occluded;            // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x00C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x00C2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3[0x5];                                       // 0x00C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetPlayerPawn_ReturnValue;                // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D2[0x2];                                       // 0x00D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile) == 0x000008, "Wrong alignment on UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile");
static_assert(sizeof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile) == 0x0000D8, "Wrong size on UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, Finished) == 0x000000, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::Finished' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, Actors_to_Ignore) == 0x000008, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::Actors_to_Ignore' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, Temp_int_Array_Index_Variable) == 0x000018, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Test_Point_for_Occlusion_Occlusion_Profile) == 0x000020, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Test_Point_for_Occlusion_Occlusion_Profile' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Test_Point_for_Occlusion_Overall_Occlusion) == 0x000030, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Test_Point_for_Occlusion_Overall_Occlusion' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, K2Node_SwitchEnum_CmpSuccess) == 0x000038, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, Temp_bool_True_if_break_was_hit_Variable) == 0x000039, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Not_PreBool_ReturnValue) == 0x00003A, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Not_PreBool_ReturnValue_1) == 0x00003B, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, K2Node_MakeArray_Array) == 0x000048, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, Temp_object_Variable) == 0x000058, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_SphereOverlapActors_OutActors) == 0x000068, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_SphereOverlapActors_OutActors' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_SphereOverlapActors_ReturnValue) == 0x000078, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_SphereOverlapActors_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Array_Get_Item) == 0x000080, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Array_Length_ReturnValue) == 0x000088, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, K2Node_DynamicCast_AsUDS_Occlusion_Volume_Interface) == 0x000090, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::K2Node_DynamicCast_AsUDS_Occlusion_Volume_Interface' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Less_IntInt_ReturnValue) == 0x0000A1, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Get_Occlusion_Result_Occluded) == 0x0000A2, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Get_Occlusion_Result_Occluded' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_BooleanAND_ReturnValue) == 0x0000A3, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_BreakVector_X) == 0x0000A8, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_BreakVector_Y) == 0x0000B0, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_BreakVector_Z) == 0x0000B8, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, K2Node_SwitchEnum_CmpSuccess_1) == 0x0000C0, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0000C1, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_BooleanAND_ReturnValue_1) == 0x0000C2, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_GetPlayerPawn_ReturnValue) == 0x0000C8, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_GetPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_BooleanOR_ReturnValue) == 0x0000D0, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_IsValid_ReturnValue) == 0x0000D1, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile, CallFunc_Array_Add_ReturnValue) == 0x0000D4, "Member 'UDS_PlayerOcclusion_C_Update_Target_Occlusion_Profile::CallFunc_Array_Add_ReturnValue' has a wrong offset!");

}

