#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WEP_MAG

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "STR_MAG_structs.hpp"


namespace SDK::Params
{

// Function WEP_MAG.WEP_MAG_C.BndEvt__WEP_MAG_Body Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// 0x0118 (0x0118 - 0x0000)
struct WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    HitComponent;                                      // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                NormalImpulse;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             Hit;                                               // 0x0030(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000008, "Wrong alignment on WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(sizeof(WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature) == 0x000118, "Wrong size on WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, HitComponent) == 0x000000, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::HitComponent' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, NormalImpulse) == 0x000018, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::NormalImpulse' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature, Hit) == 0x000030, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Body_Mag_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature::Hit' has a wrong offset!");

// Function WEP_MAG.WEP_MAG_C.BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature
// 0x0108 (0x0108 - 0x0000)
struct WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature final
{
public:
	class UPrimitiveComponent*                    OverlappedComponent;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 OtherActor;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    OtherComp;                                         // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         OtherBodyIndex;                                    // 0x0018(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bFromSweep;                                        // 0x001C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             SweepResult;                                       // 0x0020(0x00E8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
};
static_assert(alignof(WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000008, "Wrong alignment on WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(sizeof(WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature) == 0x000108, "Wrong size on WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OverlappedComponent) == 0x000000, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherActor) == 0x000008, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherActor' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherComp) == 0x000010, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherComp' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, OtherBodyIndex) == 0x000018, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, bFromSweep) == 0x00001C, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::bFromSweep' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature, SweepResult) == 0x000020, "Member 'WEP_MAG_C_BndEvt__WEP_MAG_Box_K2Node_ComponentBoundEvent_1_ComponentBeginOverlapSignature__DelegateSignature::SweepResult' has a wrong offset!");

// Function WEP_MAG.WEP_MAG_C.ExecuteUbergraph_WEP_MAG
// 0x0388 (0x0388 - 0x0000)
struct WEP_MAG_C_ExecuteUbergraph_WEP_MAG final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_HitComponent;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor_1;           // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp_1;            // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                K2Node_ComponentBoundEvent_NormalImpulse;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             K2Node_ComponentBoundEvent_Hit;                    // 0x0038(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122[0x2];                                      // 0x0122(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0130(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x01A0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x01A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x01C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x01E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_201[0x3];                                      // 0x0201(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Bodycam_C*                          K2Node_DynamicCast_AsGT_Bodycam;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0221(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SetStaticMesh_ReturnValue;                // 0x0222(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_223[0x5];                                      // 0x0223(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_MAG                               CallFunc_GetDataTableRowFromName_OutRow;           // 0x0228(0x0030)(NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OverlappedComponent;    // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 K2Node_ComponentBoundEvent_OtherActor;             // 0x0268(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    K2Node_ComponentBoundEvent_OtherComp;              // 0x0270(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_ComponentBoundEvent_OtherBodyIndex;         // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_ComponentBoundEvent_bFromSweep;             // 0x027C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27D[0x3];                                      // 0x027D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             K2Node_ComponentBoundEvent_SweepResult;            // 0x0280(0x00E8)(ConstParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)
	class AALS_Base_CharacterBP_C*                K2Node_DynamicCast_AsALS_Base_Character_BP;        // 0x0368(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSimulatingPhysics_ReturnValue;          // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373[0x1];                                      // 0x0373(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGlobalTimeDilation_ReturnValue;        // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAudioComponent*                        CallFunc_SpawnSoundAttached_ReturnValue;           // 0x0378(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast; // 0x0380(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG) == 0x000008, "Wrong alignment on WEP_MAG_C_ExecuteUbergraph_WEP_MAG");
static_assert(sizeof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG) == 0x000388, "Wrong size on WEP_MAG_C_ExecuteUbergraph_WEP_MAG");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, EntryPoint) == 0x000000, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::EntryPoint' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, Temp_bool_Has_Been_Initd_Variable) == 0x000004, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_HitComponent) == 0x000008, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_HitComponent' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_OtherActor_1) == 0x000010, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_OtherActor_1' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_OtherComp_1) == 0x000018, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_OtherComp_1' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_NormalImpulse) == 0x000020, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_NormalImpulse' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_Hit) == 0x000038, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_Hit' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_bBlockingHit) == 0x000120, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_bInitialOverlap) == 0x000121, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_Time) == 0x000124, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_Distance) == 0x000128, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_Location) == 0x000130, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_ImpactPoint) == 0x000148, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_Normal) == 0x000160, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_ImpactNormal) == 0x000178, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_PhysMat) == 0x000190, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_HitActor) == 0x000198, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_HitComponent) == 0x0001A0, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_HitBoneName) == 0x0001A8, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_BoneName) == 0x0001B0, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_HitItem) == 0x0001B8, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_ElementIndex) == 0x0001BC, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_FaceIndex) == 0x0001C0, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_TraceStart) == 0x0001C8, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_BreakHitResult_TraceEnd) == 0x0001E0, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_VSize_ReturnValue) == 0x0001F8, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000200, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000204, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_MapRangeClamped_ReturnValue) == 0x000208, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_GetGameState_ReturnValue) == 0x000210, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_DynamicCast_AsGT_Bodycam) == 0x000218, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_DynamicCast_AsGT_Bodycam' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_DynamicCast_bSuccess) == 0x000220, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_SwitchEnum_CmpSuccess) == 0x000221, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_SetStaticMesh_ReturnValue) == 0x000222, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_SetStaticMesh_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_GetDataTableRowFromName_OutRow) == 0x000228, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000258, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_OverlappedComponent) == 0x000260, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_OverlappedComponent' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_OtherActor) == 0x000268, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_OtherActor' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_OtherComp) == 0x000270, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_OtherComp' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_OtherBodyIndex) == 0x000278, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_OtherBodyIndex' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_bFromSweep) == 0x00027C, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_bFromSweep' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_ComponentBoundEvent_SweepResult) == 0x000280, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_ComponentBoundEvent_SweepResult' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_DynamicCast_AsALS_Base_Character_BP) == 0x000368, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_DynamicCast_AsALS_Base_Character_BP' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, K2Node_DynamicCast_bSuccess_1) == 0x000370, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, Temp_bool_IsClosed_Variable) == 0x000371, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_IsSimulatingPhysics_ReturnValue) == 0x000372, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_IsSimulatingPhysics_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_GetGlobalTimeDilation_ReturnValue) == 0x000374, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_GetGlobalTimeDilation_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_SpawnSoundAttached_ReturnValue) == 0x000378, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_SpawnSoundAttached_ReturnValue' has a wrong offset!");
static_assert(offsetof(WEP_MAG_C_ExecuteUbergraph_WEP_MAG, CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast) == 0x000380, "Member 'WEP_MAG_C_ExecuteUbergraph_WEP_MAG::CallFunc_SpawnSoundAttached_VolumeMultiplier_ImplicitCast' has a wrong offset!");

}

