#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuControllerComponent

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EInputDeviceType_structs.hpp"
#include "EPauseBehavior_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MenuControllerComponent.BP_MenuControllerComponent_C
// 0x0090 (0x0130 - 0x00A0)
class UBP_MenuControllerComponent_C final : public UActorComponent
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x00A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	bool                                          bIsGamePaused;                                     // 0x00A8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bWantsToPause;                                     // 0x00A9(0x0001)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bVibrationEnabled;                                 // 0x00AA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvertSticks;                                     // 0x00AB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvertXAxis;                                      // 0x00AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bInvertYAxis;                                      // 0x00AD(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AE[0x2];                                       // 0x00AE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        XAxisSensitivity;                                  // 0x00B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        YAxisSensitivity;                                  // 0x00B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnResumeGameMode;                                  // 0x00C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	class UWidget*                                WidgetWithFocus;                                   // 0x00D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UPDA_MenuSystemConfig_C*                MenuSystemConfig;                                  // 0x00D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, NoDestructor, HasGetValueTypeHash)
	EInputDeviceType                              CurrentInputDevice;                                // 0x00E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftClassPtr<class UClass>                   OpenSubMenuPayload;                                // 0x00E8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, HasGetValueTypeHash)
	bool                                          Auto_Lean;                                         // 0x0118(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Camera_Shake_Axis_Sensivity;                       // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Enable_Voice_Chat;                                 // 0x0128(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_BP_MenuControllerComponent(int32 EntryPoint);
	void OnAddMenuInputContext();
	void OnChangePlayerMappedKey(const class FName MappingName, const struct FKey& NewKey);
	void OnRemoveMenuInputContext();
	void OnRequestRebuildControlMappings();
	void OnResumeGameMode__DelegateSignature();
	void OnSetupErrorCheck();
	void OpenDocumentsMenu(EInputDeviceType CurrentInputDevice_0);
	void OpenInventoryMenu(EInputDeviceType CurrentInputDevice_0);
	void Pause(class APlayerController* PlayerController, EInputDeviceType InputDeviceType);
	void ReceiveBeginPlay();
	void Resume(class APlayerController* PlayerController);
	void Rumble();
	void UpdateControlsValuesFromConfig();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MenuControllerComponent_C">();
	}
	static class UBP_MenuControllerComponent_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBP_MenuControllerComponent_C>();
	}
};
static_assert(alignof(UBP_MenuControllerComponent_C) == 0x000008, "Wrong alignment on UBP_MenuControllerComponent_C");
static_assert(sizeof(UBP_MenuControllerComponent_C) == 0x000130, "Wrong size on UBP_MenuControllerComponent_C");
static_assert(offsetof(UBP_MenuControllerComponent_C, UberGraphFrame) == 0x0000A0, "Member 'UBP_MenuControllerComponent_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, bIsGamePaused) == 0x0000A8, "Member 'UBP_MenuControllerComponent_C::bIsGamePaused' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, bWantsToPause) == 0x0000A9, "Member 'UBP_MenuControllerComponent_C::bWantsToPause' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, bVibrationEnabled) == 0x0000AA, "Member 'UBP_MenuControllerComponent_C::bVibrationEnabled' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, bInvertSticks) == 0x0000AB, "Member 'UBP_MenuControllerComponent_C::bInvertSticks' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, bInvertXAxis) == 0x0000AC, "Member 'UBP_MenuControllerComponent_C::bInvertXAxis' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, bInvertYAxis) == 0x0000AD, "Member 'UBP_MenuControllerComponent_C::bInvertYAxis' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, XAxisSensitivity) == 0x0000B0, "Member 'UBP_MenuControllerComponent_C::XAxisSensitivity' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, YAxisSensitivity) == 0x0000B8, "Member 'UBP_MenuControllerComponent_C::YAxisSensitivity' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, OnResumeGameMode) == 0x0000C0, "Member 'UBP_MenuControllerComponent_C::OnResumeGameMode' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, WidgetWithFocus) == 0x0000D0, "Member 'UBP_MenuControllerComponent_C::WidgetWithFocus' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, MenuSystemConfig) == 0x0000D8, "Member 'UBP_MenuControllerComponent_C::MenuSystemConfig' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, CurrentInputDevice) == 0x0000E0, "Member 'UBP_MenuControllerComponent_C::CurrentInputDevice' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, OpenSubMenuPayload) == 0x0000E8, "Member 'UBP_MenuControllerComponent_C::OpenSubMenuPayload' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, Auto_Lean) == 0x000118, "Member 'UBP_MenuControllerComponent_C::Auto_Lean' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, Camera_Shake_Axis_Sensivity) == 0x000120, "Member 'UBP_MenuControllerComponent_C::Camera_Shake_Axis_Sensivity' has a wrong offset!");
static_assert(offsetof(UBP_MenuControllerComponent_C, Enable_Voice_Chat) == 0x000128, "Member 'UBP_MenuControllerComponent_C::Enable_Voice_Chat' has a wrong offset!");

}

