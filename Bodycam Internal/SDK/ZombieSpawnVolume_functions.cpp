#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ZombieSpawnVolume

#include "Basic.hpp"

#include "ZombieSpawnVolume_classes.hpp"
#include "ZombieSpawnVolume_parameters.hpp"


namespace SDK
{

// Function ZombieSpawnVolume.ZombieSpawnVolume_C.CanReachDestination
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector                          PathStart                                              (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          PathEnd                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Lenght                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

bool AZombieSpawnVolume_C::CanReachDestination(const struct FVector& PathStart, const struct FVector& PathEnd, double* Lenght)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "CanReachDestination");

	Params::ZombieSpawnVolume_C_CanReachDestination Parms{};

	Parms.PathStart = std::move(PathStart);
	Parms.PathEnd = std::move(PathEnd);

	UObject::ProcessEvent(Func, &Parms);

	if (Lenght != nullptr)
		*Lenght = Parms.Lenght;

	return Parms.ReturnValue;
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.ConnectionInfos
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FLinearColor                     Color                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombieSpawnVolume_C::ConnectionInfos(const struct FLinearColor& Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "ConnectionInfos");

	Params::ZombieSpawnVolume_C_ConnectionInfos Parms{};

	Parms.Color = std::move(Color);

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.ElectricalAction
// (Public, BlueprintCallable, BlueprintEvent)

void AZombieSpawnVolume_C::ElectricalAction()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "ElectricalAction");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.EndWave
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Wave                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_WaveClass                            EN_WaveClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombieSpawnVolume_C::EndWave(int32 Wave, EN_WaveClass EN_WaveClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "EndWave");

	Params::ZombieSpawnVolume_C_EndWave Parms{};

	Parms.Wave = Wave;
	Parms.EN_WaveClass = EN_WaveClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.ExecuteUbergraph_ZombieSpawnVolume
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombieSpawnVolume_C::ExecuteUbergraph_ZombieSpawnVolume(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "ExecuteUbergraph_ZombieSpawnVolume");

	Params::ZombieSpawnVolume_C_ExecuteUbergraph_ZombieSpawnVolume Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.Get2CloseOtherSpawn
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AZombieSpawnVolume_C::Get2CloseOtherSpawn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "Get2CloseOtherSpawn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.NewWaves
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Wave                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EN_WaveClass                            EN_WaveClass                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombieSpawnVolume_C::NewWaves(int32 Wave, EN_WaveClass EN_WaveClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "NewWaves");

	Params::ZombieSpawnVolume_C_NewWaves Parms{};

	Parms.Wave = Wave;
	Parms.EN_WaveClass = EN_WaveClass;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AZombieSpawnVolume_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.SpawnAvailable
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanSpawn_                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombieSpawnVolume_C::SpawnAvailable(bool* CanSpawn_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "SpawnAvailable");

	Params::ZombieSpawnVolume_C_SpawnAvailable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanSpawn_ != nullptr)
		*CanSpawn_ = Parms.CanSpawn_;
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.SpawnScreamer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Destroy_                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombieSpawnVolume_C::SpawnScreamer(bool Destroy_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "SpawnScreamer");

	Params::ZombieSpawnVolume_C_SpawnScreamer Parms{};

	Parms.Destroy_ = Destroy_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.SpawnZombieEvent
// (Public, BlueprintCallable, BlueprintEvent)

void AZombieSpawnVolume_C::SpawnZombieEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "SpawnZombieEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.SpawnZombies (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AZombieSpawnVolume_C::SpawnZombies__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "SpawnZombies (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.UpdatePower
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    On_                                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AZombieSpawnVolume_C::UpdatePower(bool On_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "UpdatePower");

	Params::ZombieSpawnVolume_C_UpdatePower Parms{};

	Parms.On_ = On_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AZombieSpawnVolume_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ZombieSpawnVolume.ZombieSpawnVolume_C.ZombieSounds (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AZombieSpawnVolume_C::ZombieSounds__Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ZombieSpawnVolume_C", "ZombieSounds (Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}

}

