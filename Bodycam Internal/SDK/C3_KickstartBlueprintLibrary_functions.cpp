#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: C3_KickstartBlueprintLibrary

#include "Basic.hpp"

#include "C3_KickstartBlueprintLibrary_classes.hpp"
#include "C3_KickstartBlueprintLibrary_parameters.hpp"


namespace SDK
{

// Function C3_KickstartBlueprintLibrary.C3_KBP_Actor_FL.FL_GetHeightFromFloor
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ActorsToIgnore                                         (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// double                                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

double UC3_KBP_Actor_FL::FL_GetHeightFromFloor(class AActor* Target, const TArray<class AActor*>& ActorsToIgnore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Actor_FL", "FL_GetHeightFromFloor");

	Params::C3_KBP_Actor_FL_FL_GetHeightFromFloor Parms{};

	Parms.Target = Target;
	Parms.ActorsToIgnore = std::move(ActorsToIgnore);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Actor_FL.FL_HasComponent_Class
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TSubclassOf<class UActorComponent>      ComponentClass                                         (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Actor_FL::FL_HasComponent_Class(class AActor* Target, TSubclassOf<class UActorComponent> ComponentClass)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Actor_FL", "FL_HasComponent_Class");

	Params::C3_KBP_Actor_FL_FL_HasComponent_Class Parms{};

	Parms.Target = Target;
	Parms.ComponentClass = ComponentClass;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Actor_FL.FL_SetActorTickEnabled_Pro
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InEnable                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeDescendants                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Actor_FL::FL_SetActorTickEnabled_Pro(class AActor* TargetActor, bool InEnable, bool IncludeDescendants)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Actor_FL", "FL_SetActorTickEnabled_Pro");

	Params::C3_KBP_Actor_FL_FL_SetActorTickEnabled_Pro Parms{};

	Parms.TargetActor = TargetActor;
	Parms.InEnable = InEnable;
	Parms.IncludeDescendants = IncludeDescendants;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Actor_FL.FL_SnapTo_Core
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable)
// Parameters:
// struct FHitResult                       OutHitResult                                           (Parm, OutParm, IsPlainOldData, NoDestructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InTraceStart                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InTraceEnd                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          InHalfSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  StepSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeChildActors                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Actor_FL::FL_SnapTo_Core(struct FHitResult* OutHitResult, class AActor* Target, const struct FVector& InTraceStart, const struct FVector& InTraceEnd, const struct FVector& InHalfSize, double StepSize, bool IncludeChildActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Actor_FL", "FL_SnapTo_Core");

	Params::C3_KBP_Actor_FL_FL_SnapTo_Core Parms{};

	Parms.Target = Target;
	Parms.InTraceStart = std::move(InTraceStart);
	Parms.InTraceEnd = std::move(InTraceEnd);
	Parms.InHalfSize = std::move(InHalfSize);
	Parms.StepSize = StepSize;
	Parms.IncludeChildActors = IncludeChildActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutHitResult != nullptr)
		*OutHitResult = std::move(Parms.OutHitResult);

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Actor_FL.FL_SnapToCeiling
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  StepSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeChildActors                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Actor_FL::FL_SnapToCeiling(class AActor* Target, double MaxDistance, double StepSize, bool IncludeChildActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Actor_FL", "FL_SnapToCeiling");

	Params::C3_KBP_Actor_FL_FL_SnapToCeiling Parms{};

	Parms.Target = Target;
	Parms.MaxDistance = MaxDistance;
	Parms.StepSize = StepSize;
	Parms.IncludeChildActors = IncludeChildActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Actor_FL.FL_SnapToFloor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  StepSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeChildActors                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Actor_FL::FL_SnapToFloor(class AActor* Target, double MaxDistance, double StepSize, bool IncludeChildActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Actor_FL", "FL_SnapToFloor");

	Params::C3_KBP_Actor_FL_FL_SnapToFloor Parms{};

	Parms.Target = Target;
	Parms.MaxDistance = MaxDistance;
	Parms.StepSize = StepSize;
	Parms.IncludeChildActors = IncludeChildActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Actor_FL.FL_SnapToSide
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           Target                                                 (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EC3_KBP_SnapDirection                   Direction                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  MaxDistance                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  StepSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeChildActors                                     (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Actor_FL::FL_SnapToSide(class AActor* Target, EC3_KBP_SnapDirection Direction, double MaxDistance, double StepSize, bool IncludeChildActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Actor_FL", "FL_SnapToSide");

	Params::C3_KBP_Actor_FL_FL_SnapToSide Parms{};

	Parms.Target = Target;
	Parms.Direction = Direction;
	Parms.MaxDistance = MaxDistance;
	Parms.StepSize = StepSize;
	Parms.IncludeChildActors = IncludeChildActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Editor_FL.FL_SetEditorScale
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// double                                  InScale                                                (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Editor_FL::FL_SetEditorScale(const double InScale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Editor_FL", "FL_SetEditorScale");

	Params::C3_KBP_Editor_FL_FL_SetEditorScale Parms{};

	Parms.InScale = InScale;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.CloneActor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           InputActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UC3_KBP_General_FL::CloneActor(class AActor* InputActor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "CloneActor");

	Params::C3_KBP_General_FL_CloneActor Parms{};

	Parms.InputActor = InputActor;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.CloneActorPro
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class AActor*                           InputActor                                             (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   OutAttachedActos                                       (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    IncludedAttachedActors                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         InLocationRule                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         InRotationRule                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EAttachmentRule                         InScaleRule                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bInWeldSimulatedBodies                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class AActor*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class AActor* UC3_KBP_General_FL::CloneActorPro(class AActor* InputActor, TArray<class AActor*>* OutAttachedActos, bool IncludedAttachedActors, EAttachmentRule InLocationRule, EAttachmentRule InRotationRule, EAttachmentRule InScaleRule, bool bInWeldSimulatedBodies)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "CloneActorPro");

	Params::C3_KBP_General_FL_CloneActorPro Parms{};

	Parms.InputActor = InputActor;
	Parms.IncludedAttachedActors = IncludedAttachedActors;
	Parms.InLocationRule = InLocationRule;
	Parms.InRotationRule = InRotationRule;
	Parms.InScaleRule = InScaleRule;
	Parms.bInWeldSimulatedBodies = bInWeldSimulatedBodies;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutAttachedActos != nullptr)
		*OutAttachedActos = std::move(Parms.OutAttachedActos);

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_CallFunctionByName
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          TargetObject                                           (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FunctionName                                           (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_General_FL::FL_CallFunctionByName(class UObject* TargetObject, const class FString& FunctionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_CallFunctionByName");

	Params::C3_KBP_General_FL_FL_CallFunctionByName Parms{};

	Parms.TargetObject = TargetObject;
	Parms.FunctionName = std::move(FunctionName);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Convert_RGBV_RGB
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FLinearColor                     RGB                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   HSV_V                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FLinearColor UC3_KBP_General_FL::FL_Convert_RGBV_RGB(const struct FLinearColor& RGB, float HSV_V)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Convert_RGBV_RGB");

	Params::C3_KBP_General_FL_FL_Convert_RGBV_RGB Parms{};

	Parms.RGB = std::move(RGB);
	Parms.HSV_V = HSV_V;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_CSV_GetCSVTargetIndexFromDataArray
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   TargetRowIndex                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ColumnCountLength                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   TargetColumnIndex                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UC3_KBP_General_FL::FL_CSV_GetCSVTargetIndexFromDataArray(int32 TargetRowIndex, int32 ColumnCountLength, int32 TargetColumnIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_CSV_GetCSVTargetIndexFromDataArray");

	Params::C3_KBP_General_FL_FL_CSV_GetCSVTargetIndexFromDataArray Parms{};

	Parms.TargetRowIndex = TargetRowIndex;
	Parms.ColumnCountLength = ColumnCountLength;
	Parms.TargetColumnIndex = TargetColumnIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_DateTimeToString
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        InDateTime                                             (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringFullYr1                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringFullYr2                                       (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringYearMonth1                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringYearMonth2                                    (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringMonthDay1                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringMonthDay2                                     (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringYear                                          (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringMonth                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringDay                                           (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringHourMinSecondMilli                            (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringHourMinSecond1                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringHourMin1                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutStringHour1                                         (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Separator                                              (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_DateTimeToString(const struct FDateTime& InDateTime, class FString* OutStringFullYr1, class FString* OutStringFullYr2, class FString* OutStringYearMonth1, class FString* OutStringYearMonth2, class FString* OutStringMonthDay1, class FString* OutStringMonthDay2, class FString* OutStringYear, class FString* OutStringMonth, class FString* OutStringDay, class FString* OutStringHourMinSecondMilli, class FString* OutStringHourMinSecond1, class FString* OutStringHourMin1, class FString* OutStringHour1, const class FString& Separator)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_DateTimeToString");

	Params::C3_KBP_General_FL_FL_DateTimeToString Parms{};

	Parms.InDateTime = std::move(InDateTime);
	Parms.Separator = std::move(Separator);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutStringFullYr1 != nullptr)
		*OutStringFullYr1 = std::move(Parms.OutStringFullYr1);

	if (OutStringFullYr2 != nullptr)
		*OutStringFullYr2 = std::move(Parms.OutStringFullYr2);

	if (OutStringYearMonth1 != nullptr)
		*OutStringYearMonth1 = std::move(Parms.OutStringYearMonth1);

	if (OutStringYearMonth2 != nullptr)
		*OutStringYearMonth2 = std::move(Parms.OutStringYearMonth2);

	if (OutStringMonthDay1 != nullptr)
		*OutStringMonthDay1 = std::move(Parms.OutStringMonthDay1);

	if (OutStringMonthDay2 != nullptr)
		*OutStringMonthDay2 = std::move(Parms.OutStringMonthDay2);

	if (OutStringYear != nullptr)
		*OutStringYear = std::move(Parms.OutStringYear);

	if (OutStringMonth != nullptr)
		*OutStringMonth = std::move(Parms.OutStringMonth);

	if (OutStringDay != nullptr)
		*OutStringDay = std::move(Parms.OutStringDay);

	if (OutStringHourMinSecondMilli != nullptr)
		*OutStringHourMinSecondMilli = std::move(Parms.OutStringHourMinSecondMilli);

	if (OutStringHourMinSecond1 != nullptr)
		*OutStringHourMinSecond1 = std::move(Parms.OutStringHourMinSecond1);

	if (OutStringHourMin1 != nullptr)
		*OutStringHourMin1 = std::move(Parms.OutStringHourMin1);

	if (OutStringHour1 != nullptr)
		*OutStringHour1 = std::move(Parms.OutStringHour1);
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Delay_RandomTime
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_Delay_RandomTime(class UObject* WorldContextObject, double Min, double Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Delay_RandomTime");

	Params::C3_KBP_General_FL_FL_Delay_RandomTime Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Min = Min;
	Parms.Max = Max;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_DeltaTransform
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       A_Transform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       B_Transform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       DeltaTransform                                         (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_DeltaTransform(const class UObject* WorldContextObject, const struct FTransform& A_Transform, const struct FTransform& B_Transform, struct FTransform* DeltaTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_DeltaTransform");

	Params::C3_KBP_General_FL_FL_DeltaTransform Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.A_Transform = std::move(A_Transform);
	Parms.B_Transform = std::move(B_Transform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (DeltaTransform != nullptr)
		*DeltaTransform = std::move(Parms.DeltaTransform);
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_DirectionIntToVector
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   DirectionInt                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  Multiplier                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UC3_KBP_General_FL::FL_DirectionIntToVector(int32 DirectionInt, double Multiplier)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_DirectionIntToVector");

	Params::C3_KBP_General_FL_FL_DirectionIntToVector Parms{};

	Parms.DirectionInt = DirectionInt;
	Parms.Multiplier = Multiplier;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_FindNeighbor_Int
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           Array                                                  (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    HasTheSameValue                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SameValue                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SameIndex                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    HasSmallerValue                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SmallerNeighbor                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   SmallerIndex                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    HasLargerValue                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LargerNeighbor                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   LargerIndex                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_FindNeighbor_Int(int32 Value, const TArray<int32>& Array, bool* HasTheSameValue, int32* SameValue, int32* SameIndex, bool* HasSmallerValue, int32* SmallerNeighbor, int32* SmallerIndex, bool* HasLargerValue, int32* LargerNeighbor, int32* LargerIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_FindNeighbor_Int");

	Params::C3_KBP_General_FL_FL_FindNeighbor_Int Parms{};

	Parms.Value = Value;
	Parms.Array = std::move(Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (HasTheSameValue != nullptr)
		*HasTheSameValue = Parms.HasTheSameValue;

	if (SameValue != nullptr)
		*SameValue = Parms.SameValue;

	if (SameIndex != nullptr)
		*SameIndex = Parms.SameIndex;

	if (HasSmallerValue != nullptr)
		*HasSmallerValue = Parms.HasSmallerValue;

	if (SmallerNeighbor != nullptr)
		*SmallerNeighbor = Parms.SmallerNeighbor;

	if (SmallerIndex != nullptr)
		*SmallerIndex = Parms.SmallerIndex;

	if (HasLargerValue != nullptr)
		*HasLargerValue = Parms.HasLargerValue;

	if (LargerNeighbor != nullptr)
		*LargerNeighbor = Parms.LargerNeighbor;

	if (LargerIndex != nullptr)
		*LargerIndex = Parms.LargerIndex;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Float_IsInteger
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// double                                  InFloat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_General_FL::FL_Float_IsInteger(double InFloat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Float_IsInteger");

	Params::C3_KBP_General_FL_FL_Float_IsInteger Parms{};

	Parms.InFloat = InFloat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_GetAllDataTables
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class FString                           SpecificNameKeyword                                    (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UDataTable*>               AllDataTables                                          (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FAssetData>               AllAssetData                                           (Parm, OutParm, ZeroConstructor, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_General_FL::FL_GetAllDataTables(const class FString& SpecificNameKeyword, TArray<class UDataTable*>* AllDataTables, TArray<struct FAssetData>* AllAssetData)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_GetAllDataTables");

	Params::C3_KBP_General_FL_FL_GetAllDataTables Parms{};

	Parms.SpecificNameKeyword = std::move(SpecificNameKeyword);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (AllDataTables != nullptr)
		*AllDataTables = std::move(Parms.AllDataTables);

	if (AllAssetData != nullptr)
		*AllAssetData = std::move(Parms.AllAssetData);

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_GetCurrentFPS
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   FPS                                                    (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   FPS_Rounded                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           FPS_RoundedString                                      (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FText                             FPS_RoundedText                                        (Parm, OutParm, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_GetCurrentFPS(const class UObject* WorldContextObject, float* FPS, int32* FPS_Rounded, class FString* FPS_RoundedString, class FText* FPS_RoundedText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_GetCurrentFPS");

	Params::C3_KBP_General_FL_FL_GetCurrentFPS Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (FPS != nullptr)
		*FPS = Parms.FPS;

	if (FPS_Rounded != nullptr)
		*FPS_Rounded = Parms.FPS_Rounded;

	if (FPS_RoundedString != nullptr)
		*FPS_RoundedString = std::move(Parms.FPS_RoundedString);

	if (FPS_RoundedText != nullptr)
		*FPS_RoundedText = std::move(Parms.FPS_RoundedText);
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_GetCurrentTime
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UC3_KBP_General_FL::FL_GetCurrentTime()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_GetCurrentTime");

	Params::C3_KBP_General_FL_FL_GetCurrentTime Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_GetProjectVersion
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Version                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_GetProjectVersion(const class UObject* WorldContextObject, class FString* Version)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_GetProjectVersion");

	Params::C3_KBP_General_FL_FL_GetProjectVersion Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Version != nullptr)
		*Version = std::move(Parms.Version);
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Int_Increment_Ceiling
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UC3_KBP_General_FL::FL_Int_Increment_Ceiling(int32 Source, int32 Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Int_Increment_Ceiling");

	Params::C3_KBP_General_FL_FL_Int_Increment_Ceiling Parms{};

	Parms.Source = Source;
	Parms.Max = Max;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Int_Increment_Cycle
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// int32                                   Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Min                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Max                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

int32 UC3_KBP_General_FL::FL_Int_Increment_Cycle(int32 Source, int32 Min, int32 Max)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Int_Increment_Cycle");

	Params::C3_KBP_General_FL_FL_Int_Increment_Cycle Parms{};

	Parms.Source = Source;
	Parms.Min = Min;
	Parms.Max = Max;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_IsValidColorHex_RGB
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_General_FL::FL_IsValidColorHex_RGB(const class FString& InString, class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_IsValidColorHex_RGB");

	Params::C3_KBP_General_FL_FL_IsValidColorHex_RGB Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_IsValidColorHex_RGBA
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Result                                                 (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_General_FL::FL_IsValidColorHex_RGBA(const class FString& InString, class FString* Result)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_IsValidColorHex_RGBA");

	Params::C3_KBP_General_FL_FL_IsValidColorHex_RGBA Parms{};

	Parms.InString = std::move(InString);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (Result != nullptr)
		*Result = std::move(Parms.Result);

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_MakeDateTime_Pro
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Year                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Month                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Day                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Hour                                                   (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Minute                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Second                                                 (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Millisecond                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FDateTime                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FDateTime UC3_KBP_General_FL::FL_MakeDateTime_Pro(int32 Year, int32 Month, int32 Day, const int32 Hour, const int32 Minute, const int32 Second, const int32 Millisecond)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_MakeDateTime_Pro");

	Params::C3_KBP_General_FL_FL_MakeDateTime_Pro Parms{};

	Parms.Year = Year;
	Parms.Month = Month;
	Parms.Day = Day;
	Parms.Hour = Hour;
	Parms.Minute = Minute;
	Parms.Second = Second;
	Parms.Millisecond = Millisecond;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_MapSort_ActorFloat_Value
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<class AActor*, float>              Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class AActor*, float>              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class AActor*, float> UC3_KBP_General_FL::FL_MapSort_ActorFloat_Value(const TMap<class AActor*, float>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_MapSort_ActorFloat_Value");

	Params::C3_KBP_General_FL_FL_MapSort_ActorFloat_Value Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_MapSort_ActorText_Value
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<class AActor*, class FText>        Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<class AActor*, class FText>        ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<class AActor*, class FText> UC3_KBP_General_FL::FL_MapSort_ActorText_Value(const TMap<class AActor*, class FText>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_MapSort_ActorText_Value");

	Params::C3_KBP_General_FL_FL_MapSort_ActorText_Value Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_NegateTransform
// (Final, Native, Static, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       InTransform                                            (ConstParm, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FTransform                       OutTransform                                           (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_NegateTransform(const class UObject* WorldContextObject, const struct FTransform& InTransform, struct FTransform* OutTransform)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_NegateTransform");

	Params::C3_KBP_General_FL_FL_NegateTransform Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InTransform = std::move(InTransform);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutTransform != nullptr)
		*OutTransform = std::move(Parms.OutTransform);
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_PrintString_Lite
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           InString                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EC3_KBP_PrintColor                      Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_PrintString_Lite(const class UObject* WorldContextObject, const class FString& InString, EC3_KBP_PrintColor Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_PrintString_Lite");

	Params::C3_KBP_General_FL_FL_PrintString_Lite Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InString = std::move(InString);
	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_PrintString_Pro
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String1                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String2                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String3                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           String4                                                (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// EC3_KBP_PrintColor                      Color                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_PrintString_Pro(const class UObject* WorldContextObject, const class FString& String1, const class FString& String2, const class FString& String3, const class FString& String4, EC3_KBP_PrintColor Color)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_PrintString_Pro");

	Params::C3_KBP_General_FL_FL_PrintString_Pro Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.String1 = std::move(String1);
	Parms.String2 = std::move(String2);
	Parms.String3 = std::move(String3);
	Parms.String4 = std::move(String4);
	Parms.Color = Color;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_RandomString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ValidChars                                             (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NumChars                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UC3_KBP_General_FL::FL_RandomString(const class FString& ValidChars, int32 NumChars)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_RandomString");

	Params::C3_KBP_General_FL_FL_RandomString Parms{};

	Parms.ValidChars = std::move(ValidChars);
	Parms.NumChars = NumChars;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_RandomString_Pro
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   NumChars                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    UpperLetters                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    LowerLetters                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    Numbers                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UC3_KBP_General_FL::FL_RandomString_Pro(int32 NumChars, bool UpperLetters, bool LowerLetters, bool Numbers)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_RandomString_Pro");

	Params::C3_KBP_General_FL_FL_RandomString_Pro Parms{};

	Parms.NumChars = NumChars;
	Parms.UpperLetters = UpperLetters;
	Parms.LowerLetters = LowerLetters;
	Parms.Numbers = Numbers;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_SetActive
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class AActor*                           TargetActor                                            (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NewActive                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    IncludeAttachedActors                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_SetActive(class AActor* TargetActor, bool NewActive, bool IncludeAttachedActors)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_SetActive");

	Params::C3_KBP_General_FL_FL_SetActive Parms{};

	Parms.TargetActor = TargetActor;
	Parms.NewActive = NewActive;
	Parms.IncludeAttachedActors = IncludeAttachedActors;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_SetMaxFPS
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  InMaxFPS                                               (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_SetMaxFPS(const class UObject* WorldContextObject, const double InMaxFPS)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_SetMaxFPS");

	Params::C3_KBP_General_FL_FL_SetMaxFPS Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InMaxFPS = InMaxFPS;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_SetNearClipPlane
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           Distance                                               (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_SetNearClipPlane(class UObject* WorldContextObject, const class FString& Distance)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_SetNearClipPlane");

	Params::C3_KBP_General_FL_FL_SetNearClipPlane Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Distance = std::move(Distance);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_SM_SetMaterials
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UPrimitiveComponent*              Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UMaterialInterface*>       Materials                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_SM_SetMaterials(class UPrimitiveComponent* Target, const TArray<class UMaterialInterface*>& Materials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_SM_SetMaterials");

	Params::C3_KBP_General_FL_FL_SM_SetMaterials Parms{};

	Parms.Target = Target;
	Parms.Materials = std::move(Materials);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_StringRemoveAt
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   StartIndex                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           OutString                                              (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   Count                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_StringRemoveAt(const class FString& Source, int32 StartIndex, class FString* OutString, int32 Count)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_StringRemoveAt");

	Params::C3_KBP_General_FL_FL_StringRemoveAt Parms{};

	Parms.Source = std::move(Source);
	Parms.StartIndex = StartIndex;
	Parms.Count = Count;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	if (OutString != nullptr)
		*OutString = std::move(Parms.OutString);
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Vector2D_InRange
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector2D                        Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        Begin                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector2D                        End                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InclusiveMin                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    InclusiveMax                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_General_FL::FL_Vector2D_InRange(const struct FVector2D& Source, const struct FVector2D& Begin, const struct FVector2D& End, bool InclusiveMin, bool InclusiveMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Vector2D_InRange");

	Params::C3_KBP_General_FL_FL_Vector2D_InRange Parms{};

	Parms.Source = std::move(Source);
	Parms.Begin = std::move(Begin);
	Parms.End = std::move(End);
	Parms.InclusiveMin = InclusiveMin;
	Parms.InclusiveMax = InclusiveMax;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Vector_Multiply_Float
// (Final, Native, Static, Public, HasDefaults, BlueprintCallable, BlueprintPure)
// Parameters:
// struct FVector                          InVector                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  InFloat                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

struct FVector UC3_KBP_General_FL::FL_Vector_Multiply_Float(const struct FVector& InVector, double InFloat)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Vector_Multiply_Float");

	Params::C3_KBP_General_FL_FL_Vector_Multiply_Float Parms{};

	Parms.InVector = std::move(InVector);
	Parms.InFloat = InFloat;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Viewport_Lit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_Viewport_Lit(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Viewport_Lit");

	Params::C3_KBP_General_FL_FL_Viewport_Lit Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_Viewport_Unlit
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_General_FL::FL_Viewport_Unlit(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_Viewport_Unlit");

	Params::C3_KBP_General_FL_FL_Viewport_Unlit Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_General_FL.FL_VR_IsEnable
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_General_FL::FL_VR_IsEnable()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_General_FL", "FL_VR_IsEnable");

	Params::C3_KBP_General_FL_FL_VR_IsEnable Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_WidgetCommon.GetIsHovered
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool IC3_KBP_WidgetCommon::GetIsHovered()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("C3_KBP_WidgetCommon", "GetIsHovered");

	Params::C3_KBP_WidgetCommon_GetIsHovered Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_WidgetCommon.OnVisibilityUpdate
// (Native, Event, Public, BlueprintEvent)
// Parameters:
// bool                                    NewVisible                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void IC3_KBP_WidgetCommon::OnVisibilityUpdate(bool NewVisible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("C3_KBP_WidgetCommon", "OnVisibilityUpdate");

	Params::C3_KBP_WidgetCommon_OnVisibilityUpdate Parms{};

	Parms.NewVisible = NewVisible;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	UObject::ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Paks_FL.GetPakContentList
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PakFilename                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    bOnlyCooked                                            (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UC3_KBP_Paks_FL::GetPakContentList(const class FString& PakFilename, const bool bOnlyCooked)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Paks_FL", "GetPakContentList");

	Params::C3_KBP_Paks_FL_GetPakContentList Parms{};

	Parms.PakFilename = std::move(PakFilename);
	Parms.bOnlyCooked = bOnlyCooked;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Paks_FL.LoadAssetAsClass
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PakContentPath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class UClass*                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class UClass* UC3_KBP_Paks_FL::LoadAssetAsClass(const class FString& PakContentPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Paks_FL", "LoadAssetAsClass");

	Params::C3_KBP_Paks_FL_LoadAssetAsClass Parms{};

	Parms.PakContentPath = std::move(PakContentPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Paks_FL.LoadAssetAsLevelName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           PakContentPath                                         (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FName                             ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FName UC3_KBP_Paks_FL::LoadAssetAsLevelName(const class FString& PakContentPath)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Paks_FL", "LoadAssetAsLevelName");

	Params::C3_KBP_Paks_FL_LoadAssetAsLevelName Parms{};

	Parms.PakContentPath = std::move(PakContentPath);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Paks_FL.MountAndRegisterPak
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PakFilename                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Paks_FL::MountAndRegisterPak(const class FString& PakFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Paks_FL", "MountAndRegisterPak");

	Params::C3_KBP_Paks_FL_MountAndRegisterPak Parms{};

	Parms.PakFilename = std::move(PakFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Paks_FL.UnmountPakFile
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class FString                           PakFilename                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Paks_FL::UnmountPakFile(const class FString& PakFilename)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Paks_FL", "UnmountPakFile");

	Params::C3_KBP_Paks_FL_UnmountPakFile Parms{};

	Parms.PakFilename = std::move(PakFilename);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Rendering_FL.FL_Set_RTX_ISM_Count
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Rendering_FL::FL_Set_RTX_ISM_Count(const class UObject* WorldContextObject, int32 NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Rendering_FL", "FL_Set_RTX_ISM_Count");

	Params::C3_KBP_Rendering_FL_FL_Set_RTX_ISM_Count Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Rendering_FL.FL_Set_RTX_ISM_Radius
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// double                                  NewCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Rendering_FL::FL_Set_RTX_ISM_Radius(const class UObject* WorldContextObject, double NewCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Rendering_FL", "FL_Set_RTX_ISM_Radius");

	Params::C3_KBP_Rendering_FL_FL_Set_RTX_ISM_Radius Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewCount = NewCount;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Rendering_FL.FL_Set_RTX_ISM_WPO_Enable
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    NewEnable                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Rendering_FL::FL_Set_RTX_ISM_WPO_Enable(const class UObject* WorldContextObject, bool NewEnable)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Rendering_FL", "FL_Set_RTX_ISM_WPO_Enable");

	Params::C3_KBP_Rendering_FL_FL_Set_RTX_ISM_WPO_Enable Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.NewEnable = NewEnable;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Rendering_FL.FL_VirtualShadowMap_HidePoolStat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Rendering_FL::FL_VirtualShadowMap_HidePoolStat(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Rendering_FL", "FL_VirtualShadowMap_HidePoolStat");

	Params::C3_KBP_Rendering_FL_FL_VirtualShadowMap_HidePoolStat Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Rendering_FL.FL_VirtualShadowMap_SetPoolSize
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   InPoolSize                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Rendering_FL::FL_VirtualShadowMap_SetPoolSize(class UObject* WorldContextObject, int32 InPoolSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Rendering_FL", "FL_VirtualShadowMap_SetPoolSize");

	Params::C3_KBP_Rendering_FL_FL_VirtualShadowMap_SetPoolSize Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.InPoolSize = InPoolSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Rendering_FL.FL_VirtualShadowMap_ShowPoolStat
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Rendering_FL::FL_VirtualShadowMap_ShowPoolStat(class UObject* WorldContextObject)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Rendering_FL", "FL_VirtualShadowMap_ShowPoolStat");

	Params::C3_KBP_Rendering_FL_FL_VirtualShadowMap_ShowPoolStat Parms{};

	Parms.WorldContextObject = WorldContextObject;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_CastTo_Actor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class AActor*>                   InArray                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TSubclassOf<class AActor>               ActorClass                                             (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ExactClassOnly                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class AActor*>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class AActor*> UC3_KBP_Struct_FL::FL_Array_CastTo_Actor(const TArray<class AActor*>& InArray, TSubclassOf<class AActor> ActorClass, bool ExactClassOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_CastTo_Actor");

	Params::C3_KBP_Struct_FL_FL_Array_CastTo_Actor Parms{};

	Parms.InArray = std::move(InArray);
	Parms.ActorClass = ActorClass;
	Parms.ExactClassOnly = ExactClassOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_CastTo_Object
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UObject*>                  InArray                                                (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TSubclassOf<class UObject>              ObjectClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ExactClassOnly                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class UObject*> UC3_KBP_Struct_FL::FL_Array_CastTo_Object(const TArray<class UObject*>& InArray, TSubclassOf<class UObject> ObjectClass, bool ExactClassOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_CastTo_Object");

	Params::C3_KBP_Struct_FL_FL_Array_CastTo_Object Parms{};

	Parms.InArray = std::move(InArray);
	Parms.ObjectClass = ObjectClass;
	Parms.ExactClassOnly = ExactClassOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_CastTo_Widget
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TArray<class UWidget*>                  InArray                                                (Parm, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
// TSubclassOf<class UWidget>              WidgetClass                                            (Parm, ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ExactClassOnly                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UWidget*>                  ReturnValue                                            (ExportObject, Parm, OutParm, ZeroConstructor, ReturnParm, ContainsInstancedReference, NativeAccessSpecifierPublic)

TArray<class UWidget*> UC3_KBP_Struct_FL::FL_Array_CastTo_Widget(const TArray<class UWidget*>& InArray, TSubclassOf<class UWidget> WidgetClass, bool ExactClassOnly)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_CastTo_Widget");

	Params::C3_KBP_Struct_FL_FL_Array_CastTo_Widget Parms{};

	Parms.InArray = std::move(InArray);
	Parms.WidgetClass = WidgetClass;
	Parms.ExactClassOnly = ExactClassOnly;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Divide_Name
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FName>                     Source                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Divisor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnSection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FName> UC3_KBP_Struct_FL::FL_Array_Divide_Name(const TArray<class FName>& Source, int32 Divisor, int32 ReturnSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Divide_Name");

	Params::C3_KBP_Struct_FL_FL_Array_Divide_Name Parms{};

	Parms.Source = std::move(Source);
	Parms.Divisor = Divisor;
	Parms.ReturnSection = ReturnSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Divide_String
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<class FString>                   Source                                                 (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// int32                                   Divisor                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   ReturnSection                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, NativeAccessSpecifierPublic)

TArray<class FString> UC3_KBP_Struct_FL::FL_Array_Divide_String(const TArray<class FString>& Source, int32 Divisor, int32 ReturnSection)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Divide_String");

	Params::C3_KBP_Struct_FL_FL_Array_Divide_String Parms{};

	Parms.Source = std::move(Source);
	Parms.Divisor = Divisor;
	Parms.ReturnSection = ReturnSection;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Bool
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Bool(const class UObject* WorldContextObject, const TArray<bool>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Bool");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Bool Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Byte
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<uint8>                           Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Byte(const class UObject* WorldContextObject, const TArray<uint8>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Byte");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Byte Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_EasingFuncArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<EEasingFunc>                     Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_EasingFuncArray(const class UObject* WorldContextObject, const TArray<EEasingFunc>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_EasingFuncArray");

	Params::C3_KBP_Struct_FL_FL_Array_Print_EasingFuncArray Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Float
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<float>                           Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Float(const class UObject* WorldContextObject, const TArray<float>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Float");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Float Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_GenericTypeArray
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAllGenericTypeArray             Input_Array                                            (Parm, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_GenericTypeArray(const class UObject* WorldContextObject, const struct FAllGenericTypeArray& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_GenericTypeArray");

	Params::C3_KBP_Struct_FL_FL_Array_Print_GenericTypeArray Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Int
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<int32>                           Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Int(const class UObject* WorldContextObject, const TArray<int32>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Int");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Int Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_LinearColor
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FLinearColor>             Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_LinearColor(const class UObject* WorldContextObject, const TArray<struct FLinearColor>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_LinearColor");

	Params::C3_KBP_Struct_FL_FL_Array_Print_LinearColor Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Name
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FName>                     Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Name(const class UObject* WorldContextObject, const TArray<class FName>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Name");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Name Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Object
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Object(const class UObject* WorldContextObject, const TArray<class UObject*>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Object");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Object Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Rotator
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FRotator>                 Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Rotator(const class UObject* WorldContextObject, const TArray<struct FRotator>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Rotator");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Rotator Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_String
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FString>                   Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_String(const class UObject* WorldContextObject, const TArray<class FString>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_String");

	Params::C3_KBP_Struct_FL_FL_Array_Print_String Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Text
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<class FText>                     Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Text(const class UObject* WorldContextObject, const TArray<class FText>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Text");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Text Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Transform
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FTransform>               Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Transform(const class UObject* WorldContextObject, const TArray<struct FTransform>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Transform");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Transform Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Vector
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Vector(const class UObject* WorldContextObject, const TArray<struct FVector>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Vector");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Vector Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Array_Print_Vector2D
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UObject*                          WorldContextObject                                     (ConstParm, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<struct FVector2D>                Input_Array                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)

void UC3_KBP_Struct_FL::FL_Array_Print_Vector2D(const class UObject* WorldContextObject, const TArray<struct FVector2D>& Input_Array)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Array_Print_Vector2D");

	Params::C3_KBP_Struct_FL_FL_Array_Print_Vector2D Parms{};

	Parms.WorldContextObject = WorldContextObject;
	Parms.Input_Array = std::move(Input_Array);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_IntToStringMinimumDigits
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// int32                                   Source                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   MinDigits                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UC3_KBP_Struct_FL::FL_IntToStringMinimumDigits(int32 Source, int32 MinDigits)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_IntToStringMinimumDigits");

	Params::C3_KBP_Struct_FL_FL_IntToStringMinimumDigits Parms{};

	Parms.Source = Source;
	Parms.MinDigits = MinDigits;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_Append_IntBool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<int32, bool>                       Map_A                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, bool>                       Map_B                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, bool>                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, bool> UC3_KBP_Struct_FL::FL_Map_Append_IntBool(const TMap<int32, bool>& Map_A, const TMap<int32, bool>& Map_B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_Append_IntBool");

	Params::C3_KBP_Struct_FL_FL_Map_Append_IntBool Parms{};

	Parms.Map_A = std::move(Map_A);
	Parms.Map_B = std::move(Map_B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_Append_IntEasingFunc
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<int32, EEasingFunc>                Map_A                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, EEasingFunc>                Map_B                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, EEasingFunc>                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, EEasingFunc> UC3_KBP_Struct_FL::FL_Map_Append_IntEasingFunc(const TMap<int32, EEasingFunc>& Map_A, const TMap<int32, EEasingFunc>& Map_B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_Append_IntEasingFunc");

	Params::C3_KBP_Struct_FL_FL_Map_Append_IntEasingFunc Parms{};

	Parms.Map_A = std::move(Map_A);
	Parms.Map_B = std::move(Map_B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_Append_IntFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<int32, double>                     Map_A                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, double>                     Map_B                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, double>                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, double> UC3_KBP_Struct_FL::FL_Map_Append_IntFloat(const TMap<int32, double>& Map_A, const TMap<int32, double>& Map_B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_Append_IntFloat");

	Params::C3_KBP_Struct_FL_FL_Map_Append_IntFloat Parms{};

	Parms.Map_A = std::move(Map_A);
	Parms.Map_B = std::move(Map_B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_Append_IntObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<int32, class UObject*>             Map_A                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, class UObject*>             Map_B                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, class UObject*>             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class UObject*> UC3_KBP_Struct_FL::FL_Map_Append_IntObject(const TMap<int32, class UObject*>& Map_A, const TMap<int32, class UObject*>& Map_B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_Append_IntObject");

	Params::C3_KBP_Struct_FL_FL_Map_Append_IntObject Parms{};

	Parms.Map_A = std::move(Map_A);
	Parms.Map_B = std::move(Map_B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_Append_IntRotator
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<int32, struct FRotator>            Map_A                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, struct FRotator>            Map_B                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, struct FRotator>            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, struct FRotator> UC3_KBP_Struct_FL::FL_Map_Append_IntRotator(const TMap<int32, struct FRotator>& Map_A, const TMap<int32, struct FRotator>& Map_B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_Append_IntRotator");

	Params::C3_KBP_Struct_FL_FL_Map_Append_IntRotator Parms{};

	Parms.Map_A = std::move(Map_A);
	Parms.Map_B = std::move(Map_B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_Append_IntText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<int32, class FText>                Map_A                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, class FText>                Map_B                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, class FText>                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class FText> UC3_KBP_Struct_FL::FL_Map_Append_IntText(const TMap<int32, class FText>& Map_A, const TMap<int32, class FText>& Map_B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_Append_IntText");

	Params::C3_KBP_Struct_FL_FL_Map_Append_IntText Parms{};

	Parms.Map_A = std::move(Map_A);
	Parms.Map_B = std::move(Map_B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_Append_IntVector
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TMap<int32, struct FVector>             Map_A                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, struct FVector>             Map_B                                                  (Parm, NativeAccessSpecifierPublic)
// TMap<int32, struct FVector>             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, struct FVector> UC3_KBP_Struct_FL::FL_Map_Append_IntVector(const TMap<int32, struct FVector>& Map_A, const TMap<int32, struct FVector>& Map_B)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_Append_IntVector");

	Params::C3_KBP_Struct_FL_FL_Map_Append_IntVector Parms{};

	Parms.Map_A = std::move(Map_A);
	Parms.Map_B = std::move(Map_B);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_MakeByArray_IntBool
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           Input_Key                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<bool>                            Input_Value                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TMap<int32, bool>                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, bool> UC3_KBP_Struct_FL::FL_Map_MakeByArray_IntBool(const TArray<int32>& Input_Key, const TArray<bool>& Input_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_MakeByArray_IntBool");

	Params::C3_KBP_Struct_FL_FL_Map_MakeByArray_IntBool Parms{};

	Parms.Input_Key = std::move(Input_Key);
	Parms.Input_Value = std::move(Input_Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_MakeByArray_IntEasingFunc
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           Input_Key                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<EEasingFunc>                     Input_Value                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TMap<int32, EEasingFunc>                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, EEasingFunc> UC3_KBP_Struct_FL::FL_Map_MakeByArray_IntEasingFunc(const TArray<int32>& Input_Key, const TArray<EEasingFunc>& Input_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_MakeByArray_IntEasingFunc");

	Params::C3_KBP_Struct_FL_FL_Map_MakeByArray_IntEasingFunc Parms{};

	Parms.Input_Key = std::move(Input_Key);
	Parms.Input_Value = std::move(Input_Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_MakeByArray_IntFloat
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           Input_Key                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<double>                          Input_Value                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TMap<int32, double>                     ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, double> UC3_KBP_Struct_FL::FL_Map_MakeByArray_IntFloat(const TArray<int32>& Input_Key, const TArray<double>& Input_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_MakeByArray_IntFloat");

	Params::C3_KBP_Struct_FL_FL_Map_MakeByArray_IntFloat Parms{};

	Parms.Input_Key = std::move(Input_Key);
	Parms.Input_Value = std::move(Input_Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_MakeByArray_IntObject
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           Input_Key                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class UObject*>                  Input_Value                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TMap<int32, class UObject*>             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class UObject*> UC3_KBP_Struct_FL::FL_Map_MakeByArray_IntObject(const TArray<int32>& Input_Key, const TArray<class UObject*>& Input_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_MakeByArray_IntObject");

	Params::C3_KBP_Struct_FL_FL_Map_MakeByArray_IntObject Parms{};

	Parms.Input_Key = std::move(Input_Key);
	Parms.Input_Value = std::move(Input_Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_MakeByArray_IntRotator
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           Input_Key                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FRotator>                 Input_Value                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TMap<int32, struct FRotator>            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, struct FRotator> UC3_KBP_Struct_FL::FL_Map_MakeByArray_IntRotator(const TArray<int32>& Input_Key, const TArray<struct FRotator>& Input_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_MakeByArray_IntRotator");

	Params::C3_KBP_Struct_FL_FL_Map_MakeByArray_IntRotator Parms{};

	Parms.Input_Key = std::move(Input_Key);
	Parms.Input_Value = std::move(Input_Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_MakeByArray_IntText
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           Input_Key                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<class FText>                     Input_Value                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TMap<int32, class FText>                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class FText> UC3_KBP_Struct_FL::FL_Map_MakeByArray_IntText(const TArray<int32>& Input_Key, const TArray<class FText>& Input_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_MakeByArray_IntText");

	Params::C3_KBP_Struct_FL_FL_Map_MakeByArray_IntText Parms{};

	Parms.Input_Key = std::move(Input_Key);
	Parms.Input_Value = std::move(Input_Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_Map_MakeByArray_IntVector
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// TArray<int32>                           Input_Key                                              (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TArray<struct FVector>                  Input_Value                                            (Parm, ZeroConstructor, NativeAccessSpecifierPublic)
// TMap<int32, struct FVector>             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, struct FVector> UC3_KBP_Struct_FL::FL_Map_MakeByArray_IntVector(const TArray<int32>& Input_Key, const TArray<struct FVector>& Input_Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_Map_MakeByArray_IntVector");

	Params::C3_KBP_Struct_FL_FL_Map_MakeByArray_IntVector Parms{};

	Parms.Input_Key = std::move(Input_Key);
	Parms.Input_Value = std::move(Input_Value);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntBool_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, bool>                       Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, bool>                       ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, bool> UC3_KBP_Struct_FL::FL_MapSort_IntBool_Key(const TMap<int32, bool>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntBool_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntBool_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntByte_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, uint8>                      Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, uint8>                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, uint8> UC3_KBP_Struct_FL::FL_MapSort_IntByte_Key(const TMap<int32, uint8>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntByte_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntByte_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntEasingFunc_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, EEasingFunc>                Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, EEasingFunc>                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, EEasingFunc> UC3_KBP_Struct_FL::FL_MapSort_IntEasingFunc_Key(const TMap<int32, EEasingFunc>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntEasingFunc_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntEasingFunc_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntFloat_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, float>                      Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, float>                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, float> UC3_KBP_Struct_FL::FL_MapSort_IntFloat_Key(const TMap<int32, float>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntFloat_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntFloat_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntInt_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, int32>                      Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, int32>                      ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, int32> UC3_KBP_Struct_FL::FL_MapSort_IntInt_Key(const TMap<int32, int32>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntInt_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntInt_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntName_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, class FName>                Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, class FName>                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class FName> UC3_KBP_Struct_FL::FL_MapSort_IntName_Key(const TMap<int32, class FName>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntName_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntName_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntObject_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, class UObject*>             Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, class UObject*>             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class UObject*> UC3_KBP_Struct_FL::FL_MapSort_IntObject_Key(const TMap<int32, class UObject*>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntObject_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntObject_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntRotator_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, struct FRotator>            Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, struct FRotator>            ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, struct FRotator> UC3_KBP_Struct_FL::FL_MapSort_IntRotator_Key(const TMap<int32, struct FRotator>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntRotator_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntRotator_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntString_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, class FString>              Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, class FString>              ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class FString> UC3_KBP_Struct_FL::FL_MapSort_IntString_Key(const TMap<int32, class FString>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntString_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntString_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntText_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, class FText>                Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, class FText>                ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, class FText> UC3_KBP_Struct_FL::FL_MapSort_IntText_Key(const TMap<int32, class FText>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntText_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntText_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntTransform_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, struct FTransform>          Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, struct FTransform>          ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, struct FTransform> UC3_KBP_Struct_FL::FL_MapSort_IntTransform_Key(const TMap<int32, struct FTransform>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntTransform_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntTransform_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_MapSort_IntVector_Key
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// TMap<int32, struct FVector>             Source                                                 (Parm, NativeAccessSpecifierPublic)
// bool                                    Ascending                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TMap<int32, struct FVector>             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

TMap<int32, struct FVector> UC3_KBP_Struct_FL::FL_MapSort_IntVector_Key(const TMap<int32, struct FVector>& Source, bool Ascending)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_MapSort_IntVector_Key");

	Params::C3_KBP_Struct_FL_FL_MapSort_IntVector_Key Parms{};

	Parms.Source = std::move(Source);
	Parms.Ascending = Ascending;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_PrintEnumAsString
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UC3_KBP_Struct_FL::FL_PrintEnumAsString()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_PrintEnumAsString");

	Params::C3_KBP_Struct_FL_FL_PrintEnumAsString Parms{};

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_RemoveAllArrayByIndex
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// struct FAllGenericTypeArray             Source                                                 (Parm, NativeAccessSpecifierPublic)
// int32                                   RemoveIndex                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// struct FAllGenericTypeArray             ReturnValue                                            (Parm, OutParm, ReturnParm, NativeAccessSpecifierPublic)

struct FAllGenericTypeArray UC3_KBP_Struct_FL::FL_RemoveAllArrayByIndex(const struct FAllGenericTypeArray& Source, int32 RemoveIndex)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_RemoveAllArrayByIndex");

	Params::C3_KBP_Struct_FL_FL_RemoveAllArrayByIndex Parms{};

	Parms.Source = std::move(Source);
	Parms.RemoveIndex = RemoveIndex;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_StringEqualExactly_3Pairs
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           A1                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           A2                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           A3                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           B1                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           B2                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           B3                                                     (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Struct_FL::FL_StringEqualExactly_3Pairs(const class FString& A1, const class FString& A2, const class FString& A3, const class FString& B1, const class FString& B2, const class FString& B3)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_StringEqualExactly_3Pairs");

	Params::C3_KBP_Struct_FL_FL_StringEqualExactly_3Pairs Parms{};

	Parms.A1 = std::move(A1);
	Parms.A2 = std::move(A2);
	Parms.A3 = std::move(A3);
	Parms.B1 = std::move(B1);
	Parms.B2 = std::move(B2);
	Parms.B3 = std::move(B3);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Struct_FL.FL_ToValidFileName
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class FString                           Source                                                 (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReplaceChar                                            (Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// class FString                           ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)

class FString UC3_KBP_Struct_FL::FL_ToValidFileName(const class FString& Source, const class FString& ReplaceChar)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Struct_FL", "FL_ToValidFileName");

	Params::C3_KBP_Struct_FL_FL_ToValidFileName Parms{};

	Parms.Source = std::move(Source);
	Parms.ReplaceChar = std::move(ReplaceChar);

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Widget_FL.FL_GetScrollValue
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// class UScrollBox*                       ScrollBox                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UC3_KBP_Widget_FL::FL_GetScrollValue(class UScrollBox* ScrollBox)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Widget_FL", "FL_GetScrollValue");

	Params::C3_KBP_Widget_FL_FL_GetScrollValue Parms{};

	Parms.ScrollBox = ScrollBox;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Widget_FL.FL_ImplementRecentHoveredPool
// (Final, Native, Static, Public, HasOutParams, BlueprintCallable)
// Parameters:
// class UWidget*                          TargetWidget                                           (Parm, ZeroConstructor, InstancedReference, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// TArray<bool>                            Pool                                                   (Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
// bool                                    AdditionalCondition                                    (ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, AdvancedDisplay, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// int32                                   PoolSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Widget_FL::FL_ImplementRecentHoveredPool(class UWidget* TargetWidget, TArray<bool>& Pool, const bool AdditionalCondition, int32 PoolSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Widget_FL", "FL_ImplementRecentHoveredPool");

	Params::C3_KBP_Widget_FL_FL_ImplementRecentHoveredPool Parms{};

	Parms.TargetWidget = TargetWidget;
	Parms.Pool = std::move(Pool);
	Parms.AdditionalCondition = AdditionalCondition;
	Parms.PoolSize = PoolSize;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	Pool = std::move(Parms.Pool);
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Widget_FL.FL_SetScrollValue
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UScrollBox*                       ScrollBox                                              (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// float                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

float UC3_KBP_Widget_FL::FL_SetScrollValue(class UScrollBox* ScrollBox, float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Widget_FL", "FL_SetScrollValue");

	Params::C3_KBP_Widget_FL_FL_SetScrollValue Parms{};

	Parms.ScrollBox = ScrollBox;
	Parms.Value = Value;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Widget_FL.FL_SetVisibilityPro
// (Final, Native, Static, Public, BlueprintCallable)
// Parameters:
// class UWidget*                          Target                                                 (Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// ESlateVisibility                        InVisibility                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

void UC3_KBP_Widget_FL::FL_SetVisibilityPro(class UWidget* Target, ESlateVisibility InVisibility)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Widget_FL", "FL_SetVisibilityPro");

	Params::C3_KBP_Widget_FL_FL_SetVisibilityPro Parms{};

	Parms.Target = Target;
	Parms.InVisibility = InVisibility;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;
}


// Function C3_KickstartBlueprintLibrary.C3_KBP_Widget_FL.FL_Textbox_IsValidCommit
// (Final, Native, Static, Public, BlueprintCallable, BlueprintPure)
// Parameters:
// ETextCommit                             Method                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)

bool UC3_KBP_Widget_FL::FL_Textbox_IsValidCommit(ETextCommit Method)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = StaticClass()->GetFunction("C3_KBP_Widget_FL", "FL_Textbox_IsValidCommit");

	Params::C3_KBP_Widget_FL_FL_Textbox_IsValidCommit Parms{};

	Parms.Method = Method;

	auto Flgs = Func->FunctionFlags;
	Func->FunctionFlags |= 0x400;

	GetDefaultObj()->ProcessEvent(Func, &Parms);

	Func->FunctionFlags = Flgs;

	return Parms.ReturnValue;
}

}

