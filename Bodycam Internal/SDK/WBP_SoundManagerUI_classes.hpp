#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_SoundManagerUI

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "FUISound_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_SoundManagerUI.WBP_SoundManagerUI_C
// 0x0080 (0x0300 - 0x0280)
class UWBP_SoundManagerUI_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0280(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	TArray<struct FFUISound>                      SoundQueue;                                        // 0x0288(0x0010)(Edit, BlueprintVisible, DisableEditOnInstance)
	bool                                          bIsProcessingQueue;                                // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPDA_MenuSystemConfig_C*                MenuSystemConfig;                                  // 0x02A0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	class UAudioComponent*                        MusicAudioComponent;                               // 0x02A8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 TempNewDeviceID;                                   // 0x02B0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class FString                                 CurrentAudioOutputDeviceName;                      // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class UAudioComponent*                        SearchGameSound;                                   // 0x02D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          AutoPlay_;                                         // 0x02D8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D9[0x3];                                      // 0x02D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   Row_Name;                                          // 0x02DC(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         SongPlusMinus;                                     // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Paused_;                                           // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 Link;                                              // 0x02F0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)

public:
	class UAudioComponent* AddMusicAudioComponent();
	void ClearBackgroundMusic();
	void ExecuteUbergraph_WBP_SoundManagerUI(int32 EntryPoint);
	void GetLink();
	void OnAudioFinished_Event();
	void OnAudioOutputDeviceSwapCompleted(const struct FSwapAudioOutputResult& SwapResult);
	void OnGetAvailableOutputDevices(const TArray<struct FAudioOutputDeviceInfo>& AvailableDevices);
	void OnGetCurrentAudioOutputDevice(const class FString& CurrentDevice);
	void OnGetCurrentAudioOutputDeviceDuringSwap(const class FString& CurrentDevice);
	void OnObtainAudioOutputDevices(const TArray<struct FAudioOutputDeviceInfo>& AvailableDevices);
	void OnPlayBackgroundMusic(class FName RowName, float StartTime, bool Bypass_Security__);
	void OnPreloadSounds();
	void OnProcessQueue();
	void OnRandomBackgroundMusic();
	void OnSetCurrentAudioOutputDeviceName();
	void OnStartQueueProcessing();
	void OnSwapAudioOutputDevice(const class FString& NewDeviceId);
	void PlayAcceptSound();
	void PlayBackSound();
	void PlayButtonPressSound();
	void PlayCameraSwitchSound();
	void PlayClearInputBindingSound();
	void PlayDecisionDialogPopupSound();
	void PlayDeclineSound();
	void PlayForwardSound();
	void PlayHighlightSound();
	void PlayIngameMenuCloseSound();
	void PlayIngameMenuOpenSound();
	void PlayMenuSound(const struct FFUISound& Sound);
	void PlayNextSong();
	void PlayPause();
	void PlayPreviousSong();
	void PlaySliderSound(double CurrentValueNormalized);
	void PlayValueChangeSound();
	void Replay();
	void StartPlaySearchGameSound();
	void StopSearchGameSound();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_SoundManagerUI_C">();
	}
	static class UWBP_SoundManagerUI_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_SoundManagerUI_C>();
	}
};
static_assert(alignof(UWBP_SoundManagerUI_C) == 0x000008, "Wrong alignment on UWBP_SoundManagerUI_C");
static_assert(sizeof(UWBP_SoundManagerUI_C) == 0x000300, "Wrong size on UWBP_SoundManagerUI_C");
static_assert(offsetof(UWBP_SoundManagerUI_C, UberGraphFrame) == 0x000280, "Member 'UWBP_SoundManagerUI_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, SoundQueue) == 0x000288, "Member 'UWBP_SoundManagerUI_C::SoundQueue' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, bIsProcessingQueue) == 0x000298, "Member 'UWBP_SoundManagerUI_C::bIsProcessingQueue' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, MenuSystemConfig) == 0x0002A0, "Member 'UWBP_SoundManagerUI_C::MenuSystemConfig' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, MusicAudioComponent) == 0x0002A8, "Member 'UWBP_SoundManagerUI_C::MusicAudioComponent' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, TempNewDeviceID) == 0x0002B0, "Member 'UWBP_SoundManagerUI_C::TempNewDeviceID' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, CurrentAudioOutputDeviceName) == 0x0002C0, "Member 'UWBP_SoundManagerUI_C::CurrentAudioOutputDeviceName' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, SearchGameSound) == 0x0002D0, "Member 'UWBP_SoundManagerUI_C::SearchGameSound' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, AutoPlay_) == 0x0002D8, "Member 'UWBP_SoundManagerUI_C::AutoPlay_' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, Row_Name) == 0x0002DC, "Member 'UWBP_SoundManagerUI_C::Row_Name' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, SongPlusMinus) == 0x0002E4, "Member 'UWBP_SoundManagerUI_C::SongPlusMinus' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, Paused_) == 0x0002E8, "Member 'UWBP_SoundManagerUI_C::Paused_' has a wrong offset!");
static_assert(offsetof(UWBP_SoundManagerUI_C, Link) == 0x0002F0, "Member 'UWBP_SoundManagerUI_C::Link' has a wrong offset!");

}

