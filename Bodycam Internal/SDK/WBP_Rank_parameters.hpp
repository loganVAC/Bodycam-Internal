#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_Rank

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "SteamCorePro_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function WBP_Rank.WBP_Rank_C.ExecuteUbergraph_WBP_Rank
// 0x01F8 (0x01F8 - 0x0000)
struct WBP_Rank_C_ExecuteUbergraph_WBP_Rank final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              Temp_byte_Variable;                                // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPersonaStateChange                    K2Node_CustomEvent_data;                           // 0x0010(0x0018)(ConstParm)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x0030(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UBorder*>                        K2Node_MakeArray_Array;                            // 0x0040(0x0010)(ReferenceParm, ContainsInstancedReference)
	ESlateVisibility                              Temp_byte_Variable_1;                              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UBorder*                                CallFunc_Array_Get_Item;                           // 0x0058(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_67[0x1];                                       // 0x0067(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_1;                          // 0x0068(0x0010)(ReferenceParm)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0080(0x0018)()
	struct FFontOutlineSettings                   K2Node_MakeStruct_FontOutlineSettings;             // 0x0098(0x0020)(NoDestructor, HasGetValueTypeHash)
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x00B8(0x0058)(HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default;                             // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Select_Default_1;                           // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	int64                                         CallFunc_Conv_IntToInt64_ReturnValue;              // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_RankMath_Rank;                            // 0x0130(0x0018)()
	class UTexture2D*                             CallFunc_RankMath_Image;                           // 0x0148(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RankMath_RankDivision;                    // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RankMath_RankProgress;                    // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_RankMath_Rank_Integer;                    // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSlateColor                            CallFunc_RankMath_Color;                           // 0x0164(0x0014)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0178(0x0050)(HasGetValueTypeHash)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array_2;                          // 0x01C8(0x0010)(ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue_1;                     // 0x01D8(0x0018)()
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue; // 0x01F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESlateVisibility                              K2Node_Select_Default_2;                           // 0x01F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank) == 0x000008, "Wrong alignment on WBP_Rank_C_ExecuteUbergraph_WBP_Rank");
static_assert(sizeof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank) == 0x0001F8, "Wrong size on WBP_Rank_C_ExecuteUbergraph_WBP_Rank");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, EntryPoint) == 0x000000, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::EntryPoint' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, Temp_int_Array_Index_Variable) == 0x000004, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, Temp_byte_Variable) == 0x000008, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_CustomEvent_data) == 0x000010, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_CustomEvent_data' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_GetGameInstance_ReturnValue) == 0x000028, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_DynamicCast_AsBodycam_GI) == 0x000030, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_DynamicCast_bSuccess) == 0x000038, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_MakeArray_Array) == 0x000040, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, Temp_byte_Variable_1) == 0x000050, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_Array_Get_Item) == 0x000058, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, Temp_bool_Variable) == 0x000064, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, Temp_bool_Variable_1) == 0x000065, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, Temp_bool_Variable_2) == 0x000066, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_MakeArray_Array_1) == 0x000068, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_MakeArray_Array_1' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_Event_IsDesignTime) == 0x000078, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_Format_ReturnValue) == 0x000080, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_MakeStruct_FontOutlineSettings) == 0x000098, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_MakeStruct_FontOutlineSettings' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_MakeStruct_SlateFontInfo) == 0x0000B8, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, Temp_int_Loop_Counter_Variable) == 0x000110, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_Add_IntInt_ReturnValue) == 0x000118, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_Select_Default) == 0x00011C, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_Select_Default_1) == 0x000120, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_Conv_IntToInt64_ReturnValue) == 0x000128, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_Conv_IntToInt64_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_RankMath_Rank) == 0x000130, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_RankMath_Rank' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_RankMath_Image) == 0x000148, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_RankMath_Image' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_RankMath_RankDivision) == 0x000150, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_RankMath_RankDivision' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_RankMath_RankProgress) == 0x000158, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_RankMath_RankProgress' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_RankMath_Rank_Integer) == 0x000160, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_RankMath_Rank_Integer' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_RankMath_Color) == 0x000164, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_RankMath_Color' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_MakeStruct_FormatArgumentData) == 0x000178, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_MakeArray_Array_2) == 0x0001C8, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_MakeArray_Array_2' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_Format_ReturnValue_1) == 0x0001D8, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_Format_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x0001F0, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue) == 0x0001F1, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::CallFunc_EqualEqual_IgnoreCase_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(WBP_Rank_C_ExecuteUbergraph_WBP_Rank, K2Node_Select_Default_2) == 0x0001F2, "Member 'WBP_Rank_C_ExecuteUbergraph_WBP_Rank::K2Node_Select_Default_2' has a wrong offset!");

// Function WBP_Rank.WBP_Rank_C.PersonaStateChange_Event_0
// 0x0018 (0x0018 - 0x0000)
struct WBP_Rank_C_PersonaStateChange_Event_0 final
{
public:
	struct FPersonaStateChange                    Data;                                              // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(WBP_Rank_C_PersonaStateChange_Event_0) == 0x000008, "Wrong alignment on WBP_Rank_C_PersonaStateChange_Event_0");
static_assert(sizeof(WBP_Rank_C_PersonaStateChange_Event_0) == 0x000018, "Wrong size on WBP_Rank_C_PersonaStateChange_Event_0");
static_assert(offsetof(WBP_Rank_C_PersonaStateChange_Event_0, Data) == 0x000000, "Member 'WBP_Rank_C_PersonaStateChange_Event_0::Data' has a wrong offset!");

// Function WBP_Rank.WBP_Rank_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct WBP_Rank_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(WBP_Rank_C_PreConstruct) == 0x000001, "Wrong alignment on WBP_Rank_C_PreConstruct");
static_assert(sizeof(WBP_Rank_C_PreConstruct) == 0x000001, "Wrong size on WBP_Rank_C_PreConstruct");
static_assert(offsetof(WBP_Rank_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'WBP_Rank_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

