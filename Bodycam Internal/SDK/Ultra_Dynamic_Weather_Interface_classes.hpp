#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Ultra_Dynamic_Weather_Interface

#include "Basic.hpp"

#include "CoreUObject_classes.hpp"
#include "UDS_Project_Mode_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass Ultra_Dynamic_Weather_Interface.Ultra_Dynamic_Weather_Interface_C
// 0x0000 (0x0028 - 0x0028)
class IUltra_Dynamic_Weather_Interface_C final : public IInterface
{
public:
	void Apply_State(const struct FUDS_and_UDW_State& State);
	void Destroy_Close_Thunder_Component(class USceneComponent* Component);
	void Get_Close_Thunder_Sound_Occlusion(double* Volume, double* LPF);
	void Get_Intended_Cloud_Direction(double* Intended_Cloud_Direction);
	void Get_Intended_Cloud_Speed(double* Intended_Cloud_Speed);
	void Get_Intended_Water_Level(bool* Using_Water_Level, double* Water_Level);
	void Get_State_for_Saving(struct FUDS_and_UDW_State* UDW_State);
	void Get_Weather_Particle_Collision_Channel(ECollisionChannel* Channel);
	void Hard_Refresh_Cached_Properties();
	void Initialize_Weather();
	void Set_Project_Mode(EUDS_Project_Mode Mode);
	void Set_Season();
	void Set_Up_Rainbow_MID();
	void Update_Material_Effects();
	void Update_Rainbow();
	void Update_Weather_Settings_from_UDS(double Cloud_Coverage, double Fog, double Dust);

	void Get_Rainbow_MID(bool* Rainbow_Enabled, class UMaterialInstanceDynamic** Mid) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"Ultra_Dynamic_Weather_Interface_C">();
	}
	static class IUltra_Dynamic_Weather_Interface_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<IUltra_Dynamic_Weather_Interface_C>();
	}
};
static_assert(alignof(IUltra_Dynamic_Weather_Interface_C) == 0x000008, "Wrong alignment on IUltra_Dynamic_Weather_Interface_C");
static_assert(sizeof(IUltra_Dynamic_Weather_Interface_C) == 0x000028, "Wrong size on IUltra_Dynamic_Weather_Interface_C");

}

