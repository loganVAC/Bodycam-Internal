#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UDS_Occlusion_Volume

#include "Basic.hpp"

#include "UDS_OcclusionShape_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass UDS_Occlusion_Volume.UDS_Occlusion_Volume_C
// 0x0048 (0x02D8 - 0x0290)
class AUDS_Occlusion_Volume_C final : public AActor
{
public:
	class UBillboardComponent*                    Billboard;                                         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	EUDS_OcclusionShape                           Collision_Shape;                                   // 0x0298(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                Box_Extent;                                        // 0x02A0(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	double                                        Sphere_Radius;                                     // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Affect_Occlusion_on_Ultra_Dynamic_Sky;             // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Affect_Occlusion_on_Ultra_Dynamic_Weather;         // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	bool                                          Block_Weather_Particles;                           // 0x02C2(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)
	uint8                                         Pad_2C3[0x5];                                      // 0x02C3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UPrimitiveComponent*                    Collision_Component;                               // 0x02C8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         Capsule_Half_Height;                               // 0x02D0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void Get_Occlusion_Result(bool Weather, bool* Occluded);
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UDS_Occlusion_Volume_C">();
	}
	static class AUDS_Occlusion_Volume_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AUDS_Occlusion_Volume_C>();
	}
};
static_assert(alignof(AUDS_Occlusion_Volume_C) == 0x000008, "Wrong alignment on AUDS_Occlusion_Volume_C");
static_assert(sizeof(AUDS_Occlusion_Volume_C) == 0x0002D8, "Wrong size on AUDS_Occlusion_Volume_C");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Billboard) == 0x000290, "Member 'AUDS_Occlusion_Volume_C::Billboard' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Collision_Shape) == 0x000298, "Member 'AUDS_Occlusion_Volume_C::Collision_Shape' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Box_Extent) == 0x0002A0, "Member 'AUDS_Occlusion_Volume_C::Box_Extent' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Sphere_Radius) == 0x0002B8, "Member 'AUDS_Occlusion_Volume_C::Sphere_Radius' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Affect_Occlusion_on_Ultra_Dynamic_Sky) == 0x0002C0, "Member 'AUDS_Occlusion_Volume_C::Affect_Occlusion_on_Ultra_Dynamic_Sky' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Affect_Occlusion_on_Ultra_Dynamic_Weather) == 0x0002C1, "Member 'AUDS_Occlusion_Volume_C::Affect_Occlusion_on_Ultra_Dynamic_Weather' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Block_Weather_Particles) == 0x0002C2, "Member 'AUDS_Occlusion_Volume_C::Block_Weather_Particles' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Collision_Component) == 0x0002C8, "Member 'AUDS_Occlusion_Volume_C::Collision_Component' has a wrong offset!");
static_assert(offsetof(AUDS_Occlusion_Volume_C, Capsule_Half_Height) == 0x0002D0, "Member 'AUDS_Occlusion_Volume_C::Capsule_Half_Height' has a wrong offset!");

}

