#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PC_Zombie

#include "Basic.hpp"

#include "SteamCorePro_structs.hpp"
#include "STR_TEST_structs.hpp"
#include "STR_PCInfo_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "E_Team_structs.hpp"
#include "STR_Actor_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"
#include "STR_KickVote_structs.hpp"
#include "InputCore_structs.hpp"
#include "EnhancedInput_structs.hpp"
#include "EN_WaveClass_structs.hpp"
#include "E_Emote_structs.hpp"
#include "STR_Score_structs.hpp"
#include "STR_PCStats_structs.hpp"
#include "GameMode_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PC_Zombie.PC_Zombie_C.CanCreateKickVote
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_CanCreateKickVote final
{
public:
	bool                                          CanCreateKickVote_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_CanCreateKickVote) == 0x000001, "Wrong alignment on PC_Zombie_C_CanCreateKickVote");
static_assert(sizeof(PC_Zombie_C_CanCreateKickVote) == 0x000001, "Wrong size on PC_Zombie_C_CanCreateKickVote");
static_assert(offsetof(PC_Zombie_C_CanCreateKickVote, CanCreateKickVote_) == 0x000000, "Member 'PC_Zombie_C_CanCreateKickVote::CanCreateKickVote_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.CanKickThisPlayer?
// 0x0018 (0x0018 - 0x0000)
struct PC_Zombie_C_CanKickThisPlayer_ final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          True_;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_CanKickThisPlayer_) == 0x000008, "Wrong alignment on PC_Zombie_C_CanKickThisPlayer_");
static_assert(sizeof(PC_Zombie_C_CanKickThisPlayer_) == 0x000018, "Wrong size on PC_Zombie_C_CanKickThisPlayer_");
static_assert(offsetof(PC_Zombie_C_CanKickThisPlayer_, PlayerID) == 0x000000, "Member 'PC_Zombie_C_CanKickThisPlayer_::PlayerID' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_CanKickThisPlayer_, True_) == 0x000010, "Member 'PC_Zombie_C_CanKickThisPlayer_::True_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.ConnectionInfos
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_ConnectionInfos final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_ConnectionInfos) == 0x000004, "Wrong alignment on PC_Zombie_C_ConnectionInfos");
static_assert(sizeof(PC_Zombie_C_ConnectionInfos) == 0x000010, "Wrong size on PC_Zombie_C_ConnectionInfos");
static_assert(offsetof(PC_Zombie_C_ConnectionInfos, Color) == 0x000000, "Member 'PC_Zombie_C_ConnectionInfos::Color' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.EndWave
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_EndWave final
{
public:
	int32                                         Wave_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  EN_WaveClass;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_EndWave) == 0x000004, "Wrong alignment on PC_Zombie_C_EndWave");
static_assert(sizeof(PC_Zombie_C_EndWave) == 0x000008, "Wrong size on PC_Zombie_C_EndWave");
static_assert(offsetof(PC_Zombie_C_EndWave, Wave_0) == 0x000000, "Member 'PC_Zombie_C_EndWave::Wave_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_EndWave, EN_WaveClass) == 0x000004, "Member 'PC_Zombie_C_EndWave::EN_WaveClass' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.ExecuteUbergraph_PC_Zombie
// 0x1670 (0x1670 - 0x0000)
struct PC_Zombie_C_ExecuteUbergraph_PC_Zombie final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue;                   // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ACamera_C*                              K2Node_DynamicCast_AsCamera;                       // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWBP_GameEnd_C*                         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28[0x8];                                       // 0x0028(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0030(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x0090(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASpectatorCamera_C*                     CallFunc_FinishSpawningActor_ReturnValue;          // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00A0(0x0018)()
	uint8                                         Pad_B8[0x8];                                       // 0x00B8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x00C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1; // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ASpectatorCamera_C*                     CallFunc_FinishSpawningActor_ReturnValue_1;        // 0x0128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0130(0x0010)(ConstParm, ReferenceParm)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0141(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_142[0x2];                                      // 0x0142(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x015C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15D[0x3];                                      // 0x015D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_1;                            // 0x0160(0x0010)(ConstParm, ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_2;        // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_2;                // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B2[0x2];                                      // 0x01B2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Xp;                                   // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Wave_1;                               // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  K2Node_Event_EN_WaveClass_1;                       // 0x01BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_On_;                                  // 0x01BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BE[0x2];                                      // 0x01BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Wave;                                 // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  K2Node_Event_EN_WaveClass;                         // 0x01C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C5[0x3];                                      // 0x01C5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Event_Color;                                // 0x01C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Emote                                       K2Node_Event_EmoteToPlay;                          // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D9[0x7];                                      // 0x01D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_String;                               // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TimeCount;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_NewParam;                             // 0x0200(0x0018)()
	E_Team                                        K2Node_Event_Team;                                 // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_219[0x3];                                      // 0x0219(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Selected_Level_Name;                  // 0x021C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x0224(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team_PlayerKilled_;                   // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MilitaryIndex;                        // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TerroristIndex;                       // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_WiiningTeam;                          // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_235[0x3];                                      // 0x0235(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_Event_Score;                                // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Win_;                                 // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Slomo;                                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_Event_PlayerInfo;                           // 0x0250(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_SteamID;                              // 0x0298(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target_2;                             // 0x02A8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes_;                                 // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E9[0x7];                                      // 0x02E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target_1;                             // 0x02F0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target;                               // 0x0330(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Event_Gamemode;                             // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReady_;                             // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsTalking;                            // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373[0x5];                                      // 0x0373(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x0378(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         CallFunc_GetAllActorsWithTag_OutActors;            // 0x0380(0x0010)(ReferenceParm)
	TScriptInterface<class IBPI_PauseGame_C>      CallFunc_Pause_self_CastInput;                     // 0x0390(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x03A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3A4[0x4];                                      // 0x03A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x03A8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie;                    // 0x03B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3BA[0x6];                                      // 0x03BA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue;                   // 0x03C0(0x0008)(NoDestructor)
	double                                        CallFunc_RandomFloat_ReturnValue;                  // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x03D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_DoubleToString_ReturnValue;          // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPackagedForDistribution_ReturnValue;    // 0x03F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F1[0x7];                                      // 0x03F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_CustomEvent_PCInfo;                         // 0x03F8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           K2Node_CustomEvent_Item_Stats;                     // 0x0408(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_SelectString_ReturnValue;                 // 0x0418(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0428(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie_1;                  // 0x0430(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0438(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue;                   // 0x0439(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43A[0x6];                                      // 0x043A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0440(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0480(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_484[0x4];                                      // 0x0484(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue;                  // 0x0488(0x0008)(NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_491[0x7];                                      // 0x0491(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTexture2D*                             CallFunc_GetSmallFriendAvatar_ReturnValue;         // 0x0498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable_2;                            // 0x04A0(0x0010)(ConstParm, ReferenceParm)
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo;                      // 0x04B0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class APC_Zombie_C*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x04F0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0500(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_509[0x7];                                      // 0x0509(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable_3;                            // 0x0510(0x0010)(ConstParm, ReferenceParm)
	class UHUD_Character_C*                       CallFunc_Create_ReturnValue_1;                     // 0x0520(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_2;               // 0x0528(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie_2;                  // 0x0530(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0538(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_539[0x7];                                      // 0x0539(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_1;                 // 0x0540(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0548(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_549[0x3];                                      // 0x0549(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x054C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_551[0x3];                                      // 0x0551(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x0554(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable;                                // 0x0558(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_FindBestSpawn_FarestTransform_return;     // 0x0560(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               K2Node_CustomEvent_NewRotation;                    // 0x05C0(0x0018)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Respawn_;                       // 0x05D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Destroy_;                       // 0x05D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5DA[0x6];                                      // 0x05DA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x05E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue;        // 0x05E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0600(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0620(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_2;                 // 0x0628(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FL_Vector_Multiply_Float_ReturnValue;     // 0x0630(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0648(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0660(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UInputAction*                           Temp_object_Variable_4;                            // 0x0678(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0680(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0768(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0769(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x076A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_76B[0x1];                                      // 0x076B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x076C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0770(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_774[0x4];                                      // 0x0774(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0778(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0790(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x07A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x07C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x07E8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x07F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x07F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80C[0x4];                                      // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0810(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0828(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0840(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue;       // 0x0858(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime;       // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime;     // 0x087C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction;      // 0x0880(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_1;                 // 0x0888(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_1;            // 0x0970(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_1;            // 0x0971(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_1;         // 0x0972(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_973[0x1];                                      // 0x0973(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_1;                    // 0x0974(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_1;                // 0x0978(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_97C[0x4];                                      // 0x097C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_1;                // 0x0980(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_1;             // 0x0998(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_1;                  // 0x09B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_1;            // 0x09C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_1;                 // 0x09E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_1;                // 0x09E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_1;            // 0x09F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_1;             // 0x09F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_1;                // 0x0A00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_1;                 // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_1;            // 0x0A0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_1;               // 0x0A10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A14[0x4];                                      // 0x0A14(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_1;              // 0x0A18(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_1;                // 0x0A30(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1_0;                            // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0A50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue;           // 0x0A68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0A80(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0A84(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0A88(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A8C[0x4];                                      // 0x0A8C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_0;                              // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0A98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue;  // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB1[0xF];                                      // 0x0AB1(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0AC0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2; // 0x0B20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AHorrorMob_C*                           CallFunc_FinishSpawningActor_ReturnValue_2;        // 0x0B28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0B30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Destroy_;                             // 0x0B31(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0B32(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B33[0x1];                                      // 0x0B33(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0B34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0B38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x0B40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0B48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0B49(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B4A[0x6];                                      // 0x0B4A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  K2Node_Event_PossessedPawn;                        // 0x0B50(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1;  // 0x0B58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x0B60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B61[0x7];                                      // 0x0B61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0B68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_CustomEvent_Remove_;                        // 0x0B80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0B81(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0B82(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B83[0x5];                                      // 0x0B83(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UKickOverlay_C*                         CallFunc_Create_ReturnValue_2;                     // 0x0B88(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  K2Node_Event_UnpossessedPawn;                      // 0x0B90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   K2Node_InputKeyEvent_Key;                          // 0x0B98(0x0018)(HasGetValueTypeHash)
	TArray<class UHUD_Character_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0BB0(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UHUD_Character_C*                       CallFunc_Array_Get_Item_1;                         // 0x0BC0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0BC8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0BCC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x0BCD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCE[0x2];                                      // 0x0BCE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x0BD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_3;                 // 0x0BD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetActorForwardVector_ReturnValue_1;      // 0x0BE0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_2;        // 0x0BF8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_FL_Vector_Multiply_Float_ReturnValue_1;   // 0x0C10(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_3;        // 0x0C28(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x0C40(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Wave;                           // 0x0C58(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C5C[0x4];                                      // 0x0C5C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Chrono;                         // 0x0C60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_2;                 // 0x0C68(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_2;            // 0x0D50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D51[0x3];                                      // 0x0D51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0D54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0D58(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_2;            // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_2;         // 0x0D61(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D62[0x2];                                      // 0x0D62(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_2;                    // 0x0D64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_2;                // 0x0D68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D6C[0x4];                                      // 0x0D6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_2;                // 0x0D70(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_2;             // 0x0D88(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_2;                  // 0x0DA0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_2;            // 0x0DB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_2;                 // 0x0DD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_2;                // 0x0DD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_2;            // 0x0DE0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_2;             // 0x0DE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_2;                // 0x0DF0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_2;                 // 0x0DF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_2;            // 0x0DFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_2;               // 0x0E00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E04[0x4];                                      // 0x0E04(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_2;              // 0x0E08(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_2;                // 0x0E20(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue;          // 0x0E38(0x0018)()
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0E50(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit_3;                 // 0x0E68(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue_3;            // 0x0F50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F51[0x3];                                      // 0x0F51(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Multiply_IntInt_ReturnValue;              // 0x0F54(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit_3;            // 0x0F58(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap_3;         // 0x0F59(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F5A[0x2];                                      // 0x0F5A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time_3;                    // 0x0F5C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance_3;                // 0x0F60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F64[0x4];                                      // 0x0F64(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location_3;                // 0x0F68(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint_3;             // 0x0F80(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal_3;                  // 0x0F98(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal_3;            // 0x0FB0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat_3;                 // 0x0FC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor_3;                // 0x0FD0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent_3;            // 0x0FD8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName_3;             // 0x0FE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName_3;                // 0x0FE8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem_3;                 // 0x0FF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex_3;            // 0x0FF4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex_3;               // 0x0FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFC[0x4];                                      // 0x0FFC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart_3;              // 0x1000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd_3;                // 0x1018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x1030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_FindLookAtRotation_ReturnValue_1;         // 0x1048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x1060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x1064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x1068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x106C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x1070(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1088[0x8];                                     // 0x1088(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x1090(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x10F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F1[0x7];                                     // 0x10F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3; // 0x10F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AZombie_C*                              CallFunc_FinishSpawningActor_ReturnValue_3;        // 0x1100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x1108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x110C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_110D[0x3];                                     // 0x110D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Kill_;                                // 0x1110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x1114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1115[0x3];                                     // 0x1115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_Death;                                // 0x1118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Set;                                  // 0x111C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111D[0x3];                                     // 0x111D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_Kill;                           // 0x1120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1124[0x4];                                     // 0x1124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_3;               // 0x1128(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie_3;                  // 0x1130(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x1138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1139[0x7];                                     // 0x1139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FInputActionValue                      K2Node_EnhancedInputActionEvent_ActionValue_1;     // 0x1140(0x0020)(NoDestructor)
	float                                         K2Node_EnhancedInputActionEvent_ElapsedTime_1;     // 0x1160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_EnhancedInputActionEvent_TriggeredTime_1;   // 0x1164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     K2Node_EnhancedInputActionEvent_SourceAction_1;    // 0x1168(0x0008)(ConstParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_2;                         // 0x1170(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x11B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x11B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x11B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11B6[0x2];                                     // 0x11B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x11B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats;                     // 0x11BC(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11CC[0x4];                                     // 0x11CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x11D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_1;                    // 0x11E0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x1220(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1221[0x7];                                     // 0x1221(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable_1_1;                            // 0x1228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Temp_real_Variable_1;                              // 0x1230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Conv_InputActionValueToBool_ReturnValue_1; // 0x1238(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1239[0x7];                                     // 0x1239(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_4;               // 0x1240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x1248(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x1258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1259[0x7];                                     // 0x1259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x1260(0x0010)(ReferenceParm)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_3;                         // 0x1270(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x12B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12B1[0x7];                                     // 0x12B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_1;             // 0x12B8(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue_2;             // 0x12D0(0x0018)()
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x12E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x12EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x12ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12EE[0x2];                                     // 0x12EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_5;               // 0x12F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie_4;                  // 0x12F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x1300(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1301[0x7];                                     // 0x1301(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x1308(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x1310(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x1318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1319[0x7];                                     // 0x1319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_4;                         // 0x1320(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x1360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x1364(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1365[0x3];                                     // 0x1365(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats_1;                   // 0x1368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_2;                    // 0x1378(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x13B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x13BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x13BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13BE[0x2];                                     // 0x13BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UHUD_ScoreBoardMenu_C*                  CallFunc_Create_ReturnValue_3;                     // 0x13C0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	TArray<class USpectatorHud_C*>                CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x13C8(0x0010)(ReferenceParm, ContainsInstancedReference)
	class USpectatorHud_C*                        CallFunc_Array_Get_Item_5;                         // 0x13D8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x13E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x13E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13E5[0x3];                                     // 0x13E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x13E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_13EC[0x4];                                     // 0x13EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_6;                         // 0x13F0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_MakeStruct_STR_PCInfo_3;                    // 0x1430(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x1470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         CallFunc_MakeLiteralByte_ReturnValue;              // 0x1471(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1472[0x6];                                     // 0x1472(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_6;               // 0x1478(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_zombie_C*                           K2Node_DynamicCast_AsGT_Zombie_5;                  // 0x1480(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x1488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1489[0x7];                                     // 0x1489(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_K2_GetPawn_ReturnValue_4;                 // 0x1490(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_2;  // 0x1498(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x14A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x14A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A2[0x6];                                     // 0x14A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_IsDead_self_CastInput;                    // 0x14A8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x14B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14B9[0x7];                                     // 0x14B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_RespawnCloseToFriend_FarestTransform_return; // 0x14C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_SelectTransform_ReturnValue;              // 0x1520(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x1580(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x1598(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x15B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue_1;            // 0x15C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x15D0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI_1;                 // 0x1630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x1638(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1639[0x7];                                     // 0x1639(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4; // 0x1640(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_FinishSpawningActor_ReturnValue_4;        // 0x1648(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           K2Node_MakeStruct_STR_PCStats_2;                   // 0x1650(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x1660(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie) == 0x000010, "Wrong alignment on PC_Zombie_C_ExecuteUbergraph_PC_Zombie");
static_assert(sizeof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie) == 0x001670, "Wrong size on PC_Zombie_C_ExecuteUbergraph_PC_Zombie");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, EntryPoint) == 0x000000, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::EntryPoint' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetPawn_ReturnValue) == 0x000008, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsCamera) == 0x000010, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsCamera' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Create_ReturnValue) == 0x000020, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeTransform_ReturnValue) == 0x000030, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x000090, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FinishSpawningActor_ReturnValue) == 0x000098, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Conv_IntToText_ReturnValue) == 0x0000A0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeTransform_ReturnValue_1) == 0x0000C0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1) == 0x000120, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FinishSpawningActor_ReturnValue_1) == 0x000128, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FinishSpawningActor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_object_Variable) == 0x000130, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_Has_Been_Initd_Variable) == 0x000140, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_IsClosed_Variable) == 0x000141, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Loop_Counter_Variable) == 0x000144, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Loop_Counter_Variable_1) == 0x000148, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue) == 0x00014C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_1) == 0x000150, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_True_if_break_was_hit_Variable) == 0x000154, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Array_Index_Variable) == 0x000158, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Not_PreBool_ReturnValue) == 0x00015C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_object_Variable_1) == 0x000160, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Array_Index_Variable_1) == 0x000170, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Loop_Counter_Variable_2) == 0x000174, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_2) == 0x000178, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00017C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Array_Index_Variable_2) == 0x000180, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Not_PreBool_ReturnValue_1) == 0x000184, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Loop_Counter_Variable_3) == 0x000188, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Loop_Counter_Variable_4) == 0x00018C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_3) == 0x000190, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_4) == 0x000194, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_True_if_break_was_hit_Variable_2) == 0x000198, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_True_if_break_was_hit_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Array_Index_Variable_3) == 0x00019C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Not_PreBool_ReturnValue_2) == 0x0001A0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Not_PreBool_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Loop_Counter_Variable_5) == 0x0001A4, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_5) == 0x0001A8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Array_Index_Variable_4) == 0x0001AC, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_IsClosed_Variable_1) == 0x0001B0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_Has_Been_Initd_Variable_1) == 0x0001B1, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Xp) == 0x0001B4, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Xp' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Wave_1) == 0x0001B8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Wave_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_EN_WaveClass_1) == 0x0001BC, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_EN_WaveClass_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_On_) == 0x0001BD, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_On_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Wave) == 0x0001C0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Wave' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_EN_WaveClass) == 0x0001C4, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_EN_WaveClass' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Color) == 0x0001C8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Color' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_EmoteToPlay) == 0x0001D8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_EmoteToPlay' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_String) == 0x0001E0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Delay) == 0x0001F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_TimeCount) == 0x0001F8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_TimeCount' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_NewParam) == 0x000200, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Team) == 0x000218, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Selected_Level_Name) == 0x00021C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Index) == 0x000224, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Team_PlayerKilled_) == 0x000228, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_MilitaryIndex) == 0x00022C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_TerroristIndex) == 0x000230, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_TerroristIndex' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_WiiningTeam) == 0x000234, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_WiiningTeam' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Score) == 0x000238, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Win_) == 0x000240, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Win_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Slomo) == 0x000248, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Slomo' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_PlayerInfo) == 0x000250, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_SteamID) == 0x000298, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_SteamID' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Target_2) == 0x0002A8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Yes_) == 0x0002E8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Yes_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Target_1) == 0x0002F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Target) == 0x000330, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Gamemode) == 0x000370, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Gamemode' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_IsReady_) == 0x000371, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_IsReady_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_IsTalking) == 0x000372, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_IsTalking' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_PC) == 0x000378, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetAllActorsWithTag_OutActors) == 0x000380, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetAllActorsWithTag_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Pause_self_CastInput) == 0x000390, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Pause_self_CastInput' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Length_ReturnValue) == 0x0003A0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameState_ReturnValue) == 0x0003A8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsGT_Zombie) == 0x0003B0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsGT_Zombie' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_1) == 0x0003B8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsValid_ReturnValue) == 0x0003B9, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetSteamID_ReturnValue) == 0x0003C0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_RandomFloat_ReturnValue) == 0x0003C8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_RandomFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakSteamID_ReturnValue) == 0x0003D0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Conv_DoubleToString_ReturnValue) == 0x0003E0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Conv_DoubleToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsPackagedForDistribution_ReturnValue) == 0x0003F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsPackagedForDistribution_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_PCInfo) == 0x0003F8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_PCInfo' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_Item_Stats) == 0x000408, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_Item_Stats' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_SelectString_ReturnValue) == 0x000418, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_SelectString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameState_ReturnValue_1) == 0x000428, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsGT_Zombie_1) == 0x000430, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsGT_Zombie_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_2) == 0x000438, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_KickPlayer_ReturnValue) == 0x000439, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_KickPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000440, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Find_ReturnValue) == 0x000480, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeSteamID_ReturnValue) == 0x000488, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000490, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetSmallFriendAvatar_ReturnValue) == 0x000498, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetSmallFriendAvatar_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_object_Variable_2) == 0x0004A0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_MakeStruct_STR_PCInfo) == 0x0004B0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_MakeStruct_STR_PCInfo' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetAllActorsOfClass_OutActors) == 0x0004F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_AddUnique_ReturnValue) == 0x000500, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Length_ReturnValue_1) == 0x000504, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Greater_IntInt_ReturnValue) == 0x000508, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_object_Variable_3) == 0x000510, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Create_ReturnValue_1) == 0x000520, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Create_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameState_ReturnValue_2) == 0x000528, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameState_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsGT_Zombie_2) == 0x000530, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsGT_Zombie_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_3) == 0x000538, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetPawn_ReturnValue_1) == 0x000540, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetPawn_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_Variable) == 0x000548, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Length_ReturnValue_2) == 0x00054C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Less_IntInt_ReturnValue) == 0x000550, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_6) == 0x000554, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_real_Variable) == 0x000558, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FindBestSpawn_FarestTransform_return) == 0x000560, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FindBestSpawn_FarestTransform_return' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_NewRotation) == 0x0005C0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_NewRotation' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_Respawn_) == 0x0005D8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_Respawn_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_Destroy_) == 0x0005D9, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_Destroy_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0005E0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetActorForwardVector_ReturnValue) == 0x0005E8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetActorForwardVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000600, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_real_Variable_1) == 0x000618, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_RandomFloatInRange_ReturnValue) == 0x000620, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetPawn_ReturnValue_2) == 0x000628, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetPawn_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FL_Vector_Multiply_Float_ReturnValue) == 0x000630, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FL_Vector_Multiply_Float_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000648, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_VectorVector_ReturnValue) == 0x000660, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_object_Variable_4) == 0x000678, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_object_Variable_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_LineTraceSingle_OutHit) == 0x000680, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_LineTraceSingle_ReturnValue) == 0x000768, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_bBlockingHit) == 0x000769, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_bInitialOverlap) == 0x00076A, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Time) == 0x00076C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Distance) == 0x000770, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Location) == 0x000778, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ImpactPoint) == 0x000790, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Normal) == 0x0007A8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ImpactNormal) == 0x0007C0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_PhysMat) == 0x0007D8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitActor) == 0x0007E0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitComponent) == 0x0007E8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitBoneName) == 0x0007F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_BoneName) == 0x0007F8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitItem) == 0x000800, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ElementIndex) == 0x000804, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_FaceIndex) == 0x000808, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_TraceStart) == 0x000810, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_TraceEnd) == 0x000828, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000840, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_EnhancedInputActionEvent_ActionValue) == 0x000858, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_EnhancedInputActionEvent_ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_EnhancedInputActionEvent_ElapsedTime) == 0x000878, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_EnhancedInputActionEvent_ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_EnhancedInputActionEvent_TriggeredTime) == 0x00087C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_EnhancedInputActionEvent_TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_EnhancedInputActionEvent_SourceAction) == 0x000880, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_EnhancedInputActionEvent_SourceAction' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_LineTraceSingle_OutHit_1) == 0x000888, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_LineTraceSingle_OutHit_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_LineTraceSingle_ReturnValue_1) == 0x000970, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_LineTraceSingle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_bBlockingHit_1) == 0x000971, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_bBlockingHit_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_bInitialOverlap_1) == 0x000972, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_bInitialOverlap_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Time_1) == 0x000974, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Time_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Distance_1) == 0x000978, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Distance_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Location_1) == 0x000980, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Location_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ImpactPoint_1) == 0x000998, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ImpactPoint_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Normal_1) == 0x0009B0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Normal_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ImpactNormal_1) == 0x0009C8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ImpactNormal_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_PhysMat_1) == 0x0009E0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_PhysMat_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitActor_1) == 0x0009E8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitActor_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitComponent_1) == 0x0009F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitComponent_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitBoneName_1) == 0x0009F8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitBoneName_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_BoneName_1) == 0x000A00, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_BoneName_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitItem_1) == 0x000A08, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitItem_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ElementIndex_1) == 0x000A0C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ElementIndex_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_FaceIndex_1) == 0x000A10, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_FaceIndex_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_TraceStart_1) == 0x000A18, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_TraceStart_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_TraceEnd_1) == 0x000A30, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_TraceEnd_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_real_Variable_1_0) == 0x000A48, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_real_Variable_1_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000A50, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FindLookAtRotation_ReturnValue) == 0x000A68, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FindLookAtRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakRotator_Roll) == 0x000A80, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakRotator_Pitch) == 0x000A84, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakRotator_Yaw) == 0x000A88, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_real_Variable_0) == 0x000A90, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_real_Variable_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeRotator_ReturnValue) == 0x000A98, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Conv_InputActionValueToBool_ReturnValue) == 0x000AB0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Conv_InputActionValueToBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeTransform_ReturnValue_2) == 0x000AC0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2) == 0x000B20, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FinishSpawningActor_ReturnValue_2) == 0x000B28, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FinishSpawningActor_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsValid_ReturnValue_1) == 0x000B30, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Destroy_) == 0x000B31, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Destroy_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsValid_ReturnValue_2) == 0x000B32, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Array_Index_Variable_5) == 0x000B34, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Get_Item) == 0x000B38, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x000B40, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_4) == 0x000B48, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000B49, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_PossessedPawn) == 0x000B50, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_PossessedPawn' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1) == 0x000B58, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_5) == 0x000B60, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000B68, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_Remove_) == 0x000B80, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_Remove_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsValid_ReturnValue_3) == 0x000B81, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsValid_ReturnValue_4) == 0x000B82, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Create_ReturnValue_2) == 0x000B88, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Create_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_UnpossessedPawn) == 0x000B90, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_UnpossessedPawn' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_InputKeyEvent_Key) == 0x000B98, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_InputKeyEvent_Key' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000BB0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Get_Item_1) == 0x000BC0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Length_ReturnValue_3) == 0x000BC8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Less_IntInt_ReturnValue_1) == 0x000BCC, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_Has_Been_Initd_Variable_2) == 0x000BCD, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x000BD0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetPawn_ReturnValue_3) == 0x000BD8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetPawn_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetActorForwardVector_ReturnValue_1) == 0x000BE0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetActorForwardVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetActorLocation_ReturnValue_2) == 0x000BF8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetActorLocation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FL_Vector_Multiply_Float_ReturnValue_1) == 0x000C10, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FL_Vector_Multiply_Float_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetActorLocation_ReturnValue_3) == 0x000C28, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetActorLocation_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_VectorVector_ReturnValue_3) == 0x000C40, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_Wave) == 0x000C58, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_Wave' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_Chrono) == 0x000C60, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_Chrono' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_LineTraceSingle_OutHit_2) == 0x000C68, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_LineTraceSingle_OutHit_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_LineTraceSingle_ReturnValue_2) == 0x000D50, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_LineTraceSingle_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FTrunc_ReturnValue) == 0x000D54, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeTimespan_ReturnValue) == 0x000D58, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_bBlockingHit_2) == 0x000D60, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_bBlockingHit_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_bInitialOverlap_2) == 0x000D61, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_bInitialOverlap_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Time_2) == 0x000D64, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Time_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Distance_2) == 0x000D68, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Distance_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Location_2) == 0x000D70, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Location_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ImpactPoint_2) == 0x000D88, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ImpactPoint_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Normal_2) == 0x000DA0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Normal_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ImpactNormal_2) == 0x000DB8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ImpactNormal_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_PhysMat_2) == 0x000DD0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_PhysMat_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitActor_2) == 0x000DD8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitActor_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitComponent_2) == 0x000DE0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitComponent_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitBoneName_2) == 0x000DE8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitBoneName_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_BoneName_2) == 0x000DF0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_BoneName_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitItem_2) == 0x000DF8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitItem_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ElementIndex_2) == 0x000DFC, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ElementIndex_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_FaceIndex_2) == 0x000E00, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_FaceIndex_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_TraceStart_2) == 0x000E08, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_TraceStart_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_TraceEnd_2) == 0x000E20, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_TraceEnd_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_AsTimespan_Timespan_ReturnValue) == 0x000E38, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_AsTimespan_Timespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000E50, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_LineTraceSingle_OutHit_3) == 0x000E68, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_LineTraceSingle_OutHit_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_LineTraceSingle_ReturnValue_3) == 0x000F50, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_LineTraceSingle_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Multiply_IntInt_ReturnValue) == 0x000F54, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Multiply_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_bBlockingHit_3) == 0x000F58, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_bBlockingHit_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_bInitialOverlap_3) == 0x000F59, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_bInitialOverlap_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Time_3) == 0x000F5C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Time_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Distance_3) == 0x000F60, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Distance_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Location_3) == 0x000F68, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Location_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ImpactPoint_3) == 0x000F80, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ImpactPoint_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_Normal_3) == 0x000F98, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_Normal_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ImpactNormal_3) == 0x000FB0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ImpactNormal_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_PhysMat_3) == 0x000FC8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_PhysMat_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitActor_3) == 0x000FD0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitActor_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitComponent_3) == 0x000FD8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitComponent_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitBoneName_3) == 0x000FE0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitBoneName_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_BoneName_3) == 0x000FE8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_BoneName_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_HitItem_3) == 0x000FF0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_HitItem_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_ElementIndex_3) == 0x000FF4, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_ElementIndex_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_FaceIndex_3) == 0x000FF8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_FaceIndex_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_TraceStart_3) == 0x001000, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_TraceStart_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakHitResult_TraceEnd_3) == 0x001018, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakHitResult_TraceEnd_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_VectorVector_ReturnValue_5) == 0x001030, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FindLookAtRotation_ReturnValue_1) == 0x001048, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FindLookAtRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakRotator_Roll_1) == 0x001060, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakRotator_Pitch_1) == 0x001064, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakRotator_Yaw_1) == 0x001068, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Loop_Counter_Variable_6) == 0x00106C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeRotator_ReturnValue_1) == 0x001070, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeTransform_ReturnValue_3) == 0x001090, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Less_IntInt_ReturnValue_2) == 0x0010F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3) == 0x0010F8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FinishSpawningActor_ReturnValue_3) == 0x001100, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FinishSpawningActor_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_7) == 0x001108, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsValid_ReturnValue_5) == 0x00110C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Kill_) == 0x001110, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Kill_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_bool_IsClosed_Variable_2) == 0x001114, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Death) == 0x001118, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Death' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_Event_Set) == 0x00111C, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_Event_Set' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_CustomEvent_Kill) == 0x001120, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_CustomEvent_Kill' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameState_ReturnValue_3) == 0x001128, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameState_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsGT_Zombie_3) == 0x001130, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsGT_Zombie_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_6) == 0x001138, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_EnhancedInputActionEvent_ActionValue_1) == 0x001140, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_EnhancedInputActionEvent_ActionValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_EnhancedInputActionEvent_ElapsedTime_1) == 0x001160, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_EnhancedInputActionEvent_ElapsedTime_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_EnhancedInputActionEvent_TriggeredTime_1) == 0x001164, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_EnhancedInputActionEvent_TriggeredTime_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_EnhancedInputActionEvent_SourceAction_1) == 0x001168, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_EnhancedInputActionEvent_SourceAction_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Get_Item_2) == 0x001170, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Length_ReturnValue_4) == 0x0011B0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Less_IntInt_ReturnValue_3) == 0x0011B4, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BooleanAND_ReturnValue) == 0x0011B5, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_8) == 0x0011B8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_MakeStruct_STR_PCStats) == 0x0011BC, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_MakeStruct_STR_PCStats' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Conv_IntToString_ReturnValue) == 0x0011D0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_MakeStruct_STR_PCInfo_1) == 0x0011E0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_MakeStruct_STR_PCInfo_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x001220, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_real_Variable_1_1) == 0x001228, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_real_Variable_1_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_real_Variable_1) == 0x001230, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Conv_InputActionValueToBool_ReturnValue_1) == 0x001238, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Conv_InputActionValueToBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameState_ReturnValue_4) == 0x001240, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameState_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsBodycam_Interface) == 0x001248, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_7) == 0x001258, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetPlayerConnected_PlayerConnected) == 0x001260, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Get_Item_3) == 0x001270, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x0012B0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Conv_IntToText_ReturnValue_1) == 0x0012B8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Conv_IntToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Conv_IntToText_ReturnValue_2) == 0x0012D0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Conv_IntToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Length_ReturnValue_5) == 0x0012E8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Less_IntInt_ReturnValue_4) == 0x0012EC, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BooleanAND_ReturnValue_1) == 0x0012ED, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameState_ReturnValue_5) == 0x0012F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameState_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsGT_Zombie_4) == 0x0012F8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsGT_Zombie_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_8) == 0x001300, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameInstance_ReturnValue) == 0x001308, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsBodycam_GI) == 0x001310, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_9) == 0x001318, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Get_Item_4) == 0x001320, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Add_IntInt_ReturnValue_9) == 0x001360, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x001364, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_MakeStruct_STR_PCStats_1) == 0x001368, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_MakeStruct_STR_PCStats_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_MakeStruct_STR_PCInfo_2) == 0x001378, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_MakeStruct_STR_PCInfo_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Length_ReturnValue_6) == 0x0013B8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Less_IntInt_ReturnValue_5) == 0x0013BC, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BooleanAND_ReturnValue_2) == 0x0013BD, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Create_ReturnValue_3) == 0x0013C0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Create_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x0013C8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Get_Item_5) == 0x0013D8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Length_ReturnValue_7) == 0x0013E0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Less_IntInt_ReturnValue_6) == 0x0013E4, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, Temp_int_Array_Index_Variable_6) == 0x0013E8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_Array_Get_Item_6) == 0x0013F0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_MakeStruct_STR_PCInfo_3) == 0x001430, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_MakeStruct_STR_PCInfo_3' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x001470, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeLiteralByte_ReturnValue) == 0x001471, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeLiteralByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameState_ReturnValue_6) == 0x001478, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameState_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsGT_Zombie_5) == 0x001480, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsGT_Zombie_5' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_10) == 0x001488, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_K2_GetPawn_ReturnValue_4) == 0x001490, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_K2_GetPawn_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_2) == 0x001498, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_11) == 0x0014A0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_SwitchEnum_CmpSuccess) == 0x0014A1, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsDead_self_CastInput) == 0x0014A8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_IsDead_Dead_) == 0x0014B8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_RespawnCloseToFriend_FarestTransform_return) == 0x0014C0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_RespawnCloseToFriend_FarestTransform_return' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_SelectTransform_ReturnValue) == 0x001520, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_SelectTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakTransform_Location) == 0x001580, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakTransform_Rotation) == 0x001598, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BreakTransform_Scale) == 0x0015B0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_GetGameInstance_ReturnValue_1) == 0x0015C8, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_GetGameInstance_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_MakeTransform_ReturnValue_4) == 0x0015D0, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_AsBodycam_GI_1) == 0x001630, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_AsBodycam_GI_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_DynamicCast_bSuccess_12) == 0x001638, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4) == 0x001640, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_FinishSpawningActor_ReturnValue_4) == 0x001648, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_FinishSpawningActor_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, K2Node_MakeStruct_STR_PCStats_2) == 0x001650, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::K2Node_MakeStruct_STR_PCStats_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_ExecuteUbergraph_PC_Zombie, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x001660, "Member 'PC_Zombie_C_ExecuteUbergraph_PC_Zombie::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.FindBestSpawn
// 0x0220 (0x0220 - 0x0000)
struct PC_Zombie_C_FindBestSpawn final
{
public:
	class FString                                 InputPin;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             FarestTransform_return;                            // 0x0010(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Spawn;                                             // 0x0070(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_Array_Random_OutItem;                     // 0x0098(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0xC];                                       // 0x00A4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0110(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0170(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_175[0x3];                                      // 0x0175(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_181[0x3];                                      // 0x0181(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x0188(0x0010)(ReferenceParm)
	class AActor*                                 CallFunc_Array_Get_Item;                           // 0x0198(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item_1;                         // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x01B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpawnValid_Valid_;                      // 0x0214(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_215[0x3];                                      // 0x0215(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0218(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x021C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x021D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_FindBestSpawn) == 0x000010, "Wrong alignment on PC_Zombie_C_FindBestSpawn");
static_assert(sizeof(PC_Zombie_C_FindBestSpawn) == 0x000220, "Wrong size on PC_Zombie_C_FindBestSpawn");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, InputPin) == 0x000000, "Member 'PC_Zombie_C_FindBestSpawn::InputPin' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, FarestTransform_return) == 0x000010, "Member 'PC_Zombie_C_FindBestSpawn::FarestTransform_return' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, Spawn) == 0x000070, "Member 'PC_Zombie_C_FindBestSpawn::Spawn' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Conv_StringToName_ReturnValue) == 0x000080, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, Temp_int_Loop_Counter_Variable) == 0x000088, "Member 'PC_Zombie_C_FindBestSpawn::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Add_IntInt_ReturnValue) == 0x00008C, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, Temp_int_Array_Index_Variable) == 0x000090, "Member 'PC_Zombie_C_FindBestSpawn::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Array_Random_OutItem) == 0x000098, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Array_Random_OutIndex) == 0x0000A0, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_GetTransform_ReturnValue) == 0x0000B0, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_MakeTransform_ReturnValue) == 0x000110, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, Temp_int_Loop_Counter_Variable_1) == 0x000170, "Member 'PC_Zombie_C_FindBestSpawn::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Greater_IntInt_ReturnValue) == 0x000174, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Add_IntInt_ReturnValue_1) == 0x000178, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Array_Length_ReturnValue) == 0x00017C, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Less_IntInt_ReturnValue) == 0x000180, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, Temp_int_Array_Index_Variable_1) == 0x000184, "Member 'PC_Zombie_C_FindBestSpawn::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_GetAllActorsOfClass_OutActors) == 0x000188, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Array_Get_Item) == 0x000198, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Array_Get_Item_1) == 0x0001A0, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_GetTransform_ReturnValue_1) == 0x0001B0, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Array_AddUnique_ReturnValue) == 0x000210, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_IsSpawnValid_Valid_) == 0x000214, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_IsSpawnValid_Valid_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Array_Length_ReturnValue_1) == 0x000218, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_EqualEqual_NameName_ReturnValue) == 0x00021C, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_FindBestSpawn, CallFunc_Less_IntInt_ReturnValue_1) == 0x00021D, "Member 'PC_Zombie_C_FindBestSpawn::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Get BP Menu Controller Component
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_Get_BP_Menu_Controller_Component final
{
public:
	class UBP_MenuControllerComponent_C*          BP_Menu_Controller_Component;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong alignment on PC_Zombie_C_Get_BP_Menu_Controller_Component");
static_assert(sizeof(PC_Zombie_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong size on PC_Zombie_C_Get_BP_Menu_Controller_Component");
static_assert(offsetof(PC_Zombie_C_Get_BP_Menu_Controller_Component, BP_Menu_Controller_Component) == 0x000000, "Member 'PC_Zombie_C_Get_BP_Menu_Controller_Component::BP_Menu_Controller_Component' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Get Stamina
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_Get_Stamina final
{
public:
	double                                        Stamina;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Get_Stamina) == 0x000008, "Wrong alignment on PC_Zombie_C_Get_Stamina");
static_assert(sizeof(PC_Zombie_C_Get_Stamina) == 0x000008, "Wrong size on PC_Zombie_C_Get_Stamina");
static_assert(offsetof(PC_Zombie_C_Get_Stamina, Stamina) == 0x000000, "Member 'PC_Zombie_C_Get_Stamina::Stamina' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetBlured
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_GetBlured final
{
public:
	double                                        Blured;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetBlured) == 0x000008, "Wrong alignment on PC_Zombie_C_GetBlured");
static_assert(sizeof(PC_Zombie_C_GetBlured) == 0x000008, "Wrong size on PC_Zombie_C_GetBlured");
static_assert(offsetof(PC_Zombie_C_GetBlured, Blured) == 0x000000, "Member 'PC_Zombie_C_GetBlured::Blured' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetBurnedRef
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_GetBurnedRef final
{
public:
	class USceneComponent*                        BurnedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetBurnedRef) == 0x000008, "Wrong alignment on PC_Zombie_C_GetBurnedRef");
static_assert(sizeof(PC_Zombie_C_GetBurnedRef) == 0x000008, "Wrong size on PC_Zombie_C_GetBurnedRef");
static_assert(offsetof(PC_Zombie_C_GetBurnedRef, BurnedMesh) == 0x000000, "Member 'PC_Zombie_C_GetBurnedRef::BurnedMesh' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetCurrentRank
// 0x0020 (0x0020 - 0x0000)
struct PC_Zombie_C_GetCurrentRank final
{
public:
	int32                                         RankScore;                                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Rank_;                                             // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   CurrentRank;                                       // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_GetCurrentRank) == 0x000008, "Wrong alignment on PC_Zombie_C_GetCurrentRank");
static_assert(sizeof(PC_Zombie_C_GetCurrentRank) == 0x000020, "Wrong size on PC_Zombie_C_GetCurrentRank");
static_assert(offsetof(PC_Zombie_C_GetCurrentRank, RankScore) == 0x000000, "Member 'PC_Zombie_C_GetCurrentRank::RankScore' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetCurrentRank, Rank_) == 0x000004, "Member 'PC_Zombie_C_GetCurrentRank::Rank_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetCurrentRank, CurrentRank) == 0x000008, "Member 'PC_Zombie_C_GetCurrentRank::CurrentRank' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetFlashBangEffect
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_GetFlashBangEffect final
{
public:
	double                                        FlashEffect;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetFlashBangEffect) == 0x000008, "Wrong alignment on PC_Zombie_C_GetFlashBangEffect");
static_assert(sizeof(PC_Zombie_C_GetFlashBangEffect) == 0x000008, "Wrong size on PC_Zombie_C_GetFlashBangEffect");
static_assert(offsetof(PC_Zombie_C_GetFlashBangEffect, FlashEffect) == 0x000000, "Member 'PC_Zombie_C_GetFlashBangEffect::FlashEffect' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetGameMode
// 0x0040 (0x0040 - 0x0000)
struct PC_Zombie_C_GetGameMode final
{
public:
	struct FSTR_GamemodeWinInfo                   GameMode;                                          // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetGameMode) == 0x000008, "Wrong alignment on PC_Zombie_C_GetGameMode");
static_assert(sizeof(PC_Zombie_C_GetGameMode) == 0x000040, "Wrong size on PC_Zombie_C_GetGameMode");
static_assert(offsetof(PC_Zombie_C_GetGameMode, GameMode) == 0x000000, "Member 'PC_Zombie_C_GetGameMode::GameMode' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_GetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetHealth) == 0x000008, "Wrong alignment on PC_Zombie_C_GetHealth");
static_assert(sizeof(PC_Zombie_C_GetHealth) == 0x000008, "Wrong size on PC_Zombie_C_GetHealth");
static_assert(offsetof(PC_Zombie_C_GetHealth, Health) == 0x000000, "Member 'PC_Zombie_C_GetHealth::Health' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetKickedPlayerVoted
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_GetKickedPlayerVoted final
{
public:
	TArray<class FString>                         KickplayerAlreadyVote;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_GetKickedPlayerVoted) == 0x000008, "Wrong alignment on PC_Zombie_C_GetKickedPlayerVoted");
static_assert(sizeof(PC_Zombie_C_GetKickedPlayerVoted) == 0x000010, "Wrong size on PC_Zombie_C_GetKickedPlayerVoted");
static_assert(offsetof(PC_Zombie_C_GetKickedPlayerVoted, KickplayerAlreadyVote) == 0x000000, "Member 'PC_Zombie_C_GetKickedPlayerVoted::KickplayerAlreadyVote' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetMenuSettings
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_GetMenuSettings final
{
public:
	class UBP_MenuControllerComponent_C*          Bp_MenuController;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetMenuSettings) == 0x000008, "Wrong alignment on PC_Zombie_C_GetMenuSettings");
static_assert(sizeof(PC_Zombie_C_GetMenuSettings) == 0x000008, "Wrong size on PC_Zombie_C_GetMenuSettings");
static_assert(offsetof(PC_Zombie_C_GetMenuSettings, Bp_MenuController) == 0x000000, "Member 'PC_Zombie_C_GetMenuSettings::Bp_MenuController' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_GetMutePlayer final
{
public:
	TArray<class FString>                         MutePlayer;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_GetMutePlayer) == 0x000008, "Wrong alignment on PC_Zombie_C_GetMutePlayer");
static_assert(sizeof(PC_Zombie_C_GetMutePlayer) == 0x000010, "Wrong size on PC_Zombie_C_GetMutePlayer");
static_assert(offsetof(PC_Zombie_C_GetMutePlayer, MutePlayer) == 0x000000, "Member 'PC_Zombie_C_GetMutePlayer::MutePlayer' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetNewRank
// 0x0060 (0x0060 - 0x0000)
struct PC_Zombie_C_GetNewRank final
{
public:
	class FText                                   Name_0;                                            // 0x0000(0x0018)(Parm, OutParm)
	class UTexture2D*                             Image;                                             // 0x0018(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         RankScore;                                         // 0x0020(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankPosition;                                      // 0x0024(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankDivision;                                      // 0x0028(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        PreviousRankProgress;                              // 0x0030(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RankProgress;                                      // 0x0038(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          NewRank_;                                          // 0x0040(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            Color;                                             // 0x0044(0x0014)(Parm, OutParm)
	int32                                         Rank_Integer;                                      // 0x0058(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetNewRank) == 0x000008, "Wrong alignment on PC_Zombie_C_GetNewRank");
static_assert(sizeof(PC_Zombie_C_GetNewRank) == 0x000060, "Wrong size on PC_Zombie_C_GetNewRank");
static_assert(offsetof(PC_Zombie_C_GetNewRank, Name_0) == 0x000000, "Member 'PC_Zombie_C_GetNewRank::Name_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, Image) == 0x000018, "Member 'PC_Zombie_C_GetNewRank::Image' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, RankScore) == 0x000020, "Member 'PC_Zombie_C_GetNewRank::RankScore' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, RankPosition) == 0x000024, "Member 'PC_Zombie_C_GetNewRank::RankPosition' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, RankDivision) == 0x000028, "Member 'PC_Zombie_C_GetNewRank::RankDivision' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, PreviousRankProgress) == 0x000030, "Member 'PC_Zombie_C_GetNewRank::PreviousRankProgress' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, RankProgress) == 0x000038, "Member 'PC_Zombie_C_GetNewRank::RankProgress' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, NewRank_) == 0x000040, "Member 'PC_Zombie_C_GetNewRank::NewRank_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, Color) == 0x000044, "Member 'PC_Zombie_C_GetNewRank::Color' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetNewRank, Rank_Integer) == 0x000058, "Member 'PC_Zombie_C_GetNewRank::Rank_Integer' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetPlayerConnected
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_GetPlayerConnected final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerConnected;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_GetPlayerConnected) == 0x000008, "Wrong alignment on PC_Zombie_C_GetPlayerConnected");
static_assert(sizeof(PC_Zombie_C_GetPlayerConnected) == 0x000010, "Wrong size on PC_Zombie_C_GetPlayerConnected");
static_assert(offsetof(PC_Zombie_C_GetPlayerConnected, PlayerConnected) == 0x000000, "Member 'PC_Zombie_C_GetPlayerConnected::PlayerConnected' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetPlayerKickVote
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_GetPlayerKickVote final
{
public:
	TArray<struct FSTR_KickVote>                  KickVotePlayer;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_GetPlayerKickVote) == 0x000008, "Wrong alignment on PC_Zombie_C_GetPlayerKickVote");
static_assert(sizeof(PC_Zombie_C_GetPlayerKickVote) == 0x000010, "Wrong size on PC_Zombie_C_GetPlayerKickVote");
static_assert(offsetof(PC_Zombie_C_GetPlayerKickVote, KickVotePlayer) == 0x000000, "Member 'PC_Zombie_C_GetPlayerKickVote::KickVotePlayer' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetPlayerSkin
// 0x02E8 (0x02E8 - 0x0000)
struct PC_Zombie_C_GetPlayerSkin final
{
public:
	struct FSTR_TEST                              Player_Skin;                                       // 0x0000(0x02E0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetPlayerSkin) == 0x000008, "Wrong alignment on PC_Zombie_C_GetPlayerSkin");
static_assert(sizeof(PC_Zombie_C_GetPlayerSkin) == 0x0002E8, "Wrong size on PC_Zombie_C_GetPlayerSkin");
static_assert(offsetof(PC_Zombie_C_GetPlayerSkin, Player_Skin) == 0x000000, "Member 'PC_Zombie_C_GetPlayerSkin::Player_Skin' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetPlayerSkin, Valid_) == 0x0002E0, "Member 'PC_Zombie_C_GetPlayerSkin::Valid_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetRagdollSystem
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_GetRagdollSystem final
{
public:
	class UWW_RagdollSystem_C*                    Ragdoll_System;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetRagdollSystem) == 0x000008, "Wrong alignment on PC_Zombie_C_GetRagdollSystem");
static_assert(sizeof(PC_Zombie_C_GetRagdollSystem) == 0x000008, "Wrong size on PC_Zombie_C_GetRagdollSystem");
static_assert(offsetof(PC_Zombie_C_GetRagdollSystem, Ragdoll_System) == 0x000000, "Member 'PC_Zombie_C_GetRagdollSystem::Ragdoll_System' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetReady?
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_GetReady_ final
{
public:
	bool                                          IsReady_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetReady_) == 0x000001, "Wrong alignment on PC_Zombie_C_GetReady_");
static_assert(sizeof(PC_Zombie_C_GetReady_) == 0x000001, "Wrong size on PC_Zombie_C_GetReady_");
static_assert(offsetof(PC_Zombie_C_GetReady_, IsReady_) == 0x000000, "Member 'PC_Zombie_C_GetReady_::IsReady_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetServerSteamID
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_GetServerSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetServerSteamID) == 0x000008, "Wrong alignment on PC_Zombie_C_GetServerSteamID");
static_assert(sizeof(PC_Zombie_C_GetServerSteamID) == 0x000010, "Wrong size on PC_Zombie_C_GetServerSteamID");
static_assert(offsetof(PC_Zombie_C_GetServerSteamID, SteamID) == 0x000000, "Member 'PC_Zombie_C_GetServerSteamID::SteamID' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetStarterWeapons
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_GetStarterWeapons final
{
public:
	TArray<struct FSTR_Actor>                     Weapons;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_GetStarterWeapons) == 0x000008, "Wrong alignment on PC_Zombie_C_GetStarterWeapons");
static_assert(sizeof(PC_Zombie_C_GetStarterWeapons) == 0x000010, "Wrong size on PC_Zombie_C_GetStarterWeapons");
static_assert(offsetof(PC_Zombie_C_GetStarterWeapons, Weapons) == 0x000000, "Member 'PC_Zombie_C_GetStarterWeapons::Weapons' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_GetSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetSteamID) == 0x000008, "Wrong alignment on PC_Zombie_C_GetSteamID");
static_assert(sizeof(PC_Zombie_C_GetSteamID) == 0x000010, "Wrong size on PC_Zombie_C_GetSteamID");
static_assert(offsetof(PC_Zombie_C_GetSteamID, SteamID) == 0x000000, "Member 'PC_Zombie_C_GetSteamID::SteamID' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetSurvivorStatuts
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_GetSurvivorStatuts final
{
public:
	class UWW_SurvivorStatus_C*                   SurvivorComponant;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetSurvivorStatuts) == 0x000008, "Wrong alignment on PC_Zombie_C_GetSurvivorStatuts");
static_assert(sizeof(PC_Zombie_C_GetSurvivorStatuts) == 0x000008, "Wrong size on PC_Zombie_C_GetSurvivorStatuts");
static_assert(offsetof(PC_Zombie_C_GetSurvivorStatuts, SurvivorComponant) == 0x000000, "Member 'PC_Zombie_C_GetSurvivorStatuts::SurvivorComponant' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetTeam
// 0x0098 (0x0098 - 0x0000)
struct PC_Zombie_C_GetTeam final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x2];                                        // 0x0002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_GetPlayerConnected_PlayerConnected;       // 0x0038(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0050(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_GetTeam) == 0x000008, "Wrong alignment on PC_Zombie_C_GetTeam");
static_assert(sizeof(PC_Zombie_C_GetTeam) == 0x000098, "Wrong size on PC_Zombie_C_GetTeam");
static_assert(offsetof(PC_Zombie_C_GetTeam, Team_0) == 0x000000, "Member 'PC_Zombie_C_GetTeam::Team_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, Temp_bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'PC_Zombie_C_GetTeam::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, Temp_int_Array_Index_Variable) == 0x000004, "Member 'PC_Zombie_C_GetTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'PC_Zombie_C_GetTeam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, Temp_int_Loop_Counter_Variable) == 0x00000C, "Member 'PC_Zombie_C_GetTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'PC_Zombie_C_GetTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'PC_Zombie_C_GetTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, K2Node_DynamicCast_AsBodycam_Interface) == 0x000020, "Member 'PC_Zombie_C_GetTeam::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PC_Zombie_C_GetTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_GetPlayerConnected_PlayerConnected) == 0x000038, "Member 'PC_Zombie_C_GetTeam::CallFunc_GetPlayerConnected_PlayerConnected' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_Array_Length_ReturnValue) == 0x000048, "Member 'PC_Zombie_C_GetTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_Array_Get_Item) == 0x000050, "Member 'PC_Zombie_C_GetTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_Less_IntInt_ReturnValue) == 0x000090, "Member 'PC_Zombie_C_GetTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_BooleanAND_ReturnValue) == 0x000091, "Member 'PC_Zombie_C_GetTeam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeam, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000092, "Member 'PC_Zombie_C_GetTeam::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetTeamList
// 0x0018 (0x0018 - 0x0000)
struct PC_Zombie_C_GetTeamList final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Info;                                              // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_GetTeamList) == 0x000008, "Wrong alignment on PC_Zombie_C_GetTeamList");
static_assert(sizeof(PC_Zombie_C_GetTeamList) == 0x000018, "Wrong size on PC_Zombie_C_GetTeamList");
static_assert(offsetof(PC_Zombie_C_GetTeamList, Team_0) == 0x000000, "Member 'PC_Zombie_C_GetTeamList::Team_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_GetTeamList, Info) == 0x000008, "Member 'PC_Zombie_C_GetTeamList::Info' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.GetTopScore
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_GetTopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScore;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_GetTopScore) == 0x000008, "Wrong alignment on PC_Zombie_C_GetTopScore");
static_assert(sizeof(PC_Zombie_C_GetTopScore) == 0x000010, "Wrong size on PC_Zombie_C_GetTopScore");
static_assert(offsetof(PC_Zombie_C_GetTopScore, TopScore) == 0x000000, "Member 'PC_Zombie_C_GetTopScore::TopScore' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.InpActEvt_Escape_K2Node_InputKeyEvent_0
// 0x0018 (0x0018 - 0x0000)
struct PC_Zombie_C_InpActEvt_Escape_K2Node_InputKeyEvent_0 final
{
public:
	struct FKey                                   Key;                                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000008, "Wrong alignment on PC_Zombie_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(sizeof(PC_Zombie_C_InpActEvt_Escape_K2Node_InputKeyEvent_0) == 0x000018, "Wrong size on PC_Zombie_C_InpActEvt_Escape_K2Node_InputKeyEvent_0");
static_assert(offsetof(PC_Zombie_C_InpActEvt_Escape_K2Node_InputKeyEvent_0, Key) == 0x000000, "Member 'PC_Zombie_C_InpActEvt_Escape_K2Node_InputKeyEvent_0::Key' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0
// 0x0030 (0x0030 - 0x0000)
struct PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0) == 0x000008, "Wrong alignment on PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0");
static_assert(sizeof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0) == 0x000030, "Wrong size on PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0");
static_assert(offsetof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0, ActionValue) == 0x000000, "Member 'PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0::ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0, ElapsedTime) == 0x000020, "Member 'PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0::ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0, TriggeredTime) == 0x000024, "Member 'PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0::TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0, SourceAction) == 0x000028, "Member 'PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_0::SourceAction' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1
// 0x0030 (0x0030 - 0x0000)
struct PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1 final
{
public:
	struct FInputActionValue                      ActionValue;                                       // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	float                                         ElapsedTime;                                       // 0x0020(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         TriggeredTime;                                     // 0x0024(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	const class UInputAction*                     SourceAction;                                      // 0x0028(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1) == 0x000008, "Wrong alignment on PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1");
static_assert(sizeof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1) == 0x000030, "Wrong size on PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1");
static_assert(offsetof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1, ActionValue) == 0x000000, "Member 'PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1::ActionValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1, ElapsedTime) == 0x000020, "Member 'PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1::ElapsedTime' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1, TriggeredTime) == 0x000024, "Member 'PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1::TriggeredTime' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1, SourceAction) == 0x000028, "Member 'PC_Zombie_C_InpActEvt_IA_Score_K2Node_EnhancedInputActionEvent_1::SourceAction' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_IsDead final
{
public:
	bool                                          Dead_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_IsDead) == 0x000001, "Wrong alignment on PC_Zombie_C_IsDead");
static_assert(sizeof(PC_Zombie_C_IsDead) == 0x000001, "Wrong size on PC_Zombie_C_IsDead");
static_assert(offsetof(PC_Zombie_C_IsDead, Dead_) == 0x000000, "Member 'PC_Zombie_C_IsDead::Dead_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.IsDestroyabe?
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_IsDestroyabe_ final
{
public:
	bool                                          Destroyable_;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_IsDestroyabe_) == 0x000001, "Wrong alignment on PC_Zombie_C_IsDestroyabe_");
static_assert(sizeof(PC_Zombie_C_IsDestroyabe_) == 0x000001, "Wrong size on PC_Zombie_C_IsDestroyabe_");
static_assert(offsetof(PC_Zombie_C_IsDestroyabe_, Destroyable_) == 0x000000, "Member 'PC_Zombie_C_IsDestroyabe_::Destroyable_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.IsReady?
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_IsReady_ final
{
public:
	bool                                          IsReady__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_IsReady_) == 0x000001, "Wrong alignment on PC_Zombie_C_IsReady_");
static_assert(sizeof(PC_Zombie_C_IsReady_) == 0x000001, "Wrong size on PC_Zombie_C_IsReady_");
static_assert(offsetof(PC_Zombie_C_IsReady_, IsReady__0) == 0x000000, "Member 'PC_Zombie_C_IsReady_::IsReady__0' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.IsSpawnValid
// 0x01D0 (0x01D0 - 0x0000)
struct PC_Zombie_C_IsSpawnValid final
{
public:
	struct FTransform                             Spawn_Transform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_IsDead_self_CastInput;                    // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_102[0xE];                                      // 0x0102(0x000E)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0110(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_Distance_ReturnValue;              // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_IsSpawnValid) == 0x000010, "Wrong alignment on PC_Zombie_C_IsSpawnValid");
static_assert(sizeof(PC_Zombie_C_IsSpawnValid) == 0x0001D0, "Wrong size on PC_Zombie_C_IsSpawnValid");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, Spawn_Transform) == 0x000000, "Member 'PC_Zombie_C_IsSpawnValid::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, Valid_) == 0x000060, "Member 'PC_Zombie_C_IsSpawnValid::Valid_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, IsLocked) == 0x000061, "Member 'PC_Zombie_C_IsSpawnValid::IsLocked' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_BreakTransform_Location) == 0x000068, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_BreakTransform_Rotation) == 0x000080, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, Temp_bool_True_if_break_was_hit_Variable) == 0x0000B0, "Member 'PC_Zombie_C_IsSpawnValid::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'PC_Zombie_C_IsSpawnValid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'PC_Zombie_C_IsSpawnValid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C0, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C8, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_IsDead_self_CastInput) == 0x0000F0, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_IsDead_self_CastInput' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_IsDead_Dead_) == 0x000100, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_BooleanAND_ReturnValue) == 0x000101, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_GetTransform_ReturnValue) == 0x000110, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_BreakTransform_Location_1) == 0x000170, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_BreakTransform_Rotation_1) == 0x000188, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_BreakTransform_Scale_1) == 0x0001A0, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_Vector_Distance_ReturnValue) == 0x0001B8, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_Vector_Distance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_IsSpawnValid, CallFunc_Less_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'PC_Zombie_C_IsSpawnValid::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.IsStress
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_IsStress final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_IsStress) == 0x000001, "Wrong alignment on PC_Zombie_C_IsStress");
static_assert(sizeof(PC_Zombie_C_IsStress) == 0x000001, "Wrong size on PC_Zombie_C_IsStress");
static_assert(offsetof(PC_Zombie_C_IsStress, Yes_) == 0x000000, "Member 'PC_Zombie_C_IsStress::Yes_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.IsTalking?
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_IsTalking_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_IsTalking_) == 0x000001, "Wrong alignment on PC_Zombie_C_IsTalking_");
static_assert(sizeof(PC_Zombie_C_IsTalking_) == 0x000001, "Wrong size on PC_Zombie_C_IsTalking_");
static_assert(offsetof(PC_Zombie_C_IsTalking_, IsTalking__0) == 0x000000, "Member 'PC_Zombie_C_IsTalking_::IsTalking__0' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Kick?
// 0x0040 (0x0040 - 0x0000)
struct PC_Zombie_C_Kick_ final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Kick_) == 0x000008, "Wrong alignment on PC_Zombie_C_Kick_");
static_assert(sizeof(PC_Zombie_C_Kick_) == 0x000040, "Wrong size on PC_Zombie_C_Kick_");
static_assert(offsetof(PC_Zombie_C_Kick_, Target) == 0x000000, "Member 'PC_Zombie_C_Kick_::Target' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.KickPlayer
// 0x0048 (0x0048 - 0x0000)
struct PC_Zombie_C_KickPlayer final
{
public:
	struct FSTR_KickVote                          PlayerInfo;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_KickPlayer) == 0x000008, "Wrong alignment on PC_Zombie_C_KickPlayer");
static_assert(sizeof(PC_Zombie_C_KickPlayer) == 0x000048, "Wrong size on PC_Zombie_C_KickPlayer");
static_assert(offsetof(PC_Zombie_C_KickPlayer, PlayerInfo) == 0x000000, "Member 'PC_Zombie_C_KickPlayer::PlayerInfo' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MSG_AVP_GetPlayerUsername
// 0x0020 (0x0020 - 0x0000)
struct PC_Zombie_C_MSG_AVP_GetPlayerUsername final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Username;                                          // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_MSG_AVP_GetPlayerUsername) == 0x000008, "Wrong alignment on PC_Zombie_C_MSG_AVP_GetPlayerUsername");
static_assert(sizeof(PC_Zombie_C_MSG_AVP_GetPlayerUsername) == 0x000020, "Wrong size on PC_Zombie_C_MSG_AVP_GetPlayerUsername");
static_assert(offsetof(PC_Zombie_C_MSG_AVP_GetPlayerUsername, Success_) == 0x000000, "Member 'PC_Zombie_C_MSG_AVP_GetPlayerUsername::Success_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_MSG_AVP_GetPlayerUsername, Username) == 0x000008, "Member 'PC_Zombie_C_MSG_AVP_GetPlayerUsername::Username' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MSG_AVP_GetWidgetVoice
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_MSG_AVP_GetWidgetVoice final
{
public:
	class UWidgetComponent*                       WidgetVoiceRef;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_MSG_AVP_GetWidgetVoice) == 0x000008, "Wrong alignment on PC_Zombie_C_MSG_AVP_GetWidgetVoice");
static_assert(sizeof(PC_Zombie_C_MSG_AVP_GetWidgetVoice) == 0x000008, "Wrong size on PC_Zombie_C_MSG_AVP_GetWidgetVoice");
static_assert(offsetof(PC_Zombie_C_MSG_AVP_GetWidgetVoice, WidgetVoiceRef) == 0x000000, "Member 'PC_Zombie_C_MSG_AVP_GetWidgetVoice::WidgetVoiceRef' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MSG_ChatGetConnectedPlayers
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_MSG_ChatGetConnectedPlayers final
{
public:
	TArray<class AController*>                    Players;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_MSG_ChatGetConnectedPlayers) == 0x000008, "Wrong alignment on PC_Zombie_C_MSG_ChatGetConnectedPlayers");
static_assert(sizeof(PC_Zombie_C_MSG_ChatGetConnectedPlayers) == 0x000010, "Wrong size on PC_Zombie_C_MSG_ChatGetConnectedPlayers");
static_assert(offsetof(PC_Zombie_C_MSG_ChatGetConnectedPlayers, Players) == 0x000000, "Member 'PC_Zombie_C_MSG_ChatGetConnectedPlayers::Players' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MSG_ChatGetPlayerID
// 0x0004 (0x0004 - 0x0000)
struct PC_Zombie_C_MSG_ChatGetPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_MSG_ChatGetPlayerID) == 0x000004, "Wrong alignment on PC_Zombie_C_MSG_ChatGetPlayerID");
static_assert(sizeof(PC_Zombie_C_MSG_ChatGetPlayerID) == 0x000004, "Wrong size on PC_Zombie_C_MSG_ChatGetPlayerID");
static_assert(offsetof(PC_Zombie_C_MSG_ChatGetPlayerID, PlayerID) == 0x000000, "Member 'PC_Zombie_C_MSG_ChatGetPlayerID::PlayerID' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MSG_ChatGetTeamID
// 0x0004 (0x0004 - 0x0000)
struct PC_Zombie_C_MSG_ChatGetTeamID final
{
public:
	int32                                         TeamID;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_MSG_ChatGetTeamID) == 0x000004, "Wrong alignment on PC_Zombie_C_MSG_ChatGetTeamID");
static_assert(sizeof(PC_Zombie_C_MSG_ChatGetTeamID) == 0x000004, "Wrong size on PC_Zombie_C_MSG_ChatGetTeamID");
static_assert(offsetof(PC_Zombie_C_MSG_ChatGetTeamID, TeamID) == 0x000000, "Member 'PC_Zombie_C_MSG_ChatGetTeamID::TeamID' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MSG_ChatGetUsername
// 0x0020 (0x0020 - 0x0000)
struct PC_Zombie_C_MSG_ChatGetUsername final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Username;                                          // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(PC_Zombie_C_MSG_ChatGetUsername) == 0x000008, "Wrong alignment on PC_Zombie_C_MSG_ChatGetUsername");
static_assert(sizeof(PC_Zombie_C_MSG_ChatGetUsername) == 0x000020, "Wrong size on PC_Zombie_C_MSG_ChatGetUsername");
static_assert(offsetof(PC_Zombie_C_MSG_ChatGetUsername, Success_) == 0x000000, "Member 'PC_Zombie_C_MSG_ChatGetUsername::Success_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_MSG_ChatGetUsername, Username) == 0x000008, "Member 'PC_Zombie_C_MSG_ChatGetUsername::Username' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MSG_ChatPlayEmote
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_MSG_ChatPlayEmote final
{
public:
	E_Emote                                       EmoteToPlay;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_MSG_ChatPlayEmote) == 0x000001, "Wrong alignment on PC_Zombie_C_MSG_ChatPlayEmote");
static_assert(sizeof(PC_Zombie_C_MSG_ChatPlayEmote) == 0x000001, "Wrong size on PC_Zombie_C_MSG_ChatPlayEmote");
static_assert(offsetof(PC_Zombie_C_MSG_ChatPlayEmote, EmoteToPlay) == 0x000000, "Member 'PC_Zombie_C_MSG_ChatPlayEmote::EmoteToPlay' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MSG_ChatRequestPlayerID
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_MSG_ChatRequestPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_MSG_ChatRequestPlayerID) == 0x000004, "Wrong alignment on PC_Zombie_C_MSG_ChatRequestPlayerID");
static_assert(sizeof(PC_Zombie_C_MSG_ChatRequestPlayerID) == 0x000008, "Wrong size on PC_Zombie_C_MSG_ChatRequestPlayerID");
static_assert(offsetof(PC_Zombie_C_MSG_ChatRequestPlayerID, PlayerID) == 0x000000, "Member 'PC_Zombie_C_MSG_ChatRequestPlayerID::PlayerID' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_MSG_ChatRequestPlayerID, Success_) == 0x000004, "Member 'PC_Zombie_C_MSG_ChatRequestPlayerID::Success_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.MuteID
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_MuteID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_MuteID) == 0x000008, "Wrong alignment on PC_Zombie_C_MuteID");
static_assert(sizeof(PC_Zombie_C_MuteID) == 0x000010, "Wrong size on PC_Zombie_C_MuteID");
static_assert(offsetof(PC_Zombie_C_MuteID, SteamID) == 0x000000, "Member 'PC_Zombie_C_MuteID::SteamID' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.NewKickVote
// 0x0040 (0x0040 - 0x0000)
struct PC_Zombie_C_NewKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_NewKickVote) == 0x000008, "Wrong alignment on PC_Zombie_C_NewKickVote");
static_assert(sizeof(PC_Zombie_C_NewKickVote) == 0x000040, "Wrong size on PC_Zombie_C_NewKickVote");
static_assert(offsetof(PC_Zombie_C_NewKickVote, Target) == 0x000000, "Member 'PC_Zombie_C_NewKickVote::Target' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.NewWaves
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_NewWaves final
{
public:
	int32                                         Wave_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  EN_WaveClass;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_NewWaves) == 0x000004, "Wrong alignment on PC_Zombie_C_NewWaves");
static_assert(sizeof(PC_Zombie_C_NewWaves) == 0x000008, "Wrong size on PC_Zombie_C_NewWaves");
static_assert(offsetof(PC_Zombie_C_NewWaves, Wave_0) == 0x000000, "Member 'PC_Zombie_C_NewWaves::Wave_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_NewWaves, EN_WaveClass) == 0x000004, "Member 'PC_Zombie_C_NewWaves::EN_WaveClass' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.OnPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_OnPlayerDeath final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_OnPlayerDeath) == 0x000008, "Wrong alignment on PC_Zombie_C_OnPlayerDeath");
static_assert(sizeof(PC_Zombie_C_OnPlayerDeath) == 0x000008, "Wrong size on PC_Zombie_C_OnPlayerDeath");
static_assert(offsetof(PC_Zombie_C_OnPlayerDeath, PC) == 0x000000, "Member 'PC_Zombie_C_OnPlayerDeath::PC' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.OnTrySelectTeam
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_OnTrySelectTeam final
{
public:
	E_Team                                        Team_0;                                            // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_OnTrySelectTeam) == 0x000001, "Wrong alignment on PC_Zombie_C_OnTrySelectTeam");
static_assert(sizeof(PC_Zombie_C_OnTrySelectTeam) == 0x000001, "Wrong size on PC_Zombie_C_OnTrySelectTeam");
static_assert(offsetof(PC_Zombie_C_OnTrySelectTeam, Team_0) == 0x000000, "Member 'PC_Zombie_C_OnTrySelectTeam::Team_0' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.ReceivePossess
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_ReceivePossess final
{
public:
	class APawn*                                  PossessedPawn;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_ReceivePossess) == 0x000008, "Wrong alignment on PC_Zombie_C_ReceivePossess");
static_assert(sizeof(PC_Zombie_C_ReceivePossess) == 0x000008, "Wrong size on PC_Zombie_C_ReceivePossess");
static_assert(offsetof(PC_Zombie_C_ReceivePossess, PossessedPawn) == 0x000000, "Member 'PC_Zombie_C_ReceivePossess::PossessedPawn' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.ReceiveUnPossess
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_ReceiveUnPossess final
{
public:
	class APawn*                                  UnpossessedPawn;                                   // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_ReceiveUnPossess) == 0x000008, "Wrong alignment on PC_Zombie_C_ReceiveUnPossess");
static_assert(sizeof(PC_Zombie_C_ReceiveUnPossess) == 0x000008, "Wrong size on PC_Zombie_C_ReceiveUnPossess");
static_assert(offsetof(PC_Zombie_C_ReceiveUnPossess, UnpossessedPawn) == 0x000000, "Member 'PC_Zombie_C_ReceiveUnPossess::UnpossessedPawn' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Respawn (Server)
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_Respawn__Server_ final
{
public:
	bool                                          Respawn_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Respawn__Server_) == 0x000001, "Wrong alignment on PC_Zombie_C_Respawn__Server_");
static_assert(sizeof(PC_Zombie_C_Respawn__Server_) == 0x000001, "Wrong size on PC_Zombie_C_Respawn__Server_");
static_assert(offsetof(PC_Zombie_C_Respawn__Server_, Respawn_) == 0x000000, "Member 'PC_Zombie_C_Respawn__Server_::Respawn_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.RespawnCloseToFriend
// 0x0380 (0x0380 - 0x0000)
struct PC_Zombie_C_RespawnCloseToFriend final
{
public:
	struct FTransform                             FarestTransform_return;                            // 0x0000(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             PlayerFriends;                                     // 0x0060(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Spawn;                                             // 0x0068(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0xC];                                       // 0x0084(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors;            // 0x00F8(0x0010)(ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Random_OutItem;                     // 0x0120(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12C[0x4];                                      // 0x012C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X;                            // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_149[0x7];                                      // 0x0149(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0150(0x0010)(ReferenceParm)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Random_OutItem_1;                   // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0168(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16C[0x4];                                      // 0x016C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue_1;        // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_FindNearestActor_Distance;                // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_FindNearestActor_ReturnValue;             // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x0198(0x0010)(ReferenceParm)
	uint8                                         Pad_1A8[0x8];                                      // 0x01A8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x01B0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x0210(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_218[0x8];                                      // 0x0218(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_2;               // 0x0220(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0288(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x02B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UNavigationPath*                        CallFunc_FindPathToLocationSynchronously_ReturnValue; // 0x0330(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0348(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Array_Get_Item_1;                         // 0x0350(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x0368(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsSpawnValid_Valid_;                      // 0x0369(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_36A[0x2];                                      // 0x036A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x036C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_RespawnCloseToFriend) == 0x000010, "Wrong alignment on PC_Zombie_C_RespawnCloseToFriend");
static_assert(sizeof(PC_Zombie_C_RespawnCloseToFriend) == 0x000380, "Wrong size on PC_Zombie_C_RespawnCloseToFriend");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, FarestTransform_return) == 0x000000, "Member 'PC_Zombie_C_RespawnCloseToFriend::FarestTransform_return' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, PlayerFriends) == 0x000060, "Member 'PC_Zombie_C_RespawnCloseToFriend::PlayerFriends' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, Spawn) == 0x000068, "Member 'PC_Zombie_C_RespawnCloseToFriend::Spawn' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, Temp_int_Array_Index_Variable) == 0x000078, "Member 'PC_Zombie_C_RespawnCloseToFriend::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, Temp_int_Loop_Counter_Variable) == 0x00007C, "Member 'PC_Zombie_C_RespawnCloseToFriend::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Add_IntInt_ReturnValue) == 0x000080, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_IsEmpty_ReturnValue) == 0x0000F0, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000F8, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000108, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_Random_OutItem) == 0x000120, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_Random_OutIndex) == 0x000128, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakVector_X) == 0x000130, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakVector_Y) == 0x000138, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakVector_Z) == 0x000140, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_IsValid_ReturnValue) == 0x000148, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000150, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_Random_OutItem_1) == 0x000160, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_Random_OutIndex_1) == 0x000168, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_K2_GetActorLocation_ReturnValue_1) == 0x000170, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_K2_GetActorLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_FindNearestActor_Distance) == 0x000188, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_FindNearestActor_Distance' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_FindNearestActor_ReturnValue) == 0x000190, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_FindNearestActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x000198, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_GetTransform_ReturnValue_1) == 0x0001B0, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_Get_Item) == 0x000210, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_GetTransform_ReturnValue_2) == 0x000220, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_GetTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_AddUnique_ReturnValue) == 0x000280, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakTransform_Location) == 0x000288, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakTransform_Rotation) == 0x0002A0, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakTransform_Scale) == 0x0002B8, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakTransform_Location_1) == 0x0002D0, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakTransform_Rotation_1) == 0x0002E8, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakTransform_Scale_1) == 0x000300, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakVector_X_1) == 0x000318, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakVector_Y_1) == 0x000320, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_BreakVector_Z_1) == 0x000328, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_FindPathToLocationSynchronously_ReturnValue) == 0x000330, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_FindPathToLocationSynchronously_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000338, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Abs_ReturnValue) == 0x000340, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_LastIndex_ReturnValue) == 0x000348, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Less_DoubleDouble_ReturnValue) == 0x00034C, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_Get_Item_1) == 0x000350, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x000368, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_IsSpawnValid_Valid_) == 0x000369, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_IsSpawnValid_Valid_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Array_Length_ReturnValue) == 0x00036C, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_EqualEqual_NameName_ReturnValue) == 0x000370, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_RespawnCloseToFriend, CallFunc_Less_IntInt_ReturnValue) == 0x000371, "Member 'PC_Zombie_C_RespawnCloseToFriend::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Screamer (Client)
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_Screamer__Client_ final
{
public:
	bool                                          Destroy_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Screamer__Client_) == 0x000001, "Wrong alignment on PC_Zombie_C_Screamer__Client_");
static_assert(sizeof(PC_Zombie_C_Screamer__Client_) == 0x000001, "Wrong size on PC_Zombie_C_Screamer__Client_");
static_assert(offsetof(PC_Zombie_C_Screamer__Client_, Destroy_) == 0x000000, "Member 'PC_Zombie_C_Screamer__Client_::Destroy_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.ServerTravel
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_ServerTravel final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_ServerTravel) == 0x000008, "Wrong alignment on PC_Zombie_C_ServerTravel");
static_assert(sizeof(PC_Zombie_C_ServerTravel) == 0x000008, "Wrong size on PC_Zombie_C_ServerTravel");
static_assert(offsetof(PC_Zombie_C_ServerTravel, Delay) == 0x000000, "Member 'PC_Zombie_C_ServerTravel::Delay' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.SetSteamID (Server)
// 0x0020 (0x0020 - 0x0000)
struct PC_Zombie_C_SetSteamID__Server_ final
{
public:
	class FString                                 PCInfo;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCStats                           Item_Stats;                                        // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_SetSteamID__Server_) == 0x000008, "Wrong alignment on PC_Zombie_C_SetSteamID__Server_");
static_assert(sizeof(PC_Zombie_C_SetSteamID__Server_) == 0x000020, "Wrong size on PC_Zombie_C_SetSteamID__Server_");
static_assert(offsetof(PC_Zombie_C_SetSteamID__Server_, PCInfo) == 0x000000, "Member 'PC_Zombie_C_SetSteamID__Server_::PCInfo' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_SetSteamID__Server_, Item_Stats) == 0x000010, "Member 'PC_Zombie_C_SetSteamID__Server_::Item_Stats' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Slomo
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_Slomo final
{
public:
	double                                        Slomo_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Slomo) == 0x000008, "Wrong alignment on PC_Zombie_C_Slomo");
static_assert(sizeof(PC_Zombie_C_Slomo) == 0x000008, "Wrong size on PC_Zombie_C_Slomo");
static_assert(offsetof(PC_Zombie_C_Slomo, Slomo_0) == 0x000000, "Member 'PC_Zombie_C_Slomo::Slomo_0' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.SpawnScreamer
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_SpawnScreamer final
{
public:
	bool                                          Destroy_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_SpawnScreamer) == 0x000001, "Wrong alignment on PC_Zombie_C_SpawnScreamer");
static_assert(sizeof(PC_Zombie_C_SpawnScreamer) == 0x000001, "Wrong size on PC_Zombie_C_SpawnScreamer");
static_assert(offsetof(PC_Zombie_C_SpawnScreamer, Destroy_) == 0x000000, "Member 'PC_Zombie_C_SpawnScreamer::Destroy_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.SpawnWinHud
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_SpawnWinHud final
{
public:
	int32                                         Wave_0;                                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Chrono;                                            // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_SpawnWinHud) == 0x000008, "Wrong alignment on PC_Zombie_C_SpawnWinHud");
static_assert(sizeof(PC_Zombie_C_SpawnWinHud) == 0x000010, "Wrong size on PC_Zombie_C_SpawnWinHud");
static_assert(offsetof(PC_Zombie_C_SpawnWinHud, Wave_0) == 0x000000, "Member 'PC_Zombie_C_SpawnWinHud::Wave_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_SpawnWinHud, Chrono) == 0x000008, "Member 'PC_Zombie_C_SpawnWinHud::Chrono' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Talk
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_Talk final
{
public:
	bool                                          IsTalking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Talk) == 0x000001, "Wrong alignment on PC_Zombie_C_Talk");
static_assert(sizeof(PC_Zombie_C_Talk) == 0x000001, "Wrong size on PC_Zombie_C_Talk");
static_assert(offsetof(PC_Zombie_C_Talk, IsTalking) == 0x000000, "Member 'PC_Zombie_C_Talk::IsTalking' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Update ControlRotation
// 0x0018 (0x0018 - 0x0000)
struct PC_Zombie_C_Update_ControlRotation final
{
public:
	struct FRotator                               NewRotation;                                       // 0x0000(0x0018)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PC_Zombie_C_Update_ControlRotation) == 0x000008, "Wrong alignment on PC_Zombie_C_Update_ControlRotation");
static_assert(sizeof(PC_Zombie_C_Update_ControlRotation) == 0x000018, "Wrong size on PC_Zombie_C_Update_ControlRotation");
static_assert(offsetof(PC_Zombie_C_Update_ControlRotation, NewRotation) == 0x000000, "Member 'PC_Zombie_C_Update_ControlRotation::NewRotation' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Update Death
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_Update_Death final
{
public:
	int32                                         Death_0;                                           // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Set;                                               // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Update_Death) == 0x000004, "Wrong alignment on PC_Zombie_C_Update_Death");
static_assert(sizeof(PC_Zombie_C_Update_Death) == 0x000008, "Wrong size on PC_Zombie_C_Update_Death");
static_assert(offsetof(PC_Zombie_C_Update_Death, Death_0) == 0x000000, "Member 'PC_Zombie_C_Update_Death::Death_0' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_Update_Death, Set) == 0x000004, "Member 'PC_Zombie_C_Update_Death::Set' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Update Kill
// 0x0004 (0x0004 - 0x0000)
struct PC_Zombie_C_Update_Kill final
{
public:
	int32                                         Kill_;                                             // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Update_Kill) == 0x000004, "Wrong alignment on PC_Zombie_C_Update_Kill");
static_assert(sizeof(PC_Zombie_C_Update_Kill) == 0x000004, "Wrong size on PC_Zombie_C_Update_Kill");
static_assert(offsetof(PC_Zombie_C_Update_Kill, Kill_) == 0x000000, "Member 'PC_Zombie_C_Update_Kill::Kill_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.Update ScoreBoard (HUD)
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_Update_ScoreBoard__HUD_ final
{
public:
	bool                                          Remove_;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_Update_ScoreBoard__HUD_) == 0x000001, "Wrong alignment on PC_Zombie_C_Update_ScoreBoard__HUD_");
static_assert(sizeof(PC_Zombie_C_Update_ScoreBoard__HUD_) == 0x000001, "Wrong size on PC_Zombie_C_Update_ScoreBoard__HUD_");
static_assert(offsetof(PC_Zombie_C_Update_ScoreBoard__HUD_, Remove_) == 0x000000, "Member 'PC_Zombie_C_Update_ScoreBoard__HUD_::Remove_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateGamemode
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_UpdateGamemode final
{
public:
	EGameMode                                     GameMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateGamemode) == 0x000001, "Wrong alignment on PC_Zombie_C_UpdateGamemode");
static_assert(sizeof(PC_Zombie_C_UpdateGamemode) == 0x000001, "Wrong size on PC_Zombie_C_UpdateGamemode");
static_assert(offsetof(PC_Zombie_C_UpdateGamemode, GameMode) == 0x000000, "Member 'PC_Zombie_C_UpdateGamemode::GameMode' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateKickVote
// 0x0048 (0x0048 - 0x0000)
struct PC_Zombie_C_UpdateKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateKickVote) == 0x000008, "Wrong alignment on PC_Zombie_C_UpdateKickVote");
static_assert(sizeof(PC_Zombie_C_UpdateKickVote) == 0x000048, "Wrong size on PC_Zombie_C_UpdateKickVote");
static_assert(offsetof(PC_Zombie_C_UpdateKickVote, Target) == 0x000000, "Member 'PC_Zombie_C_UpdateKickVote::Target' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_UpdateKickVote, Yes_) == 0x000040, "Member 'PC_Zombie_C_UpdateKickVote::Yes_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateKill (Server)
// 0x0004 (0x0004 - 0x0000)
struct PC_Zombie_C_UpdateKill__Server_ final
{
public:
	int32                                         Kill;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateKill__Server_) == 0x000004, "Wrong alignment on PC_Zombie_C_UpdateKill__Server_");
static_assert(sizeof(PC_Zombie_C_UpdateKill__Server_) == 0x000004, "Wrong size on PC_Zombie_C_UpdateKill__Server_");
static_assert(offsetof(PC_Zombie_C_UpdateKill__Server_, Kill) == 0x000000, "Member 'PC_Zombie_C_UpdateKill__Server_::Kill' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateMapSelection
// 0x000C (0x000C - 0x0000)
struct PC_Zombie_C_UpdateMapSelection final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateMapSelection) == 0x000004, "Wrong alignment on PC_Zombie_C_UpdateMapSelection");
static_assert(sizeof(PC_Zombie_C_UpdateMapSelection) == 0x00000C, "Wrong size on PC_Zombie_C_UpdateMapSelection");
static_assert(offsetof(PC_Zombie_C_UpdateMapSelection, Selected_Level_Name) == 0x000000, "Member 'PC_Zombie_C_UpdateMapSelection::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_UpdateMapSelection, Index_0) == 0x000008, "Member 'PC_Zombie_C_UpdateMapSelection::Index_0' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdatePower
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_UpdatePower final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdatePower) == 0x000001, "Wrong alignment on PC_Zombie_C_UpdatePower");
static_assert(sizeof(PC_Zombie_C_UpdatePower) == 0x000001, "Wrong size on PC_Zombie_C_UpdatePower");
static_assert(offsetof(PC_Zombie_C_UpdatePower, On_) == 0x000000, "Member 'PC_Zombie_C_UpdatePower::On_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateScore
// 0x0008 (0x0008 - 0x0000)
struct PC_Zombie_C_UpdateScore final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateScore) == 0x000004, "Wrong alignment on PC_Zombie_C_UpdateScore");
static_assert(sizeof(PC_Zombie_C_UpdateScore) == 0x000008, "Wrong size on PC_Zombie_C_UpdateScore");
static_assert(offsetof(PC_Zombie_C_UpdateScore, Score) == 0x000000, "Member 'PC_Zombie_C_UpdateScore::Score' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateTeamIndex (PlayerKilled)
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_UpdateTeamIndex__PlayerKilled_ final
{
public:
	E_Team                                        Team_PlayerKilled_;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateTeamIndex__PlayerKilled_) == 0x000004, "Wrong alignment on PC_Zombie_C_UpdateTeamIndex__PlayerKilled_");
static_assert(sizeof(PC_Zombie_C_UpdateTeamIndex__PlayerKilled_) == 0x000010, "Wrong size on PC_Zombie_C_UpdateTeamIndex__PlayerKilled_");
static_assert(offsetof(PC_Zombie_C_UpdateTeamIndex__PlayerKilled_, Team_PlayerKilled_) == 0x000000, "Member 'PC_Zombie_C_UpdateTeamIndex__PlayerKilled_::Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_UpdateTeamIndex__PlayerKilled_, MilitaryIndex) == 0x000004, "Member 'PC_Zombie_C_UpdateTeamIndex__PlayerKilled_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_UpdateTeamIndex__PlayerKilled_, TerroristIndex) == 0x000008, "Member 'PC_Zombie_C_UpdateTeamIndex__PlayerKilled_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_UpdateTeamIndex__PlayerKilled_, WiiningTeam) == 0x00000C, "Member 'PC_Zombie_C_UpdateTeamIndex__PlayerKilled_::WiiningTeam' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateTeamXP
// 0x0001 (0x0001 - 0x0000)
struct PC_Zombie_C_UpdateTeamXP final
{
public:
	bool                                          Win_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateTeamXP) == 0x000001, "Wrong alignment on PC_Zombie_C_UpdateTeamXP");
static_assert(sizeof(PC_Zombie_C_UpdateTeamXP) == 0x000001, "Wrong size on PC_Zombie_C_UpdateTeamXP");
static_assert(offsetof(PC_Zombie_C_UpdateTeamXP, Win_) == 0x000000, "Member 'PC_Zombie_C_UpdateTeamXP::Win_' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateTimer
// 0x0020 (0x0020 - 0x0000)
struct PC_Zombie_C_UpdateTimer final
{
public:
	double                                        TimeCount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(PC_Zombie_C_UpdateTimer) == 0x000008, "Wrong alignment on PC_Zombie_C_UpdateTimer");
static_assert(sizeof(PC_Zombie_C_UpdateTimer) == 0x000020, "Wrong size on PC_Zombie_C_UpdateTimer");
static_assert(offsetof(PC_Zombie_C_UpdateTimer, TimeCount) == 0x000000, "Member 'PC_Zombie_C_UpdateTimer::TimeCount' has a wrong offset!");
static_assert(offsetof(PC_Zombie_C_UpdateTimer, NewParam) == 0x000008, "Member 'PC_Zombie_C_UpdateTimer::NewParam' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateWarning
// 0x0010 (0x0010 - 0x0000)
struct PC_Zombie_C_UpdateWarning final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateWarning) == 0x000008, "Wrong alignment on PC_Zombie_C_UpdateWarning");
static_assert(sizeof(PC_Zombie_C_UpdateWarning) == 0x000010, "Wrong size on PC_Zombie_C_UpdateWarning");
static_assert(offsetof(PC_Zombie_C_UpdateWarning, String) == 0x000000, "Member 'PC_Zombie_C_UpdateWarning::String' has a wrong offset!");

// Function PC_Zombie.PC_Zombie_C.UpdateXp
// 0x0004 (0x0004 - 0x0000)
struct PC_Zombie_C_UpdateXp final
{
public:
	int32                                         Xp;                                                // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(PC_Zombie_C_UpdateXp) == 0x000004, "Wrong alignment on PC_Zombie_C_UpdateXp");
static_assert(sizeof(PC_Zombie_C_UpdateXp) == 0x000004, "Wrong size on PC_Zombie_C_UpdateXp");
static_assert(offsetof(PC_Zombie_C_UpdateXp, Xp) == 0x000000, "Member 'PC_Zombie_C_UpdateXp::Xp' has a wrong offset!");

}

