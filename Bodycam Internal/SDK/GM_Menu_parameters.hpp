#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GM_Menu

#include "Basic.hpp"

#include "STR_PCInfo_structs.hpp"
#include "SteamCorePro_structs.hpp"


namespace SDK::Params
{

// Function GM_Menu.GM_Menu_C.ExecuteUbergraph_GM_Menu
// 0x00E8 (0x00E8 - 0x0000)
struct GM_Menu_C_ExecuteUbergraph_GM_Menu final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_NewPlayer_1;                          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_ExitingController_1;                  // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Message;                        // 0x0028(0x0018)()
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APC_Bodycam_C*>                  CallFunc_GetAllActorsOfClass_OutActors;            // 0x0048(0x0010)(ReferenceParm)
	class APlayerController*                      K2Node_Event_NewPlayer;                            // 0x0058(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AController*                            K2Node_Event_ExitingController;                    // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue_1;               // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby;                     // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGT_Lobby_C*                            K2Node_DynamicCast_AsGT_Lobby_1;                   // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0098(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x00DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DE[0x2];                                       // 0x00DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Menu_C_ExecuteUbergraph_GM_Menu) == 0x000008, "Wrong alignment on GM_Menu_C_ExecuteUbergraph_GM_Menu");
static_assert(sizeof(GM_Menu_C_ExecuteUbergraph_GM_Menu) == 0x0000E8, "Wrong size on GM_Menu_C_ExecuteUbergraph_GM_Menu");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, EntryPoint) == 0x000000, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::EntryPoint' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_Event_NewPlayer_1) == 0x000008, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_Event_NewPlayer_1' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_Event_ExitingController_1) == 0x000010, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_Event_ExitingController_1' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_Array_AddUnique_ReturnValue) == 0x00001C, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, Temp_int_Array_Index_Variable) == 0x000020, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_Array_RemoveItem_ReturnValue) == 0x000024, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_CustomEvent_Message) == 0x000028, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_CustomEvent_Message' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_GetAllActorsOfClass_OutActors) == 0x000048, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_Event_NewPlayer) == 0x000058, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_Event_NewPlayer' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_Event_ExitingController) == 0x000060, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_Event_ExitingController' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_GetGameState_ReturnValue) == 0x000068, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_GetGameState_ReturnValue_1) == 0x000070, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_GetGameState_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_DynamicCast_AsGT_Lobby) == 0x000078, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_DynamicCast_AsGT_Lobby' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_DynamicCast_bSuccess) == 0x000080, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_DynamicCast_AsGT_Lobby_1) == 0x000088, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_DynamicCast_AsGT_Lobby_1' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, K2Node_DynamicCast_bSuccess_1) == 0x000090, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_Array_Get_Item) == 0x000098, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_Less_IntInt_ReturnValue) == 0x0000DC, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x0000DD, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_ExecuteUbergraph_GM_Menu, CallFunc_Array_Find_ReturnValue) == 0x0000E0, "Member 'GM_Menu_C_ExecuteUbergraph_GM_Menu::CallFunc_Array_Find_ReturnValue' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.HandleStartingNewPlayer
// 0x0008 (0x0008 - 0x0000)
struct GM_Menu_C_HandleStartingNewPlayer final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Menu_C_HandleStartingNewPlayer) == 0x000008, "Wrong alignment on GM_Menu_C_HandleStartingNewPlayer");
static_assert(sizeof(GM_Menu_C_HandleStartingNewPlayer) == 0x000008, "Wrong size on GM_Menu_C_HandleStartingNewPlayer");
static_assert(offsetof(GM_Menu_C_HandleStartingNewPlayer, NewPlayer) == 0x000000, "Member 'GM_Menu_C_HandleStartingNewPlayer::NewPlayer' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.K2_OnLogout
// 0x0008 (0x0008 - 0x0000)
struct GM_Menu_C_K2_OnLogout final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Menu_C_K2_OnLogout) == 0x000008, "Wrong alignment on GM_Menu_C_K2_OnLogout");
static_assert(sizeof(GM_Menu_C_K2_OnLogout) == 0x000008, "Wrong size on GM_Menu_C_K2_OnLogout");
static_assert(offsetof(GM_Menu_C_K2_OnLogout, ExitingController) == 0x000000, "Member 'GM_Menu_C_K2_OnLogout::ExitingController' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.K2_PostLogin
// 0x0008 (0x0008 - 0x0000)
struct GM_Menu_C_K2_PostLogin final
{
public:
	class APlayerController*                      NewPlayer;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Menu_C_K2_PostLogin) == 0x000008, "Wrong alignment on GM_Menu_C_K2_PostLogin");
static_assert(sizeof(GM_Menu_C_K2_PostLogin) == 0x000008, "Wrong size on GM_Menu_C_K2_PostLogin");
static_assert(offsetof(GM_Menu_C_K2_PostLogin, NewPlayer) == 0x000000, "Member 'GM_Menu_C_K2_PostLogin::NewPlayer' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.LogoutEvent
// 0x0008 (0x0008 - 0x0000)
struct GM_Menu_C_LogoutEvent final
{
public:
	class AController*                            ExitingController;                                 // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Menu_C_LogoutEvent) == 0x000008, "Wrong alignment on GM_Menu_C_LogoutEvent");
static_assert(sizeof(GM_Menu_C_LogoutEvent) == 0x000008, "Wrong size on GM_Menu_C_LogoutEvent");
static_assert(offsetof(GM_Menu_C_LogoutEvent, ExitingController) == 0x000000, "Member 'GM_Menu_C_LogoutEvent::ExitingController' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.MSG_ChatGetConnectedPlayers
// 0x0010 (0x0010 - 0x0000)
struct GM_Menu_C_MSG_ChatGetConnectedPlayers final
{
public:
	TArray<class AController*>                    Players;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GM_Menu_C_MSG_ChatGetConnectedPlayers) == 0x000008, "Wrong alignment on GM_Menu_C_MSG_ChatGetConnectedPlayers");
static_assert(sizeof(GM_Menu_C_MSG_ChatGetConnectedPlayers) == 0x000010, "Wrong size on GM_Menu_C_MSG_ChatGetConnectedPlayers");
static_assert(offsetof(GM_Menu_C_MSG_ChatGetConnectedPlayers, Players) == 0x000000, "Member 'GM_Menu_C_MSG_ChatGetConnectedPlayers::Players' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.MSG_ChatGetPlayerID
// 0x0004 (0x0004 - 0x0000)
struct GM_Menu_C_MSG_ChatGetPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Menu_C_MSG_ChatGetPlayerID) == 0x000004, "Wrong alignment on GM_Menu_C_MSG_ChatGetPlayerID");
static_assert(sizeof(GM_Menu_C_MSG_ChatGetPlayerID) == 0x000004, "Wrong size on GM_Menu_C_MSG_ChatGetPlayerID");
static_assert(offsetof(GM_Menu_C_MSG_ChatGetPlayerID, PlayerID) == 0x000000, "Member 'GM_Menu_C_MSG_ChatGetPlayerID::PlayerID' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.MSG_ChatGetTeamID
// 0x0004 (0x0004 - 0x0000)
struct GM_Menu_C_MSG_ChatGetTeamID final
{
public:
	int32                                         TeamID;                                            // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Menu_C_MSG_ChatGetTeamID) == 0x000004, "Wrong alignment on GM_Menu_C_MSG_ChatGetTeamID");
static_assert(sizeof(GM_Menu_C_MSG_ChatGetTeamID) == 0x000004, "Wrong size on GM_Menu_C_MSG_ChatGetTeamID");
static_assert(offsetof(GM_Menu_C_MSG_ChatGetTeamID, TeamID) == 0x000000, "Member 'GM_Menu_C_MSG_ChatGetTeamID::TeamID' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.MSG_ChatGetUsername
// 0x0020 (0x0020 - 0x0000)
struct GM_Menu_C_MSG_ChatGetUsername final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Username;                                          // 0x0008(0x0018)(Parm, OutParm)
};
static_assert(alignof(GM_Menu_C_MSG_ChatGetUsername) == 0x000008, "Wrong alignment on GM_Menu_C_MSG_ChatGetUsername");
static_assert(sizeof(GM_Menu_C_MSG_ChatGetUsername) == 0x000020, "Wrong size on GM_Menu_C_MSG_ChatGetUsername");
static_assert(offsetof(GM_Menu_C_MSG_ChatGetUsername, Success_) == 0x000000, "Member 'GM_Menu_C_MSG_ChatGetUsername::Success_' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_MSG_ChatGetUsername, Username) == 0x000008, "Member 'GM_Menu_C_MSG_ChatGetUsername::Username' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.MSG_ChatRequestPlayerID
// 0x000C (0x000C - 0x0000)
struct GM_Menu_C_MSG_ChatRequestPlayerID final
{
public:
	int32                                         PlayerID;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Success_;                                          // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetNewPlayerID_Output_Get;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GM_Menu_C_MSG_ChatRequestPlayerID) == 0x000004, "Wrong alignment on GM_Menu_C_MSG_ChatRequestPlayerID");
static_assert(sizeof(GM_Menu_C_MSG_ChatRequestPlayerID) == 0x00000C, "Wrong size on GM_Menu_C_MSG_ChatRequestPlayerID");
static_assert(offsetof(GM_Menu_C_MSG_ChatRequestPlayerID, PlayerID) == 0x000000, "Member 'GM_Menu_C_MSG_ChatRequestPlayerID::PlayerID' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_MSG_ChatRequestPlayerID, Success_) == 0x000004, "Member 'GM_Menu_C_MSG_ChatRequestPlayerID::Success_' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_MSG_ChatRequestPlayerID, CallFunc_GetNewPlayerID_Output_Get) == 0x000008, "Member 'GM_Menu_C_MSG_ChatRequestPlayerID::CallFunc_GetNewPlayerID_Output_Get' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.SendsSystemMessageToPlayers
// 0x0018 (0x0018 - 0x0000)
struct GM_Menu_C_SendsSystemMessageToPlayers final
{
public:
	class FText                                   Message;                                           // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GM_Menu_C_SendsSystemMessageToPlayers) == 0x000008, "Wrong alignment on GM_Menu_C_SendsSystemMessageToPlayers");
static_assert(sizeof(GM_Menu_C_SendsSystemMessageToPlayers) == 0x000018, "Wrong size on GM_Menu_C_SendsSystemMessageToPlayers");
static_assert(offsetof(GM_Menu_C_SendsSystemMessageToPlayers, Message) == 0x000000, "Member 'GM_Menu_C_SendsSystemMessageToPlayers::Message' has a wrong offset!");

// Function GM_Menu.GM_Menu_C.SetSessionSettings
// 0x0030 (0x0030 - 0x0000)
struct GM_Menu_C_SetSessionSettings final
{
public:
	class FString                                 CallFunc_GetFriendPersonaName_ReturnValue;         // 0x0000(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetIPCountry_ReturnValue;                 // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue;                   // 0x0028(0x0008)(NoDestructor)
};
static_assert(alignof(GM_Menu_C_SetSessionSettings) == 0x000008, "Wrong alignment on GM_Menu_C_SetSessionSettings");
static_assert(sizeof(GM_Menu_C_SetSessionSettings) == 0x000030, "Wrong size on GM_Menu_C_SetSessionSettings");
static_assert(offsetof(GM_Menu_C_SetSessionSettings, CallFunc_GetFriendPersonaName_ReturnValue) == 0x000000, "Member 'GM_Menu_C_SetSessionSettings::CallFunc_GetFriendPersonaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_SetSessionSettings, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000010, "Member 'GM_Menu_C_SetSessionSettings::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_SetSessionSettings, CallFunc_GetIPCountry_ReturnValue) == 0x000018, "Member 'GM_Menu_C_SetSessionSettings::CallFunc_GetIPCountry_ReturnValue' has a wrong offset!");
static_assert(offsetof(GM_Menu_C_SetSessionSettings, CallFunc_GetSteamID_ReturnValue) == 0x000028, "Member 'GM_Menu_C_SetSessionSettings::CallFunc_GetSteamID_ReturnValue' has a wrong offset!");

}

