#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GT_Bodycam

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_Team_structs.hpp"
#include "STR_WEP_structs.hpp"
#include "SteamCorePro_structs.hpp"
#include "STR_TEST_structs.hpp"
#include "STR_PCInfo_structs.hpp"
#include "STR_Actor_structs.hpp"
#include "STR_KickVote_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"
#include "GameMode_structs.hpp"
#include "STR_Score_structs.hpp"
#include "SMesh_structs.hpp"


namespace SDK::Params
{

// Function GT_Bodycam.GT_Bodycam_C.AnyBombExist
// 0x0020 (0x0020 - 0x0000)
struct GT_Bodycam_C_AnyBombExist final
{
public:
	class ABombe_C*                               Bomb;                                              // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class ABombe_C*>                       CallFunc_GetAllActorsOfClass_OutActors;            // 0x0008(0x0010)(ReferenceParm)
	class ABombe_C*                               CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_AnyBombExist) == 0x000008, "Wrong alignment on GT_Bodycam_C_AnyBombExist");
static_assert(sizeof(GT_Bodycam_C_AnyBombExist) == 0x000020, "Wrong size on GT_Bodycam_C_AnyBombExist");
static_assert(offsetof(GT_Bodycam_C_AnyBombExist, Bomb) == 0x000000, "Member 'GT_Bodycam_C_AnyBombExist::Bomb' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_AnyBombExist, CallFunc_GetAllActorsOfClass_OutActors) == 0x000008, "Member 'GT_Bodycam_C_AnyBombExist::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_AnyBombExist, CallFunc_Array_Get_Item) == 0x000018, "Member 'GT_Bodycam_C_AnyBombExist::CallFunc_Array_Get_Item' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.CanCreateKickVote
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_CanCreateKickVote final
{
public:
	bool                                          CanCreateKickVote_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_CanCreateKickVote) == 0x000001, "Wrong alignment on GT_Bodycam_C_CanCreateKickVote");
static_assert(sizeof(GT_Bodycam_C_CanCreateKickVote) == 0x000001, "Wrong size on GT_Bodycam_C_CanCreateKickVote");
static_assert(offsetof(GT_Bodycam_C_CanCreateKickVote, CanCreateKickVote_) == 0x000000, "Member 'GT_Bodycam_C_CanCreateKickVote::CanCreateKickVote_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.CanKickThisPlayer?
// 0x0018 (0x0018 - 0x0000)
struct GT_Bodycam_C_CanKickThisPlayer_ final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          True_;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_CanKickThisPlayer_) == 0x000008, "Wrong alignment on GT_Bodycam_C_CanKickThisPlayer_");
static_assert(sizeof(GT_Bodycam_C_CanKickThisPlayer_) == 0x000018, "Wrong size on GT_Bodycam_C_CanKickThisPlayer_");
static_assert(offsetof(GT_Bodycam_C_CanKickThisPlayer_, PlayerID) == 0x000000, "Member 'GT_Bodycam_C_CanKickThisPlayer_::PlayerID' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_CanKickThisPlayer_, True_) == 0x000010, "Member 'GT_Bodycam_C_CanKickThisPlayer_::True_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.ExecuteUbergraph_GT_Bodycam
// 0x10A0 (0x10A0 - 0x0000)
struct GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable;                                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_1;                              // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_4;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_5;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_2;                              // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         Temp_real_Variable_3;                              // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_4;                              // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0080(0x0018)()
	float                                         Temp_real_Variable_5;                              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x00A0(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_6;                              // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_7;                              // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ABombe_C*                               CallFunc_AnyBombExist_Bomb;                        // 0x00C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_4;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D5[0x3];                                       // 0x00D5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_4;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_8;                              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_5;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_5;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_6;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_7;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_6;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_6;                 // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_8;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         Temp_real_Variable_9;                              // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_7;                  // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_8;                  // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_7;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_8;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_9;                   // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     Temp_byte_Variable;                                // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_10;                  // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_9;                  // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_9;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_11;                  // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_10;                 // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_10;                // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue_1;               // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_11;                 // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_12;                 // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_11;                // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_12;                // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_12;                  // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSMesh                                 CallFunc_GetDataTableRowFromName_OutRow;           // 0x0148(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSMesh                                 CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0160(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_171[0x3];                                      // 0x0171(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_13;                  // 0x0174(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_13;                 // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_13;                // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_14;                  // 0x0184(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_14;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_15;                 // 0x018C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_14;                // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_15;                // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_15;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_String;                               // 0x01A0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TimeCount;                            // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_NewParam;                             // 0x01B8(0x0018)()
	E_Team                                        K2Node_Event_Team;                                 // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team_PlayerKilled_;                   // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x2];                                      // 0x01D2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MilitaryIndex;                        // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TerroristIndex;                       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_WiiningTeam;                          // 0x01DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Win_;                                 // 0x01DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1DE[0x2];                                      // 0x01DE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Event_SteamID;                              // 0x01E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target_2;                             // 0x01F0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Event_Gamemode;                             // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReady_;                             // 0x0231(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsTalking;                            // 0x0232(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_233[0x5];                                      // 0x0233(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x0238(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_Team__PlayerKilled_;            // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x3];                                      // 0x0241(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_CustomEvent_MilitaryIndex;                  // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_TerroristIndex;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_CustomEvent_WiiningTeam;                    // 0x024C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24D[0x3];                                      // 0x024D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_Delay;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_269[0x7];                                      // 0x0269(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0270(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0280(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_284[0xC];                                      // 0x0284(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0290(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F9[0x7];                                      // 0x02F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AKickTicket_C*                          CallFunc_FinishSpawningActor_ReturnValue;          // 0x0300(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_waiting_For_Player;             // 0x0310(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_311[0x3];                                      // 0x0311(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_16;                  // 0x0314(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_StartingMatch;                  // 0x031C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31D[0x3];                                      // 0x031D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0320(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_4;               // 0x0364(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0368(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0378(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0379(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37A[0x2];                                      // 0x037A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_16;                 // 0x037C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_381[0x3];                                      // 0x0381(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_16;                // 0x0384(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_InText;                         // 0x0388(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_17;                  // 0x0398(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_5;               // 0x039C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_1;                         // 0x03A0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam;                   // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x03E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x03E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x03EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3EB[0x1];                                      // 0x03EB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_18;                  // 0x03EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item_2;                         // 0x03F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_1;          // 0x03F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0408(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_409[0x3];                                      // 0x0409(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_17;                 // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_18;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0414(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_415[0x3];                                      // 0x0415(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_17;                // 0x0418(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x041C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41D[0x3];                                      // 0x041D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_18;                // 0x0420(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_19;                 // 0x0424(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x0428(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_429[0x3];                                      // 0x0429(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_19;                // 0x042C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_NoneIndex_Return;               // 0x0430(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_MilitaryIndex_Return;           // 0x0434(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_TerroristIndex_Return;          // 0x0438(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamIndex_TeamNeedPlayer;                 // 0x043C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeamIndex_TeamEmpty_;                     // 0x043D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_43E[0x2];                                      // 0x043E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Military_Return;                // 0x0440(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Terrorist_Return;               // 0x0450(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0460(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0470(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_471[0x7];                                      // 0x0471(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0478(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0488(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0489(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_48A[0x2];                                      // 0x048A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_Selected_Level_Name;            // 0x048C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_CustomEvent_Index;                          // 0x0494(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_Event_Selected_Level_Name;                  // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x04A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A4[0x4];                                      // 0x04A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_3;                         // 0x04A8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_6;               // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_4;                // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4ED[0x3];                                      // 0x04ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_2;          // 0x04F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0501(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_502[0x6];                                      // 0x0502(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_4;                         // 0x0508(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_3;          // 0x0548(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0558(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_559[0x3];                                      // 0x0559(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_7;               // 0x055C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_5;                // 0x0560(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0561(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_562[0x2];                                      // 0x0562(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_Event_Score;                                // 0x0564(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_56C[0x4];                                      // 0x056C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_5;                         // 0x0570(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_8;               // 0x05B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_6;                // 0x05B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5B5[0x3];                                      // 0x05B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_4;          // 0x05B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x05C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C9[0x7];                                      // 0x05C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_6;                         // 0x05D0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_9;               // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_7;                // 0x0614(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_615[0x3];                                      // 0x0615(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_5;          // 0x0618(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0628(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_629[0x7];                                      // 0x0629(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0630(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_Bodycam_C*                          K2Node_DynamicCast_AsGM_Bodycam;                   // 0x0638(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_7;                     // 0x0640(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_641[0x3];                                      // 0x0641(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_10;              // 0x0644(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0648(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_649[0x7];                                      // 0x0649(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_7;                         // 0x0650(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_11;              // 0x0690(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_8;                // 0x0694(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_695[0x3];                                      // 0x0695(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_6;          // 0x0698(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_8;                     // 0x06A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6A9[0x7];                                      // 0x06A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerController*>              CallFunc_GetAllActorsOfClass_OutActors_2;          // 0x06B0(0x0010)(ReferenceParm)
	class APlayerController*                      CallFunc_Array_Get_Item_8;                         // 0x06C0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_12;              // 0x06C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6CC[0x4];                                      // 0x06CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_7;          // 0x06D0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_9;                     // 0x06E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_9;                // 0x06E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6E2[0x6];                                      // 0x06E2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Slomo;                                // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_9;                         // 0x06F0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_13;              // 0x0730(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_10;               // 0x0734(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_735[0x3];                                      // 0x0735(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_8;          // 0x0738(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_10;                    // 0x0748(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x0749(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x074A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74B[0x5];                                      // 0x074B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0750(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0760(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Random_OutItem;                     // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Random_OutItem_1;                   // 0x077C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_Event_PlayerInfo;                           // 0x0788(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_CustomEvent_NewItem;                        // 0x07D0(0x0048)(ConstParm, ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81C[0x4];                                      // 0x081C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_10;                        // 0x0820(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_11;                        // 0x0868(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_14;              // 0x08B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_11;               // 0x08B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x08B5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B6[0x2];                                      // 0x08B6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_12;                        // 0x08B8(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_20;                // 0x0900(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_904[0x4];                                      // 0x0904(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_13;                        // 0x0908(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_MakeStruct_STR_KickVote;                    // 0x0950(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_21;                // 0x0998(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99C[0x4];                                      // 0x099C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_KickVote                          K2Node_MakeStruct_STR_KickVote_1;                  // 0x09A0(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_CustomEvent_PlayerInfo;                     // 0x09E8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_19;                  // 0x0A28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2C[0x4];                                      // 0x0A2C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_KickVote                          CallFunc_Array_Get_Item_14;                        // 0x0A30(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	class APlayerController*                      CallFunc_Array_Get_Item_15;                        // 0x0A78(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_9;          // 0x0A80(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_11;                    // 0x0A90(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A91[0x3];                                      // 0x0A91(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_22;                // 0x0A94(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_2;             // 0x0A98(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A99[0x7];                                      // 0x0A99(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0AA0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0AB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB1[0x3];                                      // 0x0AB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_15;              // 0x0AB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_12;               // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x0AB9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_ABA[0x6];                                      // 0x0ABA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target_1;                             // 0x0AC0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes_;                                 // 0x0B00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B01[0x7];                                      // 0x0B01(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target;                               // 0x0B08(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_CustomEvent_Player_info;                    // 0x0B48(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Yes_;                           // 0x0B88(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_1;          // 0x0B89(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B8A[0x6];                                      // 0x0B8A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue_1;                // 0x0B90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_Bodycam_C*                          K2Node_DynamicCast_AsGM_Bodycam_1;                 // 0x0B98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_12;                    // 0x0BA0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Stop_;                          // 0x0BA1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue;         // 0x0BA2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBoolWithWeight_ReturnValue_1;       // 0x0BA3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_20;                  // 0x0BA4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_16;                        // 0x0BA8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_17;                        // 0x0BE8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_1;                 // 0x0C28(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_13;                    // 0x0C30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C31[0x7];                                      // 0x0C31(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_10;         // 0x0C38(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_14;                    // 0x0C48(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C49[0x3];                                      // 0x0C49(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_16;              // 0x0C4C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_13;               // 0x0C50(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0C51(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C52[0x6];                                      // 0x0C52(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_18;                        // 0x0C58(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_17;              // 0x0C98(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_14;               // 0x0C9C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C9D[0x3];                                      // 0x0C9D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_2;                 // 0x0CA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_15;                    // 0x0CA8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CA9[0x7];                                      // 0x0CA9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Delay;                                // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_CustomEvent_Duration;                       // 0x0CB8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CBC[0x4];                                      // 0x0CBC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0CC0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<class AALS_AnimMan_CharacterBP_C*>     CallFunc_GetAllActorsOfClass_OutActors_3;          // 0x0CD0(0x0010)(ReferenceParm)
	class AALS_AnimMan_CharacterBP_C*             CallFunc_Array_Get_Item_19;                        // 0x0CE0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_18;              // 0x0CE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CEC[0x4];                                      // 0x0CEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  CallFunc_ServerTravel_self_CastInput;              // 0x0CF0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_15;               // 0x0D00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D01[0x3];                                      // 0x0D01(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TeamIndex_NoneIndex_Return_1;             // 0x0D04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_MilitaryIndex_Return_1;         // 0x0D08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_TerroristIndex_Return_1;        // 0x0D0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamIndex_TeamNeedPlayer_1;               // 0x0D10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeamIndex_TeamEmpty__1;                   // 0x0D11(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D12[0x6];                                      // 0x0D12(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Military_Return_1;              // 0x0D18(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Terrorist_Return_1;             // 0x0D28(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x0D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0D39(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x0D3A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0D3B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D3C[0x4];                                      // 0x0D3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamHasBombArray_Team_Has_Bomb_Return;    // 0x0D40(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamHasBombArray_Other_Team_Return;       // 0x0D50(0x0010)(ReferenceParm)
	struct FSTR_PCInfo                            CallFunc_Array_Random_OutItem_2;                   // 0x0D60(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_2;                  // 0x0DA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0DA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DA5[0x3];                                      // 0x0DA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_20;                        // 0x0DA8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_19;              // 0x0DE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DEC[0x4];                                      // 0x0DEC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x0DF0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_16;                    // 0x0DF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_16;               // 0x0DF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0DFA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DFB[0x5];                                      // 0x0DFB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1;  // 0x0E00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_17;                    // 0x0E08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0E09(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E0A[0x2];                                      // 0x0E0A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_20;                 // 0x0E0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Select_Default;                             // 0x0E10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_17;               // 0x0E14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E15[0x3];                                      // 0x0E15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_23;                // 0x0E18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0E1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1D[0x3];                                      // 0x0E1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0E20(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface_11;         // 0x0E28(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_18;                    // 0x0E38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E39[0x7];                                      // 0x0E39(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABombe_C*>                       CallFunc_GetAllActorsOfClass_OutActors_4;          // 0x0E40(0x0010)(ReferenceParm)
	class FString                                 CallFunc_GetSteamID_SteamID;                       // 0x0E50(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0E60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E61[0x3];                                      // 0x0E61(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0E64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_21;                        // 0x0E68(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_20;              // 0x0EA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_18;               // 0x0EAC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue_2;          // 0x0EAD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_KickPlayer_ReturnValue;                   // 0x0EAE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_4;                    // 0x0EAF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_5;                    // 0x0EB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EB1[0x3];                                      // 0x0EB1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_21;                 // 0x0EB4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_22;                        // 0x0EB8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_19;               // 0x0EF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_SelectTeam_ReturnValue;                   // 0x0EF9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EFA[0x6];                                      // 0x0EFA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_3;                 // 0x0F00(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_19;                    // 0x0F08(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F09[0x3];                                      // 0x0F09(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_24;                // 0x0F0C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_21;              // 0x0F10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_20;               // 0x0F14(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F15[0x3];                                      // 0x0F15(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0F18(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0F58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_23;                        // 0x0F60(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_22;              // 0x0FA0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_21;               // 0x0FA4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA5[0x3];                                      // 0x0FA5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_4;                 // 0x0FA8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_20;                    // 0x0FB0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FB1[0x7];                                      // 0x0FB1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_1;           // 0x0FB8(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_23;              // 0x0FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x0FFC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_3;             // 0x0FFD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FFE[0x2];                                      // 0x0FFE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo_2;           // 0x1000(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_21;                  // 0x1040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1044[0x4];                                     // 0x1044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_24;                        // 0x1048(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class APC_Bodycam_C*                          K2Node_DynamicCast_AsPC_Bodycam_5;                 // 0x1088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_21;                    // 0x1090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1091[0x3];                                     // 0x1091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x1094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x1098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_ServerTravel__server__Duration_ImplicitCast; // 0x109C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam) == 0x000010, "Wrong alignment on GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam");
static_assert(sizeof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam) == 0x0010A0, "Wrong size on GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, EntryPoint) == 0x000000, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::EntryPoint' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable) == 0x000004, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable) == 0x000008, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_1) == 0x00000C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_1) == 0x000014, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_1) == 0x000018, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable) == 0x00001C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_2) == 0x000020, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_2) == 0x000024, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_2) == 0x00002C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_3) == 0x000034, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_1) == 0x000038, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_3) == 0x00003C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_3) == 0x000040, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_bool_True_if_break_was_hit_Variable_1) == 0x000044, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_4) == 0x000048, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Not_PreBool_ReturnValue_1) == 0x00004C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_5) == 0x000050, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000058, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000060, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_2) == 0x000064, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_3) == 0x00006C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_SelectFloat_ReturnValue) == 0x000070, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_4) == 0x000078, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Conv_StringToText_ReturnValue) == 0x000080, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_5) == 0x000098, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000A0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_6) == 0x0000B4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000B9, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000BA, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BooleanOR_ReturnValue) == 0x0000BB, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_7) == 0x0000BC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BooleanOR_ReturnValue_1) == 0x0000C0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_AnyBombExist_Bomb) == 0x0000C8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_AnyBombExist_Bomb' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_4) == 0x0000D0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BooleanOR_ReturnValue_2) == 0x0000D4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_4) == 0x0000D8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_8) == 0x0000DC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_5) == 0x0000E0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_5) == 0x0000E4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_6) == 0x0000E8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_7) == 0x0000EC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_6) == 0x0000F0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_6) == 0x0000F4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_8) == 0x0000F8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_real_Variable_9) == 0x0000FC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_real_Variable_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_7) == 0x000100, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_8) == 0x000104, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_7) == 0x000108, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_8) == 0x00010C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_9) == 0x000110, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_byte_Variable) == 0x000114, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_10) == 0x000118, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_9) == 0x00011C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_9) == 0x000120, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_11) == 0x000124, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_10) == 0x000128, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_10) == 0x00012C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_HasAuthority_ReturnValue) == 0x000130, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_HasAuthority_ReturnValue_1) == 0x000131, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_HasAuthority_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_11) == 0x000134, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_12) == 0x000138, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_12' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_11) == 0x00013C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_12) == 0x000140, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_12) == 0x000144, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_12' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetDataTableRowFromName_OutRow) == 0x000148, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000158, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000159, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000160, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000170, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_13) == 0x000174, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_13' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000178, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_13) == 0x00017C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_13' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_13) == 0x000180, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_14) == 0x000184, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_14' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_14) == 0x000188, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_14' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_15) == 0x00018C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_15' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_14) == 0x000190, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_15) == 0x000194, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_15) == 0x000198, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_15' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_String) == 0x0001A0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_TimeCount) == 0x0001B0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_TimeCount' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_NewParam) == 0x0001B8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Team) == 0x0001D0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Team_PlayerKilled_) == 0x0001D1, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_MilitaryIndex) == 0x0001D4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_TerroristIndex) == 0x0001D8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_TerroristIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_WiiningTeam) == 0x0001DC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_WiiningTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Win_) == 0x0001DD, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Win_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_SteamID) == 0x0001E0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_SteamID' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Target_2) == 0x0001F0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Gamemode) == 0x000230, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Gamemode' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_IsReady_) == 0x000231, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_IsReady_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_IsTalking) == 0x000232, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_IsTalking' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_PC) == 0x000238, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_Team__PlayerKilled_) == 0x000240, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_Team__PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_MilitaryIndex) == 0x000244, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_TerroristIndex) == 0x000248, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_TerroristIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_WiiningTeam) == 0x00024C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_WiiningTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_Delay) == 0x000250, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_Delay' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000258, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000260, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000268, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000270, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_1) == 0x000280, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_MakeTransform_ReturnValue) == 0x000290, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0002F0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x0002F8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_FinishSpawningActor_ReturnValue) == 0x000300, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_SelectFloat_ReturnValue_1) == 0x000308, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_waiting_For_Player) == 0x000310, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_waiting_For_Player' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_16) == 0x000314, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_16' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_2) == 0x000318, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_StartingMatch) == 0x00031C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_StartingMatch' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item) == 0x000320, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_3) == 0x000360, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_4) == 0x000364, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface) == 0x000368, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess) == 0x000378, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue) == 0x000379, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_16) == 0x00037C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_16' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_SwitchEnum_CmpSuccess) == 0x000380, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_16) == 0x000384, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_InText) == 0x000388, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_InText' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_17) == 0x000398, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_17' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_5) == 0x00039C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_1) == 0x0003A0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsPC_Bodycam) == 0x0003E0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsPC_Bodycam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_1) == 0x0003E8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_SwitchEnum_CmpSuccess_1) == 0x0003E9, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_IsValid_ReturnValue) == 0x0003EA, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_18) == 0x0003EC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_18' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_2) == 0x0003F0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_1) == 0x0003F8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_2) == 0x000408, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_17) == 0x00040C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_17' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_18) == 0x000410, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_18' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_1) == 0x000414, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_17) == 0x000418, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_2) == 0x00041C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_18) == 0x000420, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_19) == 0x000424, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_19' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_3) == 0x000428, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_19) == 0x00042C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_NoneIndex_Return) == 0x000430, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_NoneIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_MilitaryIndex_Return) == 0x000434, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_MilitaryIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_TerroristIndex_Return) == 0x000438, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_TerroristIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_TeamNeedPlayer) == 0x00043C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_TeamNeedPlayer' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_TeamEmpty_) == 0x00043D, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_TeamEmpty_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_Military_Return) == 0x000440, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_Military_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_Terrorist_Return) == 0x000450, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_Terrorist_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000460, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Greater_IntInt_ReturnValue) == 0x000470, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Concat_StrStr_ReturnValue) == 0x000478, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000488, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BooleanAND_ReturnValue) == 0x000489, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_Selected_Level_Name) == 0x00048C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_Index) == 0x000494, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_Index' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Selected_Level_Name) == 0x000498, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Index) == 0x0004A0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_3) == 0x0004A8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_6) == 0x0004E8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_4) == 0x0004EC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_2) == 0x0004F0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_3) == 0x000500, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_bool_Has_Been_Initd_Variable) == 0x000501, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_4) == 0x000508, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_3) == 0x000548, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_4) == 0x000558, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_7) == 0x00055C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_5) == 0x000560, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000561, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Score) == 0x000564, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_5) == 0x000570, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_8) == 0x0005B0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_6) == 0x0005B4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_4) == 0x0005B8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_5) == 0x0005C8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_6) == 0x0005D0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_9) == 0x000610, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_7) == 0x000614, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_5) == 0x000618, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_6) == 0x000628, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetGameMode_ReturnValue) == 0x000630, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsGM_Bodycam) == 0x000638, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsGM_Bodycam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_7) == 0x000640, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_10) == 0x000644, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000648, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_7) == 0x000650, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_11) == 0x000690, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_8) == 0x000694, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_6) == 0x000698, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_8) == 0x0006A8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetAllActorsOfClass_OutActors_2) == 0x0006B0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetAllActorsOfClass_OutActors_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_8) == 0x0006C0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_12) == 0x0006C8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_7) == 0x0006D0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_9) == 0x0006E0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_9) == 0x0006E1, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Slomo) == 0x0006E8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Slomo' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_9) == 0x0006F0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_13) == 0x000730, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_10) == 0x000734, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_8) == 0x000738, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_10) == 0x000748, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_bool_IsClosed_Variable) == 0x000749, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_SwitchEnum_CmpSuccess_2) == 0x00074A, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000750, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000760, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Random_OutItem) == 0x000770, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Random_OutIndex) == 0x000778, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Random_OutItem_1) == 0x00077C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Random_OutIndex_1) == 0x000784, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_PlayerInfo) == 0x000788, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_NewItem) == 0x0007D0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_NewItem' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_AddUnique_ReturnValue) == 0x000818, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_10) == 0x000820, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_11) == 0x000868, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_14) == 0x0008B0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_11) == 0x0008B4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BooleanAND_ReturnValue_1) == 0x0008B5, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_12) == 0x0008B8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_12' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_20) == 0x000900, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_13) == 0x000908, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_13' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_MakeStruct_STR_KickVote) == 0x000950, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_MakeStruct_STR_KickVote' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_21) == 0x000998, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_MakeStruct_STR_KickVote_1) == 0x0009A0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_MakeStruct_STR_KickVote_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_PlayerInfo) == 0x0009E8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_PlayerInfo' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_19) == 0x000A28, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_19' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_14) == 0x000A30, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_14' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_15) == 0x000A78, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_15' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_9) == 0x000A80, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_11) == 0x000A90, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_22) == 0x000A94, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Greater_IntInt_ReturnValue_2) == 0x000A98, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Greater_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000AA0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000AB0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_15) == 0x000AB4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_12) == 0x000AB8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BooleanAND_ReturnValue_2) == 0x000AB9, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Target_1) == 0x000AC0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Yes_) == 0x000B00, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Yes_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Target) == 0x000B08, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_Player_info) == 0x000B48, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_Player_info' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_Yes_) == 0x000B88, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_Yes_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_1) == 0x000B89, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetGameMode_ReturnValue_1) == 0x000B90, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetGameMode_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsGM_Bodycam_1) == 0x000B98, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsGM_Bodycam_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_12) == 0x000BA0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_12' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_Stop_) == 0x000BA1, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_Stop_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_RandomBoolWithWeight_ReturnValue) == 0x000BA2, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_RandomBoolWithWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_RandomBoolWithWeight_ReturnValue_1) == 0x000BA3, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_RandomBoolWithWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_20) == 0x000BA4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_20' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_16) == 0x000BA8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_16' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_17) == 0x000BE8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_17' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_1) == 0x000C28, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_13) == 0x000C30, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_13' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_10) == 0x000C38, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_14) == 0x000C48, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_14' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_16) == 0x000C4C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_13) == 0x000C50, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000C51, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_18) == 0x000C58, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_18' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_17) == 0x000C98, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_14) == 0x000C9C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_2) == 0x000CA0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_15) == 0x000CA8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_15' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Event_Delay) == 0x000CB0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_CustomEvent_Duration) == 0x000CB8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_CustomEvent_Duration' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000CC0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetAllActorsOfClass_OutActors_3) == 0x000CD0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetAllActorsOfClass_OutActors_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_19) == 0x000CE0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_19' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_18) == 0x000CE8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_ServerTravel_self_CastInput) == 0x000CF0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_ServerTravel_self_CastInput' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_15) == 0x000D00, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_NoneIndex_Return_1) == 0x000D04, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_NoneIndex_Return_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_MilitaryIndex_Return_1) == 0x000D08, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_MilitaryIndex_Return_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_TerroristIndex_Return_1) == 0x000D0C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_TerroristIndex_Return_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_TeamNeedPlayer_1) == 0x000D10, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_TeamNeedPlayer_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_TeamEmpty__1) == 0x000D11, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_TeamEmpty__1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_Military_Return_1) == 0x000D18, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_Military_Return_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamIndex_Terrorist_Return_1) == 0x000D28, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamIndex_Terrorist_Return_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x000D38, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000D39, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BooleanOR_ReturnValue_3) == 0x000D3A, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_SwitchEnum_CmpSuccess_3) == 0x000D3B, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamHasBombArray_Team_Has_Bomb_Return) == 0x000D40, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamHasBombArray_Team_Has_Bomb_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_TeamHasBombArray_Other_Team_Return) == 0x000D50, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_TeamHasBombArray_Other_Team_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Random_OutItem_2) == 0x000D60, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Random_OutItem_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Random_OutIndex_2) == 0x000DA0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Random_OutIndex_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000DA4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_20) == 0x000DA8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_20' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_19) == 0x000DE8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x000DF0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_16) == 0x000DF8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_16' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_16) == 0x000DF9, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_IsValid_ReturnValue_1) == 0x000DFA, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1) == 0x000E00, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_17) == 0x000E08, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_17' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_IsValid_ReturnValue_2) == 0x000E09, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_20) == 0x000E0C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_20' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_Select_Default) == 0x000E10, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_17) == 0x000E14, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_23) == 0x000E18, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_IsServer_ReturnValue) == 0x000E1C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetPlayerController_ReturnValue) == 0x000E20, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsBodycam_Interface_11) == 0x000E28, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsBodycam_Interface_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_18) == 0x000E38, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_18' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetAllActorsOfClass_OutActors_4) == 0x000E40, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetAllActorsOfClass_OutActors_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetSteamID_SteamID) == 0x000E50, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetSteamID_SteamID' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_IsEmpty_ReturnValue) == 0x000E60, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000E64, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_21) == 0x000E68, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_21' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_20) == 0x000EA8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_18) == 0x000EAC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_EqualEqual_StrStr_ReturnValue_2) == 0x000EAD, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_EqualEqual_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_KickPlayer_ReturnValue) == 0x000EAE, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_KickPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_SwitchEnum_CmpSuccess_4) == 0x000EAF, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_SwitchEnum_CmpSuccess_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_SwitchEnum_CmpSuccess_5) == 0x000EB0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_SwitchEnum_CmpSuccess_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Loop_Counter_Variable_21) == 0x000EB4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Loop_Counter_Variable_21' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_22) == 0x000EB8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_22' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_19) == 0x000EF8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_SelectTeam_ReturnValue) == 0x000EF9, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_SelectTeam_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_3) == 0x000F00, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_19) == 0x000F08, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_19' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_IntInt_ReturnValue_24) == 0x000F0C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_IntInt_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_21) == 0x000F10, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_20) == 0x000F14, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000F18, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000F58, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_23) == 0x000F60, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_23' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_22) == 0x000FA0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Less_IntInt_ReturnValue_21) == 0x000FA4, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Less_IntInt_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_4) == 0x000FA8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_20) == 0x000FB0, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_20' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_1) == 0x000FB8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Length_ReturnValue_23) == 0x000FF8, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Length_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_BooleanOR_ReturnValue_4) == 0x000FFC, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Greater_IntInt_ReturnValue_3) == 0x000FFD, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Greater_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_GetGamemodeInfo_GamemodeInfo_2) == 0x001000, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_GetGamemodeInfo_GamemodeInfo_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, Temp_int_Array_Index_Variable_21) == 0x001040, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::Temp_int_Array_Index_Variable_21' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Array_Get_Item_24) == 0x001048, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Array_Get_Item_24' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_AsPC_Bodycam_5) == 0x001088, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_AsPC_Bodycam_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, K2Node_DynamicCast_bSuccess_21) == 0x001090, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::K2Node_DynamicCast_bSuccess_21' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Delay_Duration_ImplicitCast) == 0x001094, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_Delay_Duration_ImplicitCast_1) == 0x001098, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam, CallFunc_ServerTravel__server__Duration_ImplicitCast) == 0x00109C, "Member 'GT_Bodycam_C_ExecuteUbergraph_GT_Bodycam::CallFunc_ServerTravel__server__Duration_ImplicitCast' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.FirstRounds
// 0x0060 (0x0060 - 0x0000)
struct GT_Bodycam_C_FirstRounds final
{
public:
	bool                                          FirstRound_0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0008(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_FirstRounds) == 0x000008, "Wrong alignment on GT_Bodycam_C_FirstRounds");
static_assert(sizeof(GT_Bodycam_C_FirstRounds) == 0x000060, "Wrong size on GT_Bodycam_C_FirstRounds");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, FirstRound_0) == 0x000000, "Member 'GT_Bodycam_C_FirstRounds::FirstRound_0' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000008, "Member 'GT_Bodycam_C_FirstRounds::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, CallFunc_GetGameInstance_ReturnValue) == 0x000048, "Member 'GT_Bodycam_C_FirstRounds::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, K2Node_DynamicCast_AsBodycam_GI) == 0x000050, "Member 'GT_Bodycam_C_FirstRounds::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'GT_Bodycam_C_FirstRounds::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000059, "Member 'GT_Bodycam_C_FirstRounds::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00005A, "Member 'GT_Bodycam_C_FirstRounds::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, CallFunc_BooleanAND_ReturnValue) == 0x00005B, "Member 'GT_Bodycam_C_FirstRounds::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_FirstRounds, CallFunc_BooleanAND_ReturnValue_1) == 0x00005C, "Member 'GT_Bodycam_C_FirstRounds::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Get BP Menu Controller Component
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_Get_BP_Menu_Controller_Component final
{
public:
	class UBP_MenuControllerComponent_C*          BP_Menu_Controller_Component;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong alignment on GT_Bodycam_C_Get_BP_Menu_Controller_Component");
static_assert(sizeof(GT_Bodycam_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong size on GT_Bodycam_C_Get_BP_Menu_Controller_Component");
static_assert(offsetof(GT_Bodycam_C_Get_BP_Menu_Controller_Component, BP_Menu_Controller_Component) == 0x000000, "Member 'GT_Bodycam_C_Get_BP_Menu_Controller_Component::BP_Menu_Controller_Component' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Get Stamina
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_Get_Stamina final
{
public:
	double                                        Stamina;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Get_Stamina) == 0x000008, "Wrong alignment on GT_Bodycam_C_Get_Stamina");
static_assert(sizeof(GT_Bodycam_C_Get_Stamina) == 0x000008, "Wrong size on GT_Bodycam_C_Get_Stamina");
static_assert(offsetof(GT_Bodycam_C_Get_Stamina, Stamina) == 0x000000, "Member 'GT_Bodycam_C_Get_Stamina::Stamina' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetBlured
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_GetBlured final
{
public:
	double                                        Blured;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetBlured) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetBlured");
static_assert(sizeof(GT_Bodycam_C_GetBlured) == 0x000008, "Wrong size on GT_Bodycam_C_GetBlured");
static_assert(offsetof(GT_Bodycam_C_GetBlured, Blured) == 0x000000, "Member 'GT_Bodycam_C_GetBlured::Blured' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetBurnedRef
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_GetBurnedRef final
{
public:
	class USceneComponent*                        BurnedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetBurnedRef) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetBurnedRef");
static_assert(sizeof(GT_Bodycam_C_GetBurnedRef) == 0x000008, "Wrong size on GT_Bodycam_C_GetBurnedRef");
static_assert(offsetof(GT_Bodycam_C_GetBurnedRef, BurnedMesh) == 0x000000, "Member 'GT_Bodycam_C_GetBurnedRef::BurnedMesh' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetFlashBangEffect
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_GetFlashBangEffect final
{
public:
	double                                        FlashEffect;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetFlashBangEffect) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetFlashBangEffect");
static_assert(sizeof(GT_Bodycam_C_GetFlashBangEffect) == 0x000008, "Wrong size on GT_Bodycam_C_GetFlashBangEffect");
static_assert(offsetof(GT_Bodycam_C_GetFlashBangEffect, FlashEffect) == 0x000000, "Member 'GT_Bodycam_C_GetFlashBangEffect::FlashEffect' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetGameMode
// 0x0080 (0x0080 - 0x0000)
struct GT_Bodycam_C_GetGameMode final
{
public:
	struct FSTR_GamemodeWinInfo                   GameMode_0;                                        // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0040(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetGameMode) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetGameMode");
static_assert(sizeof(GT_Bodycam_C_GetGameMode) == 0x000080, "Wrong size on GT_Bodycam_C_GetGameMode");
static_assert(offsetof(GT_Bodycam_C_GetGameMode, GameMode_0) == 0x000000, "Member 'GT_Bodycam_C_GetGameMode::GameMode_0' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGameMode, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000040, "Member 'GT_Bodycam_C_GetGameMode::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetGamemodeInfo
// 0x00B8 (0x00B8 - 0x0000)
struct GT_Bodycam_C_GetGamemodeInfo final
{
public:
	struct FSTR_GamemodeWinInfo                   GamemodeInfo;                                      // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0050(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0064(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0070(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetGamemodeInfo) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetGamemodeInfo");
static_assert(sizeof(GT_Bodycam_C_GetGamemodeInfo) == 0x0000B8, "Wrong size on GT_Bodycam_C_GetGamemodeInfo");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, GamemodeInfo) == 0x000000, "Member 'GT_Bodycam_C_GetGamemodeInfo::GamemodeInfo' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, Temp_int_Array_Index_Variable) == 0x000040, "Member 'GT_Bodycam_C_GetGamemodeInfo::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'GT_Bodycam_C_GetGamemodeInfo::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'GT_Bodycam_C_GetGamemodeInfo::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000050, "Member 'GT_Bodycam_C_GetGamemodeInfo::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, CallFunc_Array_Length_ReturnValue) == 0x000060, "Member 'GT_Bodycam_C_GetGamemodeInfo::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, CallFunc_Array_Get_Item) == 0x000064, "Member 'GT_Bodycam_C_GetGamemodeInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, CallFunc_Less_IntInt_ReturnValue) == 0x00006C, "Member 'GT_Bodycam_C_GetGamemodeInfo::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, CallFunc_GetDataTableRowFromName_OutRow) == 0x000070, "Member 'GT_Bodycam_C_GetGamemodeInfo::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0000B0, "Member 'GT_Bodycam_C_GetGamemodeInfo::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetGamemodeInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000B1, "Member 'GT_Bodycam_C_GetGamemodeInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_GetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetHealth) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetHealth");
static_assert(sizeof(GT_Bodycam_C_GetHealth) == 0x000008, "Wrong size on GT_Bodycam_C_GetHealth");
static_assert(offsetof(GT_Bodycam_C_GetHealth, Health) == 0x000000, "Member 'GT_Bodycam_C_GetHealth::Health' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetKickedPlayerVoted
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_GetKickedPlayerVoted final
{
public:
	TArray<class FString>                         KickplayerAlreadyVote;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Bodycam_C_GetKickedPlayerVoted) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetKickedPlayerVoted");
static_assert(sizeof(GT_Bodycam_C_GetKickedPlayerVoted) == 0x000010, "Wrong size on GT_Bodycam_C_GetKickedPlayerVoted");
static_assert(offsetof(GT_Bodycam_C_GetKickedPlayerVoted, KickplayerAlreadyVote) == 0x000000, "Member 'GT_Bodycam_C_GetKickedPlayerVoted::KickplayerAlreadyVote' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetMenuSettings
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_GetMenuSettings final
{
public:
	class UBP_MenuControllerComponent_C*          Bp_MenuController;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetMenuSettings) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetMenuSettings");
static_assert(sizeof(GT_Bodycam_C_GetMenuSettings) == 0x000008, "Wrong size on GT_Bodycam_C_GetMenuSettings");
static_assert(offsetof(GT_Bodycam_C_GetMenuSettings, Bp_MenuController) == 0x000000, "Member 'GT_Bodycam_C_GetMenuSettings::Bp_MenuController' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_GetMutePlayer final
{
public:
	TArray<class FString>                         MutePlayer;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Bodycam_C_GetMutePlayer) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetMutePlayer");
static_assert(sizeof(GT_Bodycam_C_GetMutePlayer) == 0x000010, "Wrong size on GT_Bodycam_C_GetMutePlayer");
static_assert(offsetof(GT_Bodycam_C_GetMutePlayer, MutePlayer) == 0x000000, "Member 'GT_Bodycam_C_GetMutePlayer::MutePlayer' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetPlayerConnected
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_GetPlayerConnected final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerConnected;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Bodycam_C_GetPlayerConnected) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetPlayerConnected");
static_assert(sizeof(GT_Bodycam_C_GetPlayerConnected) == 0x000010, "Wrong size on GT_Bodycam_C_GetPlayerConnected");
static_assert(offsetof(GT_Bodycam_C_GetPlayerConnected, PlayerConnected) == 0x000000, "Member 'GT_Bodycam_C_GetPlayerConnected::PlayerConnected' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetPlayerKickVote
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_GetPlayerKickVote final
{
public:
	TArray<struct FSTR_KickVote>                  KickVotePlayer;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Bodycam_C_GetPlayerKickVote) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetPlayerKickVote");
static_assert(sizeof(GT_Bodycam_C_GetPlayerKickVote) == 0x000010, "Wrong size on GT_Bodycam_C_GetPlayerKickVote");
static_assert(offsetof(GT_Bodycam_C_GetPlayerKickVote, KickVotePlayer) == 0x000000, "Member 'GT_Bodycam_C_GetPlayerKickVote::KickVotePlayer' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetPlayerSkin
// 0x02E8 (0x02E8 - 0x0000)
struct GT_Bodycam_C_GetPlayerSkin final
{
public:
	struct FSTR_TEST                              Player_Skin;                                       // 0x0000(0x02E0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetPlayerSkin) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetPlayerSkin");
static_assert(sizeof(GT_Bodycam_C_GetPlayerSkin) == 0x0002E8, "Wrong size on GT_Bodycam_C_GetPlayerSkin");
static_assert(offsetof(GT_Bodycam_C_GetPlayerSkin, Player_Skin) == 0x000000, "Member 'GT_Bodycam_C_GetPlayerSkin::Player_Skin' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetPlayerSkin, Valid_) == 0x0002E0, "Member 'GT_Bodycam_C_GetPlayerSkin::Valid_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetRagdollSystem
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_GetRagdollSystem final
{
public:
	class UWW_RagdollSystem_C*                    Ragdoll_System;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetRagdollSystem) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetRagdollSystem");
static_assert(sizeof(GT_Bodycam_C_GetRagdollSystem) == 0x000008, "Wrong size on GT_Bodycam_C_GetRagdollSystem");
static_assert(offsetof(GT_Bodycam_C_GetRagdollSystem, Ragdoll_System) == 0x000000, "Member 'GT_Bodycam_C_GetRagdollSystem::Ragdoll_System' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetReady?
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_GetReady_ final
{
public:
	bool                                          IsReady_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetReady_) == 0x000001, "Wrong alignment on GT_Bodycam_C_GetReady_");
static_assert(sizeof(GT_Bodycam_C_GetReady_) == 0x000001, "Wrong size on GT_Bodycam_C_GetReady_");
static_assert(offsetof(GT_Bodycam_C_GetReady_, IsReady_) == 0x000000, "Member 'GT_Bodycam_C_GetReady_::IsReady_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetServerSteamID
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_GetServerSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetServerSteamID) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetServerSteamID");
static_assert(sizeof(GT_Bodycam_C_GetServerSteamID) == 0x000010, "Wrong size on GT_Bodycam_C_GetServerSteamID");
static_assert(offsetof(GT_Bodycam_C_GetServerSteamID, SteamID) == 0x000000, "Member 'GT_Bodycam_C_GetServerSteamID::SteamID' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetStarterWeapons
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_GetStarterWeapons final
{
public:
	TArray<struct FSTR_Actor>                     Weapons;                                           // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(GT_Bodycam_C_GetStarterWeapons) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetStarterWeapons");
static_assert(sizeof(GT_Bodycam_C_GetStarterWeapons) == 0x000010, "Wrong size on GT_Bodycam_C_GetStarterWeapons");
static_assert(offsetof(GT_Bodycam_C_GetStarterWeapons, Weapons) == 0x000000, "Member 'GT_Bodycam_C_GetStarterWeapons::Weapons' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_GetSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetSteamID) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetSteamID");
static_assert(sizeof(GT_Bodycam_C_GetSteamID) == 0x000010, "Wrong size on GT_Bodycam_C_GetSteamID");
static_assert(offsetof(GT_Bodycam_C_GetSteamID, SteamID) == 0x000000, "Member 'GT_Bodycam_C_GetSteamID::SteamID' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetSurvivorStatuts
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_GetSurvivorStatuts final
{
public:
	class UWW_SurvivorStatus_C*                   SurvivorComponant;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetSurvivorStatuts) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetSurvivorStatuts");
static_assert(sizeof(GT_Bodycam_C_GetSurvivorStatuts) == 0x000008, "Wrong size on GT_Bodycam_C_GetSurvivorStatuts");
static_assert(offsetof(GT_Bodycam_C_GetSurvivorStatuts, SurvivorComponant) == 0x000000, "Member 'GT_Bodycam_C_GetSurvivorStatuts::SurvivorComponant' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetTeam
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_GetTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_GetTeam) == 0x000001, "Wrong alignment on GT_Bodycam_C_GetTeam");
static_assert(sizeof(GT_Bodycam_C_GetTeam) == 0x000001, "Wrong size on GT_Bodycam_C_GetTeam");
static_assert(offsetof(GT_Bodycam_C_GetTeam, Team) == 0x000000, "Member 'GT_Bodycam_C_GetTeam::Team' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetTeamList
// 0x0098 (0x0098 - 0x0000)
struct GT_Bodycam_C_GetTeamList final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Info;                                              // 0x0008(0x0010)(Parm, OutParm)
	bool                                          Temp_bool_Variable;                                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B[0x5];                                       // 0x001B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Temp_struct_Variable;                              // 0x0020(0x0010)(ReferenceParm)
	int32                                         CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return; // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexTeamAlive_IndexTerroristAlive_Return; // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_IndexTeamAlive_WinningTeam;               // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_MilitaryTeam_Return;       // 0x0040(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_TerroristTeam_Return;      // 0x0050(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    K2Node_Select_Default;                             // 0x0068(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    K2Node_Select_Default_1;                           // 0x0078(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    K2Node_Select_Default_2;                           // 0x0088(0x0010)(ReferenceParm)
};
static_assert(alignof(GT_Bodycam_C_GetTeamList) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetTeamList");
static_assert(sizeof(GT_Bodycam_C_GetTeamList) == 0x000098, "Wrong size on GT_Bodycam_C_GetTeamList");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, Team) == 0x000000, "Member 'GT_Bodycam_C_GetTeamList::Team' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, Info) == 0x000008, "Member 'GT_Bodycam_C_GetTeamList::Info' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, Temp_bool_Variable) == 0x000018, "Member 'GT_Bodycam_C_GetTeamList::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, Temp_bool_Variable_1) == 0x000019, "Member 'GT_Bodycam_C_GetTeamList::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, Temp_byte_Variable) == 0x00001A, "Member 'GT_Bodycam_C_GetTeamList::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, Temp_struct_Variable) == 0x000020, "Member 'GT_Bodycam_C_GetTeamList::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return) == 0x000030, "Member 'GT_Bodycam_C_GetTeamList::CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, CallFunc_IndexTeamAlive_IndexTerroristAlive_Return) == 0x000034, "Member 'GT_Bodycam_C_GetTeamList::CallFunc_IndexTeamAlive_IndexTerroristAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, CallFunc_IndexTeamAlive_WinningTeam) == 0x000038, "Member 'GT_Bodycam_C_GetTeamList::CallFunc_IndexTeamAlive_WinningTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, CallFunc_IndexTeamAlive_MilitaryTeam_Return) == 0x000040, "Member 'GT_Bodycam_C_GetTeamList::CallFunc_IndexTeamAlive_MilitaryTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, CallFunc_IndexTeamAlive_TerroristTeam_Return) == 0x000050, "Member 'GT_Bodycam_C_GetTeamList::CallFunc_IndexTeamAlive_TerroristTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, CallFunc_Array_IsEmpty_ReturnValue) == 0x000060, "Member 'GT_Bodycam_C_GetTeamList::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000061, "Member 'GT_Bodycam_C_GetTeamList::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, K2Node_Select_Default) == 0x000068, "Member 'GT_Bodycam_C_GetTeamList::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, K2Node_Select_Default_1) == 0x000078, "Member 'GT_Bodycam_C_GetTeamList::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTeamList, K2Node_Select_Default_2) == 0x000088, "Member 'GT_Bodycam_C_GetTeamList::K2Node_Select_Default_2' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.GetTopScore
// 0x0020 (0x0020 - 0x0000)
struct GT_Bodycam_C_GetTopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScore;                                          // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TopScore_TopScorePcArray_Result;          // 0x0010(0x0010)(ReferenceParm)
};
static_assert(alignof(GT_Bodycam_C_GetTopScore) == 0x000008, "Wrong alignment on GT_Bodycam_C_GetTopScore");
static_assert(sizeof(GT_Bodycam_C_GetTopScore) == 0x000020, "Wrong size on GT_Bodycam_C_GetTopScore");
static_assert(offsetof(GT_Bodycam_C_GetTopScore, TopScore) == 0x000000, "Member 'GT_Bodycam_C_GetTopScore::TopScore' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_GetTopScore, CallFunc_TopScore_TopScorePcArray_Result) == 0x000010, "Member 'GT_Bodycam_C_GetTopScore::CallFunc_TopScore_TopScorePcArray_Result' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.IndexTeamAlive
// 0x0118 (0x0118 - 0x0000)
struct GT_Bodycam_C_IndexTeamAlive final
{
public:
	int32                                         IndexMilitaryAlive_Return;                         // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexTerroristAlive_Return;                        // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WinningTeam_0;                                     // 0x0008(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    MilitaryTeam_Return;                               // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    TerroristTeam_Return;                              // 0x0020(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    TerroristTeam;                                     // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSTR_PCInfo>                    MilitaryTeam;                                      // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         IndexMilitaryAlive;                                // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         IndexTerroristAlive;                               // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_2;                              // 0x005A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_3;                              // 0x005B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_4;                              // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_5;                              // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_6;                              // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x005F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_7;                              // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_8;                              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGameMode                                     Temp_byte_Variable_9;                              // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0063(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_10;                             // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0065(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x0066(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x0067(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_11;                             // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_12;                             // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamHasBomb_Team_Has_Bomb;                // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamHasBomb_Team_Has_Bomb_1;              // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamHasBomb_Team_Has_Bomb_2;              // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABombe_C*                               CallFunc_AnyBombExist_Bomb;                        // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_13;                             // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_14;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0098(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default;                             // 0x00DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DD[0x3];                                       // 0x00DD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_1;                           // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EE[0x2];                                       // 0x00EE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsDead_Dead_;                             // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_2;                           // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_3;                           // 0x0105(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_4;                           // 0x0106(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_107[0x1];                                      // 0x0107(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_5;                           // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_6;                           // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10E[0x2];                                      // 0x010E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_IndexTeamAlive) == 0x000008, "Wrong alignment on GT_Bodycam_C_IndexTeamAlive");
static_assert(sizeof(GT_Bodycam_C_IndexTeamAlive) == 0x000118, "Wrong size on GT_Bodycam_C_IndexTeamAlive");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, IndexMilitaryAlive_Return) == 0x000000, "Member 'GT_Bodycam_C_IndexTeamAlive::IndexMilitaryAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, IndexTerroristAlive_Return) == 0x000004, "Member 'GT_Bodycam_C_IndexTeamAlive::IndexTerroristAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, WinningTeam_0) == 0x000008, "Member 'GT_Bodycam_C_IndexTeamAlive::WinningTeam_0' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, MilitaryTeam_Return) == 0x000010, "Member 'GT_Bodycam_C_IndexTeamAlive::MilitaryTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, TerroristTeam_Return) == 0x000020, "Member 'GT_Bodycam_C_IndexTeamAlive::TerroristTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, TerroristTeam) == 0x000030, "Member 'GT_Bodycam_C_IndexTeamAlive::TerroristTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, MilitaryTeam) == 0x000040, "Member 'GT_Bodycam_C_IndexTeamAlive::MilitaryTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, IndexMilitaryAlive) == 0x000050, "Member 'GT_Bodycam_C_IndexTeamAlive::IndexMilitaryAlive' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, IndexTerroristAlive) == 0x000054, "Member 'GT_Bodycam_C_IndexTeamAlive::IndexTerroristAlive' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable) == 0x000058, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_1) == 0x000059, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_2) == 0x00005A, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_3) == 0x00005B, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_4) == 0x00005C, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_5) == 0x00005D, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_6) == 0x00005E, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_bool_Variable) == 0x00005F, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_7) == 0x000060, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_8) == 0x000061, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_8' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_9) == 0x000062, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_9' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_bool_Variable_1) == 0x000063, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_10) == 0x000064, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_10' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_bool_Variable_2) == 0x000065, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_bool_Variable_3) == 0x000066, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_bool_Variable_4) == 0x000067, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_int_Variable) == 0x000068, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_11) == 0x00006C, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_11' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_int_Variable_1) == 0x000070, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_int_Loop_Counter_Variable) == 0x000074, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_12) == 0x000080, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_12' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_TeamHasBomb_Team_Has_Bomb) == 0x000081, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_TeamHasBomb_Team_Has_Bomb' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_TeamHasBomb_Team_Has_Bomb_1) == 0x000082, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_TeamHasBomb_Team_Has_Bomb_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_TeamHasBomb_Team_Has_Bomb_2) == 0x000083, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_TeamHasBomb_Team_Has_Bomb_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_AnyBombExist_Bomb) == 0x000088, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_AnyBombExist_Bomb' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_13) == 0x000090, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_13' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, Temp_byte_Variable_14) == 0x000091, "Member 'GT_Bodycam_C_IndexTeamAlive::Temp_byte_Variable_14' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Array_Get_Item) == 0x000098, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Array_Add_ReturnValue) == 0x0000D8, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_Select_Default) == 0x0000DC, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Array_Add_ReturnValue_1) == 0x0000E0, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_Select_Default_1) == 0x0000E4, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Array_Length_ReturnValue) == 0x0000E8, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_SwitchEnum_CmpSuccess) == 0x0000EC, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Less_IntInt_ReturnValue) == 0x0000ED, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_DynamicCast_AsBodycam_Interface) == 0x0000F0, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_DynamicCast_bSuccess) == 0x000100, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_IsDead_Dead_) == 0x000101, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_IsDead_Dead_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000102, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Greater_IntInt_ReturnValue) == 0x000103, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_Select_Default_2) == 0x000104, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_Select_Default_3) == 0x000105, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_Select_Default_4) == 0x000106, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Add_IntInt_ReturnValue_1) == 0x000108, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_Select_Default_5) == 0x00010C, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, K2Node_Select_Default_6) == 0x00010D, "Member 'GT_Bodycam_C_IndexTeamAlive::K2Node_Select_Default_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_IndexTeamAlive, CallFunc_Add_IntInt_ReturnValue_2) == 0x000110, "Member 'GT_Bodycam_C_IndexTeamAlive::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_IsDead final
{
public:
	bool                                          Dead_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_IsDead) == 0x000001, "Wrong alignment on GT_Bodycam_C_IsDead");
static_assert(sizeof(GT_Bodycam_C_IsDead) == 0x000001, "Wrong size on GT_Bodycam_C_IsDead");
static_assert(offsetof(GT_Bodycam_C_IsDead, Dead_) == 0x000000, "Member 'GT_Bodycam_C_IsDead::Dead_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.IsDestroyabe?
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_IsDestroyabe_ final
{
public:
	bool                                          Destroyable_;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_IsDestroyabe_) == 0x000001, "Wrong alignment on GT_Bodycam_C_IsDestroyabe_");
static_assert(sizeof(GT_Bodycam_C_IsDestroyabe_) == 0x000001, "Wrong size on GT_Bodycam_C_IsDestroyabe_");
static_assert(offsetof(GT_Bodycam_C_IsDestroyabe_, Destroyable_) == 0x000000, "Member 'GT_Bodycam_C_IsDestroyabe_::Destroyable_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.IsReady?
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_IsReady_ final
{
public:
	bool                                          IsReady__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_IsReady_) == 0x000001, "Wrong alignment on GT_Bodycam_C_IsReady_");
static_assert(sizeof(GT_Bodycam_C_IsReady_) == 0x000001, "Wrong size on GT_Bodycam_C_IsReady_");
static_assert(offsetof(GT_Bodycam_C_IsReady_, IsReady__0) == 0x000000, "Member 'GT_Bodycam_C_IsReady_::IsReady__0' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.IsStress
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_IsStress final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_IsStress) == 0x000001, "Wrong alignment on GT_Bodycam_C_IsStress");
static_assert(sizeof(GT_Bodycam_C_IsStress) == 0x000001, "Wrong size on GT_Bodycam_C_IsStress");
static_assert(offsetof(GT_Bodycam_C_IsStress, Yes_) == 0x000000, "Member 'GT_Bodycam_C_IsStress::Yes_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.IsTalking?
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_IsTalking_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_IsTalking_) == 0x000001, "Wrong alignment on GT_Bodycam_C_IsTalking_");
static_assert(sizeof(GT_Bodycam_C_IsTalking_) == 0x000001, "Wrong size on GT_Bodycam_C_IsTalking_");
static_assert(offsetof(GT_Bodycam_C_IsTalking_, IsTalking__0) == 0x000000, "Member 'GT_Bodycam_C_IsTalking_::IsTalking__0' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Kick?
// 0x0040 (0x0040 - 0x0000)
struct GT_Bodycam_C_Kick_ final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Kick_) == 0x000008, "Wrong alignment on GT_Bodycam_C_Kick_");
static_assert(sizeof(GT_Bodycam_C_Kick_) == 0x000040, "Wrong size on GT_Bodycam_C_Kick_");
static_assert(offsetof(GT_Bodycam_C_Kick_, Target) == 0x000000, "Member 'GT_Bodycam_C_Kick_::Target' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Kick? (Server)
// 0x0040 (0x0040 - 0x0000)
struct GT_Bodycam_C_Kick___Server_ final
{
public:
	struct FSTR_PCInfo                            PlayerInfo;                                        // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Kick___Server_) == 0x000008, "Wrong alignment on GT_Bodycam_C_Kick___Server_");
static_assert(sizeof(GT_Bodycam_C_Kick___Server_) == 0x000040, "Wrong size on GT_Bodycam_C_Kick___Server_");
static_assert(offsetof(GT_Bodycam_C_Kick___Server_, PlayerInfo) == 0x000000, "Member 'GT_Bodycam_C_Kick___Server_::PlayerInfo' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.KickPlayer
// 0x0048 (0x0048 - 0x0000)
struct GT_Bodycam_C_KickPlayer final
{
public:
	struct FSTR_KickVote                          PlayerInfo;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_KickPlayer) == 0x000008, "Wrong alignment on GT_Bodycam_C_KickPlayer");
static_assert(sizeof(GT_Bodycam_C_KickPlayer) == 0x000048, "Wrong size on GT_Bodycam_C_KickPlayer");
static_assert(offsetof(GT_Bodycam_C_KickPlayer, PlayerInfo) == 0x000000, "Member 'GT_Bodycam_C_KickPlayer::PlayerInfo' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.KickPlayer (Server)
// 0x0048 (0x0048 - 0x0000)
struct GT_Bodycam_C_KickPlayer__Server_ final
{
public:
	struct FSTR_KickVote                          NewItem;                                           // 0x0000(0x0048)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_KickPlayer__Server_) == 0x000008, "Wrong alignment on GT_Bodycam_C_KickPlayer__Server_");
static_assert(sizeof(GT_Bodycam_C_KickPlayer__Server_) == 0x000048, "Wrong size on GT_Bodycam_C_KickPlayer__Server_");
static_assert(offsetof(GT_Bodycam_C_KickPlayer__Server_, NewItem) == 0x000000, "Member 'GT_Bodycam_C_KickPlayer__Server_::NewItem' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.MaxPlayerPerTeam
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_MaxPlayerPerTeam final
{
public:
	int32                                         MaxPlayerPerTeam_0;                                // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Player_Remain_Match_Max_Player;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Player_Remain_Player_Remain;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_MaxPlayerPerTeam) == 0x000004, "Wrong alignment on GT_Bodycam_C_MaxPlayerPerTeam");
static_assert(sizeof(GT_Bodycam_C_MaxPlayerPerTeam) == 0x000010, "Wrong size on GT_Bodycam_C_MaxPlayerPerTeam");
static_assert(offsetof(GT_Bodycam_C_MaxPlayerPerTeam, MaxPlayerPerTeam_0) == 0x000000, "Member 'GT_Bodycam_C_MaxPlayerPerTeam::MaxPlayerPerTeam_0' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_MaxPlayerPerTeam, CallFunc_Player_Remain_Match_Max_Player) == 0x000004, "Member 'GT_Bodycam_C_MaxPlayerPerTeam::CallFunc_Player_Remain_Match_Max_Player' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_MaxPlayerPerTeam, CallFunc_Player_Remain_Player_Remain) == 0x000008, "Member 'GT_Bodycam_C_MaxPlayerPerTeam::CallFunc_Player_Remain_Player_Remain' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_MaxPlayerPerTeam, CallFunc_Divide_IntInt_ReturnValue) == 0x00000C, "Member 'GT_Bodycam_C_MaxPlayerPerTeam::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.MuteID
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_MuteID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_MuteID) == 0x000008, "Wrong alignment on GT_Bodycam_C_MuteID");
static_assert(sizeof(GT_Bodycam_C_MuteID) == 0x000010, "Wrong size on GT_Bodycam_C_MuteID");
static_assert(offsetof(GT_Bodycam_C_MuteID, SteamID) == 0x000000, "Member 'GT_Bodycam_C_MuteID::SteamID' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.NewKickVote
// 0x0040 (0x0040 - 0x0000)
struct GT_Bodycam_C_NewKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_NewKickVote) == 0x000008, "Wrong alignment on GT_Bodycam_C_NewKickVote");
static_assert(sizeof(GT_Bodycam_C_NewKickVote) == 0x000040, "Wrong size on GT_Bodycam_C_NewKickVote");
static_assert(offsetof(GT_Bodycam_C_NewKickVote, Target) == 0x000000, "Member 'GT_Bodycam_C_NewKickVote::Target' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.OnPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_OnPlayerDeath final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_OnPlayerDeath) == 0x000008, "Wrong alignment on GT_Bodycam_C_OnPlayerDeath");
static_assert(sizeof(GT_Bodycam_C_OnPlayerDeath) == 0x000008, "Wrong size on GT_Bodycam_C_OnPlayerDeath");
static_assert(offsetof(GT_Bodycam_C_OnPlayerDeath, PC) == 0x000000, "Member 'GT_Bodycam_C_OnPlayerDeath::PC' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.OnRep_GM_statue
// 0x0028 (0x0028 - 0x0000)
struct GT_Bodycam_C_OnRep_GM_statue final
{
public:
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0000(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_OnRep_GM_statue) == 0x000008, "Wrong alignment on GT_Bodycam_C_OnRep_GM_statue");
static_assert(sizeof(GT_Bodycam_C_OnRep_GM_statue) == 0x000028, "Wrong size on GT_Bodycam_C_OnRep_GM_statue");
static_assert(offsetof(GT_Bodycam_C_OnRep_GM_statue, CallFunc_GetPlayerController_ReturnValue) == 0x000000, "Member 'GT_Bodycam_C_OnRep_GM_statue::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_OnRep_GM_statue, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'GT_Bodycam_C_OnRep_GM_statue::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_OnRep_GM_statue, K2Node_DynamicCast_AsBodycam_Interface) == 0x000010, "Member 'GT_Bodycam_C_OnRep_GM_statue::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_OnRep_GM_statue, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'GT_Bodycam_C_OnRep_GM_statue::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.OnTrySelectTeam
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_OnTrySelectTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_OnTrySelectTeam) == 0x000001, "Wrong alignment on GT_Bodycam_C_OnTrySelectTeam");
static_assert(sizeof(GT_Bodycam_C_OnTrySelectTeam) == 0x000001, "Wrong size on GT_Bodycam_C_OnTrySelectTeam");
static_assert(offsetof(GT_Bodycam_C_OnTrySelectTeam, Team) == 0x000000, "Member 'GT_Bodycam_C_OnTrySelectTeam::Team' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Stop End Round Sound (Multicast)
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_Stop_End_Round_Sound__Multicast_ final
{
public:
	bool                                          Stop_;                                             // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Stop_End_Round_Sound__Multicast_) == 0x000001, "Wrong alignment on GT_Bodycam_C_Stop_End_Round_Sound__Multicast_");
static_assert(sizeof(GT_Bodycam_C_Stop_End_Round_Sound__Multicast_) == 0x000001, "Wrong size on GT_Bodycam_C_Stop_End_Round_Sound__Multicast_");
static_assert(offsetof(GT_Bodycam_C_Stop_End_Round_Sound__Multicast_, Stop_) == 0x000000, "Member 'GT_Bodycam_C_Stop_End_Round_Sound__Multicast_::Stop_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Player Remain
// 0x003C (0x003C - 0x0000)
struct GT_Bodycam_C_Player_Remain final
{
public:
	int32                                         Match_Max_Player;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Player_Remain_0;                                   // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         How_many_Player_Remain;                            // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         How_Many_Player_To_start;                          // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Get_Item;                           // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Player_Remain) == 0x000004, "Wrong alignment on GT_Bodycam_C_Player_Remain");
static_assert(sizeof(GT_Bodycam_C_Player_Remain) == 0x00003C, "Wrong size on GT_Bodycam_C_Player_Remain");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, Match_Max_Player) == 0x000000, "Member 'GT_Bodycam_C_Player_Remain::Match_Max_Player' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, Player_Remain_0) == 0x000004, "Member 'GT_Bodycam_C_Player_Remain::Player_Remain_0' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, How_many_Player_Remain) == 0x000008, "Member 'GT_Bodycam_C_Player_Remain::How_many_Player_Remain' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, How_Many_Player_To_start) == 0x00000C, "Member 'GT_Bodycam_C_Player_Remain::How_Many_Player_To_start' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, Temp_bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'GT_Bodycam_C_Player_Remain::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, Temp_int_Array_Index_Variable) == 0x000014, "Member 'GT_Bodycam_C_Player_Remain::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, Temp_int_Loop_Counter_Variable) == 0x00001C, "Member 'GT_Bodycam_C_Player_Remain::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Array_Length_ReturnValue) == 0x000024, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Array_Get_Item) == 0x000028, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Subtract_IntInt_ReturnValue) == 0x00002C, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Less_IntInt_ReturnValue) == 0x000031, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Array_Length_ReturnValue_1) == 0x000034, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_Less_IntInt_ReturnValue_1) == 0x000038, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Player_Remain, CallFunc_BooleanAND_ReturnValue) == 0x000039, "Member 'GT_Bodycam_C_Player_Remain::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.PlayerWaitedArray
// 0x0128 (0x0128 - 0x0000)
struct GT_Bodycam_C_PlayerWaitedArray final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerWaited_Return;                               // 0x0000(0x0010)(Parm, OutParm)
	class FString                                 PlayerSteamName_Return;                            // 0x0010(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
	class FString                                 PlayerSteamName;                                   // 0x0020(0x0010)(Edit, BlueprintVisible, ZeroConstructor, HasGetValueTypeHash)
	TArray<struct FSTR_PCInfo>                    PlayerWaited;                                      // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0058(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue;                  // 0x00A0(0x0008)(NoDestructor)
	class FString                                 CallFunc_GetFriendPersonaName_ReturnValue;         // 0x00A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x00B8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_1;                         // 0x00C8(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0108(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_PlayerWaitedArray) == 0x000008, "Wrong alignment on GT_Bodycam_C_PlayerWaitedArray");
static_assert(sizeof(GT_Bodycam_C_PlayerWaitedArray) == 0x000128, "Wrong size on GT_Bodycam_C_PlayerWaitedArray");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, PlayerWaited_Return) == 0x000000, "Member 'GT_Bodycam_C_PlayerWaitedArray::PlayerWaited_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, PlayerSteamName_Return) == 0x000010, "Member 'GT_Bodycam_C_PlayerWaitedArray::PlayerSteamName_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, PlayerSteamName) == 0x000020, "Member 'GT_Bodycam_C_PlayerWaitedArray::PlayerSteamName' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, PlayerWaited) == 0x000030, "Member 'GT_Bodycam_C_PlayerWaitedArray::PlayerWaited' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, Temp_int_Loop_Counter_Variable) == 0x000040, "Member 'GT_Bodycam_C_PlayerWaitedArray::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Add_IntInt_ReturnValue) == 0x000044, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, Temp_int_Array_Index_Variable) == 0x000048, "Member 'GT_Bodycam_C_PlayerWaitedArray::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, Temp_int_Array_Index_Variable_1) == 0x00004C, "Member 'GT_Bodycam_C_PlayerWaitedArray::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, Temp_int_Loop_Counter_Variable_1) == 0x000050, "Member 'GT_Bodycam_C_PlayerWaitedArray::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Add_IntInt_ReturnValue_1) == 0x000054, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Array_Get_Item) == 0x000058, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_MakeSteamID_ReturnValue) == 0x0000A0, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_MakeSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_GetFriendPersonaName_ReturnValue) == 0x0000A8, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_GetFriendPersonaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Concat_StrStr_ReturnValue) == 0x0000B8, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Array_Get_Item_1) == 0x0000C8, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000108, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Array_Add_ReturnValue) == 0x000118, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Array_Length_ReturnValue_1) == 0x00011C, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, K2Node_SwitchEnum_CmpSuccess) == 0x000120, "Member 'GT_Bodycam_C_PlayerWaitedArray::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_PlayerWaitedArray, CallFunc_Less_IntInt_ReturnValue_1) == 0x000121, "Member 'GT_Bodycam_C_PlayerWaitedArray::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.RandomStuff
// 0x00D0 (0x00D0 - 0x0000)
struct GT_Bodycam_C_RandomStuff final
{
public:
	TArray<struct FSTR_WEP>                       RandomEquipment;                                   // 0x0000(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_16[0x2];                                       // 0x0016(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0018(0x0010)(ReferenceParm)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_1;       // 0x0028(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Random_OutItem;                     // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Actor                             CallFunc_GetDataTableRowFromName_OutRow;           // 0x0050(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Actor                             CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0068(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_FirstRounds_FirstRound;                   // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames_2;       // 0x0090(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Random_OutItem_1;                   // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex_1;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD[0x3];                                       // 0x00AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Actor                             CallFunc_GetDataTableRowFromName_OutRow_2;         // 0x00B0(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_2;    // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_RandomStuff) == 0x000008, "Wrong alignment on GT_Bodycam_C_RandomStuff");
static_assert(sizeof(GT_Bodycam_C_RandomStuff) == 0x0000D0, "Wrong size on GT_Bodycam_C_RandomStuff");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, RandomEquipment) == 0x000000, "Member 'GT_Bodycam_C_RandomStuff::RandomEquipment' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, Temp_int_Array_Index_Variable) == 0x000010, "Member 'GT_Bodycam_C_RandomStuff::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000014, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, K2Node_SwitchEnum_CmpSuccess) == 0x000015, "Member 'GT_Bodycam_C_RandomStuff::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000018, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowNames_OutRowNames_1) == 0x000028, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowNames_OutRowNames_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_Get_Item) == 0x000038, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_Random_OutItem) == 0x000040, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_Random_OutIndex) == 0x000048, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowFromName_OutRow) == 0x000050, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x000060, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000068, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000078, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_AddUnique_ReturnValue) == 0x00007C, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000080, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_Length_ReturnValue) == 0x000084, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_FirstRounds_FirstRound) == 0x000088, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_FirstRounds_FirstRound' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, Temp_int_Loop_Counter_Variable) == 0x00008C, "Member 'GT_Bodycam_C_RandomStuff::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowNames_OutRowNames_2) == 0x000090, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowNames_OutRowNames_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_Random_OutItem_1) == 0x0000A0, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_Random_OutItem_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_Random_OutIndex_1) == 0x0000A8, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_Random_OutIndex_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Less_IntInt_ReturnValue) == 0x0000AC, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowFromName_OutRow_2) == 0x0000B0, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowFromName_OutRow_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_GetDataTableRowFromName_ReturnValue_2) == 0x0000C0, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_GetDataTableRowFromName_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Array_AddUnique_ReturnValue_2) == 0x0000C4, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_RandomStuff, CallFunc_Add_IntInt_ReturnValue) == 0x0000C8, "Member 'GT_Bodycam_C_RandomStuff::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.SelectTeam
// 0x00B0 (0x00B0 - 0x0000)
struct GT_Bodycam_C_SelectTeam final
{
public:
	E_Team                                        PlayerAlreadyInTeam;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_2;                              // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_3;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_4;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_2;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_3;                              // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_4;                              // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_5;                              // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_6;                              // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_7;                              // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_5;                              // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default;                             // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0020(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_TeamIndex_NoneIndex_Return;               // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_MilitaryIndex_Return;           // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_TeamIndex_TerroristIndex_Return;          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_TeamIndex_TeamNeedPlayer;                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_TeamIndex_TeamEmpty_;                     // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Military_Return;                // 0x0080(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_TeamIndex_Terrorist_Return;               // 0x0090(0x0010)(ReferenceParm)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00A2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_1;                           // 0x00A3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_2;                           // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_3;                           // 0x00A5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_4;                           // 0x00A6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_5;                           // 0x00A7(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_6;                           // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_SelectTeam) == 0x000008, "Wrong alignment on GT_Bodycam_C_SelectTeam");
static_assert(sizeof(GT_Bodycam_C_SelectTeam) == 0x0000B0, "Wrong size on GT_Bodycam_C_SelectTeam");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, PlayerAlreadyInTeam) == 0x000000, "Member 'GT_Bodycam_C_SelectTeam::PlayerAlreadyInTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, ReturnValue) == 0x000001, "Member 'GT_Bodycam_C_SelectTeam::ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_byte_Variable) == 0x000002, "Member 'GT_Bodycam_C_SelectTeam::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_byte_Variable_1) == 0x000003, "Member 'GT_Bodycam_C_SelectTeam::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_bool_Variable) == 0x000004, "Member 'GT_Bodycam_C_SelectTeam::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_byte_Variable_2) == 0x000005, "Member 'GT_Bodycam_C_SelectTeam::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_byte_Variable_3) == 0x000006, "Member 'GT_Bodycam_C_SelectTeam::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_bool_Variable_1) == 0x000007, "Member 'GT_Bodycam_C_SelectTeam::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_byte_Variable_4) == 0x000008, "Member 'GT_Bodycam_C_SelectTeam::Temp_byte_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_bool_Variable_2) == 0x000009, "Member 'GT_Bodycam_C_SelectTeam::Temp_bool_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_bool_Variable_3) == 0x00000A, "Member 'GT_Bodycam_C_SelectTeam::Temp_bool_Variable_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_bool_Variable_4) == 0x00000B, "Member 'GT_Bodycam_C_SelectTeam::Temp_bool_Variable_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_byte_Variable_5) == 0x00000C, "Member 'GT_Bodycam_C_SelectTeam::Temp_byte_Variable_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_byte_Variable_6) == 0x00000D, "Member 'GT_Bodycam_C_SelectTeam::Temp_byte_Variable_6' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_byte_Variable_7) == 0x00000E, "Member 'GT_Bodycam_C_SelectTeam::Temp_byte_Variable_7' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_RandomBool_ReturnValue) == 0x00000F, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, Temp_bool_Variable_5) == 0x000010, "Member 'GT_Bodycam_C_SelectTeam::Temp_bool_Variable_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_Select_Default) == 0x000011, "Member 'GT_Bodycam_C_SelectTeam::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_GetGameInstance_ReturnValue) == 0x000018, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000020, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_DynamicCast_AsBodycam_GI) == 0x000060, "Member 'GT_Bodycam_C_SelectTeam::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GT_Bodycam_C_SelectTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_TeamIndex_NoneIndex_Return) == 0x00006C, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_TeamIndex_NoneIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_TeamIndex_MilitaryIndex_Return) == 0x000070, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_TeamIndex_MilitaryIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_TeamIndex_TerroristIndex_Return) == 0x000074, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_TeamIndex_TerroristIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_TeamIndex_TeamNeedPlayer) == 0x000078, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_TeamIndex_TeamNeedPlayer' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_TeamIndex_TeamEmpty_) == 0x000079, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_TeamIndex_TeamEmpty_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_TeamIndex_Military_Return) == 0x000080, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_TeamIndex_Military_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_TeamIndex_Terrorist_Return) == 0x000090, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_TeamIndex_Terrorist_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x0000A0, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000A1, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, CallFunc_Greater_IntInt_ReturnValue) == 0x0000A2, "Member 'GT_Bodycam_C_SelectTeam::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_Select_Default_1) == 0x0000A3, "Member 'GT_Bodycam_C_SelectTeam::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_Select_Default_2) == 0x0000A4, "Member 'GT_Bodycam_C_SelectTeam::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_Select_Default_3) == 0x0000A5, "Member 'GT_Bodycam_C_SelectTeam::K2Node_Select_Default_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_Select_Default_4) == 0x0000A6, "Member 'GT_Bodycam_C_SelectTeam::K2Node_Select_Default_4' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_Select_Default_5) == 0x0000A7, "Member 'GT_Bodycam_C_SelectTeam::K2Node_Select_Default_5' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SelectTeam, K2Node_Select_Default_6) == 0x0000A8, "Member 'GT_Bodycam_C_SelectTeam::K2Node_Select_Default_6' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.ServerTravel
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_ServerTravel final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_ServerTravel) == 0x000008, "Wrong alignment on GT_Bodycam_C_ServerTravel");
static_assert(sizeof(GT_Bodycam_C_ServerTravel) == 0x000008, "Wrong size on GT_Bodycam_C_ServerTravel");
static_assert(offsetof(GT_Bodycam_C_ServerTravel, Delay) == 0x000000, "Member 'GT_Bodycam_C_ServerTravel::Delay' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.ServerTravel (server)
// 0x0004 (0x0004 - 0x0000)
struct GT_Bodycam_C_ServerTravel__server_ final
{
public:
	float                                         Duration;                                          // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_ServerTravel__server_) == 0x000004, "Wrong alignment on GT_Bodycam_C_ServerTravel__server_");
static_assert(sizeof(GT_Bodycam_C_ServerTravel__server_) == 0x000004, "Wrong size on GT_Bodycam_C_ServerTravel__server_");
static_assert(offsetof(GT_Bodycam_C_ServerTravel__server_, Duration) == 0x000000, "Member 'GT_Bodycam_C_ServerTravel__server_::Duration' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Slomo
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_Slomo final
{
public:
	double                                        Slomo_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Slomo) == 0x000008, "Wrong alignment on GT_Bodycam_C_Slomo");
static_assert(sizeof(GT_Bodycam_C_Slomo) == 0x000008, "Wrong size on GT_Bodycam_C_Slomo");
static_assert(offsetof(GT_Bodycam_C_Slomo, Slomo_0) == 0x000000, "Member 'GT_Bodycam_C_Slomo::Slomo_0' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.SpawnBomb
// 0x0110 (0x0110 - 0x0000)
struct GT_Bodycam_C_SpawnBomb final
{
public:
	bool                                          Success_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0xF];                                        // 0x0001(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0010(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return; // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexTeamAlive_IndexTerroristAlive_Return; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_IndexTeamAlive_WinningTeam;               // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_MilitaryTeam_Return;       // 0x0080(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_TerroristTeam_Return;      // 0x0090(0x0010)(ReferenceParm)
	struct FSTR_PCInfo                            CallFunc_Array_Random_OutItem;                     // 0x00A0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Random_OutIndex;                    // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E5[0x3];                                       // 0x00E5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x00E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue; // 0x00F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABombe_C*                               CallFunc_FinishSpawningActor_ReturnValue;          // 0x0100(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_SpawnBomb) == 0x000010, "Wrong alignment on GT_Bodycam_C_SpawnBomb");
static_assert(sizeof(GT_Bodycam_C_SpawnBomb) == 0x000110, "Wrong size on GT_Bodycam_C_SpawnBomb");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, Success_) == 0x000000, "Member 'GT_Bodycam_C_SpawnBomb::Success_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_MakeTransform_ReturnValue) == 0x000010, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return) == 0x000070, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_IndexTeamAlive_IndexTerroristAlive_Return) == 0x000074, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_IndexTeamAlive_IndexTerroristAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_IndexTeamAlive_WinningTeam) == 0x000078, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_IndexTeamAlive_WinningTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_IndexTeamAlive_MilitaryTeam_Return) == 0x000080, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_IndexTeamAlive_MilitaryTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_IndexTeamAlive_TerroristTeam_Return) == 0x000090, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_IndexTeamAlive_TerroristTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_Array_Random_OutItem) == 0x0000A0, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_Array_Random_OutItem' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_Array_Random_OutIndex) == 0x0000E0, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_Array_Random_OutIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, K2Node_SwitchEnum_CmpSuccess) == 0x0000E4, "Member 'GT_Bodycam_C_SpawnBomb::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x0000E8, "Member 'GT_Bodycam_C_SpawnBomb::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, K2Node_DynamicCast_bSuccess) == 0x0000F0, "Member 'GT_Bodycam_C_SpawnBomb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue) == 0x0000F8, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_BeginDeferredActorSpawnFromClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_FinishSpawningActor_ReturnValue) == 0x000100, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_FinishSpawningActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_SpawnBomb, CallFunc_IsValid_ReturnValue) == 0x000108, "Member 'GT_Bodycam_C_SpawnBomb::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.StartingMatch (server)
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_StartingMatch__server_ final
{
public:
	bool                                          StartingMatch_0;                                   // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_StartingMatch__server_) == 0x000001, "Wrong alignment on GT_Bodycam_C_StartingMatch__server_");
static_assert(sizeof(GT_Bodycam_C_StartingMatch__server_) == 0x000001, "Wrong size on GT_Bodycam_C_StartingMatch__server_");
static_assert(offsetof(GT_Bodycam_C_StartingMatch__server_, StartingMatch_0) == 0x000000, "Member 'GT_Bodycam_C_StartingMatch__server_::StartingMatch_0' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Talk
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_Talk final
{
public:
	bool                                          IsTalking;                                         // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Talk) == 0x000001, "Wrong alignment on GT_Bodycam_C_Talk");
static_assert(sizeof(GT_Bodycam_C_Talk) == 0x000001, "Wrong size on GT_Bodycam_C_Talk");
static_assert(offsetof(GT_Bodycam_C_Talk, IsTalking) == 0x000000, "Member 'GT_Bodycam_C_Talk::IsTalking' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.TeamHasBomb
// 0x0088 (0x0088 - 0x0000)
struct GT_Bodycam_C_TeamHasBomb final
{
public:
	E_Team                                        Team_Has_Bomb;                                     // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_GamemodeWinInfo                   CallFunc_GetGamemodeInfo_GamemodeInfo;             // 0x0008(0x0040)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x0060(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameModeBase*                          CallFunc_GetGameMode_ReturnValue;                  // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AGM_Bodycam_C*                          K2Node_DynamicCast_AsGM_Bodycam;                   // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0081(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue_1;             // 0x0082(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0083(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default;                             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_TeamHasBomb) == 0x000008, "Wrong alignment on GT_Bodycam_C_TeamHasBomb");
static_assert(sizeof(GT_Bodycam_C_TeamHasBomb) == 0x000088, "Wrong size on GT_Bodycam_C_TeamHasBomb");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, Team_Has_Bomb) == 0x000000, "Member 'GT_Bodycam_C_TeamHasBomb::Team_Has_Bomb' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, Temp_byte_Variable) == 0x000001, "Member 'GT_Bodycam_C_TeamHasBomb::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, Temp_byte_Variable_1) == 0x000002, "Member 'GT_Bodycam_C_TeamHasBomb::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, CallFunc_GetGamemodeInfo_GamemodeInfo) == 0x000008, "Member 'GT_Bodycam_C_TeamHasBomb::CallFunc_GetGamemodeInfo_GamemodeInfo' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, Temp_bool_Variable) == 0x000048, "Member 'GT_Bodycam_C_TeamHasBomb::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'GT_Bodycam_C_TeamHasBomb::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, CallFunc_Divide_IntInt_ReturnValue) == 0x000058, "Member 'GT_Bodycam_C_TeamHasBomb::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, K2Node_DynamicCast_AsBodycam_GI) == 0x000060, "Member 'GT_Bodycam_C_TeamHasBomb::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'GT_Bodycam_C_TeamHasBomb::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, CallFunc_GetGameMode_ReturnValue) == 0x000070, "Member 'GT_Bodycam_C_TeamHasBomb::CallFunc_GetGameMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, K2Node_DynamicCast_AsGM_Bodycam) == 0x000078, "Member 'GT_Bodycam_C_TeamHasBomb::K2Node_DynamicCast_AsGM_Bodycam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, K2Node_DynamicCast_bSuccess_1) == 0x000080, "Member 'GT_Bodycam_C_TeamHasBomb::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, CallFunc_Greater_IntInt_ReturnValue) == 0x000081, "Member 'GT_Bodycam_C_TeamHasBomb::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, CallFunc_Greater_IntInt_ReturnValue_1) == 0x000082, "Member 'GT_Bodycam_C_TeamHasBomb::CallFunc_Greater_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, CallFunc_BooleanOR_ReturnValue) == 0x000083, "Member 'GT_Bodycam_C_TeamHasBomb::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBomb, K2Node_Select_Default) == 0x000084, "Member 'GT_Bodycam_C_TeamHasBomb::K2Node_Select_Default' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.TeamHasBombArray
// 0x00A0 (0x00A0 - 0x0000)
struct GT_Bodycam_C_TeamHasBombArray final
{
public:
	TArray<struct FSTR_PCInfo>                    Team_Has_Bomb_Return;                              // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    Other_Team_Return;                                 // 0x0010(0x0010)(Parm, OutParm)
	E_Team                                        Temp_byte_Variable;                                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Temp_struct_Variable;                              // 0x0028(0x0010)(ReferenceParm)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Temp_struct_Variable_1;                            // 0x0040(0x0010)(ReferenceParm)
	E_Team                                        CallFunc_TeamHasBomb_Team_Has_Bomb;                // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return; // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexTeamAlive_IndexTerroristAlive_Return; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_IndexTeamAlive_WinningTeam;               // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_MilitaryTeam_Return;       // 0x0060(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_TerroristTeam_Return;      // 0x0070(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    K2Node_Select_Default;                             // 0x0080(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    K2Node_Select_Default_1;                           // 0x0090(0x0010)(ReferenceParm)
};
static_assert(alignof(GT_Bodycam_C_TeamHasBombArray) == 0x000008, "Wrong alignment on GT_Bodycam_C_TeamHasBombArray");
static_assert(sizeof(GT_Bodycam_C_TeamHasBombArray) == 0x0000A0, "Wrong size on GT_Bodycam_C_TeamHasBombArray");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, Team_Has_Bomb_Return) == 0x000000, "Member 'GT_Bodycam_C_TeamHasBombArray::Team_Has_Bomb_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, Other_Team_Return) == 0x000010, "Member 'GT_Bodycam_C_TeamHasBombArray::Other_Team_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, Temp_byte_Variable) == 0x000020, "Member 'GT_Bodycam_C_TeamHasBombArray::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, Temp_struct_Variable) == 0x000028, "Member 'GT_Bodycam_C_TeamHasBombArray::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, Temp_byte_Variable_1) == 0x000038, "Member 'GT_Bodycam_C_TeamHasBombArray::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, Temp_struct_Variable_1) == 0x000040, "Member 'GT_Bodycam_C_TeamHasBombArray::Temp_struct_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, CallFunc_TeamHasBomb_Team_Has_Bomb) == 0x000050, "Member 'GT_Bodycam_C_TeamHasBombArray::CallFunc_TeamHasBomb_Team_Has_Bomb' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return) == 0x000054, "Member 'GT_Bodycam_C_TeamHasBombArray::CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, CallFunc_IndexTeamAlive_IndexTerroristAlive_Return) == 0x000058, "Member 'GT_Bodycam_C_TeamHasBombArray::CallFunc_IndexTeamAlive_IndexTerroristAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, CallFunc_IndexTeamAlive_WinningTeam) == 0x00005C, "Member 'GT_Bodycam_C_TeamHasBombArray::CallFunc_IndexTeamAlive_WinningTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, CallFunc_IndexTeamAlive_MilitaryTeam_Return) == 0x000060, "Member 'GT_Bodycam_C_TeamHasBombArray::CallFunc_IndexTeamAlive_MilitaryTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, CallFunc_IndexTeamAlive_TerroristTeam_Return) == 0x000070, "Member 'GT_Bodycam_C_TeamHasBombArray::CallFunc_IndexTeamAlive_TerroristTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, K2Node_Select_Default) == 0x000080, "Member 'GT_Bodycam_C_TeamHasBombArray::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamHasBombArray, K2Node_Select_Default_1) == 0x000090, "Member 'GT_Bodycam_C_TeamHasBombArray::K2Node_Select_Default_1' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.TeamIndex
// 0x00F0 (0x00F0 - 0x0000)
struct GT_Bodycam_C_TeamIndex final
{
public:
	int32                                         NoneIndex_Return;                                  // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MilitaryIndex_Return;                              // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex_Return;                             // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        TeamNeedPlayer;                                    // 0x000C(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamEmpty_;                                        // 0x000D(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Military_Return;                                   // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    Terrorist_Return;                                  // 0x0020(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    Terrorist;                                         // 0x0030(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSTR_PCInfo>                    Military;                                          // 0x0040(0x0010)(Edit, BlueprintVisible)
	int32                                         NoneIndex;                                         // 0x0050(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0054(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MilitaryIndex;                                     // 0x0058(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable;                                // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable;                                 // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_1;                               // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_1;                              // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        Temp_byte_Variable_2;                              // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x007B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_1;          // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E[0x2];                                       // 0x007E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Variable_2;                               // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue_2;          // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0085(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default;                             // 0x0086(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Select_Default_1;                           // 0x0087(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0088(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_94[0x4];                                       // 0x0094(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0098(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_TeamIndex) == 0x000008, "Wrong alignment on GT_Bodycam_C_TeamIndex");
static_assert(sizeof(GT_Bodycam_C_TeamIndex) == 0x0000F0, "Wrong size on GT_Bodycam_C_TeamIndex");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, NoneIndex_Return) == 0x000000, "Member 'GT_Bodycam_C_TeamIndex::NoneIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, MilitaryIndex_Return) == 0x000004, "Member 'GT_Bodycam_C_TeamIndex::MilitaryIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, TerroristIndex_Return) == 0x000008, "Member 'GT_Bodycam_C_TeamIndex::TerroristIndex_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, TeamNeedPlayer) == 0x00000C, "Member 'GT_Bodycam_C_TeamIndex::TeamNeedPlayer' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, TeamEmpty_) == 0x00000D, "Member 'GT_Bodycam_C_TeamIndex::TeamEmpty_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Military_Return) == 0x000010, "Member 'GT_Bodycam_C_TeamIndex::Military_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Terrorist_Return) == 0x000020, "Member 'GT_Bodycam_C_TeamIndex::Terrorist_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Terrorist) == 0x000030, "Member 'GT_Bodycam_C_TeamIndex::Terrorist' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Military) == 0x000040, "Member 'GT_Bodycam_C_TeamIndex::Military' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, NoneIndex) == 0x000050, "Member 'GT_Bodycam_C_TeamIndex::NoneIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, TerroristIndex) == 0x000054, "Member 'GT_Bodycam_C_TeamIndex::TerroristIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, MilitaryIndex) == 0x000058, "Member 'GT_Bodycam_C_TeamIndex::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_byte_Variable) == 0x00005C, "Member 'GT_Bodycam_C_TeamIndex::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_int_Variable) == 0x000060, "Member 'GT_Bodycam_C_TeamIndex::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_bool_Variable) == 0x000064, "Member 'GT_Bodycam_C_TeamIndex::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_int_Variable_1) == 0x000068, "Member 'GT_Bodycam_C_TeamIndex::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_int_Loop_Counter_Variable) == 0x00006C, "Member 'GT_Bodycam_C_TeamIndex::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Add_IntInt_ReturnValue) == 0x000070, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_int_Array_Index_Variable) == 0x000074, "Member 'GT_Bodycam_C_TeamIndex::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_byte_Variable_1) == 0x000078, "Member 'GT_Bodycam_C_TeamIndex::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_byte_Variable_2) == 0x000079, "Member 'GT_Bodycam_C_TeamIndex::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_bool_Variable_1) == 0x00007A, "Member 'GT_Bodycam_C_TeamIndex::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00007B, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_EqualEqual_IntInt_ReturnValue_1) == 0x00007C, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_EqualEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_BooleanOR_ReturnValue) == 0x00007D, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, Temp_int_Variable_2) == 0x000080, "Member 'GT_Bodycam_C_TeamIndex::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_EqualEqual_IntInt_ReturnValue_2) == 0x000084, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_EqualEqual_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x000085, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, K2Node_Select_Default) == 0x000086, "Member 'GT_Bodycam_C_TeamIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, K2Node_Select_Default_1) == 0x000087, "Member 'GT_Bodycam_C_TeamIndex::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Add_IntInt_ReturnValue_1) == 0x000088, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Add_IntInt_ReturnValue_2) == 0x00008C, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Add_IntInt_ReturnValue_3) == 0x000090, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Array_Get_Item) == 0x000098, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Array_Add_ReturnValue) == 0x0000DC, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Less_IntInt_ReturnValue) == 0x0000E0, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, CallFunc_Array_Add_ReturnValue_1) == 0x0000E4, "Member 'GT_Bodycam_C_TeamIndex::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TeamIndex, K2Node_SwitchEnum_CmpSuccess) == 0x0000E8, "Member 'GT_Bodycam_C_TeamIndex::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Time Count
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_Time_Count final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Time_Count) == 0x000008, "Wrong alignment on GT_Bodycam_C_Time_Count");
static_assert(sizeof(GT_Bodycam_C_Time_Count) == 0x000008, "Wrong size on GT_Bodycam_C_Time_Count");
static_assert(offsetof(GT_Bodycam_C_Time_Count, Delay) == 0x000000, "Member 'GT_Bodycam_C_Time_Count::Delay' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.TopScore
// 0x01C8 (0x01C8 - 0x0000)
struct GT_Bodycam_C_TopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScorePcArray_Result;                            // 0x0000(0x0010)(Parm, OutParm)
	bool                                          NewLocalVar;                                       // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    TopScorePcArray;                                   // 0x0018(0x0010)(Edit, BlueprintVisible)
	TArray<double>                                RatioFloat;                                        // 0x0028(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0058(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_1;                         // 0x00B0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F9[0x3];                                       // 0x00F9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_2;                         // 0x0108(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x014C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14D[0x3];                                      // 0x014D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Temp_real_Variable;                                // 0x0150(0x0008)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_MaxOfFloatArray_IndexOfMaxValue;          // 0x0158(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MaxOfFloatArray_MaxValue;                 // 0x015C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x0160(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0164(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_165[0x3];                                      // 0x0165(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item_3;                         // 0x0168(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_2;                  // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x01AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AD[0x3];                                      // 0x01AD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<float>                                 CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast;  // 0x01B0(0x0010)(ConstParm, ReferenceParm)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_TopScore) == 0x000008, "Wrong alignment on GT_Bodycam_C_TopScore");
static_assert(sizeof(GT_Bodycam_C_TopScore) == 0x0001C8, "Wrong size on GT_Bodycam_C_TopScore");
static_assert(offsetof(GT_Bodycam_C_TopScore, TopScorePcArray_Result) == 0x000000, "Member 'GT_Bodycam_C_TopScore::TopScorePcArray_Result' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, NewLocalVar) == 0x000010, "Member 'GT_Bodycam_C_TopScore::NewLocalVar' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, TopScorePcArray) == 0x000018, "Member 'GT_Bodycam_C_TopScore::TopScorePcArray' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, RatioFloat) == 0x000028, "Member 'GT_Bodycam_C_TopScore::RatioFloat' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, Temp_int_Array_Index_Variable) == 0x000038, "Member 'GT_Bodycam_C_TopScore::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, Temp_int_Loop_Counter_Variable) == 0x00003C, "Member 'GT_Bodycam_C_TopScore::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'GT_Bodycam_C_TopScore::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, Temp_int_Array_Index_Variable_1) == 0x000044, "Member 'GT_Bodycam_C_TopScore::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, Temp_int_Loop_Counter_Variable_1) == 0x000048, "Member 'GT_Bodycam_C_TopScore::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Add_IntInt_ReturnValue_1) == 0x00004C, "Member 'GT_Bodycam_C_TopScore::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Length_ReturnValue) == 0x000050, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Get_Item) == 0x000058, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Less_IntInt_ReturnValue) == 0x000098, "Member 'GT_Bodycam_C_TopScore::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Length_ReturnValue_1) == 0x00009C, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Conv_IntToDouble_ReturnValue) == 0x0000A0, "Member 'GT_Bodycam_C_TopScore::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Less_IntInt_ReturnValue_1) == 0x0000A8, "Member 'GT_Bodycam_C_TopScore::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Get_Item_1) == 0x0000B0, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Length_ReturnValue_2) == 0x0000F0, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, Temp_int_Loop_Counter_Variable_2) == 0x0000F4, "Member 'GT_Bodycam_C_TopScore::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Less_IntInt_ReturnValue_2) == 0x0000F8, "Member 'GT_Bodycam_C_TopScore::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Add_IntInt_ReturnValue_2) == 0x0000FC, "Member 'GT_Bodycam_C_TopScore::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, Temp_int_Array_Index_Variable_2) == 0x000100, "Member 'GT_Bodycam_C_TopScore::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Get_Item_2) == 0x000108, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Add_ReturnValue) == 0x000148, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00014C, "Member 'GT_Bodycam_C_TopScore::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, Temp_real_Variable) == 0x000150, "Member 'GT_Bodycam_C_TopScore::Temp_real_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_MaxOfFloatArray_IndexOfMaxValue) == 0x000158, "Member 'GT_Bodycam_C_TopScore::CallFunc_MaxOfFloatArray_IndexOfMaxValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_MaxOfFloatArray_MaxValue) == 0x00015C, "Member 'GT_Bodycam_C_TopScore::CallFunc_MaxOfFloatArray_MaxValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Add_ReturnValue_1) == 0x000160, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000164, "Member 'GT_Bodycam_C_TopScore::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Get_Item_3) == 0x000168, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_Add_ReturnValue_2) == 0x0001A8, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_Add_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_Array_IsEmpty_ReturnValue) == 0x0001AC, "Member 'GT_Bodycam_C_TopScore::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast) == 0x0001B0, "Member 'GT_Bodycam_C_TopScore::CallFunc_MaxOfFloatArray_FloatArray_ImplicitCast' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_TopScore, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0001C0, "Member 'GT_Bodycam_C_TopScore::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Update MapSelection (Hud_MenuScoreboard)
// 0x000C (0x000C - 0x0000)
struct GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_ final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_) == 0x000004, "Wrong alignment on GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_");
static_assert(sizeof(GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_) == 0x00000C, "Wrong size on GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_");
static_assert(offsetof(GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_, Selected_Level_Name) == 0x000000, "Member 'GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_, Index_0) == 0x000008, "Member 'GT_Bodycam_C_Update_MapSelection__Hud_MenuScoreboard_::Index_0' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.Update Warning(Hud-Client)
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_Update_Warning_HudMinusClient_ final
{
public:
	class FString                                 InText;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_Update_Warning_HudMinusClient_) == 0x000008, "Wrong alignment on GT_Bodycam_C_Update_Warning_HudMinusClient_");
static_assert(sizeof(GT_Bodycam_C_Update_Warning_HudMinusClient_) == 0x000010, "Wrong size on GT_Bodycam_C_Update_Warning_HudMinusClient_");
static_assert(offsetof(GT_Bodycam_C_Update_Warning_HudMinusClient_, InText) == 0x000000, "Member 'GT_Bodycam_C_Update_Warning_HudMinusClient_::InText' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateGamemode
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_UpdateGamemode final
{
public:
	EGameMode                                     GameMode_0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateGamemode) == 0x000001, "Wrong alignment on GT_Bodycam_C_UpdateGamemode");
static_assert(sizeof(GT_Bodycam_C_UpdateGamemode) == 0x000001, "Wrong size on GT_Bodycam_C_UpdateGamemode");
static_assert(offsetof(GT_Bodycam_C_UpdateGamemode, GameMode_0) == 0x000000, "Member 'GT_Bodycam_C_UpdateGamemode::GameMode_0' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateKickVote
// 0x0048 (0x0048 - 0x0000)
struct GT_Bodycam_C_UpdateKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateKickVote) == 0x000008, "Wrong alignment on GT_Bodycam_C_UpdateKickVote");
static_assert(sizeof(GT_Bodycam_C_UpdateKickVote) == 0x000048, "Wrong size on GT_Bodycam_C_UpdateKickVote");
static_assert(offsetof(GT_Bodycam_C_UpdateKickVote, Target) == 0x000000, "Member 'GT_Bodycam_C_UpdateKickVote::Target' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateKickVote, Yes_) == 0x000040, "Member 'GT_Bodycam_C_UpdateKickVote::Yes_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateMapSelection
// 0x000C (0x000C - 0x0000)
struct GT_Bodycam_C_UpdateMapSelection final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateMapSelection) == 0x000004, "Wrong alignment on GT_Bodycam_C_UpdateMapSelection");
static_assert(sizeof(GT_Bodycam_C_UpdateMapSelection) == 0x00000C, "Wrong size on GT_Bodycam_C_UpdateMapSelection");
static_assert(offsetof(GT_Bodycam_C_UpdateMapSelection, Selected_Level_Name) == 0x000000, "Member 'GT_Bodycam_C_UpdateMapSelection::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateMapSelection, Index_0) == 0x000008, "Member 'GT_Bodycam_C_UpdateMapSelection::Index_0' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateScore
// 0x0008 (0x0008 - 0x0000)
struct GT_Bodycam_C_UpdateScore final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateScore) == 0x000004, "Wrong alignment on GT_Bodycam_C_UpdateScore");
static_assert(sizeof(GT_Bodycam_C_UpdateScore) == 0x000008, "Wrong size on GT_Bodycam_C_UpdateScore");
static_assert(offsetof(GT_Bodycam_C_UpdateScore, Score) == 0x000000, "Member 'GT_Bodycam_C_UpdateScore::Score' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateTeamCount (Client)
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_UpdateTeamCount__Client_ final
{
public:
	E_Team                                        Team__PlayerKilled_;                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateTeamCount__Client_) == 0x000004, "Wrong alignment on GT_Bodycam_C_UpdateTeamCount__Client_");
static_assert(sizeof(GT_Bodycam_C_UpdateTeamCount__Client_) == 0x000010, "Wrong size on GT_Bodycam_C_UpdateTeamCount__Client_");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamCount__Client_, Team__PlayerKilled_) == 0x000000, "Member 'GT_Bodycam_C_UpdateTeamCount__Client_::Team__PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamCount__Client_, MilitaryIndex) == 0x000004, "Member 'GT_Bodycam_C_UpdateTeamCount__Client_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamCount__Client_, TerroristIndex) == 0x000008, "Member 'GT_Bodycam_C_UpdateTeamCount__Client_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamCount__Client_, WiiningTeam) == 0x00000C, "Member 'GT_Bodycam_C_UpdateTeamCount__Client_::WiiningTeam' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateTeamIndex (PlayerKilled)
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_ final
{
public:
	E_Team                                        Team_PlayerKilled_;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_) == 0x000004, "Wrong alignment on GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_");
static_assert(sizeof(GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_) == 0x000010, "Wrong size on GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_, Team_PlayerKilled_) == 0x000000, "Member 'GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_::Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_, MilitaryIndex) == 0x000004, "Member 'GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_, TerroristIndex) == 0x000008, "Member 'GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_, WiiningTeam) == 0x00000C, "Member 'GT_Bodycam_C_UpdateTeamIndex__PlayerKilled_::WiiningTeam' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateTeamXP
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_UpdateTeamXP final
{
public:
	bool                                          Win_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateTeamXP) == 0x000001, "Wrong alignment on GT_Bodycam_C_UpdateTeamXP");
static_assert(sizeof(GT_Bodycam_C_UpdateTeamXP) == 0x000001, "Wrong size on GT_Bodycam_C_UpdateTeamXP");
static_assert(offsetof(GT_Bodycam_C_UpdateTeamXP, Win_) == 0x000000, "Member 'GT_Bodycam_C_UpdateTeamXP::Win_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateTimer
// 0x0020 (0x0020 - 0x0000)
struct GT_Bodycam_C_UpdateTimer final
{
public:
	double                                        TimeCount_0;                                       // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(GT_Bodycam_C_UpdateTimer) == 0x000008, "Wrong alignment on GT_Bodycam_C_UpdateTimer");
static_assert(sizeof(GT_Bodycam_C_UpdateTimer) == 0x000020, "Wrong size on GT_Bodycam_C_UpdateTimer");
static_assert(offsetof(GT_Bodycam_C_UpdateTimer, TimeCount_0) == 0x000000, "Member 'GT_Bodycam_C_UpdateTimer::TimeCount_0' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateTimer, NewParam) == 0x000008, "Member 'GT_Bodycam_C_UpdateTimer::NewParam' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateVote (Server)
// 0x0048 (0x0048 - 0x0000)
struct GT_Bodycam_C_UpdateVote__Server_ final
{
public:
	struct FSTR_PCInfo                            Player_info;                                       // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateVote__Server_) == 0x000008, "Wrong alignment on GT_Bodycam_C_UpdateVote__Server_");
static_assert(sizeof(GT_Bodycam_C_UpdateVote__Server_) == 0x000048, "Wrong size on GT_Bodycam_C_UpdateVote__Server_");
static_assert(offsetof(GT_Bodycam_C_UpdateVote__Server_, Player_info) == 0x000000, "Member 'GT_Bodycam_C_UpdateVote__Server_::Player_info' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_UpdateVote__Server_, Yes_) == 0x000040, "Member 'GT_Bodycam_C_UpdateVote__Server_::Yes_' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.UpdateWarning
// 0x0010 (0x0010 - 0x0000)
struct GT_Bodycam_C_UpdateWarning final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_UpdateWarning) == 0x000008, "Wrong alignment on GT_Bodycam_C_UpdateWarning");
static_assert(sizeof(GT_Bodycam_C_UpdateWarning) == 0x000010, "Wrong size on GT_Bodycam_C_UpdateWarning");
static_assert(offsetof(GT_Bodycam_C_UpdateWarning, String) == 0x000000, "Member 'GT_Bodycam_C_UpdateWarning::String' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.WaitingForPlayer (Server)
// 0x0001 (0x0001 - 0x0000)
struct GT_Bodycam_C_WaitingForPlayer__Server_ final
{
public:
	bool                                          Waiting_For_Player_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_WaitingForPlayer__Server_) == 0x000001, "Wrong alignment on GT_Bodycam_C_WaitingForPlayer__Server_");
static_assert(sizeof(GT_Bodycam_C_WaitingForPlayer__Server_) == 0x000001, "Wrong size on GT_Bodycam_C_WaitingForPlayer__Server_");
static_assert(offsetof(GT_Bodycam_C_WaitingForPlayer__Server_, Waiting_For_Player_0) == 0x000000, "Member 'GT_Bodycam_C_WaitingForPlayer__Server_::Waiting_For_Player_0' has a wrong offset!");

// Function GT_Bodycam.GT_Bodycam_C.WinningTeam
// 0x00C8 (0x00C8 - 0x0000)
struct GT_Bodycam_C_WinningTeam final
{
public:
	TArray<struct FSTR_PCInfo>                    WinningTeam_Return;                                // 0x0000(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    LoosingTeam_Return;                                // 0x0010(0x0010)(Parm, OutParm)
	TArray<struct FSTR_PCInfo>                    LoosingTeam;                                       // 0x0020(0x0010)(Edit, BlueprintVisible)
	TArray<struct FSTR_PCInfo>                    WinningTeam_0;                                     // 0x0030(0x0010)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return; // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_IndexTeamAlive_IndexTerroristAlive_Return; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        CallFunc_IndexTeamAlive_WinningTeam;               // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_MilitaryTeam_Return;       // 0x0058(0x0010)(ReferenceParm)
	TArray<struct FSTR_PCInfo>                    CallFunc_IndexTeamAlive_TerroristTeam_Return;      // 0x0068(0x0010)(ReferenceParm)
	struct FSTR_PCInfo                            CallFunc_Array_Get_Item;                           // 0x0078(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00BD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BE[0x2];                                       // 0x00BE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(GT_Bodycam_C_WinningTeam) == 0x000008, "Wrong alignment on GT_Bodycam_C_WinningTeam");
static_assert(sizeof(GT_Bodycam_C_WinningTeam) == 0x0000C8, "Wrong size on GT_Bodycam_C_WinningTeam");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, WinningTeam_Return) == 0x000000, "Member 'GT_Bodycam_C_WinningTeam::WinningTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, LoosingTeam_Return) == 0x000010, "Member 'GT_Bodycam_C_WinningTeam::LoosingTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, LoosingTeam) == 0x000020, "Member 'GT_Bodycam_C_WinningTeam::LoosingTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, WinningTeam_0) == 0x000030, "Member 'GT_Bodycam_C_WinningTeam::WinningTeam_0' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, Temp_int_Array_Index_Variable) == 0x000040, "Member 'GT_Bodycam_C_WinningTeam::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, Temp_int_Loop_Counter_Variable) == 0x000044, "Member 'GT_Bodycam_C_WinningTeam::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_Add_IntInt_ReturnValue) == 0x000048, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return) == 0x00004C, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_IndexTeamAlive_IndexMilitaryAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_IndexTeamAlive_IndexTerroristAlive_Return) == 0x000050, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_IndexTeamAlive_IndexTerroristAlive_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_IndexTeamAlive_WinningTeam) == 0x000054, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_IndexTeamAlive_WinningTeam' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_IndexTeamAlive_MilitaryTeam_Return) == 0x000058, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_IndexTeamAlive_MilitaryTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_IndexTeamAlive_TerroristTeam_Return) == 0x000068, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_IndexTeamAlive_TerroristTeam_Return' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_Array_Get_Item) == 0x000078, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_Array_Length_ReturnValue) == 0x0000B8, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_Less_IntInt_ReturnValue) == 0x0000BC, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000BD, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_Array_Add_ReturnValue) == 0x0000C0, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(GT_Bodycam_C_WinningTeam, CallFunc_Array_Add_ReturnValue_1) == 0x0000C4, "Member 'GT_Bodycam_C_WinningTeam::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");

}

