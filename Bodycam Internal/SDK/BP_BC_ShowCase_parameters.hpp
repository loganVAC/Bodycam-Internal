#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BC_ShowCase

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "E_Team_structs.hpp"
#include "SteamCorePro_structs.hpp"
#include "STR_TEST_structs.hpp"
#include "EN_ShopItemClass_structs.hpp"
#include "STR_PCInfo_structs.hpp"
#include "Engine_structs.hpp"
#include "STR_Actor_structs.hpp"
#include "STR_GamemodeWinInfo_structs.hpp"
#include "STR_KickVote_structs.hpp"
#include "STR_Score_structs.hpp"
#include "GameMode_structs.hpp"
#include "EN_ShopItemSupClass_structs.hpp"
#include "ST_DefaultSteamItem_structs.hpp"


namespace SDK::Params
{

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.CanCreateKickVote
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_CanCreateKickVote final
{
public:
	bool                                          CanCreateKickVote_;                                // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_CanCreateKickVote) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_CanCreateKickVote");
static_assert(sizeof(BP_BC_ShowCase_C_CanCreateKickVote) == 0x000001, "Wrong size on BP_BC_ShowCase_C_CanCreateKickVote");
static_assert(offsetof(BP_BC_ShowCase_C_CanCreateKickVote, CanCreateKickVote_) == 0x000000, "Member 'BP_BC_ShowCase_C_CanCreateKickVote::CanCreateKickVote_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.CanKickThisPlayer?
// 0x0018 (0x0018 - 0x0000)
struct BP_BC_ShowCase_C_CanKickThisPlayer_ final
{
public:
	class FString                                 PlayerID;                                          // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          True_;                                             // 0x0010(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_CanKickThisPlayer_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_CanKickThisPlayer_");
static_assert(sizeof(BP_BC_ShowCase_C_CanKickThisPlayer_) == 0x000018, "Wrong size on BP_BC_ShowCase_C_CanKickThisPlayer_");
static_assert(offsetof(BP_BC_ShowCase_C_CanKickThisPlayer_, PlayerID) == 0x000000, "Member 'BP_BC_ShowCase_C_CanKickThisPlayer_::PlayerID' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_CanKickThisPlayer_, True_) == 0x000010, "Member 'BP_BC_ShowCase_C_CanKickThisPlayer_::True_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ChangeAnim
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_ChangeAnim final
{
public:
	class ULevelSequence*                         LevelSequence;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_ChangeAnim) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_ChangeAnim");
static_assert(sizeof(BP_BC_ShowCase_C_ChangeAnim) == 0x000008, "Wrong size on BP_BC_ShowCase_C_ChangeAnim");
static_assert(offsetof(BP_BC_ShowCase_C_ChangeAnim, LevelSequence) == 0x000000, "Member 'BP_BC_ShowCase_C_ChangeAnim::LevelSequence' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ExecuteUbergraph_BP_BC_ShowCase
// 0x1240 (0x1240 - 0x0000)
struct BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_String;                               // 0x0018(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	double                                        K2Node_Event_Delay;                                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_Event_TimeCount;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   K2Node_Event_NewParam;                             // 0x0038(0x0018)()
	E_Team                                        K2Node_Event_Team;                                 // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_Event_Selected_Level_Name;                  // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_Index;                                // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_Team_PlayerKilled_;                   // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         K2Node_Event_MilitaryIndex;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_TerroristIndex;                       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        K2Node_Event_WiiningTeam;                          // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D[0x3];                                       // 0x006D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_Score                             K2Node_Event_Score;                                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Win_;                                 // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_Event_Slomo;                                // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSTR_KickVote                          K2Node_Event_PlayerInfo;                           // 0x0088(0x0048)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_Event_SteamID;                              // 0x00D0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target_2;                             // 0x00E0(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_Yes_;                                 // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSTR_PCInfo                            K2Node_Event_Target_1;                             // 0x0128(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            K2Node_Event_Target;                               // 0x0168(0x0040)(ZeroConstructor, HasGetValueTypeHash)
	EGameMode                                     K2Node_Event_Gamemode;                             // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsTalking;                            // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      K2Node_Event_PC;                                   // 0x01B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x01C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USG_PlayerCustomization_C*              CallFunc_CreateSaveGameObject_ReturnValue;         // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x3];                                      // 0x01E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_2;                   // 0x01E4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AController*                            K2Node_Event_NewController;                        // 0x01F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_1;        // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue;                   // 0x0200(0x0008)(NoDestructor)
	class FString                                 CallFunc_BreakSteamID_ReturnValue;                 // 0x0208(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SteamID_1;                      // 0x0218(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 K2Node_CustomEvent_SteamID;                        // 0x0228(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_MakeSteamID_ReturnValue;                  // 0x0238(0x0008)(NoDestructor)
	class UPlayMontageCallbackProxy*              CallFunc_CreateProxyObjectForPlayMontage_ReturnValue; // 0x0240(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetFriendPersonaName_ReturnValue;         // 0x0248(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0260(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHUD_FriendsDot_C*                      K2Node_DynamicCast_AsHUD_Friends_Dot;              // 0x0268(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0270(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsReady_;                             // 0x0271(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_Ready_;                         // 0x0272(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0273(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue_1;                  // 0x0278(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class UHUD_FriendsDot_C*                      K2Node_DynamicCast_AsHUD_Friends_Dot_1;            // 0x0280(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0288(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayerControlled_ReturnValue;           // 0x0289(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_ShopItemSupClass                           K2Node_CustomEvent_ItemClassSup_Local;             // 0x028A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_CHANGE_ItemClassSup_Local__;    // 0x028B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_28C[0x4];                                      // 0x028C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   K2Node_CustomEvent_NewItem;                        // 0x0290(0x00A8)(ConstParm, ContainsInstancedReference, HasGetValueTypeHash)
	struct FST_DefaultSteamItem                   CallFunc_GetDataTableRowFromName_OutRow;           // 0x0338(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue;      // 0x03E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3E1[0x3];                                      // 0x03E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_1;            // 0x03E4(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F4[0x4];                                      // 0x03F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetWorldRotation_SweepHitResult;       // 0x03F8(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_GetFileSize_ReturnValue;                  // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectDirectory_ReturnValue;          // 0x04E8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_FileRead_Buffer;                          // 0x04F8(0x0010)(ReferenceParm)
	int32                                         CallFunc_FileRead_ReturnValue;                     // 0x0508(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50C[0x4];                                      // 0x050C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0510(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_GetProjectDirectory_ReturnValue_1;        // 0x0520(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	TArray<uint8>                                 CallFunc_ReadFileToBytes_ReturnValue;              // 0x0530(0x0010)(ReferenceParm)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_1;              // 0x0540(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_FileWrite_ReturnValue;                    // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_WriteBytesToFile_ReturnValue;             // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_552[0x6];                                      // 0x0552(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0558(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_1;          // 0x0568(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_2;              // 0x0578(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_3;              // 0x0588(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_4;              // 0x0598(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_5;              // 0x05A8(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x05B8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_1;          // 0x05D0(0x0018)()
	bool                                          CallFunc_DoesSaveGameExist_ReturnValue;            // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x05E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x05EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x05EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5EC[0x4];                                      // 0x05EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USaveGame*                              CallFunc_LoadGameFromSlot_ReturnValue;             // 0x05F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USG_PlayerCustomization_C*              K2Node_DynamicCast_AsSG_Player_Customization;      // 0x05F8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0600(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue;               // 0x0601(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_SaveGameToSlot_ReturnValue_1;             // 0x0602(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_603[0x5];                                      // 0x0603(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue_2;          // 0x0608(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_6;              // 0x0618(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_7;              // 0x0628(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FSteamID                               CallFunc_GetSteamID_ReturnValue_1;                 // 0x0638(0x0008)(NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_2;          // 0x0640(0x0018)()
	class FString                                 CallFunc_BreakSteamID_ReturnValue_1;               // 0x0658(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable;                              // 0x0668(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_3;          // 0x0670(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_4;          // 0x0688(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_5;          // 0x06A0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_6;          // 0x06B8(0x0018)()
	bool                                          CallFunc_DeleteGameInSlot_ReturnValue;             // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D1[0x7];                                      // 0x06D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_7;          // 0x06D8(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_8;          // 0x06F0(0x0018)()
	class FText                                   CallFunc_Conv_StringToText_ReturnValue_9;          // 0x0708(0x0018)()
	TArray<struct FST_DefaultSteamItem>           K2Node_CustomEvent_PlayerSkin;                     // 0x0720(0x0010)(ReferenceParm, ContainsInstancedReference)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0730(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_731[0x7];                                      // 0x0731(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVoiceSettings                         K2Node_MakeStruct_VoiceSettings;                   // 0x0738(0x0018)(NoDestructor, ContainsInstancedReference)
	TScriptInterface<class IBPI_GameInstanceExtension_C> K2Node_DynamicCast_AsBPI_Game_Instance_Extension;  // 0x0750(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0760(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_IsTalking_;                     // 0x0761(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0762(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_763[0x5];                                      // 0x0763(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0768(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_3;                   // 0x0770(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x0778(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_4;                     // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_789[0x3];                                      // 0x0789(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0790(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x0794(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_795[0x3];                                      // 0x0795(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UHUD_Character_C*>               CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0798(0x0010)(ReferenceParm, ContainsInstancedReference)
	class UHUD_Character_C*                       CallFunc_Array_Get_Item;                           // 0x07A8(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable_1;                            // 0x07B0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_2;            // 0x07B8(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         Temp_object_Variable_2;                            // 0x07C8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue_2;        // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x07D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UBodycamGI_C*                           K2Node_DynamicCast_AsBodycam_GI;                   // 0x07E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_5;                     // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_ShopItemSupClass                           Temp_byte_Variable;                                // 0x07E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7EA[0x2];                                      // 0x07EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue;              // 0x07EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x07F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F4[0x4];                                      // 0x07F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_3;                            // 0x07F8(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0800(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_801[0x3];                                      // 0x0801(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0804(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0808(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_80C[0x4];                                      // 0x080C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_CustomEvent_NewMesh_2;                      // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0818(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x081C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UWBP_Locker_C*>                  CallFunc_GetAllWidgetsOfClass_FoundWidgets_1;      // 0x0820(0x0010)(ReferenceParm, ContainsInstancedReference)
	EN_ShopItemClass                              Temp_byte_Variable_1;                              // 0x0830(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_831[0x3];                                      // 0x0831(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue;              // 0x0834(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName_4;                   // 0x0838(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWBP_Locker_C*                          CallFunc_Array_Get_Item_1;                         // 0x0840(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          K2Node_CustomEvent_NewMesh_1;                      // 0x0848(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             K2Node_CustomEvent_CustomMaterials;                // 0x0850(0x0010)(ReferenceParm)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue;                // 0x0860(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_1;              // 0x0861(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_862[0x6];                                      // 0x0862(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue;                 // 0x0868(0x0010)(ConstParm, ReferenceParm)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_1;            // 0x0878(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_87C[0x4];                                      // 0x087C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item_2;                         // 0x0880(0x0028)(NoDestructor)
	struct FST_DefaultSteamItem                   CallFunc_Array_Get_Item_3;                         // 0x08A8(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0950(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0954(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_4;                    // 0x0955(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_ShowPreview;                    // 0x0956(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_957[0x1];                                      // 0x0957(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   K2Node_CustomEvent_Item;                           // 0x0958(0x00A8)(ConstParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_2;              // 0x0A00(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0A01(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A02[0x2];                                      // 0x0A02(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_LastIndex_ReturnValue_2;            // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_3;                   // 0x0A08(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A0C[0x4];                                      // 0x0A0C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   CallFunc_Array_Get_Item_4;                         // 0x0A10(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_5;                    // 0x0AB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AB9[0x7];                                      // 0x0AB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimInstance*                          CallFunc_GetAnimInstance_ReturnValue;              // 0x0AC0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULobby_Anim_C*                          K2Node_DynamicCast_AsLobby_Anim;                   // 0x0AC8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_6;                     // 0x0AD0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0AD1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD2[0x6];                                      // 0x0AD2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMesh*                          K2Node_CustomEvent_NewMesh;                        // 0x0AD8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<struct FSkeletalMaterial>              CallFunc_GetMaterials_ReturnValue_1;               // 0x0AE0(0x0010)(ConstParm, ReferenceParm)
	struct FSkeletalMaterial                      CallFunc_Array_Get_Item_5;                         // 0x0AF0(0x0028)(NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0B1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1D[0x3];                                      // 0x0B1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   K2Node_CustomEvent_ItemInfo;                       // 0x0B20(0x00A8)(ConstParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UpdateAnim_;                    // 0x0BC8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_CustomEvent_UpdateCamera_;                  // 0x0BC9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BCA[0x6];                                      // 0x0BCA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   K2Node_MakeStruct_ST_DefaultSteamItem;             // 0x0BD0(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0C78(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0C80(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C81[0x7];                                      // 0x0C81(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ULevelSequence*                         K2Node_Select_Default_1;                           // 0x0C88(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor;       // 0x0C90(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue;    // 0x0C98(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue;            // 0x0CA0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0CA8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0CAC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMesh*                          CallFunc_GetSkeletalMeshAsset_ReturnValue;         // 0x0CB0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FST_DefaultSteamItem                   CallFunc_Array_Get_Item_6;                         // 0x0CB8(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_6;                    // 0x0D60(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D61[0x7];                                      // 0x0D61(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDisplayName_ReturnValue;               // 0x0D68(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_8;              // 0x0D78(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	uint8                                         Pad_D88[0x8];                                      // 0x0D88(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             Temp_struct_Variable;                              // 0x0D90(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UVOIPTalker*                            CallFunc_AddComponent_ReturnValue;                 // 0x0DF0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class ULevelSequence*                         K2Node_CustomEvent_LevelSequence;                  // 0x0DF8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_9;              // 0x0E00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_1;    // 0x0E10(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E11[0x7];                                      // 0x0E11(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_10;             // 0x0E18(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue_11;             // 0x0E28(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class ALevelSequenceActor*                    CallFunc_CreateLevelSequencePlayer_OutActor_1;     // 0x0E38(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_CreateLevelSequencePlayer_ReturnValue_1;  // 0x0E40(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ULevelSequencePlayer*                   CallFunc_GetSequencePlayer_ReturnValue_1;          // 0x0E48(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class FName>                           CallFunc_GetDataTableRowNames_OutRowNames;         // 0x0E50(0x0010)(ReferenceParm)
	class FName                                   CallFunc_Array_Get_Item_7;                         // 0x0E60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0E68(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E6C[0x4];                                      // 0x0E6C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   CallFunc_GetDataTableRowFromName_OutRow_1;         // 0x0E70(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          CallFunc_GetDataTableRowFromName_ReturnValue_1;    // 0x0F18(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0F19(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0F1A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0F1B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_IsEmpty_ReturnValue_3;              // 0x0F1C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1D[0x3];                                      // 0x0F1D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_3;            // 0x0F20(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class FName                                   Temp_name_Variable;                                // 0x0F30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_3;                  // 0x0F38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3C[0x4];                                      // 0x0F3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   CallFunc_Array_Get_Item_8;                         // 0x0F40(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_AddUnique_ReturnValue_1;            // 0x0FE8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Array_RemoveItem_ReturnValue;             // 0x0FEC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0FED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FEE[0x2];                                      // 0x0FEE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_3;               // 0x0FF0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0FF4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FF5[0x3];                                      // 0x0FF5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_AddUnique_ReturnValue_2;            // 0x0FF8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Find_ReturnValue_1;                 // 0x0FFC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_3;                // 0x1000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue_1;            // 0x1001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1002[0x2];                                     // 0x1002(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_3;                 // 0x1004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   K2Node_CustomEvent_NotifyName;                     // 0x1008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_LastIndex_ReturnValue_3;            // 0x1010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1014[0x4];                                     // 0x1014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   CallFunc_Array_Get_Item_9;                         // 0x1018(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	struct FST_DefaultSteamItem                   CallFunc_Array_Get_Item_10;                        // 0x10C0(0x00A8)(ContainsInstancedReference, HasGetValueTypeHash)
	TDelegate<void(class FName NotifyName)>       K2Node_CreateDelegate_OutputDelegate_4;            // 0x1168(0x0010)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue_2;    // 0x1178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1179[0x7];                                     // 0x1179(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   K2Node_Select_Default_2;                           // 0x1180(0x00A8)(ConstParm, ContainsInstancedReference, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x1228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x122C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_122D[0x3];                                     // 0x122D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FName                                   K2Node_CustomEvent_NotifyName_1;                   // 0x1230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x1238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase) == 0x000010, "Wrong alignment on BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase");
static_assert(sizeof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase) == 0x001240, "Wrong size on BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, EntryPoint) == 0x000000, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::EntryPoint' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsLocallyControlled_ReturnValue) == 0x000004, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_String) == 0x000018, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_String' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Delay) == 0x000028, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Delay' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_TimeCount) == 0x000030, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_TimeCount' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_NewParam) == 0x000038, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_NewParam' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Team) == 0x000050, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Team' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Selected_Level_Name) == 0x000054, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Index) == 0x00005C, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Index' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Team_PlayerKilled_) == 0x000060, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_MilitaryIndex) == 0x000064, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_MilitaryIndex' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_TerroristIndex) == 0x000068, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_TerroristIndex' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_WiiningTeam) == 0x00006C, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_WiiningTeam' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Score) == 0x000070, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Score' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Win_) == 0x000078, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Win_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Slomo) == 0x000080, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Slomo' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_PlayerInfo) == 0x000088, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_PlayerInfo' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_SteamID) == 0x0000D0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_SteamID' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Target_2) == 0x0000E0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Target_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Yes_) == 0x000120, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Yes_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Target_1) == 0x000128, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Target_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Target) == 0x000168, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Target' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_Gamemode) == 0x0001A8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_Gamemode' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_IsTalking) == 0x0001A9, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_IsTalking' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_PC) == 0x0001B0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_PC' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_DeltaSeconds) == 0x0001B8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_MakeRotator_ReturnValue) == 0x0001C0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_CreateSaveGameObject_ReturnValue) == 0x0001D8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_CreateSaveGameObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_bool_IsClosed_Variable) == 0x0001E0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NotifyName_2) == 0x0001E4, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NotifyName_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_NewController) == 0x0001F0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_NewController' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsLocallyControlled_ReturnValue_1) == 0x0001F8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsLocallyControlled_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetSteamID_ReturnValue) == 0x000200, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_BreakSteamID_ReturnValue) == 0x000208, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_BreakSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_SteamID_1) == 0x000218, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_SteamID_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_SteamID) == 0x000228, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_SteamID' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_MakeSteamID_ReturnValue) == 0x000238, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_MakeSteamID_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_CreateProxyObjectForPlayMontage_ReturnValue) == 0x000240, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_CreateProxyObjectForPlayMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetFriendPersonaName_ReturnValue) == 0x000248, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetFriendPersonaName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsValid_ReturnValue) == 0x000258, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetWidget_ReturnValue) == 0x000260, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_AsHUD_Friends_Dot) == 0x000268, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_AsHUD_Friends_Dot' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_bSuccess) == 0x000270, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Event_IsReady_) == 0x000271, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Event_IsReady_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_Ready_) == 0x000272, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_Ready_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_bool_Variable) == 0x000273, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetWidget_ReturnValue_1) == 0x000278, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetWidget_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_AsHUD_Friends_Dot_1) == 0x000280, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_AsHUD_Friends_Dot_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_bSuccess_1) == 0x000288, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsPlayerControlled_ReturnValue) == 0x000289, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsPlayerControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_ItemClassSup_Local) == 0x00028A, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_ItemClassSup_Local' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_CHANGE_ItemClassSup_Local__) == 0x00028B, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_CHANGE_ItemClassSup_Local__' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NewItem) == 0x000290, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NewItem' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetDataTableRowFromName_OutRow) == 0x000338, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetDataTableRowFromName_OutRow' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetDataTableRowFromName_ReturnValue) == 0x0003E0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetDataTableRowFromName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CreateDelegate_OutputDelegate_1) == 0x0003E4, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CreateDelegate_OutputDelegate_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_K2_SetWorldRotation_SweepHitResult) == 0x0003F8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_K2_SetWorldRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_int_Array_Index_Variable) == 0x0004E0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetFileSize_ReturnValue) == 0x0004E4, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetFileSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetProjectDirectory_ReturnValue) == 0x0004E8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetProjectDirectory_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_FileRead_Buffer) == 0x0004F8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_FileRead_Buffer' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_FileRead_ReturnValue) == 0x000508, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_FileRead_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue) == 0x000510, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetProjectDirectory_ReturnValue_1) == 0x000520, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetProjectDirectory_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_ReadFileToBytes_ReturnValue) == 0x000530, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_ReadFileToBytes_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_1) == 0x000540, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_FileWrite_ReturnValue) == 0x000550, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_FileWrite_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_WriteBytesToFile_ReturnValue) == 0x000551, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_WriteBytesToFile_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_BoolToString_ReturnValue) == 0x000558, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_BoolToString_ReturnValue_1) == 0x000568, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_BoolToString_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_2) == 0x000578, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_3) == 0x000588, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_4) == 0x000598, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_5) == 0x0005A8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue) == 0x0005B8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_1) == 0x0005D0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_DoesSaveGameExist_ReturnValue) == 0x0005E8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_DoesSaveGameExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_bool_True_if_break_was_hit_Variable) == 0x0005E9, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Not_PreBool_ReturnValue) == 0x0005EA, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_SwitchEnum_CmpSuccess) == 0x0005EB, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_LoadGameFromSlot_ReturnValue) == 0x0005F0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_LoadGameFromSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_AsSG_Player_Customization) == 0x0005F8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_AsSG_Player_Customization' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_bSuccess_2) == 0x000600, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_SaveGameToSlot_ReturnValue) == 0x000601, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_SaveGameToSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_SaveGameToSlot_ReturnValue_1) == 0x000602, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_SaveGameToSlot_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_BoolToString_ReturnValue_2) == 0x000608, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_BoolToString_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_6) == 0x000618, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_7) == 0x000628, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetSteamID_ReturnValue_1) == 0x000638, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetSteamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_2) == 0x000640, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_BreakSteamID_ReturnValue_1) == 0x000658, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_BreakSteamID_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_object_Variable) == 0x000668, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_3) == 0x000670, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_4) == 0x000688, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_5) == 0x0006A0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_6) == 0x0006B8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_DeleteGameInSlot_ReturnValue) == 0x0006D0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_DeleteGameInSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_7) == 0x0006D8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_8) == 0x0006F0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Conv_StringToText_ReturnValue_9) == 0x000708, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Conv_StringToText_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_PlayerSkin) == 0x000720, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_PlayerSkin' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsValid_ReturnValue_1) == 0x000730, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_MakeStruct_VoiceSettings) == 0x000738, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_MakeStruct_VoiceSettings' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_AsBPI_Game_Instance_Extension) == 0x000750, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_AsBPI_Game_Instance_Extension' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_bSuccess_3) == 0x000760, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_IsTalking_) == 0x000761, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_IsTalking_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsValid_ReturnValue_2) == 0x000762, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetPlayerController_ReturnValue) == 0x000768, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NotifyName_3) == 0x000770, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NotifyName_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_AsBodycam_Interface) == 0x000778, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_bSuccess_4) == 0x000788, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_bSuccess_4' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_int_Loop_Counter_Variable) == 0x00078C, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Add_IntInt_ReturnValue) == 0x000790, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsValid_ReturnValue_3) == 0x000794, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000798, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item) == 0x0007A8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_object_Variable_1) == 0x0007B0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CreateDelegate_OutputDelegate_2) == 0x0007B8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CreateDelegate_OutputDelegate_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_object_Variable_2) == 0x0007C8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_object_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsLocallyControlled_ReturnValue_2) == 0x0007D0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsLocallyControlled_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetGameInstance_ReturnValue) == 0x0007D8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_AsBodycam_GI) == 0x0007E0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_AsBodycam_GI' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_bSuccess_5) == 0x0007E8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_bSuccess_5' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_byte_Variable) == 0x0007E9, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_AddUnique_ReturnValue) == 0x0007EC, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_AddUnique_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Find_ReturnValue) == 0x0007F0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_object_Variable_3) == 0x0007F8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_object_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000800, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_int_Array_Index_Variable_1) == 0x000804, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_int_Array_Index_Variable_2) == 0x000808, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NewMesh_2) == 0x000810, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NewMesh_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_int_Loop_Counter_Variable_1) == 0x000818, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Add_IntInt_ReturnValue_1) == 0x00081C, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetAllWidgetsOfClass_FoundWidgets_1) == 0x000820, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetAllWidgetsOfClass_FoundWidgets_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_byte_Variable_1) == 0x000830, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_LastIndex_ReturnValue) == 0x000834, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_LastIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NotifyName_4) == 0x000838, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NotifyName_4' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_1) == 0x000840, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NewMesh_1) == 0x000848, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NewMesh_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_CustomMaterials) == 0x000850, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_CustomMaterials' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_IsEmpty_ReturnValue) == 0x000860, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_IsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_IsEmpty_ReturnValue_1) == 0x000861, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_IsEmpty_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetMaterials_ReturnValue) == 0x000868, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetMaterials_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_LastIndex_ReturnValue_1) == 0x000878, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_LastIndex_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_2) == 0x000880, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_3) == 0x0008A8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Length_ReturnValue) == 0x000950, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Less_IntInt_ReturnValue) == 0x000954, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsValid_ReturnValue_4) == 0x000955, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsValid_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_ShowPreview) == 0x000956, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_ShowPreview' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_Item) == 0x000958, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_Item' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_IsEmpty_ReturnValue_2) == 0x000A00, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_IsEmpty_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_SwitchEnum_CmpSuccess_1) == 0x000A01, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_LastIndex_ReturnValue_2) == 0x000A04, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_LastIndex_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_int_Array_Index_Variable_3) == 0x000A08, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_int_Array_Index_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_4) == 0x000A10, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_4' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsValid_ReturnValue_5) == 0x000AB8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsValid_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetAnimInstance_ReturnValue) == 0x000AC0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetAnimInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_AsLobby_Anim) == 0x000AC8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_AsLobby_Anim' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_DynamicCast_bSuccess_6) == 0x000AD0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_DynamicCast_bSuccess_6' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_SwitchEnum_CmpSuccess_2) == 0x000AD1, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NewMesh) == 0x000AD8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NewMesh' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetMaterials_ReturnValue_1) == 0x000AE0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetMaterials_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_5) == 0x000AF0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_5' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Length_ReturnValue_1) == 0x000B18, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_SwitchEnum_CmpSuccess_3) == 0x000B1C, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_ItemInfo) == 0x000B20, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_UpdateAnim_) == 0x000BC8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_UpdateAnim_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_UpdateCamera_) == 0x000BC9, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_UpdateCamera_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_MakeStruct_ST_DefaultSteamItem) == 0x000BD0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_MakeStruct_ST_DefaultSteamItem' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Select_Default) == 0x000C78, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000C80, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Select_Default_1) == 0x000C88, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_CreateLevelSequencePlayer_OutActor) == 0x000C90, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_CreateLevelSequencePlayer_OutActor' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_CreateLevelSequencePlayer_ReturnValue) == 0x000C98, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_CreateLevelSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetSequencePlayer_ReturnValue) == 0x000CA0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetSequencePlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_int_Loop_Counter_Variable_2) == 0x000CA8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Add_IntInt_ReturnValue_2) == 0x000CAC, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetSkeletalMeshAsset_ReturnValue) == 0x000CB0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetSkeletalMeshAsset_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_6) == 0x000CB8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_6' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_IsValid_ReturnValue_6) == 0x000D60, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_IsValid_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetDisplayName_ReturnValue) == 0x000D68, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetDisplayName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_8) == 0x000D78, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_struct_Variable) == 0x000D90, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_struct_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_AddComponent_ReturnValue) == 0x000DF0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_AddComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_LevelSequence) == 0x000DF8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_LevelSequence' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_9) == 0x000E00, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_EqualEqual_ObjectObject_ReturnValue_1) == 0x000E10, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_EqualEqual_ObjectObject_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_10) == 0x000E18, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Concat_StrStr_ReturnValue_11) == 0x000E28, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Concat_StrStr_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_CreateLevelSequencePlayer_OutActor_1) == 0x000E38, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_CreateLevelSequencePlayer_OutActor_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_CreateLevelSequencePlayer_ReturnValue_1) == 0x000E40, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_CreateLevelSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetSequencePlayer_ReturnValue_1) == 0x000E48, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetSequencePlayer_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetDataTableRowNames_OutRowNames) == 0x000E50, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetDataTableRowNames_OutRowNames' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_7) == 0x000E60, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_7' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Length_ReturnValue_2) == 0x000E68, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetDataTableRowFromName_OutRow_1) == 0x000E70, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetDataTableRowFromName_OutRow_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_GetDataTableRowFromName_ReturnValue_1) == 0x000F18, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_GetDataTableRowFromName_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Less_IntInt_ReturnValue_1) == 0x000F19, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_BooleanAND_ReturnValue) == 0x000F1A, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000F1B, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_IsEmpty_ReturnValue_3) == 0x000F1C, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_IsEmpty_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CreateDelegate_OutputDelegate_3) == 0x000F20, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CreateDelegate_OutputDelegate_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_name_Variable) == 0x000F30, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_name_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_int_Loop_Counter_Variable_3) == 0x000F38, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_int_Loop_Counter_Variable_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_8) == 0x000F40, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_8' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_AddUnique_ReturnValue_1) == 0x000FE8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_AddUnique_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_RemoveItem_ReturnValue) == 0x000FEC, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_RemoveItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000FED, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Length_ReturnValue_3) == 0x000FF0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Length_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Less_IntInt_ReturnValue_2) == 0x000FF4, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_AddUnique_ReturnValue_2) == 0x000FF8, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_AddUnique_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Find_ReturnValue_1) == 0x000FFC, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Less_IntInt_ReturnValue_3) == 0x001000, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Less_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_NotEqual_IntInt_ReturnValue_1) == 0x001001, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_NotEqual_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Add_IntInt_ReturnValue_3) == 0x001004, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Add_IntInt_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NotifyName) == 0x001008, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NotifyName' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_LastIndex_ReturnValue_3) == 0x001010, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_LastIndex_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_9) == 0x001018, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_9' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Get_Item_10) == 0x0010C0, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Get_Item_10' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CreateDelegate_OutputDelegate_4) == 0x001168, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CreateDelegate_OutputDelegate_4' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_EqualEqual_ObjectObject_ReturnValue_2) == 0x001178, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_EqualEqual_ObjectObject_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_Select_Default_2) == 0x001180, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_Select_Default_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_Array_Add_ReturnValue) == 0x001228, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, Temp_bool_Has_Been_Initd_Variable) == 0x00122C, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, K2Node_CustomEvent_NotifyName_1) == 0x001230, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::K2Node_CustomEvent_NotifyName_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x001238, "Member 'BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Get BP Menu Controller Component
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_Get_BP_Menu_Controller_Component final
{
public:
	class UBP_MenuControllerComponent_C*          BP_Menu_Controller_Component;                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_Get_BP_Menu_Controller_Component");
static_assert(sizeof(BP_BC_ShowCase_C_Get_BP_Menu_Controller_Component) == 0x000008, "Wrong size on BP_BC_ShowCase_C_Get_BP_Menu_Controller_Component");
static_assert(offsetof(BP_BC_ShowCase_C_Get_BP_Menu_Controller_Component, BP_Menu_Controller_Component) == 0x000000, "Member 'BP_BC_ShowCase_C_Get_BP_Menu_Controller_Component::BP_Menu_Controller_Component' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Get Stamina
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_Get_Stamina final
{
public:
	double                                        Stamina;                                           // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_Get_Stamina) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_Get_Stamina");
static_assert(sizeof(BP_BC_ShowCase_C_Get_Stamina) == 0x000008, "Wrong size on BP_BC_ShowCase_C_Get_Stamina");
static_assert(offsetof(BP_BC_ShowCase_C_Get_Stamina, Stamina) == 0x000000, "Member 'BP_BC_ShowCase_C_Get_Stamina::Stamina' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetBlured
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_GetBlured final
{
public:
	double                                        Blured;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetBlured) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetBlured");
static_assert(sizeof(BP_BC_ShowCase_C_GetBlured) == 0x000008, "Wrong size on BP_BC_ShowCase_C_GetBlured");
static_assert(offsetof(BP_BC_ShowCase_C_GetBlured, Blured) == 0x000000, "Member 'BP_BC_ShowCase_C_GetBlured::Blured' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetBurnedRef
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_GetBurnedRef final
{
public:
	class USceneComponent*                        BurnedMesh;                                        // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetBurnedRef) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetBurnedRef");
static_assert(sizeof(BP_BC_ShowCase_C_GetBurnedRef) == 0x000008, "Wrong size on BP_BC_ShowCase_C_GetBurnedRef");
static_assert(offsetof(BP_BC_ShowCase_C_GetBurnedRef, BurnedMesh) == 0x000000, "Member 'BP_BC_ShowCase_C_GetBurnedRef::BurnedMesh' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetFlashBangEffect
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_GetFlashBangEffect final
{
public:
	double                                        FlashEffect;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetFlashBangEffect) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetFlashBangEffect");
static_assert(sizeof(BP_BC_ShowCase_C_GetFlashBangEffect) == 0x000008, "Wrong size on BP_BC_ShowCase_C_GetFlashBangEffect");
static_assert(offsetof(BP_BC_ShowCase_C_GetFlashBangEffect, FlashEffect) == 0x000000, "Member 'BP_BC_ShowCase_C_GetFlashBangEffect::FlashEffect' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetGameMode
// 0x0040 (0x0040 - 0x0000)
struct BP_BC_ShowCase_C_GetGameMode final
{
public:
	struct FSTR_GamemodeWinInfo                   GameMode;                                          // 0x0000(0x0040)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetGameMode) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetGameMode");
static_assert(sizeof(BP_BC_ShowCase_C_GetGameMode) == 0x000040, "Wrong size on BP_BC_ShowCase_C_GetGameMode");
static_assert(offsetof(BP_BC_ShowCase_C_GetGameMode, GameMode) == 0x000000, "Member 'BP_BC_ShowCase_C_GetGameMode::GameMode' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetHealth
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_GetHealth final
{
public:
	double                                        Health;                                            // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetHealth) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetHealth");
static_assert(sizeof(BP_BC_ShowCase_C_GetHealth) == 0x000008, "Wrong size on BP_BC_ShowCase_C_GetHealth");
static_assert(offsetof(BP_BC_ShowCase_C_GetHealth, Health) == 0x000000, "Member 'BP_BC_ShowCase_C_GetHealth::Health' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetKickedPlayerVoted
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_GetKickedPlayerVoted final
{
public:
	TArray<class FString>                         KickplayerAlreadyVote;                             // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BC_ShowCase_C_GetKickedPlayerVoted) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetKickedPlayerVoted");
static_assert(sizeof(BP_BC_ShowCase_C_GetKickedPlayerVoted) == 0x000010, "Wrong size on BP_BC_ShowCase_C_GetKickedPlayerVoted");
static_assert(offsetof(BP_BC_ShowCase_C_GetKickedPlayerVoted, KickplayerAlreadyVote) == 0x000000, "Member 'BP_BC_ShowCase_C_GetKickedPlayerVoted::KickplayerAlreadyVote' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetMenuSettings
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_GetMenuSettings final
{
public:
	class UBP_MenuControllerComponent_C*          Bp_MenuController;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetMenuSettings) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetMenuSettings");
static_assert(sizeof(BP_BC_ShowCase_C_GetMenuSettings) == 0x000008, "Wrong size on BP_BC_ShowCase_C_GetMenuSettings");
static_assert(offsetof(BP_BC_ShowCase_C_GetMenuSettings, Bp_MenuController) == 0x000000, "Member 'BP_BC_ShowCase_C_GetMenuSettings::Bp_MenuController' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetMutePlayer
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_GetMutePlayer final
{
public:
	TArray<class FString>                         MutePlayer;                                        // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BC_ShowCase_C_GetMutePlayer) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetMutePlayer");
static_assert(sizeof(BP_BC_ShowCase_C_GetMutePlayer) == 0x000010, "Wrong size on BP_BC_ShowCase_C_GetMutePlayer");
static_assert(offsetof(BP_BC_ShowCase_C_GetMutePlayer, MutePlayer) == 0x000000, "Member 'BP_BC_ShowCase_C_GetMutePlayer::MutePlayer' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetPlayerConnected
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_GetPlayerConnected final
{
public:
	TArray<struct FSTR_PCInfo>                    PlayerConnected;                                   // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BC_ShowCase_C_GetPlayerConnected) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetPlayerConnected");
static_assert(sizeof(BP_BC_ShowCase_C_GetPlayerConnected) == 0x000010, "Wrong size on BP_BC_ShowCase_C_GetPlayerConnected");
static_assert(offsetof(BP_BC_ShowCase_C_GetPlayerConnected, PlayerConnected) == 0x000000, "Member 'BP_BC_ShowCase_C_GetPlayerConnected::PlayerConnected' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetPlayerKickVote
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_GetPlayerKickVote final
{
public:
	TArray<struct FSTR_KickVote>                  KickVotePlayer;                                    // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BC_ShowCase_C_GetPlayerKickVote) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetPlayerKickVote");
static_assert(sizeof(BP_BC_ShowCase_C_GetPlayerKickVote) == 0x000010, "Wrong size on BP_BC_ShowCase_C_GetPlayerKickVote");
static_assert(offsetof(BP_BC_ShowCase_C_GetPlayerKickVote, KickVotePlayer) == 0x000000, "Member 'BP_BC_ShowCase_C_GetPlayerKickVote::KickVotePlayer' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetPlayerSkin
// 0x02E8 (0x02E8 - 0x0000)
struct BP_BC_ShowCase_C_GetPlayerSkin final
{
public:
	struct FSTR_TEST                              Player_Skin;                                       // 0x0000(0x02E0)(Parm, OutParm, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x02E0(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetPlayerSkin) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetPlayerSkin");
static_assert(sizeof(BP_BC_ShowCase_C_GetPlayerSkin) == 0x0002E8, "Wrong size on BP_BC_ShowCase_C_GetPlayerSkin");
static_assert(offsetof(BP_BC_ShowCase_C_GetPlayerSkin, Player_Skin) == 0x000000, "Member 'BP_BC_ShowCase_C_GetPlayerSkin::Player_Skin' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_GetPlayerSkin, Valid_) == 0x0002E0, "Member 'BP_BC_ShowCase_C_GetPlayerSkin::Valid_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetRagdollSystem
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_GetRagdollSystem final
{
public:
	class UWW_RagdollSystem_C*                    Ragdoll_System;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetRagdollSystem) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetRagdollSystem");
static_assert(sizeof(BP_BC_ShowCase_C_GetRagdollSystem) == 0x000008, "Wrong size on BP_BC_ShowCase_C_GetRagdollSystem");
static_assert(offsetof(BP_BC_ShowCase_C_GetRagdollSystem, Ragdoll_System) == 0x000000, "Member 'BP_BC_ShowCase_C_GetRagdollSystem::Ragdoll_System' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetReady?
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_GetReady_ final
{
public:
	bool                                          IsReady_;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetReady_) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_GetReady_");
static_assert(sizeof(BP_BC_ShowCase_C_GetReady_) == 0x000001, "Wrong size on BP_BC_ShowCase_C_GetReady_");
static_assert(offsetof(BP_BC_ShowCase_C_GetReady_, IsReady_) == 0x000000, "Member 'BP_BC_ShowCase_C_GetReady_::IsReady_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetServerSteamID
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_GetServerSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetServerSteamID) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetServerSteamID");
static_assert(sizeof(BP_BC_ShowCase_C_GetServerSteamID) == 0x000010, "Wrong size on BP_BC_ShowCase_C_GetServerSteamID");
static_assert(offsetof(BP_BC_ShowCase_C_GetServerSteamID, SteamID) == 0x000000, "Member 'BP_BC_ShowCase_C_GetServerSteamID::SteamID' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetStarterWeapons
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_GetStarterWeapons final
{
public:
	TArray<struct FSTR_Actor>                     Weapons_0;                                         // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BC_ShowCase_C_GetStarterWeapons) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetStarterWeapons");
static_assert(sizeof(BP_BC_ShowCase_C_GetStarterWeapons) == 0x000010, "Wrong size on BP_BC_ShowCase_C_GetStarterWeapons");
static_assert(offsetof(BP_BC_ShowCase_C_GetStarterWeapons, Weapons_0) == 0x000000, "Member 'BP_BC_ShowCase_C_GetStarterWeapons::Weapons_0' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetSteamID
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_GetSteamID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetSteamID) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetSteamID");
static_assert(sizeof(BP_BC_ShowCase_C_GetSteamID) == 0x000010, "Wrong size on BP_BC_ShowCase_C_GetSteamID");
static_assert(offsetof(BP_BC_ShowCase_C_GetSteamID, SteamID) == 0x000000, "Member 'BP_BC_ShowCase_C_GetSteamID::SteamID' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetSurvivorStatuts
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_GetSurvivorStatuts final
{
public:
	class UWW_SurvivorStatus_C*                   SurvivorComponant;                                 // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetSurvivorStatuts) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetSurvivorStatuts");
static_assert(sizeof(BP_BC_ShowCase_C_GetSurvivorStatuts) == 0x000008, "Wrong size on BP_BC_ShowCase_C_GetSurvivorStatuts");
static_assert(offsetof(BP_BC_ShowCase_C_GetSurvivorStatuts, SurvivorComponant) == 0x000000, "Member 'BP_BC_ShowCase_C_GetSurvivorStatuts::SurvivorComponant' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetTeam
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_GetTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_GetTeam) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_GetTeam");
static_assert(sizeof(BP_BC_ShowCase_C_GetTeam) == 0x000001, "Wrong size on BP_BC_ShowCase_C_GetTeam");
static_assert(offsetof(BP_BC_ShowCase_C_GetTeam, Team) == 0x000000, "Member 'BP_BC_ShowCase_C_GetTeam::Team' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetTeamList
// 0x0018 (0x0018 - 0x0000)
struct BP_BC_ShowCase_C_GetTeamList final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FSTR_PCInfo>                    Info;                                              // 0x0008(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BC_ShowCase_C_GetTeamList) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetTeamList");
static_assert(sizeof(BP_BC_ShowCase_C_GetTeamList) == 0x000018, "Wrong size on BP_BC_ShowCase_C_GetTeamList");
static_assert(offsetof(BP_BC_ShowCase_C_GetTeamList, Team) == 0x000000, "Member 'BP_BC_ShowCase_C_GetTeamList::Team' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_GetTeamList, Info) == 0x000008, "Member 'BP_BC_ShowCase_C_GetTeamList::Info' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetTopScore
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_GetTopScore final
{
public:
	TArray<struct FSTR_PCInfo>                    TopScore;                                          // 0x0000(0x0010)(Parm, OutParm)
};
static_assert(alignof(BP_BC_ShowCase_C_GetTopScore) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_GetTopScore");
static_assert(sizeof(BP_BC_ShowCase_C_GetTopScore) == 0x000010, "Wrong size on BP_BC_ShowCase_C_GetTopScore");
static_assert(offsetof(BP_BC_ShowCase_C_GetTopScore, TopScore) == 0x000000, "Member 'BP_BC_ShowCase_C_GetTopScore::TopScore' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.InitUserName (Multicast)
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_InitUserName__Multicast_ final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_InitUserName__Multicast_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_InitUserName__Multicast_");
static_assert(sizeof(BP_BC_ShowCase_C_InitUserName__Multicast_) == 0x000010, "Wrong size on BP_BC_ShowCase_C_InitUserName__Multicast_");
static_assert(offsetof(BP_BC_ShowCase_C_InitUserName__Multicast_, SteamID) == 0x000000, "Member 'BP_BC_ShowCase_C_InitUserName__Multicast_::SteamID' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.InitUserName (Server)
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_InitUserName__Server_ final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_InitUserName__Server_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_InitUserName__Server_");
static_assert(sizeof(BP_BC_ShowCase_C_InitUserName__Server_) == 0x000010, "Wrong size on BP_BC_ShowCase_C_InitUserName__Server_");
static_assert(offsetof(BP_BC_ShowCase_C_InitUserName__Server_, SteamID) == 0x000000, "Member 'BP_BC_ShowCase_C_InitUserName__Server_::SteamID' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Is Spawn Point Valid
// 0x01B0 (0x01B0 - 0x0000)
struct BP_BC_ShowCase_C_Is_Spawn_Point_Valid final
{
public:
	struct FTransform                             Spawn_Transform;                                   // 0x0000(0x0060)(BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Valid_;                                            // 0x0060(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IsLocked;                                          // 0x0061(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_62[0x6];                                       // 0x0062(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B9[0x3];                                       // 0x00B9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C1[0x3];                                       // 0x00C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors;            // 0x00C8(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_DC[0x4];                                       // 0x00DC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item;                           // 0x00E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E9[0x7];                                       // 0x00E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x00F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_VectorVector_ReturnValue;      // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid) == 0x000010, "Wrong alignment on BP_BC_ShowCase_C_Is_Spawn_Point_Valid");
static_assert(sizeof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid) == 0x0001B0, "Wrong size on BP_BC_ShowCase_C_Is_Spawn_Point_Valid");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, Spawn_Transform) == 0x000000, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::Spawn_Transform' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, Valid_) == 0x000060, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::Valid_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, IsLocked) == 0x000061, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::IsLocked' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Location) == 0x000068, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Rotation) == 0x000080, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Scale) == 0x000098, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, Temp_bool_True_if_break_was_hit_Variable) == 0x0000B0, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, Temp_int_Array_Index_Variable) == 0x0000B4, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_Not_PreBool_ReturnValue) == 0x0000B8, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, Temp_int_Loop_Counter_Variable) == 0x0000BC, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_Not_PreBool_ReturnValue_1) == 0x0000C0, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_Add_IntInt_ReturnValue) == 0x0000C4, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_GetAllActorsOfClass_OutActors) == 0x0000C8, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_Array_Get_Item) == 0x0000E0, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_Less_IntInt_ReturnValue) == 0x0000E8, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_GetTransform_ReturnValue) == 0x0000F0, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_BooleanAND_ReturnValue) == 0x000150, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Location_1) == 0x000158, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Rotation_1) == 0x000170, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_BreakTransform_Scale_1) == 0x000188, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Is_Spawn_Point_Valid, CallFunc_EqualEqual_VectorVector_ReturnValue) == 0x0001A0, "Member 'BP_BC_ShowCase_C_Is_Spawn_Point_Valid::CallFunc_EqualEqual_VectorVector_ReturnValue' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsDead
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_IsDead final
{
public:
	bool                                          Dead_;                                             // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_IsDead) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_IsDead");
static_assert(sizeof(BP_BC_ShowCase_C_IsDead) == 0x000001, "Wrong size on BP_BC_ShowCase_C_IsDead");
static_assert(offsetof(BP_BC_ShowCase_C_IsDead, Dead_) == 0x000000, "Member 'BP_BC_ShowCase_C_IsDead::Dead_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsDestroyabe?
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_IsDestroyabe_ final
{
public:
	bool                                          Destroyable_;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_IsDestroyabe_) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_IsDestroyabe_");
static_assert(sizeof(BP_BC_ShowCase_C_IsDestroyabe_) == 0x000001, "Wrong size on BP_BC_ShowCase_C_IsDestroyabe_");
static_assert(offsetof(BP_BC_ShowCase_C_IsDestroyabe_, Destroyable_) == 0x000000, "Member 'BP_BC_ShowCase_C_IsDestroyabe_::Destroyable_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsReady?
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_IsReady_ final
{
public:
	bool                                          IsReady__0;                                        // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_IsReady_) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_IsReady_");
static_assert(sizeof(BP_BC_ShowCase_C_IsReady_) == 0x000001, "Wrong size on BP_BC_ShowCase_C_IsReady_");
static_assert(offsetof(BP_BC_ShowCase_C_IsReady_, IsReady__0) == 0x000000, "Member 'BP_BC_ShowCase_C_IsReady_::IsReady__0' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsStress
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_IsStress final
{
public:
	bool                                          Yes_;                                              // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_IsStress) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_IsStress");
static_assert(sizeof(BP_BC_ShowCase_C_IsStress) == 0x000001, "Wrong size on BP_BC_ShowCase_C_IsStress");
static_assert(offsetof(BP_BC_ShowCase_C_IsStress, Yes_) == 0x000000, "Member 'BP_BC_ShowCase_C_IsStress::Yes_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsTalking?
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_IsTalking_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_IsTalking_) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_IsTalking_");
static_assert(sizeof(BP_BC_ShowCase_C_IsTalking_) == 0x000001, "Wrong size on BP_BC_ShowCase_C_IsTalking_");
static_assert(offsetof(BP_BC_ShowCase_C_IsTalking_, IsTalking__0) == 0x000000, "Member 'BP_BC_ShowCase_C_IsTalking_::IsTalking__0' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsTalking? (Server)
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_IsTalking___Server_ final
{
public:
	bool                                          IsTalking__0;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_IsTalking___Server_) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_IsTalking___Server_");
static_assert(sizeof(BP_BC_ShowCase_C_IsTalking___Server_) == 0x000001, "Wrong size on BP_BC_ShowCase_C_IsTalking___Server_");
static_assert(offsetof(BP_BC_ShowCase_C_IsTalking___Server_, IsTalking__0) == 0x000000, "Member 'BP_BC_ShowCase_C_IsTalking___Server_::IsTalking__0' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Kick?
// 0x0040 (0x0040 - 0x0000)
struct BP_BC_ShowCase_C_Kick_ final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_Kick_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_Kick_");
static_assert(sizeof(BP_BC_ShowCase_C_Kick_) == 0x000040, "Wrong size on BP_BC_ShowCase_C_Kick_");
static_assert(offsetof(BP_BC_ShowCase_C_Kick_, Target) == 0x000000, "Member 'BP_BC_ShowCase_C_Kick_::Target' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.KickPlayer
// 0x0048 (0x0048 - 0x0000)
struct BP_BC_ShowCase_C_KickPlayer final
{
public:
	struct FSTR_KickVote                          PlayerInfo;                                        // 0x0000(0x0048)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_KickPlayer) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_KickPlayer");
static_assert(sizeof(BP_BC_ShowCase_C_KickPlayer) == 0x000048, "Wrong size on BP_BC_ShowCase_C_KickPlayer");
static_assert(offsetof(BP_BC_ShowCase_C_KickPlayer, PlayerInfo) == 0x000000, "Member 'BP_BC_ShowCase_C_KickPlayer::PlayerInfo' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.MuteID
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_MuteID final
{
public:
	class FString                                 SteamID;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_MuteID) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_MuteID");
static_assert(sizeof(BP_BC_ShowCase_C_MuteID) == 0x000010, "Wrong size on BP_BC_ShowCase_C_MuteID");
static_assert(offsetof(BP_BC_ShowCase_C_MuteID, SteamID) == 0x000000, "Member 'BP_BC_ShowCase_C_MuteID::SteamID' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.NewKickVote
// 0x0040 (0x0040 - 0x0000)
struct BP_BC_ShowCase_C_NewKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_NewKickVote) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_NewKickVote");
static_assert(sizeof(BP_BC_ShowCase_C_NewKickVote) == 0x000040, "Wrong size on BP_BC_ShowCase_C_NewKickVote");
static_assert(offsetof(BP_BC_ShowCase_C_NewKickVote, Target) == 0x000000, "Member 'BP_BC_ShowCase_C_NewKickVote::Target' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnBlendOut_286DF58A484E2FD546809EACD187D7A5
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_OnBlendOut_286DF58A484E2FD546809EACD187D7A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_OnBlendOut_286DF58A484E2FD546809EACD187D7A5) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_OnBlendOut_286DF58A484E2FD546809EACD187D7A5");
static_assert(sizeof(BP_BC_ShowCase_C_OnBlendOut_286DF58A484E2FD546809EACD187D7A5) == 0x000008, "Wrong size on BP_BC_ShowCase_C_OnBlendOut_286DF58A484E2FD546809EACD187D7A5");
static_assert(offsetof(BP_BC_ShowCase_C_OnBlendOut_286DF58A484E2FD546809EACD187D7A5, NotifyName) == 0x000000, "Member 'BP_BC_ShowCase_C_OnBlendOut_286DF58A484E2FD546809EACD187D7A5::NotifyName' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnCompleted_286DF58A484E2FD546809EACD187D7A5
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_OnCompleted_286DF58A484E2FD546809EACD187D7A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_OnCompleted_286DF58A484E2FD546809EACD187D7A5) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_OnCompleted_286DF58A484E2FD546809EACD187D7A5");
static_assert(sizeof(BP_BC_ShowCase_C_OnCompleted_286DF58A484E2FD546809EACD187D7A5) == 0x000008, "Wrong size on BP_BC_ShowCase_C_OnCompleted_286DF58A484E2FD546809EACD187D7A5");
static_assert(offsetof(BP_BC_ShowCase_C_OnCompleted_286DF58A484E2FD546809EACD187D7A5, NotifyName) == 0x000000, "Member 'BP_BC_ShowCase_C_OnCompleted_286DF58A484E2FD546809EACD187D7A5::NotifyName' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnInterrupted_286DF58A484E2FD546809EACD187D7A5
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_OnInterrupted_286DF58A484E2FD546809EACD187D7A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_OnInterrupted_286DF58A484E2FD546809EACD187D7A5) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_OnInterrupted_286DF58A484E2FD546809EACD187D7A5");
static_assert(sizeof(BP_BC_ShowCase_C_OnInterrupted_286DF58A484E2FD546809EACD187D7A5) == 0x000008, "Wrong size on BP_BC_ShowCase_C_OnInterrupted_286DF58A484E2FD546809EACD187D7A5");
static_assert(offsetof(BP_BC_ShowCase_C_OnInterrupted_286DF58A484E2FD546809EACD187D7A5, NotifyName) == 0x000000, "Member 'BP_BC_ShowCase_C_OnInterrupted_286DF58A484E2FD546809EACD187D7A5::NotifyName' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5");
static_assert(sizeof(BP_BC_ShowCase_C_OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5) == 0x000008, "Wrong size on BP_BC_ShowCase_C_OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5");
static_assert(offsetof(BP_BC_ShowCase_C_OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5, NotifyName) == 0x000000, "Member 'BP_BC_ShowCase_C_OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5::NotifyName' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5 final
{
public:
	class FName                                   NotifyName;                                        // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5");
static_assert(sizeof(BP_BC_ShowCase_C_OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5) == 0x000008, "Wrong size on BP_BC_ShowCase_C_OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5");
static_assert(offsetof(BP_BC_ShowCase_C_OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5, NotifyName) == 0x000000, "Member 'BP_BC_ShowCase_C_OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5::NotifyName' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnPlayerDeath
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_OnPlayerDeath final
{
public:
	class APlayerController*                      PC;                                                // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_OnPlayerDeath) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_OnPlayerDeath");
static_assert(sizeof(BP_BC_ShowCase_C_OnPlayerDeath) == 0x000008, "Wrong size on BP_BC_ShowCase_C_OnPlayerDeath");
static_assert(offsetof(BP_BC_ShowCase_C_OnPlayerDeath, PC) == 0x000000, "Member 'BP_BC_ShowCase_C_OnPlayerDeath::PC' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnTrySelectTeam
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_OnTrySelectTeam final
{
public:
	E_Team                                        Team;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_OnTrySelectTeam) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_OnTrySelectTeam");
static_assert(sizeof(BP_BC_ShowCase_C_OnTrySelectTeam) == 0x000001, "Wrong size on BP_BC_ShowCase_C_OnTrySelectTeam");
static_assert(offsetof(BP_BC_ShowCase_C_OnTrySelectTeam, Team) == 0x000000, "Member 'BP_BC_ShowCase_C_OnTrySelectTeam::Team' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Play Sounds (Server)
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_Play_Sounds__Server_ final
{
public:
	class USoundBase*                             Sound;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_Play_Sounds__Server_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_Play_Sounds__Server_");
static_assert(sizeof(BP_BC_ShowCase_C_Play_Sounds__Server_) == 0x000008, "Wrong size on BP_BC_ShowCase_C_Play_Sounds__Server_");
static_assert(offsetof(BP_BC_ShowCase_C_Play_Sounds__Server_, Sound) == 0x000000, "Member 'BP_BC_ShowCase_C_Play_Sounds__Server_::Sound' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.PlayerPlacement
// 0x0410 (0x0410 - 0x0000)
struct BP_BC_ShowCase_C_PlayerPlacement final
{
public:
	TArray<class ABP_BC_ShowCase_C*>              OtherPlayer;                                       // 0x0000(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          IsLocked;                                          // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   PlayerStartValid;                                  // 0x0018(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable_1;        // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ABP_BC_ShowCase_C*>              CallFunc_GetAllActorsOfClass_OutActors;            // 0x0060(0x0010)(ReferenceParm)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_BC_ShowCase_C*                      CallFunc_Array_Get_Item;                           // 0x0078(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class ABP_BC_ShowCase_C*                      CallFunc_Array_Get_Item_1;                         // 0x0080(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0090(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Is_Spawn_Point_Valid_Valid_;              // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult; // 0x0140(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue; // 0x0228(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_229[0x3];                                      // 0x0229(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x022C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0230(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0234(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0235(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_236[0x2];                                      // 0x0236(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class APlayerStart*>                   CallFunc_GetAllActorsOfClass_OutActors_1;          // 0x0238(0x0010)(ReferenceParm)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerStart*                           CallFunc_Array_Get_Item_2;                         // 0x0250(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_258[0x8];                                      // 0x0258(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue_1;               // 0x0260(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Add_ReturnValue_1;                  // 0x02C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C4[0x4];                                      // 0x02C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x02C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x02E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x02F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1; // 0x0310(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1; // 0x03F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_NameName_ReturnValue;          // 0x03F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3FA[0x2];                                      // 0x03FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x03FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0400(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x0401(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_PlayerPlacement) == 0x000010, "Wrong alignment on BP_BC_ShowCase_C_PlayerPlacement");
static_assert(sizeof(BP_BC_ShowCase_C_PlayerPlacement) == 0x000410, "Wrong size on BP_BC_ShowCase_C_PlayerPlacement");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, OtherPlayer) == 0x000000, "Member 'BP_BC_ShowCase_C_PlayerPlacement::OtherPlayer' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, IsLocked) == 0x000010, "Member 'BP_BC_ShowCase_C_PlayerPlacement::IsLocked' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, PlayerStartValid) == 0x000018, "Member 'BP_BC_ShowCase_C_PlayerPlacement::PlayerStartValid' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, Temp_bool_True_if_break_was_hit_Variable) == 0x000028, "Member 'BP_BC_ShowCase_C_PlayerPlacement::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, Temp_int_Array_Index_Variable) == 0x00002C, "Member 'BP_BC_ShowCase_C_PlayerPlacement::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, Temp_int_Loop_Counter_Variable) == 0x000034, "Member 'BP_BC_ShowCase_C_PlayerPlacement::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, Temp_int_Loop_Counter_Variable_1) == 0x000038, "Member 'BP_BC_ShowCase_C_PlayerPlacement::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Add_IntInt_ReturnValue) == 0x00003C, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Add_IntInt_ReturnValue_1) == 0x000040, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, Temp_int_Loop_Counter_Variable_2) == 0x000044, "Member 'BP_BC_ShowCase_C_PlayerPlacement::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Add_IntInt_ReturnValue_2) == 0x000048, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, Temp_bool_True_if_break_was_hit_Variable_1) == 0x00004C, "Member 'BP_BC_ShowCase_C_PlayerPlacement::Temp_bool_True_if_break_was_hit_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, Temp_int_Array_Index_Variable_1) == 0x000050, "Member 'BP_BC_ShowCase_C_PlayerPlacement::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Not_PreBool_ReturnValue_1) == 0x000054, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_GetAllActorsOfClass_OutActors) == 0x000060, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_GetAllActorsOfClass_OutActors' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, Temp_int_Array_Index_Variable_2) == 0x000070, "Member 'BP_BC_ShowCase_C_PlayerPlacement::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Array_Get_Item) == 0x000078, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Array_Get_Item_1) == 0x000080, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000088, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_GetTransform_ReturnValue) == 0x000090, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_BreakTransform_Location) == 0x0000F0, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_BreakTransform_Rotation) == 0x000108, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_BreakTransform_Scale) == 0x000120, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Is_Spawn_Point_Valid_Valid_) == 0x000138, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Is_Spawn_Point_Valid_Valid_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult) == 0x000140, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_K2_SetActorLocationAndRotation_ReturnValue) == 0x000228, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_K2_SetActorLocationAndRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Array_Add_ReturnValue) == 0x00022C, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Array_Length_ReturnValue_1) == 0x000230, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Less_IntInt_ReturnValue_1) == 0x000234, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_BooleanAND_ReturnValue) == 0x000235, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_GetAllActorsOfClass_OutActors_1) == 0x000238, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_GetAllActorsOfClass_OutActors_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_IsLocallyControlled_ReturnValue) == 0x000248, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Array_Get_Item_2) == 0x000250, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_GetTransform_ReturnValue_1) == 0x000260, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_GetTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Array_Add_ReturnValue_1) == 0x0002C0, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Array_Add_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_BreakTransform_Location_1) == 0x0002C8, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_BreakTransform_Rotation_1) == 0x0002E0, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_BreakTransform_Scale_1) == 0x0002F8, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1) == 0x000310, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_K2_SetActorLocationAndRotation_SweepHitResult_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1) == 0x0003F8, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_K2_SetActorLocationAndRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_EqualEqual_NameName_ReturnValue) == 0x0003F9, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_EqualEqual_NameName_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Array_Length_ReturnValue_2) == 0x0003FC, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_Less_IntInt_ReturnValue_2) == 0x000400, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerPlacement, CallFunc_BooleanAND_ReturnValue_1) == 0x000401, "Member 'BP_BC_ShowCase_C_PlayerPlacement::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.PlayerSkin (Server)
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_PlayerSkin__Server_ final
{
public:
	TArray<struct FST_DefaultSteamItem>           PlayerSkin;                                        // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)
};
static_assert(alignof(BP_BC_ShowCase_C_PlayerSkin__Server_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_PlayerSkin__Server_");
static_assert(sizeof(BP_BC_ShowCase_C_PlayerSkin__Server_) == 0x000010, "Wrong size on BP_BC_ShowCase_C_PlayerSkin__Server_");
static_assert(offsetof(BP_BC_ShowCase_C_PlayerSkin__Server_, PlayerSkin) == 0x000000, "Member 'BP_BC_ShowCase_C_PlayerSkin__Server_::PlayerSkin' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Preview
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BC_ShowCase_C_Preview final
{
public:
	bool                                          ShowPreview;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FST_DefaultSteamItem                   Item;                                              // 0x0008(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_Preview) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_Preview");
static_assert(sizeof(BP_BC_ShowCase_C_Preview) == 0x0000B0, "Wrong size on BP_BC_ShowCase_C_Preview");
static_assert(offsetof(BP_BC_ShowCase_C_Preview, ShowPreview) == 0x000000, "Member 'BP_BC_ShowCase_C_Preview::ShowPreview' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_Preview, Item) == 0x000008, "Member 'BP_BC_ShowCase_C_Preview::Item' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ReceivePossessed
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_ReceivePossessed final
{
public:
	class AController*                            NewController;                                     // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_ReceivePossessed) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_ReceivePossessed");
static_assert(sizeof(BP_BC_ShowCase_C_ReceivePossessed) == 0x000008, "Wrong size on BP_BC_ShowCase_C_ReceivePossessed");
static_assert(offsetof(BP_BC_ShowCase_C_ReceivePossessed, NewController) == 0x000000, "Member 'BP_BC_ShowCase_C_ReceivePossessed::NewController' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct BP_BC_ShowCase_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_ReceiveTick) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_ReceiveTick");
static_assert(sizeof(BP_BC_ShowCase_C_ReceiveTick) == 0x000004, "Wrong size on BP_BC_ShowCase_C_ReceiveTick");
static_assert(offsetof(BP_BC_ShowCase_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'BP_BC_ShowCase_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ServerTravel
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_ServerTravel final
{
public:
	double                                        Delay;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_ServerTravel) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_ServerTravel");
static_assert(sizeof(BP_BC_ShowCase_C_ServerTravel) == 0x000008, "Wrong size on BP_BC_ShowCase_C_ServerTravel");
static_assert(offsetof(BP_BC_ShowCase_C_ServerTravel, Delay) == 0x000000, "Member 'BP_BC_ShowCase_C_ServerTravel::Delay' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Slomo
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_Slomo final
{
public:
	double                                        Slomo_0;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_Slomo) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_Slomo");
static_assert(sizeof(BP_BC_ShowCase_C_Slomo) == 0x000008, "Wrong size on BP_BC_ShowCase_C_Slomo");
static_assert(offsetof(BP_BC_ShowCase_C_Slomo, Slomo_0) == 0x000000, "Member 'BP_BC_ShowCase_C_Slomo::Slomo_0' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Talk
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_Talk final
{
public:
	bool                                          IsTalking_0;                                       // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_Talk) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_Talk");
static_assert(sizeof(BP_BC_ShowCase_C_Talk) == 0x000001, "Wrong size on BP_BC_ShowCase_C_Talk");
static_assert(offsetof(BP_BC_ShowCase_C_Talk, IsTalking_0) == 0x000000, "Member 'BP_BC_ShowCase_C_Talk::IsTalking_0' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateGamemode
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_UpdateGamemode final
{
public:
	EGameMode                                     GameMode;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateGamemode) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_UpdateGamemode");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateGamemode) == 0x000001, "Wrong size on BP_BC_ShowCase_C_UpdateGamemode");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateGamemode, GameMode) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateGamemode::GameMode' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateInventory
// 0x00A8 (0x00A8 - 0x0000)
struct BP_BC_ShowCase_C_UpdateInventory final
{
public:
	struct FST_DefaultSteamItem                   NewItem;                                           // 0x0000(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateInventory) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UpdateInventory");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateInventory) == 0x0000A8, "Wrong size on BP_BC_ShowCase_C_UpdateInventory");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateInventory, NewItem) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateInventory::NewItem' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateKickVote
// 0x0048 (0x0048 - 0x0000)
struct BP_BC_ShowCase_C_UpdateKickVote final
{
public:
	struct FSTR_PCInfo                            Target;                                            // 0x0000(0x0040)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
	bool                                          Yes_;                                              // 0x0040(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateKickVote) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UpdateKickVote");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateKickVote) == 0x000048, "Wrong size on BP_BC_ShowCase_C_UpdateKickVote");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateKickVote, Target) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateKickVote::Target' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateKickVote, Yes_) == 0x000040, "Member 'BP_BC_ShowCase_C_UpdateKickVote::Yes_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateMapSelection
// 0x000C (0x000C - 0x0000)
struct BP_BC_ShowCase_C_UpdateMapSelection final
{
public:
	class FName                                   Selected_Level_Name;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateMapSelection) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_UpdateMapSelection");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateMapSelection) == 0x00000C, "Wrong size on BP_BC_ShowCase_C_UpdateMapSelection");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateMapSelection, Selected_Level_Name) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateMapSelection::Selected_Level_Name' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateMapSelection, Index_0) == 0x000008, "Member 'BP_BC_ShowCase_C_UpdateMapSelection::Index_0' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateMovement
// 0x00B0 (0x00B0 - 0x0000)
struct BP_BC_ShowCase_C_UpdateMovement final
{
public:
	struct FST_DefaultSteamItem                   ItemInfo;                                          // 0x0000(0x00A8)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
	bool                                          UpdateAnim_;                                       // 0x00A8(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          UpdateCamera_;                                     // 0x00A9(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateMovement) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UpdateMovement");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateMovement) == 0x0000B0, "Wrong size on BP_BC_ShowCase_C_UpdateMovement");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateMovement, ItemInfo) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateMovement::ItemInfo' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateMovement, UpdateAnim_) == 0x0000A8, "Member 'BP_BC_ShowCase_C_UpdateMovement::UpdateAnim_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateMovement, UpdateCamera_) == 0x0000A9, "Member 'BP_BC_ShowCase_C_UpdateMovement::UpdateCamera_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdatePlayerSkin (Client)
// 0x0002 (0x0002 - 0x0000)
struct BP_BC_ShowCase_C_UpdatePlayerSkin__Client_ final
{
public:
	EN_ShopItemSupClass                           ItemClassSup_Local_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CHANGE_ItemClassSup_Local__;                       // 0x0001(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdatePlayerSkin__Client_) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_UpdatePlayerSkin__Client_");
static_assert(sizeof(BP_BC_ShowCase_C_UpdatePlayerSkin__Client_) == 0x000002, "Wrong size on BP_BC_ShowCase_C_UpdatePlayerSkin__Client_");
static_assert(offsetof(BP_BC_ShowCase_C_UpdatePlayerSkin__Client_, ItemClassSup_Local_0) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdatePlayerSkin__Client_::ItemClassSup_Local_0' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdatePlayerSkin__Client_, CHANGE_ItemClassSup_Local__) == 0x000001, "Member 'BP_BC_ShowCase_C_UpdatePlayerSkin__Client_::CHANGE_ItemClassSup_Local__' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateReady HUD
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_UpdateReady_HUD final
{
public:
	bool                                          Ready__0;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateReady_HUD) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_UpdateReady_HUD");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateReady_HUD) == 0x000001, "Wrong size on BP_BC_ShowCase_C_UpdateReady_HUD");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateReady_HUD, Ready__0) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateReady_HUD::Ready__0' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateScore
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_UpdateScore final
{
public:
	struct FSTR_Score                             Score;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateScore) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_UpdateScore");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateScore) == 0x000008, "Wrong size on BP_BC_ShowCase_C_UpdateScore");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateScore, Score) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateScore::Score' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateSkel (multicast)
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_UpdateSkel__multicast_ final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateSkel__multicast_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UpdateSkel__multicast_");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateSkel__multicast_) == 0x000008, "Wrong size on BP_BC_ShowCase_C_UpdateSkel__multicast_");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateSkel__multicast_, NewMesh) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateSkel__multicast_::NewMesh' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateSkel (Server)
// 0x0008 (0x0008 - 0x0000)
struct BP_BC_ShowCase_C_UpdateSkel__Server_ final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateSkel__Server_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UpdateSkel__Server_");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateSkel__Server_) == 0x000008, "Wrong size on BP_BC_ShowCase_C_UpdateSkel__Server_");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateSkel__Server_, NewMesh) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateSkel__Server_::NewMesh' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateTeamIndex (PlayerKilled)
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_ final
{
public:
	E_Team                                        Team_PlayerKilled_;                                // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MilitaryIndex;                                     // 0x0004(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         TerroristIndex;                                    // 0x0008(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	E_Team                                        WiiningTeam;                                       // 0x000C(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_) == 0x000004, "Wrong alignment on BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_) == 0x000010, "Wrong size on BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_, Team_PlayerKilled_) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_::Team_PlayerKilled_' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_, MilitaryIndex) == 0x000004, "Member 'BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_::MilitaryIndex' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_, TerroristIndex) == 0x000008, "Member 'BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_::TerroristIndex' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_, WiiningTeam) == 0x00000C, "Member 'BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_::WiiningTeam' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateTeamXP
// 0x0001 (0x0001 - 0x0000)
struct BP_BC_ShowCase_C_UpdateTeamXP final
{
public:
	bool                                          Win_;                                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateTeamXP) == 0x000001, "Wrong alignment on BP_BC_ShowCase_C_UpdateTeamXP");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateTeamXP) == 0x000001, "Wrong size on BP_BC_ShowCase_C_UpdateTeamXP");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateTeamXP, Win_) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateTeamXP::Win_' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateTimer
// 0x0020 (0x0020 - 0x0000)
struct BP_BC_ShowCase_C_UpdateTimer final
{
public:
	double                                        TimeCount;                                         // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FText                                   NewParam;                                          // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateTimer) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UpdateTimer");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateTimer) == 0x000020, "Wrong size on BP_BC_ShowCase_C_UpdateTimer");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateTimer, TimeCount) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateTimer::TimeCount' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateTimer, NewParam) == 0x000008, "Member 'BP_BC_ShowCase_C_UpdateTimer::NewParam' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateWarning
// 0x0010 (0x0010 - 0x0000)
struct BP_BC_ShowCase_C_UpdateWarning final
{
public:
	class FString                                 String;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateWarning) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UpdateWarning");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateWarning) == 0x000010, "Wrong size on BP_BC_ShowCase_C_UpdateWarning");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateWarning, String) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateWarning::String' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateWep (Multicast)
// 0x0018 (0x0018 - 0x0000)
struct BP_BC_ShowCase_C_UpdateWep__Multicast_ final
{
public:
	class USkeletalMesh*                          NewMesh;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<class UMaterialInterface*>             CustomMaterials;                                   // 0x0008(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(BP_BC_ShowCase_C_UpdateWep__Multicast_) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UpdateWep__Multicast_");
static_assert(sizeof(BP_BC_ShowCase_C_UpdateWep__Multicast_) == 0x000018, "Wrong size on BP_BC_ShowCase_C_UpdateWep__Multicast_");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateWep__Multicast_, NewMesh) == 0x000000, "Member 'BP_BC_ShowCase_C_UpdateWep__Multicast_::NewMesh' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UpdateWep__Multicast_, CustomMaterials) == 0x000008, "Member 'BP_BC_ShowCase_C_UpdateWep__Multicast_::CustomMaterials' has a wrong offset!");

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UserConstructionScript
// 0x0048 (0x0048 - 0x0000)
struct BP_BC_ShowCase_C_UserConstructionScript final
{
public:
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class USceneComponent*>                CallFunc_GetChildrenComponents_Children;           // 0x0010(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkinnedMeshComponent*                  K2Node_DynamicCast_AsSkinned_Mesh_Component;       // 0x0038(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(BP_BC_ShowCase_C_UserConstructionScript) == 0x000008, "Wrong alignment on BP_BC_ShowCase_C_UserConstructionScript");
static_assert(sizeof(BP_BC_ShowCase_C_UserConstructionScript) == 0x000048, "Wrong size on BP_BC_ShowCase_C_UserConstructionScript");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, Temp_int_Array_Index_Variable) == 0x000000, "Member 'BP_BC_ShowCase_C_UserConstructionScript::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, Temp_int_Loop_Counter_Variable) == 0x000004, "Member 'BP_BC_ShowCase_C_UserConstructionScript::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'BP_BC_ShowCase_C_UserConstructionScript::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, CallFunc_GetChildrenComponents_Children) == 0x000010, "Member 'BP_BC_ShowCase_C_UserConstructionScript::CallFunc_GetChildrenComponents_Children' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BP_BC_ShowCase_C_UserConstructionScript::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, CallFunc_Array_Get_Item) == 0x000028, "Member 'BP_BC_ShowCase_C_UserConstructionScript::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BP_BC_ShowCase_C_UserConstructionScript::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, K2Node_DynamicCast_AsSkinned_Mesh_Component) == 0x000038, "Member 'BP_BC_ShowCase_C_UserConstructionScript::K2Node_DynamicCast_AsSkinned_Mesh_Component' has a wrong offset!");
static_assert(offsetof(BP_BC_ShowCase_C_UserConstructionScript, K2Node_DynamicCast_bSuccess) == 0x000040, "Member 'BP_BC_ShowCase_C_UserConstructionScript::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

