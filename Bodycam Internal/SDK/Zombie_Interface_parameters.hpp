#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Zombie_Interface

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "EN_WaveClass_structs.hpp"


namespace SDK::Params
{

// Function Zombie_Interface.Zombie_Interface_C.ConnectionInfos
// 0x0010 (0x0010 - 0x0000)
struct Zombie_Interface_C_ConnectionInfos final
{
public:
	struct FLinearColor                           Color;                                             // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_Interface_C_ConnectionInfos) == 0x000004, "Wrong alignment on Zombie_Interface_C_ConnectionInfos");
static_assert(sizeof(Zombie_Interface_C_ConnectionInfos) == 0x000010, "Wrong size on Zombie_Interface_C_ConnectionInfos");
static_assert(offsetof(Zombie_Interface_C_ConnectionInfos, Color) == 0x000000, "Member 'Zombie_Interface_C_ConnectionInfos::Color' has a wrong offset!");

// Function Zombie_Interface.Zombie_Interface_C.EndWave
// 0x0008 (0x0008 - 0x0000)
struct Zombie_Interface_C_EndWave final
{
public:
	int32                                         Wave;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  EN_WaveClass;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_Interface_C_EndWave) == 0x000004, "Wrong alignment on Zombie_Interface_C_EndWave");
static_assert(sizeof(Zombie_Interface_C_EndWave) == 0x000008, "Wrong size on Zombie_Interface_C_EndWave");
static_assert(offsetof(Zombie_Interface_C_EndWave, Wave) == 0x000000, "Member 'Zombie_Interface_C_EndWave::Wave' has a wrong offset!");
static_assert(offsetof(Zombie_Interface_C_EndWave, EN_WaveClass) == 0x000004, "Member 'Zombie_Interface_C_EndWave::EN_WaveClass' has a wrong offset!");

// Function Zombie_Interface.Zombie_Interface_C.NewWaves
// 0x0008 (0x0008 - 0x0000)
struct Zombie_Interface_C_NewWaves final
{
public:
	int32                                         Wave;                                              // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EN_WaveClass                                  EN_WaveClass;                                      // 0x0004(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_Interface_C_NewWaves) == 0x000004, "Wrong alignment on Zombie_Interface_C_NewWaves");
static_assert(sizeof(Zombie_Interface_C_NewWaves) == 0x000008, "Wrong size on Zombie_Interface_C_NewWaves");
static_assert(offsetof(Zombie_Interface_C_NewWaves, Wave) == 0x000000, "Member 'Zombie_Interface_C_NewWaves::Wave' has a wrong offset!");
static_assert(offsetof(Zombie_Interface_C_NewWaves, EN_WaveClass) == 0x000004, "Member 'Zombie_Interface_C_NewWaves::EN_WaveClass' has a wrong offset!");

// Function Zombie_Interface.Zombie_Interface_C.SpawnScreamer
// 0x0001 (0x0001 - 0x0000)
struct Zombie_Interface_C_SpawnScreamer final
{
public:
	bool                                          Destroy_;                                          // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_Interface_C_SpawnScreamer) == 0x000001, "Wrong alignment on Zombie_Interface_C_SpawnScreamer");
static_assert(sizeof(Zombie_Interface_C_SpawnScreamer) == 0x000001, "Wrong size on Zombie_Interface_C_SpawnScreamer");
static_assert(offsetof(Zombie_Interface_C_SpawnScreamer, Destroy_) == 0x000000, "Member 'Zombie_Interface_C_SpawnScreamer::Destroy_' has a wrong offset!");

// Function Zombie_Interface.Zombie_Interface_C.UpdatePower
// 0x0001 (0x0001 - 0x0000)
struct Zombie_Interface_C_UpdatePower final
{
public:
	bool                                          On_;                                               // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Zombie_Interface_C_UpdatePower) == 0x000001, "Wrong alignment on Zombie_Interface_C_UpdatePower");
static_assert(sizeof(Zombie_Interface_C_UpdatePower) == 0x000001, "Wrong size on Zombie_Interface_C_UpdatePower");
static_assert(offsetof(Zombie_Interface_C_UpdatePower, On_) == 0x000000, "Member 'Zombie_Interface_C_UpdatePower::On_' has a wrong offset!");

}

