#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WW_RagdollSystem

#include "Basic.hpp"

#include "WW_RagdollSystem_classes.hpp"
#include "WW_RagdollSystem_parameters.hpp"


namespace SDK
{

// Function WW_RagdollSystem.WW_RagdollSystem_C.Add Impulse
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWW_RagdollSystem_C::Add_Impulse(const struct FVector& Impulse, const struct FVector& Location, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Add Impulse");

	Params::WW_RagdollSystem_C_Add_Impulse Parms{};

	Parms.Impulse = std::move(Impulse);
	Parms.Location = std::move(Location);
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Add Impulse (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWW_RagdollSystem_C::Add_Impulse__Multicast_(const struct FVector& Impulse, const struct FVector& Location, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Add Impulse (Multicast)");

	Params::WW_RagdollSystem_C_Add_Impulse__Multicast_ Parms{};

	Parms.Impulse = std::move(Impulse);
	Parms.Location = std::move(Location);
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Add Impulse (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Impulse                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWW_RagdollSystem_C::Add_Impulse__Server_(const struct FVector& Impulse, const struct FVector& Location, class FName BoneName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Add Impulse (Server)");

	Params::WW_RagdollSystem_C_Add_Impulse__Server_ Parms{};

	Parms.Impulse = std::move(Impulse);
	Parms.Location = std::move(Location);
	Parms.BoneName = BoneName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.BloodPool (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::BloodPool__Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "BloodPool (Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Burned (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Burned_0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWW_RagdollSystem_C::Burned__Server_(bool Burned_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Burned (Server)");

	Params::WW_RagdollSystem_C_Burned__Server_ Parms{};

	Parms.Burned_0 = Burned_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.ExecuteUbergraph_WW_RagdollSystem
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWW_RagdollSystem_C::ExecuteUbergraph_WW_RagdollSystem(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "ExecuteUbergraph_WW_RagdollSystem");

	Params::WW_RagdollSystem_C_ExecuteUbergraph_WW_RagdollSystem Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.HandRagdollLocation
// (Public, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::HandRagdollLocation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "HandRagdollLocation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Init
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ACharacter*                       Character_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void UWW_RagdollSystem_C::Init(class ACharacter* Character_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Init");

	Params::WW_RagdollSystem_C_Init Parms{};

	Parms.Character_0 = Character_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.InRagdoll
// (Public, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::InRagdoll()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "InRagdoll");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.OnRep_Burned
// (BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::OnRep_Burned()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "OnRep_Burned");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.OnRep_FullyRagdoll?
// (BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::OnRep_FullyRagdoll_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "OnRep_FullyRagdoll?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Ragdoll End (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::Ragdoll_End__Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Ragdoll End (Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Ragdoll End (Replicated)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::Ragdoll_End__Replicated_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Ragdoll End (Replicated)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Ragdoll Start (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::Ragdoll_Start__Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Ragdoll Start (Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Ragdoll Start (Replicated)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWW_RagdollSystem_C::Ragdoll_Start__Replicated_(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Ragdoll Start (Replicated)");

	Params::WW_RagdollSystem_C_Ragdoll_Start__Replicated_ Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Ragdoll Tick
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::Ragdoll_Tick()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Ragdoll Tick");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.RagdollEnd
// (Public, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::RagdollEnd()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "RagdollEnd");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.RagdollFix
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::RagdollFix()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "RagdollFix");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.RagdollStart
// (Public, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::RagdollStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "RagdollStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void UWW_RagdollSystem_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void UWW_RagdollSystem_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "ReceiveTick");

	Params::WW_RagdollSystem_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.SpawnSmokeCharacter
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::SpawnSmokeCharacter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "SpawnSmokeCharacter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.UpdateRagdollLocationRotation
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::UpdateRagdollLocationRotation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "UpdateRagdollLocationRotation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function WW_RagdollSystem.WW_RagdollSystem_C.Wind
// (Public, BlueprintCallable, BlueprintEvent)

void UWW_RagdollSystem_C::Wind()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("WW_RagdollSystem_C", "Wind");

	UObject::ProcessEvent(Func, nullptr);
}

}

