#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Random_Weather_Variation

#include "Basic.hpp"

#include "RandomWeatherVariation_State_structs.hpp"


namespace SDK::Params
{

// Function Random_Weather_Variation.Random_Weather_Variation_C.Apply State
// 0x0028 (0x0028 - 0x0000)
struct Random_Weather_Variation_C_Apply_State final
{
public:
	struct FRandomWeatherVariation_State          Random_Weather_State;                              // 0x0000(0x0020)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsComponentTickEnabled_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Apply_State) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Apply_State");
static_assert(sizeof(Random_Weather_Variation_C_Apply_State) == 0x000028, "Wrong size on Random_Weather_Variation_C_Apply_State");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, Random_Weather_State) == 0x000000, "Member 'Random_Weather_Variation_C_Apply_State::Random_Weather_State' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Apply_State, CallFunc_IsComponentTickEnabled_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Apply_State::CallFunc_IsComponentTickEnabled_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Create Composite Probability Map
// 0x01D0 (0x01D0 - 0x0000)
struct Random_Weather_Variation_C_Create_Composite_Probability_Map final
{
public:
	TMap<class UUDS_Weather_Settings_C*, double>  Out;                                               // 0x0000(0x0050)(Parm, OutParm)
	TMap<class UUDS_Weather_Settings_C*, double>  Composite_Map;                                     // 0x0050(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable;                                 // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_1;                               // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Variable_2;                               // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_Select_Default;                             // 0x00C8(0x0050)()
	double                                        CallFunc_Array_Get_Item;                           // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_Select_Default_1;                           // 0x0128(0x0050)()
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0178(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item_1;                         // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A9[0x7];                                      // 0x01A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value_1;                         // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue_1;                   // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Create_Composite_Probability_Map) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Create_Composite_Probability_Map");
static_assert(sizeof(Random_Weather_Variation_C_Create_Composite_Probability_Map) == 0x0001D0, "Wrong size on Random_Weather_Variation_C_Create_Composite_Probability_Map");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Out) == 0x000000, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Composite_Map) == 0x000050, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Composite_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Array_Index_Variable) == 0x0000A0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable) == 0x0000A4, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue) == 0x0000AC, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_FFloor_ReturnValue) == 0x0000B0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable_1) == 0x0000B4, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Loop_Counter_Variable) == 0x0000B8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, Temp_int_Variable_2) == 0x0000BC, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::Temp_int_Variable_2' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_IntInt_ReturnValue_1) == 0x0000C0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, K2Node_Select_Default) == 0x0000C8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item) == 0x000118, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000120, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, K2Node_Select_Default_1) == 0x000128, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Keys_Keys) == 0x000178, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Length_ReturnValue) == 0x000188, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Array_Get_Item_1) == 0x000190, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Less_IntInt_ReturnValue) == 0x000198, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_Value) == 0x0001A0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_ReturnValue) == 0x0001A8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_Value_1) == 0x0001B0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_Value_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Map_Find_ReturnValue_1) == 0x0001B8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Map_Find_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001C0, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Create_Composite_Probability_Map, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0001C8, "Member 'Random_Weather_Variation_C_Create_Composite_Probability_Map::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.ExecuteUbergraph_Random_Weather_Variation
// 0x0168 (0x0168 - 0x0000)
struct Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_Event_DeltaSeconds;                         // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AUltra_Dynamic_Weather_C*               K2Node_CustomEvent_UDW;                            // 0x0010(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_CustomEvent_Summer_Probabilities;           // 0x0018(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_CustomEvent_Autumn_Probabilities;           // 0x0068(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_CustomEvent_Winter_Probabilities;           // 0x00B8(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  K2Node_CustomEvent_Spring_Probabilities;           // 0x0108(0x0050)()
	bool                                          K2Node_CustomEvent_Start_with_Random_Type;         // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsServer_ReturnValue;                     // 0x0159(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_15A[0x6];                                      // 0x015A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUDS_Weather_Settings_C*                CallFunc_SpawnObject_ReturnValue;                  // 0x0160(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation");
static_assert(sizeof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation) == 0x000168, "Wrong size on Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, EntryPoint) == 0x000000, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::EntryPoint' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_Event_DeltaSeconds) == 0x000004, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_Event_DeltaSeconds' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_UDW) == 0x000010, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_UDW' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Summer_Probabilities) == 0x000018, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Summer_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Autumn_Probabilities) == 0x000068, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Autumn_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Winter_Probabilities) == 0x0000B8, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Winter_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Spring_Probabilities) == 0x000108, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Spring_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, K2Node_CustomEvent_Start_with_Random_Type) == 0x000158, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::K2Node_CustomEvent_Start_with_Random_Type' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_IsServer_ReturnValue) == 0x000159, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_IsServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation, CallFunc_SpawnObject_ReturnValue) == 0x000160, "Member 'Random_Weather_Variation_C_ExecuteUbergraph_Random_Weather_Variation::CallFunc_SpawnObject_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Get State for Saving
// 0x0048 (0x0048 - 0x0000)
struct Random_Weather_Variation_C_Get_State_for_Saving final
{
public:
	struct FRandomWeatherVariation_State          State;                                             // 0x0000(0x0020)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AWeather_Override_Volume_C*             Volume_0;                                          // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRandomWeatherVariation_State          K2Node_MakeStruct_RandomWeatherVariation_State;    // 0x0028(0x0020)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Get_State_for_Saving) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Get_State_for_Saving");
static_assert(sizeof(Random_Weather_Variation_C_Get_State_for_Saving) == 0x000048, "Wrong size on Random_Weather_Variation_C_Get_State_for_Saving");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, State) == 0x000000, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::State' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, Volume_0) == 0x000020, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::Volume_0' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Get_State_for_Saving, K2Node_MakeStruct_RandomWeatherVariation_State) == 0x000028, "Member 'Random_Weather_Variation_C_Get_State_for_Saving::K2Node_MakeStruct_RandomWeatherVariation_State' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Increment Change Timer
// 0x0020 (0x0020 - 0x0000)
struct Random_Weather_Variation_C_Increment_Change_Timer final
{
public:
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Increment_Change_Timer) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Increment_Change_Timer");
static_assert(sizeof(Random_Weather_Variation_C_Increment_Change_Timer) == 0x000020, "Wrong size on Random_Weather_Variation_C_Increment_Change_Timer");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000000, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Change_Timer, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000018, "Member 'Random_Weather_Variation_C_Increment_Change_Timer::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Increment Random Weather
// 0x0060 (0x0060 - 0x0000)
struct Random_Weather_Variation_C_Increment_Random_Weather final
{
public:
	double                                        Eased_Lerp_Alpha;                                  // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Ease_ReturnValue;                         // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Increment_Random_Weather) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Increment_Random_Weather");
static_assert(sizeof(Random_Weather_Variation_C_Increment_Random_Weather) == 0x000060, "Wrong size on Random_Weather_Variation_C_Increment_Random_Weather");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, Eased_Lerp_Alpha) == 0x000000, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::Eased_Lerp_Alpha' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_SelectFloat_ReturnValue) == 0x000010, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_IsValid_ReturnValue_1) == 0x000018, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_BooleanAND_ReturnValue) == 0x000019, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Ease_ReturnValue) == 0x000020, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Ease_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000030, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000038, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000048, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Increment_Random_Weather, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x000058, "Member 'Random_Weather_Variation_C_Increment_Random_Weather::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Initialize
// 0x0150 (0x0150 - 0x0000)
struct Random_Weather_Variation_C_Initialize final
{
public:
	class AUltra_Dynamic_Weather_C*               UDW_0;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Summer_Probabilities;                              // 0x0008(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UUDS_Weather_Settings_C*, double>  Autumn_Probabilities;                              // 0x0058(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UUDS_Weather_Settings_C*, double>  Winter_Probabilities;                              // 0x00A8(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	TMap<class UUDS_Weather_Settings_C*, double>  Spring_Probabilities;                              // 0x00F8(0x0050)(BlueprintVisible, BlueprintReadOnly, Parm)
	bool                                          Start_with_Random_Type;                            // 0x0148(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Initialize) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Initialize");
static_assert(sizeof(Random_Weather_Variation_C_Initialize) == 0x000150, "Wrong size on Random_Weather_Variation_C_Initialize");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, UDW_0) == 0x000000, "Member 'Random_Weather_Variation_C_Initialize::UDW_0' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Summer_Probabilities) == 0x000008, "Member 'Random_Weather_Variation_C_Initialize::Summer_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Autumn_Probabilities) == 0x000058, "Member 'Random_Weather_Variation_C_Initialize::Autumn_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Winter_Probabilities) == 0x0000A8, "Member 'Random_Weather_Variation_C_Initialize::Winter_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Spring_Probabilities) == 0x0000F8, "Member 'Random_Weather_Variation_C_Initialize::Spring_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Initialize, Start_with_Random_Type) == 0x000148, "Member 'Random_Weather_Variation_C_Initialize::Start_with_Random_Type' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.ReceiveTick
// 0x0004 (0x0004 - 0x0000)
struct Random_Weather_Variation_C_ReceiveTick final
{
public:
	float                                         DeltaSeconds;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_ReceiveTick) == 0x000004, "Wrong alignment on Random_Weather_Variation_C_ReceiveTick");
static_assert(sizeof(Random_Weather_Variation_C_ReceiveTick) == 0x000004, "Wrong size on Random_Weather_Variation_C_ReceiveTick");
static_assert(offsetof(Random_Weather_Variation_C_ReceiveTick, DeltaSeconds) == 0x000000, "Member 'Random_Weather_Variation_C_ReceiveTick::DeltaSeconds' has a wrong offset!");

// Function Random_Weather_Variation.Random_Weather_Variation_C.Select New Random Weather Type
// 0x01A8 (0x01A8 - 0x0000)
struct Random_Weather_Variation_C_Select_New_Random_Weather_Type final
{
public:
	bool                                          Filter_Probability_List;                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        Threshold;                                         // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Float;                                      // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Random_Max_Range;                                  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TMap<class UUDS_Weather_Settings_C*, double>  Current_Probabilities;                             // 0x0020(0x0050)(Edit, BlueprintVisible)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_True_if_break_was_hit_Variable;          // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Array_Index_Variable;                     // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Create_Composite_Probability_Map_Out;     // 0x0088(0x0050)()
	TMap<class UUDS_Weather_Settings_C*, double>  CallFunc_Filter_Probability_Map_Filtered_Probability_Map; // 0x00D8(0x0050)()
	TArray<class UUDS_Weather_Settings_C*>        CallFunc_Map_Keys_Keys;                            // 0x0128(0x0010)(ReferenceParm)
	class UUDS_Weather_Settings_C*                CallFunc_Array_Get_Item;                           // 0x0138(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TArray<double>                                CallFunc_Map_Values_Values;                        // 0x0140(0x0010)(ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_154[0x4];                                      // 0x0154(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Map_Find_Value;                           // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Map_Find_ReturnValue;                     // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0178(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_179[0x3];                                      // 0x0179(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x017C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_185[0x3];                                      // 0x0185(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Array_Get_Item_1;                         // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x019C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19D[0x3];                                      // 0x019D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Random_Weather_Variation_C_Select_New_Random_Weather_Type) == 0x000008, "Wrong alignment on Random_Weather_Variation_C_Select_New_Random_Weather_Type");
static_assert(sizeof(Random_Weather_Variation_C_Select_New_Random_Weather_Type) == 0x0001A8, "Wrong size on Random_Weather_Variation_C_Select_New_Random_Weather_Type");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Filter_Probability_List) == 0x000000, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Filter_Probability_List' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Threshold) == 0x000008, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Threshold' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Random_Float) == 0x000010, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Random_Float' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Random_Max_Range) == 0x000018, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Random_Max_Range' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Current_Probabilities) == 0x000020, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Current_Probabilities' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Loop_Counter_Variable) == 0x000070, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_IntInt_ReturnValue) == 0x000074, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_bool_True_if_break_was_hit_Variable) == 0x000078, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Array_Index_Variable) == 0x00007C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Not_PreBool_ReturnValue) == 0x000080, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Create_Composite_Probability_Map_Out) == 0x000088, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Create_Composite_Probability_Map_Out' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Filter_Probability_Map_Filtered_Probability_Map) == 0x0000D8, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Filter_Probability_Map_Filtered_Probability_Map' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Keys_Keys) == 0x000128, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Keys_Keys' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Get_Item) == 0x000138, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Values_Values) == 0x000140, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Values_Values' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Length_ReturnValue) == 0x000150, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Find_Value) == 0x000158, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Find_Value' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Map_Find_ReturnValue) == 0x000160, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Map_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Length_ReturnValue_1) == 0x000164, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Less_IntInt_ReturnValue) == 0x000168, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_RandomFloatInRange_ReturnValue) == 0x000170, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_BooleanAND_ReturnValue) == 0x000178, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Loop_Counter_Variable_1) == 0x00017C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, Temp_int_Array_Index_Variable_1) == 0x000180, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Less_IntInt_ReturnValue_1) == 0x000184, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Array_Get_Item_1) == 0x000188, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000190, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_IntInt_ReturnValue_1) == 0x000198, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00019C, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Random_Weather_Variation_C_Select_New_Random_Weather_Type, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0001A0, "Member 'Random_Weather_Variation_C_Select_New_Random_Weather_Type::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");

}

