#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MenuSystemActor

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "EInputDeviceType_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_MenuSystemActor.BP_MenuSystemActor_C
// 0x0068 (0x02F8 - 0x0290)
class ABP_MenuSystemActor_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0290(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	bool                                          bLevelIsMainMenu;                                  // 0x02A0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2A1[0x7];                                      // 0x02A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TSoftObjectPtr<class UUserWidget>             MenuContainerInstantiator;                         // 0x02A8(0x0030)(Edit, BlueprintVisible, DisableEditOnInstance, InstancedReference, HasGetValueTypeHash)
	TArray<class ACameraActor*>                   MenuCameras;                                       // 0x02D8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)
	TArray<class ACameraActor*>                   MenuCameras2;                                      // 0x02E8(0x0010)(Edit, BlueprintVisible, DisableEditOnTemplate)

public:
	void CreateAndShowMenu(class APlayerController* PlayerController, EInputDeviceType CurrentInputDevice, TSoftClassPtr<class UClass> FirstShownMenu, class UObject* Payload, bool IsMainMenuLevel);
	void CreateMenuContainer(EInputDeviceType ContainerInputDeviceType, TSoftClassPtr<class UClass> FirstShownMenu, class UObject* Payload, EInputDeviceType CurrentInputDevice, class APlayerController* PlayerController, bool IsMainMenuLevel);
	void DestroyMenu();
	void ExecuteUbergraph_BP_MenuSystemActor(int32 EntryPoint);
	void OnSetupErrorCheck(int32 CreatedByPlayerIndex);
	void Pause(class APlayerController* PlayerController, EInputDeviceType InputDeviceType);
	void ReceiveBeginPlay();
	void Resume(class APlayerController* PlayerController);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_MenuSystemActor_C">();
	}
	static class ABP_MenuSystemActor_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_MenuSystemActor_C>();
	}
};
static_assert(alignof(ABP_MenuSystemActor_C) == 0x000008, "Wrong alignment on ABP_MenuSystemActor_C");
static_assert(sizeof(ABP_MenuSystemActor_C) == 0x0002F8, "Wrong size on ABP_MenuSystemActor_C");
static_assert(offsetof(ABP_MenuSystemActor_C, UberGraphFrame) == 0x000290, "Member 'ABP_MenuSystemActor_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_MenuSystemActor_C, DefaultSceneRoot) == 0x000298, "Member 'ABP_MenuSystemActor_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_MenuSystemActor_C, bLevelIsMainMenu) == 0x0002A0, "Member 'ABP_MenuSystemActor_C::bLevelIsMainMenu' has a wrong offset!");
static_assert(offsetof(ABP_MenuSystemActor_C, MenuContainerInstantiator) == 0x0002A8, "Member 'ABP_MenuSystemActor_C::MenuContainerInstantiator' has a wrong offset!");
static_assert(offsetof(ABP_MenuSystemActor_C, MenuCameras) == 0x0002D8, "Member 'ABP_MenuSystemActor_C::MenuCameras' has a wrong offset!");
static_assert(offsetof(ABP_MenuSystemActor_C, MenuCameras2) == 0x0002E8, "Member 'ABP_MenuSystemActor_C::MenuCameras2' has a wrong offset!");

}

