#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Close_Thunder_Audio_Player

#include "Basic.hpp"


namespace SDK::Params
{

// Function Close_Thunder_Audio_Player.Close_Thunder_Audio_Player_C.ExecuteUbergraph_Close_Thunder_Audio_Player
// 0x0068 (0x0068 - 0x0000)
struct Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAudioComponent*                        CallFunc_SpawnSoundAtLocation_ReturnValue;         // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Get_Close_Thunder_Sound_Occlusion_Volume; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Get_Close_Thunder_Sound_Occlusion_LPF;    // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IUltra_Dynamic_Weather_Interface_C> K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1; // 0x0048(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player) == 0x000008, "Wrong alignment on Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player");
static_assert(sizeof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player) == 0x000068, "Wrong size on Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, EntryPoint) == 0x000000, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::EntryPoint' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, CallFunc_SpawnSoundAtLocation_ReturnValue) == 0x000008, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::CallFunc_SpawnSoundAtLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface) == 0x000018, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, CallFunc_Get_Close_Thunder_Sound_Occlusion_Volume) == 0x000030, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::CallFunc_Get_Close_Thunder_Sound_Occlusion_Volume' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, CallFunc_Get_Close_Thunder_Sound_Occlusion_LPF) == 0x000038, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::CallFunc_Get_Close_Thunder_Sound_Occlusion_LPF' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000040, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1) == 0x000048, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::K2Node_DynamicCast_AsUltra_Dynamic_Weather_Interface_1' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, K2Node_DynamicCast_bSuccess_1) == 0x000058, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, CallFunc_Delay_Duration_ImplicitCast) == 0x00005C, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast) == 0x000060, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::CallFunc_SpawnSoundAtLocation_VolumeMultiplier_ImplicitCast' has a wrong offset!");
static_assert(offsetof(Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player, CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast) == 0x000064, "Member 'Close_Thunder_Audio_Player_C_ExecuteUbergraph_Close_Thunder_Audio_Player::CallFunc_SetLowPassFilterFrequency_InLowPassFilterFrequency_ImplicitCast' has a wrong offset!");

}

