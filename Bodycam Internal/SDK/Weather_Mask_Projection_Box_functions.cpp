#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Weather_Mask_Projection_Box

#include "Basic.hpp"

#include "Weather_Mask_Projection_Box_classes.hpp"
#include "Weather_Mask_Projection_Box_parameters.hpp"


namespace SDK
{

// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.ExecuteUbergraph_Weather_Mask_Projection_Box
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeather_Mask_Projection_Box_C::ExecuteUbergraph_Weather_Mask_Projection_Box(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weather_Mask_Projection_Box_C", "ExecuteUbergraph_Weather_Mask_Projection_Box");

	Params::Weather_Mask_Projection_Box_C_ExecuteUbergraph_Weather_Mask_Projection_Box Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.Force Update
// (Public, BlueprintCallable, BlueprintEvent)

void AWeather_Mask_Projection_Box_C::Force_Update()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weather_Mask_Projection_Box_C", "Force Update");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AWeather_Mask_Projection_Box_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weather_Mask_Projection_Box_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.ReceiveEndPlay
// (Event, Protected, BlueprintEvent)
// Parameters:
// EEndPlayReason                          EndPlayReason                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeather_Mask_Projection_Box_C::ReceiveEndPlay(EEndPlayReason EndPlayReason)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weather_Mask_Projection_Box_C", "ReceiveEndPlay");

	Params::Weather_Mask_Projection_Box_C_ReceiveEndPlay Parms{};

	Parms.EndPlayReason = EndPlayReason;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.Recycle Render Target
// (Public, BlueprintCallable, BlueprintEvent)

void AWeather_Mask_Projection_Box_C::Recycle_Render_Target()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weather_Mask_Projection_Box_C", "Recycle Render Target");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.Test Point Occlusion
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          Location                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// EUDS_DLWE_Mode                          Mode                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    In_Volume                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// double                                  Occlusion                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AWeather_Mask_Projection_Box_C::Test_Point_Occlusion(const struct FVector& Location, EUDS_DLWE_Mode Mode, bool* In_Volume, double* Occlusion)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weather_Mask_Projection_Box_C", "Test Point Occlusion");

	Params::Weather_Mask_Projection_Box_C_Test_Point_Occlusion Parms{};

	Parms.Location = std::move(Location);
	Parms.Mode = Mode;

	UObject::ProcessEvent(Func, &Parms);

	if (In_Volume != nullptr)
		*In_Volume = Parms.In_Volume;

	if (Occlusion != nullptr)
		*Occlusion = Parms.Occlusion;
}


// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.Update Capture
// (Public, BlueprintCallable, BlueprintEvent)

void AWeather_Mask_Projection_Box_C::Update_Capture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weather_Mask_Projection_Box_C", "Update Capture");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Weather_Mask_Projection_Box.Weather_Mask_Projection_Box_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AWeather_Mask_Projection_Box_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Weather_Mask_Projection_Box_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

