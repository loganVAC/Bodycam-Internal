#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ALS_AnimBP

#include "Basic.hpp"

#include "MovementDirection_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "DynamicMontageParams_structs.hpp"
#include "ALS_OverlayState_structs.hpp"
#include "LeanAmount_structs.hpp"
#include "VelocityBlend_structs.hpp"
#include "RotateInPlace_Asset_structs.hpp"
#include "ALS_Stance_structs.hpp"
#include "TurnInPlace_Asset_structs.hpp"
#include "ALS_MovementState_structs.hpp"
#include "ALS_MovementAction_structs.hpp"
#include "ALS_Gait_structs.hpp"
#include "ALS_RotationMode_structs.hpp"
#include "ALS_ViewMode_structs.hpp"
#include "GroundedEntryState_structs.hpp"


namespace SDK::Params
{

// Function ALS_AnimBP.ALS_AnimBP_C.(CLF) CycleBlending
// 0x0070 (0x0070 - 0x0000)
struct ALS_AnimBP_C__CLF__CycleBlending final
{
public:
	struct FPoseLink                              F;                                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              B;                                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LF;                                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LB;                                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RF;                                                // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RB;                                                // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              _CLF__CycleBlending_0;                             // 0x0060(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C__CLF__CycleBlending) == 0x000008, "Wrong alignment on ALS_AnimBP_C__CLF__CycleBlending");
static_assert(sizeof(ALS_AnimBP_C__CLF__CycleBlending) == 0x000070, "Wrong size on ALS_AnimBP_C__CLF__CycleBlending");
static_assert(offsetof(ALS_AnimBP_C__CLF__CycleBlending, F) == 0x000000, "Member 'ALS_AnimBP_C__CLF__CycleBlending::F' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__CLF__CycleBlending, B) == 0x000010, "Member 'ALS_AnimBP_C__CLF__CycleBlending::B' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__CLF__CycleBlending, LF) == 0x000020, "Member 'ALS_AnimBP_C__CLF__CycleBlending::LF' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__CLF__CycleBlending, LB) == 0x000030, "Member 'ALS_AnimBP_C__CLF__CycleBlending::LB' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__CLF__CycleBlending, RF) == 0x000040, "Member 'ALS_AnimBP_C__CLF__CycleBlending::RF' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__CLF__CycleBlending, RB) == 0x000050, "Member 'ALS_AnimBP_C__CLF__CycleBlending::RB' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__CLF__CycleBlending, _CLF__CycleBlending_0) == 0x000060, "Member 'ALS_AnimBP_C__CLF__CycleBlending::_CLF__CycleBlending_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.(N) CycleBlending
// 0x0080 (0x0080 - 0x0000)
struct ALS_AnimBP_C__N__CycleBlending final
{
public:
	struct FPoseLink                              F;                                                 // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              B;                                                 // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LF;                                                // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LB;                                                // 0x0030(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RF;                                                // 0x0040(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              RB;                                                // 0x0050(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Sprint;                                            // 0x0060(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              _N__CycleBlending_0;                               // 0x0070(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C__N__CycleBlending) == 0x000008, "Wrong alignment on ALS_AnimBP_C__N__CycleBlending");
static_assert(sizeof(ALS_AnimBP_C__N__CycleBlending) == 0x000080, "Wrong size on ALS_AnimBP_C__N__CycleBlending");
static_assert(offsetof(ALS_AnimBP_C__N__CycleBlending, F) == 0x000000, "Member 'ALS_AnimBP_C__N__CycleBlending::F' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__N__CycleBlending, B) == 0x000010, "Member 'ALS_AnimBP_C__N__CycleBlending::B' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__N__CycleBlending, LF) == 0x000020, "Member 'ALS_AnimBP_C__N__CycleBlending::LF' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__N__CycleBlending, LB) == 0x000030, "Member 'ALS_AnimBP_C__N__CycleBlending::LB' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__N__CycleBlending, RF) == 0x000040, "Member 'ALS_AnimBP_C__N__CycleBlending::RF' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__N__CycleBlending, RB) == 0x000050, "Member 'ALS_AnimBP_C__N__CycleBlending::RB' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__N__CycleBlending, Sprint) == 0x000060, "Member 'ALS_AnimBP_C__N__CycleBlending::Sprint' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C__N__CycleBlending, _N__CycleBlending_0) == 0x000070, "Member 'ALS_AnimBP_C__N__CycleBlending::_N__CycleBlending_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.AimOffsetBehaviors
// 0x0010 (0x0010 - 0x0000)
struct ALS_AnimBP_C_AimOffsetBehaviors final
{
public:
	struct FPoseLink                              AimOffsetBehaviors_0;                              // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C_AimOffsetBehaviors) == 0x000008, "Wrong alignment on ALS_AnimBP_C_AimOffsetBehaviors");
static_assert(sizeof(ALS_AnimBP_C_AimOffsetBehaviors) == 0x000010, "Wrong size on ALS_AnimBP_C_AimOffsetBehaviors");
static_assert(offsetof(ALS_AnimBP_C_AimOffsetBehaviors, AimOffsetBehaviors_0) == 0x000000, "Member 'ALS_AnimBP_C_AimOffsetBehaviors::AimOffsetBehaviors_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.AngleInRange
// 0x0050 (0x0050 - 0x0000)
struct ALS_AnimBP_C_AngleInRange final
{
public:
	double                                        Angle;                                             // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MinAngle;                                          // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        MaxAngle;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Buffer;                                            // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          IncreaseBuffer;                                    // 0x0020(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ReturnValue;                                       // 0x0021(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_23[0x5];                                       // 0x0023(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Select_Default;                             // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_AngleInRange) == 0x000008, "Wrong alignment on ALS_AnimBP_C_AngleInRange");
static_assert(sizeof(ALS_AnimBP_C_AngleInRange) == 0x000050, "Wrong size on ALS_AnimBP_C_AngleInRange");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, Angle) == 0x000000, "Member 'ALS_AnimBP_C_AngleInRange::Angle' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, MinAngle) == 0x000008, "Member 'ALS_AnimBP_C_AngleInRange::MinAngle' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, MaxAngle) == 0x000010, "Member 'ALS_AnimBP_C_AngleInRange::MaxAngle' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, Buffer) == 0x000018, "Member 'ALS_AnimBP_C_AngleInRange::Buffer' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, IncreaseBuffer) == 0x000020, "Member 'ALS_AnimBP_C_AngleInRange::IncreaseBuffer' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, ReturnValue) == 0x000021, "Member 'ALS_AnimBP_C_AngleInRange::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, Temp_bool_Variable) == 0x000022, "Member 'ALS_AnimBP_C_AngleInRange::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000028, "Member 'ALS_AnimBP_C_AngleInRange::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'ALS_AnimBP_C_AngleInRange::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000038, "Member 'ALS_AnimBP_C_AngleInRange::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000040, "Member 'ALS_AnimBP_C_AngleInRange::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_AngleInRange::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x000049, "Member 'ALS_AnimBP_C_AngleInRange::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_AngleInRange, K2Node_Select_Default) == 0x00004A, "Member 'ALS_AnimBP_C_AngleInRange::K2Node_Select_Default' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.AnimGraph
// 0x0010 (0x0010 - 0x0000)
struct ALS_AnimBP_C_AnimGraph final
{
public:
	struct FPoseLink                              AnimGraph_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C_AnimGraph) == 0x000008, "Wrong alignment on ALS_AnimBP_C_AnimGraph");
static_assert(sizeof(ALS_AnimBP_C_AnimGraph) == 0x000010, "Wrong size on ALS_AnimBP_C_AnimGraph");
static_assert(offsetof(ALS_AnimBP_C_AnimGraph, AnimGraph_0) == 0x000000, "Member 'ALS_AnimBP_C_AnimGraph::AnimGraph_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.BaseLayer
// 0x0010 (0x0010 - 0x0000)
struct ALS_AnimBP_C_BaseLayer final
{
public:
	struct FPoseLink                              BaseLayer_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C_BaseLayer) == 0x000008, "Wrong alignment on ALS_AnimBP_C_BaseLayer");
static_assert(sizeof(ALS_AnimBP_C_BaseLayer) == 0x000010, "Wrong size on ALS_AnimBP_C_BaseLayer");
static_assert(offsetof(ALS_AnimBP_C_BaseLayer, BaseLayer_0) == 0x000000, "Member 'ALS_AnimBP_C_BaseLayer::BaseLayer_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.BasePoses
// 0x0010 (0x0010 - 0x0000)
struct ALS_AnimBP_C_BasePoses final
{
public:
	struct FPoseLink                              BasePoses_0;                                       // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C_BasePoses) == 0x000008, "Wrong alignment on ALS_AnimBP_C_BasePoses");
static_assert(sizeof(ALS_AnimBP_C_BasePoses) == 0x000010, "Wrong size on ALS_AnimBP_C_BasePoses");
static_assert(offsetof(ALS_AnimBP_C_BasePoses, BasePoses_0) == 0x000000, "Member 'ALS_AnimBP_C_BasePoses::BasePoses_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ALS_AnimBP_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX_0;                                      // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ALS_AnimBP_C_BlueprintUpdateAnimation");
static_assert(sizeof(ALS_AnimBP_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ALS_AnimBP_C_BlueprintUpdateAnimation");
static_assert(offsetof(ALS_AnimBP_C_BlueprintUpdateAnimation, DeltaTimeX_0) == 0x000000, "Member 'ALS_AnimBP_C_BlueprintUpdateAnimation::DeltaTimeX_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.BPI_SetGroundedEntryState
// 0x0001 (0x0001 - 0x0000)
struct ALS_AnimBP_C_BPI_SetGroundedEntryState final
{
public:
	EGroundedEntryState                           GroundedEntryState_0;                              // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_BPI_SetGroundedEntryState) == 0x000001, "Wrong alignment on ALS_AnimBP_C_BPI_SetGroundedEntryState");
static_assert(sizeof(ALS_AnimBP_C_BPI_SetGroundedEntryState) == 0x000001, "Wrong size on ALS_AnimBP_C_BPI_SetGroundedEntryState");
static_assert(offsetof(ALS_AnimBP_C_BPI_SetGroundedEntryState, GroundedEntryState_0) == 0x000000, "Member 'ALS_AnimBP_C_BPI_SetGroundedEntryState::GroundedEntryState_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.BPI_SetOverlayOverrideState
// 0x0004 (0x0004 - 0x0000)
struct ALS_AnimBP_C_BPI_SetOverlayOverrideState final
{
public:
	int32                                         OverlayOverrideState_0;                            // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_BPI_SetOverlayOverrideState) == 0x000004, "Wrong alignment on ALS_AnimBP_C_BPI_SetOverlayOverrideState");
static_assert(sizeof(ALS_AnimBP_C_BPI_SetOverlayOverrideState) == 0x000004, "Wrong size on ALS_AnimBP_C_BPI_SetOverlayOverrideState");
static_assert(offsetof(ALS_AnimBP_C_BPI_SetOverlayOverrideState, OverlayOverrideState_0) == 0x000000, "Member 'ALS_AnimBP_C_BPI_SetOverlayOverrideState::OverlayOverrideState_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalcHandLocationEffect
// 0x0490 (0x0490 - 0x0000)
struct ALS_AnimBP_C_CalcHandLocationEffect final
{
public:
	struct FVector                                TargetLocation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                AImReturn;                                         // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IdleReturn;                                        // 0x0030(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x7];                                       // 0x00E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x00F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F3[0x5];                                       // 0x00F3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_1;                          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_7;            // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_8;            // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_9;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_4;      // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_10;           // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x01A0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x01A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C1[0x3];                                      // 0x01C1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_11;           // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_4;       // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_5;      // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_ReturnValue;            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue;        // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Up_DownRifleEffect_Return;                // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_12;           // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_4;           // 0x0258(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_1;      // 0x0268(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x0270(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_13;           // 0x0278(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_14;           // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_5;                        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_15;           // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_16;           // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_6;      // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_6;                        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_17;           // 0x02C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_18;           // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_5;           // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_5;       // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue_1;     // 0x02F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0300(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0318(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x031C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0320(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_324[0x4];                                      // 0x0324(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_7;                        // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_6;           // 0x0330(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_19;           // 0x0338(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_7;      // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_6;       // 0x0348(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_4;                  // 0x0350(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0358(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_359[0x7];                                      // 0x0359(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x0360(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_8;      // 0x0368(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_9;      // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_20;           // 0x0378(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_21;           // 0x0380(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_10;     // 0x0388(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_7;           // 0x0390(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x0398(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_5;                  // 0x03A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_22;           // 0x03A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x03C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x03D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x03D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_7;       // 0x03E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_6;                  // 0x03E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_5;                          // 0x03F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_5;                          // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_5;                          // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_8;       // 0x0408(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Subtract_DoubleDouble_ReturnValue_2;      // 0x0410(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_8;           // 0x0418(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_6;                          // 0x0420(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_6;                          // 0x0428(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_6;                          // 0x0430(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_9;           // 0x0438(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_7;                  // 0x0440(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_10;          // 0x0448(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_8;                  // 0x0450(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeUnclamped_Value_ImplicitCast;     // 0x0470(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0478(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0480(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalcHandLocationEffect) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalcHandLocationEffect");
static_assert(sizeof(ALS_AnimBP_C_CalcHandLocationEffect) == 0x000490, "Wrong size on ALS_AnimBP_C_CalcHandLocationEffect");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, TargetLocation) == 0x000000, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::TargetLocation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, AImReturn) == 0x000018, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::AImReturn' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, IdleReturn) == 0x000030, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::IdleReturn' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000050, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector2D_X) == 0x000060, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector2D_Y) == 0x000068, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_ReturnValue) == 0x000070, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000078, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000080, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000088, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_RandomBool_ReturnValue) == 0x000090, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue) == 0x000098, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_ReturnValue_1) == 0x0000A0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000A8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_X) == 0x0000B0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Y) == 0x0000B8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Z) == 0x0000C0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_3) == 0x0000C8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_ReturnValue_2) == 0x0000D0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_4) == 0x0000D8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000E0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0000E8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x0000F0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x0000F1, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x0000F2, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_ReturnValue_3) == 0x0000F8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue_1) == 0x000100, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000108, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x000110, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_X_1) == 0x000118, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Y_1) == 0x000120, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Z_1) == 0x000128, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000130, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000138, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue_2) == 0x000140, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_7) == 0x000148, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000150, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_8) == 0x000158, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_9) == 0x000160, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000168, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_4) == 0x000170, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue) == 0x000178, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_10) == 0x000180, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FClamp_ReturnValue) == 0x000188, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000190, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000198, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0001A0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0001A8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x0001C0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakRotator_Roll) == 0x0001C4, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakRotator_Pitch) == 0x0001C8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakRotator_Yaw) == 0x0001CC, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_11) == 0x0001D0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue_3) == 0x0001D8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_4) == 0x0001E0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_5) == 0x0001E8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeUnclamped_ReturnValue) == 0x0001F0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_X_2) == 0x0001F8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Y_2) == 0x000200, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Z_2) == 0x000208, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FClamp_ReturnValue_1) == 0x000210, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000218, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_X_3) == 0x000220, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Y_3) == 0x000228, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Z_3) == 0x000230, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000238, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Subtract_DoubleDouble_ReturnValue) == 0x000240, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Subtract_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Up_DownRifleEffect_Return) == 0x000248, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Up_DownRifleEffect_Return' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_12) == 0x000250, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_4) == 0x000258, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue_1) == 0x000260, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Subtract_DoubleDouble_ReturnValue_1) == 0x000268, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Subtract_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue_4) == 0x000270, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_13) == 0x000278, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue_2) == 0x000280, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_ReturnValue_4) == 0x000288, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_14) == 0x000290, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_ReturnValue_5) == 0x000298, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_15) == 0x0002A0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_16) == 0x0002A8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_6) == 0x0002B0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_ReturnValue_6) == 0x0002B8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue_5) == 0x0002C0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_17) == 0x0002C8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_18) == 0x0002D0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue_6) == 0x0002D8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_5) == 0x0002E0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_5) == 0x0002E8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetPlayerCameraManager_ReturnValue_1) == 0x0002F0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetPlayerCameraManager_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue_3) == 0x0002F8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000300, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakRotator_Roll_1) == 0x000318, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakRotator_Pitch_1) == 0x00031C, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakRotator_Yaw_1) == 0x000320, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_ReturnValue_7) == 0x000328, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_6) == 0x000330, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_19) == 0x000338, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_7) == 0x000340, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_6) == 0x000348, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue_4) == 0x000350, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_IsValid_ReturnValue) == 0x000358, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue_7) == 0x000360, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_8) == 0x000368, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_9) == 0x000370, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_20) == 0x000378, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_21) == 0x000380, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_10) == 0x000388, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_7) == 0x000390, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_SelectFloat_ReturnValue_8) == 0x000398, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue_5) == 0x0003A0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_ReturnValue_22) == 0x0003A8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MakeVector_ReturnValue) == 0x0003B0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_X_4) == 0x0003C8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Y_4) == 0x0003D0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Z_4) == 0x0003D8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_7) == 0x0003E0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue_6) == 0x0003E8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_X_5) == 0x0003F0, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_X_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Y_5) == 0x0003F8, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Y_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Z_5) == 0x000400, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Z_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_8) == 0x000408, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Subtract_DoubleDouble_ReturnValue_2) == 0x000410, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Subtract_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_8) == 0x000418, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_X_6) == 0x000420, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_X_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Y_6) == 0x000428, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Y_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_BreakVector_Z_6) == 0x000430, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_BreakVector_Z_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_9) == 0x000438, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue_7) == 0x000440, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Add_DoubleDouble_ReturnValue_10) == 0x000448, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Add_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_FInterpTo_ReturnValue_8) == 0x000450, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_FInterpTo_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MakeVector_ReturnValue_1) == 0x000458, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeUnclamped_Value_ImplicitCast) == 0x000470, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeUnclamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000478, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_Abs_A_ImplicitCast) == 0x000480, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandLocationEffect, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000488, "Member 'ALS_AnimBP_C_CalcHandLocationEffect::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalcHandRotationEffect
// 0x0158 (0x0158 - 0x0000)
struct ALS_AnimBP_C_CalcHandRotationEffect final
{
public:
	struct FRotator                               TargetRotator;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               Return;                                            // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_104[0x4];                                      // 0x0104(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_134[0x4];                                      // 0x0134(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_144[0x4];                                      // 0x0144(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_2;         // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalcHandRotationEffect) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalcHandRotationEffect");
static_assert(sizeof(ALS_AnimBP_C_CalcHandRotationEffect) == 0x000158, "Wrong size on ALS_AnimBP_C_CalcHandRotationEffect");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, TargetRotator) == 0x000000, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::TargetRotator' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, Return) == 0x000018, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::Return' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000030, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000031, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MapRangeClamped_ReturnValue) == 0x000038, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000040, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_SelectFloat_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_SelectFloat_ReturnValue_1) == 0x000050, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000058, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000068, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000070, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000078, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_SelectFloat_ReturnValue_2) == 0x000088, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000090, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Roll) == 0x000098, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Pitch) == 0x00009C, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Yaw) == 0x0000A0, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MapRangeClamped_ReturnValue_6) == 0x0000A8, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_FInterpTo_ReturnValue) == 0x0000B0, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x0000B8, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x0000C0, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_SelectFloat_ReturnValue_3) == 0x0000C8, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_SelectFloat_ReturnValue_4) == 0x0000D0, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Roll_1) == 0x0000D8, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Pitch_1) == 0x0000DC, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Yaw_1) == 0x0000E0, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x0000E8, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_FInterpTo_ReturnValue_1) == 0x0000F0, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Roll_2) == 0x0000F8, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Pitch_2) == 0x0000FC, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_BreakRotator_Yaw_2) == 0x000100, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_FInterpTo_ReturnValue_2) == 0x000108, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MakeRotator_ReturnValue) == 0x000110, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000128, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000130, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000138, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000140, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_FInterpTo_Current_ImplicitCast_2) == 0x000148, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_FInterpTo_Current_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandRotationEffect, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000150, "Member 'ALS_AnimBP_C_CalcHandRotationEffect::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalcHandTransforms
// 0x0D50 (0x0D50 - 0x0000)
struct ALS_AnimBP_C_CalcHandTransforms final
{
public:
	struct FTransform                             RearTransform;                                     // 0x0000(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             FrontTransform;                                    // 0x0060(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             OpticTransform;                                    // 0x00C0(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         Mesh;                                              // 0x0120(0x0008)(Edit, BlueprintVisible, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_128[0x8];                                      // 0x0128(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             HandTransform;                                     // 0x0130(0x0060)(Edit, BlueprintVisible, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class UMeshComponent*>                 CallFunc_K2_GetComponentsByClass_ReturnValue;      // 0x0190(0x0010)(ReferenceParm, ContainsInstancedReference)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x01A0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable;                     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0208(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable;                    // 0x0298(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29C[0x4];                                      // 0x029C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetRightVector_ReturnValue;               // 0x02A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x02B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2BC[0x4];                                      // 0x02BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetUpVector_ReturnValue;                  // 0x02C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x02D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x02F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue_1;           // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAsin_ReturnValue;                      // 0x0318(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAsin_ReturnValue_1;                    // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue;      // 0x0328(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_IntFloat_ReturnValue;            // 0x0340(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RotatorFromAxisAndAngle_ReturnValue_1;    // 0x0348(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0360(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_361[0x7];                                      // 0x0361(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue;              // 0x0368(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_ComposeRotators_ReturnValue_1;            // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_2;                // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_2;                // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_2;                   // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x03E0(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x03F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0450(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Conv_StringToName_ReturnValue;            // 0x0460(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class USceneComponent*>                CallFunc_GetComponentsByTag_ReturnValue;           // 0x0468(0x0010)(ReferenceParm, ContainsInstancedReference)
	int32                                         CallFunc_Array_Length_ReturnValue_1;               // 0x0478(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_47C[0x4];                                      // 0x047C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_1;         // 0x0480(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue;              // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x04E3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E4[0xC];                                      // 0x04E4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_2;         // 0x04F0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             K2Node_Select_Default;                             // 0x0550(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_3;                // 0x05B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_3;                // 0x05C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_3;                   // 0x05E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Test_RotationReturn;                      // 0x05F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x0610(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue;        // 0x0670(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_4;                // 0x06D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_4;                // 0x06E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_4;                   // 0x0700(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_1;            // 0x0718(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_719[0x7];                                      // 0x0719(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_CalcHandRotationEffect_return;            // 0x0720(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X;                            // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0740(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0748(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x0750(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0758(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x0770(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHandLocationEffect_AImReturn;         // 0x07D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalcHandLocationEffect_IdleReturn;        // 0x07E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_1;                   // 0x0800(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_804[0xC];                                      // 0x0804(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_2;              // 0x0810(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        CallFunc_Array_Get_Item;                           // 0x0870(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_878[0x8];                                      // 0x0878(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_PlaceInFrontOfCamera_FinalTransform;      // 0x0880(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_3;         // 0x08E0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_DoesSocketExist_ReturnValue_2;            // 0x0940(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_941[0xF];                                      // 0x0941(0x000F)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_3;              // 0x0950(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Array_Index_Variable_2;                   // 0x09B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9B4[0xC];                                      // 0x09B4(0x000C)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_PlaceInFrontOfCamera_FinalTransform_1;    // 0x09C0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UMeshComponent*                         CallFunc_Array_Get_Item_1;                         // 0x0A20(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A28[0x8];                                      // 0x0A28(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeRelativeTransform_ReturnValue_1;      // 0x0A30(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_5;                // 0x0A90(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_5;                // 0x0AA8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_5;                   // 0x0AC0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD8[0x8];                                      // 0x0AD8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue_4;         // 0x0AE0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0B58(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_4;              // 0x0B70(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0BD0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Temp_int_Loop_Counter_Variable_1;                  // 0x0C30(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0C34(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0C35(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C36[0x2];                                      // 0x0C36(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_1;                 // 0x0C38(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0C3C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0C3D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C3E[0x2];                                      // 0x0C3E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp_int_Loop_Counter_Variable_2;                  // 0x0C40(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_1;                // 0x0C44(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C45[0x3];                                      // 0x0C45(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue_2;                 // 0x0C48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4C[0x4];                                      // 0x0C4C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_Array_Get_Item_2;                         // 0x0C50(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_Array_Get_Item_3;                         // 0x0CB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location_6;                // 0x0CB8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_6;                // 0x0CD0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_6;                   // 0x0CE8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Conv_NameToString_ReturnValue;            // 0x0D00(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0D10(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	class FString                                 CallFunc_Split_RightS;                             // 0x0D20(0x0010)(ZeroConstructor, HasGetValueTypeHash)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0D30(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D31[0x3];                                      // 0x0D31(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0D34(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0D38(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D39[0x3];                                      // 0x0D39(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue_2;               // 0x0D3C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_IntInt_ReturnValue_2;                // 0x0D40(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D41[0x3];                                      // 0x0D41(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast; // 0x0D44(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast_1; // 0x0D48(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalcHandTransforms) == 0x000010, "Wrong alignment on ALS_AnimBP_C_CalcHandTransforms");
static_assert(sizeof(ALS_AnimBP_C_CalcHandTransforms) == 0x000D50, "Wrong size on ALS_AnimBP_C_CalcHandTransforms");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, RearTransform) == 0x000000, "Member 'ALS_AnimBP_C_CalcHandTransforms::RearTransform' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, FrontTransform) == 0x000060, "Member 'ALS_AnimBP_C_CalcHandTransforms::FrontTransform' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, OpticTransform) == 0x0000C0, "Member 'ALS_AnimBP_C_CalcHandTransforms::OpticTransform' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, Mesh) == 0x000120, "Member 'ALS_AnimBP_C_CalcHandTransforms::Mesh' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, HandTransform) == 0x000130, "Member 'ALS_AnimBP_C_CalcHandTransforms::HandTransform' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_K2_GetComponentsByClass_ReturnValue) == 0x000190, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_K2_GetComponentsByClass_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetSocketTransform_ReturnValue) == 0x0001A0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Array_Length_ReturnValue) == 0x000200, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, Temp_int_Array_Index_Variable) == 0x000204, "Member 'ALS_AnimBP_C_CalcHandTransforms::Temp_int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Location) == 0x000208, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Rotation) == 0x000220, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Scale) == 0x000238, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Location_1) == 0x000250, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Rotation_1) == 0x000268, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Scale_1) == 0x000280, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, Temp_int_Loop_Counter_Variable) == 0x000298, "Member 'ALS_AnimBP_C_CalcHandTransforms::Temp_int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetRightVector_ReturnValue) == 0x0002A0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetRightVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Add_IntInt_ReturnValue) == 0x0002B8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetUpVector_ReturnValue) == 0x0002C0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetUpVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Subtract_VectorVector_ReturnValue) == 0x0002D8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Normal_ReturnValue) == 0x0002F0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Dot_VectorVector_ReturnValue) == 0x000308, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Dot_VectorVector_ReturnValue_1) == 0x000310, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Dot_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_DegAsin_ReturnValue) == 0x000318, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_DegAsin_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_DegAsin_ReturnValue_1) == 0x000320, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_DegAsin_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_RotatorFromAxisAndAngle_ReturnValue) == 0x000328, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_RotatorFromAxisAndAngle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Multiply_IntFloat_ReturnValue) == 0x000340, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_RotatorFromAxisAndAngle_ReturnValue_1) == 0x000348, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_RotatorFromAxisAndAngle_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_IsLocallyControlled_ReturnValue) == 0x000360, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_ComposeRotators_ReturnValue) == 0x000368, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_ComposeRotators_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_ComposeRotators_ReturnValue_1) == 0x000380, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_ComposeRotators_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Location_2) == 0x000398, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Location_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Rotation_2) == 0x0003B0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Rotation_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Scale_2) == 0x0003C8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Scale_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Conv_IntToString_ReturnValue) == 0x0003E0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeTransform_ReturnValue) == 0x0003F0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Concat_StrStr_ReturnValue) == 0x000450, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Conv_StringToName_ReturnValue) == 0x000460, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Conv_StringToName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetComponentsByTag_ReturnValue) == 0x000468, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetComponentsByTag_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Array_Length_ReturnValue_1) == 0x000478, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Array_Length_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetSocketTransform_ReturnValue_1) == 0x000480, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetSocketTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, Temp_bool_Variable) == 0x0004E0, "Member 'ALS_AnimBP_C_CalcHandTransforms::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_DoesSocketExist_ReturnValue) == 0x0004E1, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_DoesSocketExist_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_IsValid_ReturnValue) == 0x0004E2, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_IsValid_ReturnValue_1) == 0x0004E3, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetSocketTransform_ReturnValue_2) == 0x0004F0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetSocketTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, K2Node_Select_Default) == 0x000550, "Member 'ALS_AnimBP_C_CalcHandTransforms::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Location_3) == 0x0005B0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Location_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Rotation_3) == 0x0005C8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Rotation_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Scale_3) == 0x0005E0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Scale_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Test_RotationReturn) == 0x0005F8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Test_RotationReturn' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeTransform_ReturnValue_1) == 0x000610, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeRelativeTransform_ReturnValue) == 0x000670, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeRelativeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Location_4) == 0x0006D0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Location_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Rotation_4) == 0x0006E8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Rotation_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Scale_4) == 0x000700, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Scale_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_DoesSocketExist_ReturnValue_1) == 0x000718, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_DoesSocketExist_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_CalcHandRotationEffect_return) == 0x000720, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_CalcHandRotationEffect_return' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakVector_X) == 0x000738, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakVector_Y) == 0x000740, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakVector_Z) == 0x000748, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x000750, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeVector_ReturnValue) == 0x000758, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetTransform_ReturnValue) == 0x000770, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_CalcHandLocationEffect_AImReturn) == 0x0007D0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_CalcHandLocationEffect_AImReturn' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_CalcHandLocationEffect_IdleReturn) == 0x0007E8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_CalcHandLocationEffect_IdleReturn' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, Temp_int_Array_Index_Variable_1) == 0x000800, "Member 'ALS_AnimBP_C_CalcHandTransforms::Temp_int_Array_Index_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeTransform_ReturnValue_2) == 0x000810, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeTransform_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Array_Get_Item) == 0x000870, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_PlaceInFrontOfCamera_FinalTransform) == 0x000880, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_PlaceInFrontOfCamera_FinalTransform' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetSocketTransform_ReturnValue_3) == 0x0008E0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetSocketTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_DoesSocketExist_ReturnValue_2) == 0x000940, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_DoesSocketExist_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeTransform_ReturnValue_3) == 0x000950, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeTransform_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, Temp_int_Array_Index_Variable_2) == 0x0009B0, "Member 'ALS_AnimBP_C_CalcHandTransforms::Temp_int_Array_Index_Variable_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_PlaceInFrontOfCamera_FinalTransform_1) == 0x0009C0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_PlaceInFrontOfCamera_FinalTransform_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Array_Get_Item_1) == 0x000A20, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Array_Get_Item_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeRelativeTransform_ReturnValue_1) == 0x000A30, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeRelativeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Location_5) == 0x000A90, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Location_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Rotation_5) == 0x000AA8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Rotation_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Scale_5) == 0x000AC0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Scale_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_GetSocketTransform_ReturnValue_4) == 0x000AE0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_GetSocketTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakVector_X_1) == 0x000B40, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakVector_Y_1) == 0x000B48, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakVector_Z_1) == 0x000B50, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeVector_ReturnValue_1) == 0x000B58, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_MakeTransform_ReturnValue_4) == 0x000B70, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_MakeTransform_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_ComposeTransforms_ReturnValue) == 0x000BD0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, Temp_int_Loop_Counter_Variable_1) == 0x000C30, "Member 'ALS_AnimBP_C_CalcHandTransforms::Temp_int_Loop_Counter_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_IsValid_ReturnValue_2) == 0x000C34, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Less_IntInt_ReturnValue) == 0x000C35, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Add_IntInt_ReturnValue_1) == 0x000C38, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Add_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, K2Node_SwitchEnum_CmpSuccess) == 0x000C3C, "Member 'ALS_AnimBP_C_CalcHandTransforms::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, K2Node_SwitchEnum_CmpSuccess_1) == 0x000C3D, "Member 'ALS_AnimBP_C_CalcHandTransforms::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, Temp_int_Loop_Counter_Variable_2) == 0x000C40, "Member 'ALS_AnimBP_C_CalcHandTransforms::Temp_int_Loop_Counter_Variable_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Less_IntInt_ReturnValue_1) == 0x000C44, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Less_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Add_IntInt_ReturnValue_2) == 0x000C48, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Add_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Array_Get_Item_2) == 0x000C50, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Array_Get_Item_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Array_Get_Item_3) == 0x000CB0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Array_Get_Item_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Location_6) == 0x000CB8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Location_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Rotation_6) == 0x000CD0, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Rotation_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_BreakTransform_Scale_6) == 0x000CE8, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_BreakTransform_Scale_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Conv_NameToString_ReturnValue) == 0x000D00, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Conv_NameToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Split_LeftS) == 0x000D10, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Split_RightS) == 0x000D20, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Split_ReturnValue) == 0x000D30, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Conv_StringToInt_ReturnValue) == 0x000D34, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, K2Node_SwitchString_CmpSuccess) == 0x000D38, "Member 'ALS_AnimBP_C_CalcHandTransforms::K2Node_SwitchString_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Array_Length_ReturnValue_2) == 0x000D3C, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Array_Length_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_Less_IntInt_ReturnValue_2) == 0x000D40, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_Less_IntInt_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast) == 0x000D44, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalcHandTransforms, CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast_1) == 0x000D48, "Member 'ALS_AnimBP_C_CalcHandTransforms::CallFunc_RotatorFromAxisAndAngle_Angle_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateCrouchingPlayRate
// 0x0060 (0x0060 - 0x0000)
struct ALS_AnimBP_C_CalculateCrouchingPlayRate final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateCrouchingPlayRate) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateCrouchingPlayRate");
static_assert(sizeof(ALS_AnimBP_C_CalculateCrouchingPlayRate) == 0x000060, "Wrong size on ALS_AnimBP_C_CalculateCrouchingPlayRate");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, PlayRate) == 0x000000, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_GetOwningComponent_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000010, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_X) == 0x000028, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_Y) == 0x000030, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_BreakVector_Z) == 0x000038, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000040, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000048, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000050, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateCrouchingPlayRate, CallFunc_FClamp_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_CalculateCrouchingPlayRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateDiagonalScaleAmount
// 0x0040 (0x0040 - 0x0000)
struct ALS_AnimBP_C_CalculateDiagonalScaleAmount final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_FunctionResult_ReturnValue_ImplicitCast;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateDiagonalScaleAmount) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateDiagonalScaleAmount");
static_assert(sizeof(ALS_AnimBP_C_CalculateDiagonalScaleAmount) == 0x000040, "Wrong size on ALS_AnimBP_C_CalculateDiagonalScaleAmount");
static_assert(offsetof(ALS_AnimBP_C_CalculateDiagonalScaleAmount, ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_CalculateDiagonalScaleAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Abs_ReturnValue) == 0x000010, "Member 'ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_GetFloatValue_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateDiagonalScaleAmount, K2Node_FunctionResult_ReturnValue_ImplicitCast) == 0x000020, "Member 'ALS_AnimBP_C_CalculateDiagonalScaleAmount::K2Node_FunctionResult_ReturnValue_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000028, "Member 'ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000030, "Member 'ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateDiagonalScaleAmount, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000038, "Member 'ALS_AnimBP_C_CalculateDiagonalScaleAmount::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateInAirLeanAmount
// 0x00C0 (0x00C0 - 0x0000)
struct ALS_AnimBP_C_CalculateInAirLeanAmount final
{
public:
	struct FLeanAmount                            LeanAmount_0;                                      // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0040(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0070(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_Vector2DFloat_B_ImplicitCast;    // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateInAirLeanAmount) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateInAirLeanAmount");
static_assert(sizeof(ALS_AnimBP_C_CalculateInAirLeanAmount) == 0x0000C0, "Wrong size on ALS_AnimBP_C_CalculateInAirLeanAmount");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, LeanAmount_0) == 0x000000, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::LeanAmount_0' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000028, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000040, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_X) == 0x000058, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_Y) == 0x000060, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector_Z) == 0x000068, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_MakeVector2D_ReturnValue) == 0x000070, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000080, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector2D_X) == 0x000090, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_BreakVector2D_Y) == 0x000098, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_LeanAmount) == 0x0000A0, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x0000A8, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, CallFunc_Multiply_Vector2DFloat_B_ImplicitCast) == 0x0000B0, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::CallFunc_Multiply_Vector2DFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x0000B8, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateInAirLeanAmount, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x0000BC, "Member 'ALS_AnimBP_C_CalculateInAirLeanAmount::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateLandPrediction
// 0x02A0 (0x02A0 - 0x0000)
struct ALS_AnimBP_C_CalculateLandPrediction final
{
public:
	double                                        LandPrediction_0;                                  // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x0008(0x0010)(ConstParm, ReferenceParm)
	EDrawDebugTrace                               CallFunc_GetDebugTraceType_DebugType;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentLocation_ReturnValue;      // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Vector_NormalUnsafe_ReturnValue;          // 0x0078(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FHitResult                             CallFunc_CapsuleTraceSingleByProfile_OutHit;       // 0x00C0(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_CapsuleTraceSingleByProfile_ReturnValue;  // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue;                   // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x01AB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Time;                      // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x01B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B4[0x4];                                      // 0x01B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x0200(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x0218(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x0220(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x0228(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0240(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x0244(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0248(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24C[0x4];                                      // 0x024C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x3];                                      // 0x0281(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0284(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateLandPrediction) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateLandPrediction");
static_assert(sizeof(ALS_AnimBP_C_CalculateLandPrediction) == 0x0002A0, "Wrong size on ALS_AnimBP_C_CalculateLandPrediction");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, LandPrediction_0) == 0x000000, "Member 'ALS_AnimBP_C_CalculateLandPrediction::LandPrediction_0' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, Temp_object_Variable) == 0x000008, "Member 'ALS_AnimBP_C_CalculateLandPrediction::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_GetDebugTraceType_DebugType) == 0x000018, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_GetDebugTraceType_DebugType' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000019, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_GetCurveValue_ReturnValue) == 0x00001C, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_K2_GetComponentLocation_ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_K2_GetComponentLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_X) == 0x000038, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_Y) == 0x000040, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakVector_Z) == 0x000048, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_FClamp_ReturnValue) == 0x000050, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_MapRangeClamped_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_MakeVector_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Vector_NormalUnsafe_ReturnValue) == 0x000078, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Vector_NormalUnsafe_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000090, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_CapsuleTraceSingleByProfile_OutHit) == 0x0000C0, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_CapsuleTraceSingleByProfile_OutHit' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_CapsuleTraceSingleByProfile_ReturnValue) == 0x0001A8, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_CapsuleTraceSingleByProfile_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_IsWalkable_ReturnValue) == 0x0001A9, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_IsWalkable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_bBlockingHit) == 0x0001AA, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_bInitialOverlap) == 0x0001AB, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Time) == 0x0001AC, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Distance) == 0x0001B0, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Location) == 0x0001B8, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ImpactPoint) == 0x0001D0, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_Normal) == 0x0001E8, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ImpactNormal) == 0x000200, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_PhysMat) == 0x000218, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitActor) == 0x000220, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitComponent) == 0x000228, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitBoneName) == 0x000230, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_BoneName) == 0x000238, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_HitItem) == 0x000240, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_ElementIndex) == 0x000244, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_FaceIndex) == 0x000248, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_TraceStart) == 0x000250, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BreakHitResult_TraceEnd) == 0x000268, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_BooleanAND_ReturnValue) == 0x000280, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_GetFloatValue_ReturnValue) == 0x000284, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_ReturnValue) == 0x000288, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000290, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateLandPrediction, CallFunc_Lerp_A_ImplicitCast) == 0x000298, "Member 'ALS_AnimBP_C_CalculateLandPrediction::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateMovementDirection
// 0x0058 (0x0058 - 0x0000)
struct ALS_AnimBP_C_CalculateMovementDirection final
{
public:
	EMovementDirection                            ReturnValues;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0028(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            CallFunc_CalculateQuadrant_ReturnValue;            // 0x004D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E[0x2];                                       // 0x004E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_CalculateQuadrant_Angle_ImplicitCast;     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateMovementDirection) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateMovementDirection");
static_assert(sizeof(ALS_AnimBP_C_CalculateMovementDirection) == 0x000058, "Wrong size on ALS_AnimBP_C_CalculateMovementDirection");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, ReturnValues) == 0x000000, "Member 'ALS_AnimBP_C_CalculateMovementDirection::ReturnValues' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_CalculateMovementDirection::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'ALS_AnimBP_C_CalculateMovementDirection::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000028, "Member 'ALS_AnimBP_C_CalculateMovementDirection::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Roll) == 0x000040, "Member 'ALS_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Pitch) == 0x000044, "Member 'ALS_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, CallFunc_BreakRotator_Yaw) == 0x000048, "Member 'ALS_AnimBP_C_CalculateMovementDirection::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, K2Node_SwitchEnum_CmpSuccess_1) == 0x00004C, "Member 'ALS_AnimBP_C_CalculateMovementDirection::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, CallFunc_CalculateQuadrant_ReturnValue) == 0x00004D, "Member 'ALS_AnimBP_C_CalculateMovementDirection::CallFunc_CalculateQuadrant_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateMovementDirection, CallFunc_CalculateQuadrant_Angle_ImplicitCast) == 0x000050, "Member 'ALS_AnimBP_C_CalculateMovementDirection::CallFunc_CalculateQuadrant_Angle_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateQuadrant
// 0x0048 (0x0048 - 0x0000)
struct ALS_AnimBP_C_CalculateQuadrant final
{
public:
	EMovementDirection                            Current;                                           // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        FRMinusThreshold;                                  // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        FLMinusThreshold;                                  // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BRMinusThreshold;                                  // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        BLMinusThreshold;                                  // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Buffer;                                            // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Angle;                                             // 0x0030(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            ReturnValue;                                       // 0x0038(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue;                 // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue_1;               // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_AngleInRange_ReturnValue_2;               // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateQuadrant) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateQuadrant");
static_assert(sizeof(ALS_AnimBP_C_CalculateQuadrant) == 0x000048, "Wrong size on ALS_AnimBP_C_CalculateQuadrant");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, Current) == 0x000000, "Member 'ALS_AnimBP_C_CalculateQuadrant::Current' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, FRMinusThreshold) == 0x000008, "Member 'ALS_AnimBP_C_CalculateQuadrant::FRMinusThreshold' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, FLMinusThreshold) == 0x000010, "Member 'ALS_AnimBP_C_CalculateQuadrant::FLMinusThreshold' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, BRMinusThreshold) == 0x000018, "Member 'ALS_AnimBP_C_CalculateQuadrant::BRMinusThreshold' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, BLMinusThreshold) == 0x000020, "Member 'ALS_AnimBP_C_CalculateQuadrant::BLMinusThreshold' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, Buffer) == 0x000028, "Member 'ALS_AnimBP_C_CalculateQuadrant::Buffer' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, Angle) == 0x000030, "Member 'ALS_AnimBP_C_CalculateQuadrant::Angle' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, ReturnValue) == 0x000038, "Member 'ALS_AnimBP_C_CalculateQuadrant::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000039, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x00003A, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00003B, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue) == 0x00003C, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00003D, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue) == 0x00003E, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue_1) == 0x00003F, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue_1) == 0x000040, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x000041, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x000042, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_BooleanOR_ReturnValue_2) == 0x000043, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateQuadrant, CallFunc_AngleInRange_ReturnValue_2) == 0x000044, "Member 'ALS_AnimBP_C_CalculateQuadrant::CallFunc_AngleInRange_ReturnValue_2' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateRelativeAccelerationAmount
// 0x0118 (0x0118 - 0x0000)
struct ALS_AnimBP_C_CalculateRelativeAccelerationAmount final
{
public:
	struct FVector                                ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMaxBrakingDeceleration_ReturnValue;    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_ClampSizeMax_ReturnValue;          // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x0080(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetMaxAcceleration_ReturnValue;           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Vector_ClampSizeMax_ReturnValue_1;        // 0x00A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue_1;         // 0x00B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue_1;     // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Dot_VectorVector_ReturnValue;             // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F1[0x7];                                       // 0x00F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Vector_ClampSizeMax_Max_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_VectorFloat_B_ImplicitCast;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Vector_ClampSizeMax_Max_ImplicitCast_1;   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_VectorFloat_B_ImplicitCast_1;      // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateRelativeAccelerationAmount");
static_assert(sizeof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount) == 0x000118, "Wrong size on ALS_AnimBP_C_CalculateRelativeAccelerationAmount");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x000030, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_GetMaxBrakingDeceleration_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_GetMaxBrakingDeceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_ReturnValue) == 0x000050, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000068, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x000080, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_GetMaxAcceleration_ReturnValue) == 0x000098, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_GetMaxAcceleration_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_ReturnValue_1) == 0x0000A0, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_ReturnValue_1) == 0x0000B8, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_LessLess_VectorRotator_ReturnValue_1) == 0x0000D0, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_LessLess_VectorRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Dot_VectorVector_ReturnValue) == 0x0000E8, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Dot_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000F0, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_Max_ImplicitCast) == 0x0000F8, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_Max_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_B_ImplicitCast) == 0x000100, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Vector_ClampSizeMax_Max_ImplicitCast_1) == 0x000108, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Vector_ClampSizeMax_Max_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateRelativeAccelerationAmount, CallFunc_Divide_VectorFloat_B_ImplicitCast_1) == 0x000110, "Member 'ALS_AnimBP_C_CalculateRelativeAccelerationAmount::CallFunc_Divide_VectorFloat_B_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateStandingPlayRate
// 0x00C0 (0x00C0 - 0x0000)
struct ALS_AnimBP_C_CalculateStandingPlayRate final
{
public:
	double                                        PlayRate;                                          // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_K2_GetComponentScale_ReturnValue;         // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_1;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_2;        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_3;        // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue_4;        // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateStandingPlayRate) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateStandingPlayRate");
static_assert(sizeof(ALS_AnimBP_C_CalculateStandingPlayRate) == 0x0000C0, "Wrong size on ALS_AnimBP_C_CalculateStandingPlayRate");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, PlayRate) == 0x000000, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::PlayRate' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetCurveValue_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetCurveValue_ReturnValue_1) == 0x000020, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_GetOwningComponent_ReturnValue) == 0x000028, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000030, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_K2_GetComponentScale_ReturnValue) == 0x000038, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_K2_GetComponentScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue_1) == 0x000050, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_X) == 0x000058, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_Y) == 0x000060, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_BreakVector_Z) == 0x000068, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000070, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_1) == 0x000078, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_2) == 0x000080, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Lerp_ReturnValue) == 0x000088, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Lerp_ReturnValue_1) == 0x000090, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_3) == 0x000098, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Divide_DoubleDouble_ReturnValue_4) == 0x0000A0, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Divide_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_FClamp_ReturnValue_2) == 0x0000A8, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x0000B0, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStandingPlayRate, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x0000B8, "Member 'ALS_AnimBP_C_CalculateStandingPlayRate::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateStrideBlend
// 0x0078 (0x0078 - 0x0000)
struct ALS_AnimBP_C_CalculateStrideBlend final
{
public:
	double                                        ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue;                // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_1;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_ReturnValue_2;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast;        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_1;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetFloatValue_InTime_ImplicitCast_2;      // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_A_ImplicitCast;                      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateStrideBlend) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateStrideBlend");
static_assert(sizeof(ALS_AnimBP_C_CalculateStrideBlend) == 0x000078, "Wrong size on ALS_AnimBP_C_CalculateStrideBlend");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_CalculateStrideBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_GetCurveValue_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_GetCurveValue_ReturnValue_1) == 0x00000C, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000010, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_FClamp_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_ReturnValue_1) == 0x000024, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_ReturnValue_2) == 0x000028, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_ReturnValue) == 0x000030, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_ReturnValue_1) == 0x000038, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000040, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000048, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_InTime_ImplicitCast) == 0x000050, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_InTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_B_ImplicitCast) == 0x000058, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_InTime_ImplicitCast_1) == 0x000060, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_InTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_GetFloatValue_InTime_ImplicitCast_2) == 0x000064, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_GetFloatValue_InTime_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_A_ImplicitCast) == 0x000068, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateStrideBlend, CallFunc_Lerp_B_ImplicitCast_1) == 0x000070, "Member 'ALS_AnimBP_C_CalculateStrideBlend::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateVelocityBlend
// 0x0150 (0x0150 - 0x0000)
struct ALS_AnimBP_C_CalculateVelocityBlend final
{
public:
	struct FVelocityBlend                         ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                RelativeDirection;                                 // 0x0010(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Sum;                                               // 0x0028(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                LocRelativeVelocityDir;                            // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Divide_VectorFloat_ReturnValue;           // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Normal_ReturnValue;                       // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue;                       // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FClamp_ReturnValue_1;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_2;                     // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FClamp_ReturnValue_3;                     // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         K2Node_MakeStruct_VelocityBlend;                   // 0x0130(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast; // 0x0140(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast; // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast; // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast; // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateVelocityBlend) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateVelocityBlend");
static_assert(sizeof(ALS_AnimBP_C_CalculateVelocityBlend) == 0x000150, "Wrong size on ALS_AnimBP_C_CalculateVelocityBlend");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, RelativeDirection) == 0x000010, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::RelativeDirection' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, Sum) == 0x000028, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::Sum' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, LocRelativeVelocityDir) == 0x000030, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::LocRelativeVelocityDir' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Divide_VectorFloat_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Divide_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_X) == 0x000060, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Y) == 0x000068, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Z) == 0x000070, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue) == 0x000078, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_1) == 0x000080, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_2) == 0x000088, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Normal_ReturnValue) == 0x000098, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Normal_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x0000B0, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_X_1) == 0x0000B8, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Y_1) == 0x0000C0, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_BreakVector_Z_1) == 0x0000C8, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue) == 0x0000D0, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000D8, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_1) == 0x0000F0, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0000F8, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_3) == 0x000110, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_2) == 0x000118, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_FClamp_ReturnValue_3) == 0x000120, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_FClamp_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, CallFunc_Abs_ReturnValue_4) == 0x000128, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_VelocityBlend) == 0x000130, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_VelocityBlend' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast) == 0x000140, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast) == 0x000144, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast) == 0x000148, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateVelocityBlend, K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast) == 0x00014C, "Member 'ALS_AnimBP_C_CalculateVelocityBlend::K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CalculateWalkRunBlend
// 0x0020 (0x0020 - 0x0000)
struct ALS_AnimBP_C_CalculateWalkRunBlend final
{
public:
	double                                        WalkRunBlend_0;                                    // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        RunSpeed;                                          // 0x0008(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        WalkSpeed;                                         // 0x0010(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CalculateWalkRunBlend) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CalculateWalkRunBlend");
static_assert(sizeof(ALS_AnimBP_C_CalculateWalkRunBlend) == 0x000020, "Wrong size on ALS_AnimBP_C_CalculateWalkRunBlend");
static_assert(offsetof(ALS_AnimBP_C_CalculateWalkRunBlend, WalkRunBlend_0) == 0x000000, "Member 'ALS_AnimBP_C_CalculateWalkRunBlend::WalkRunBlend_0' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateWalkRunBlend, RunSpeed) == 0x000008, "Member 'ALS_AnimBP_C_CalculateWalkRunBlend::RunSpeed' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateWalkRunBlend, WalkSpeed) == 0x000010, "Member 'ALS_AnimBP_C_CalculateWalkRunBlend::WalkSpeed' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CalculateWalkRunBlend, K2Node_SwitchEnum_CmpSuccess) == 0x000018, "Member 'ALS_AnimBP_C_CalculateWalkRunBlend::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CanDynamicTransition
// 0x0018 (0x0018 - 0x0000)
struct ALS_AnimBP_C_CanDynamicTransition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CanDynamicTransition) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CanDynamicTransition");
static_assert(sizeof(ALS_AnimBP_C_CanDynamicTransition) == 0x000018, "Wrong size on ALS_AnimBP_C_CanDynamicTransition");
static_assert(offsetof(ALS_AnimBP_C_CanDynamicTransition, ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_CanDynamicTransition::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanDynamicTransition, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'ALS_AnimBP_C_CanDynamicTransition::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanDynamicTransition, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_CanDynamicTransition::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanDynamicTransition, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'ALS_AnimBP_C_CanDynamicTransition::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CanOverlayTransition
// 0x0004 (0x0004 - 0x0000)
struct ALS_AnimBP_C_CanOverlayTransition final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CanOverlayTransition) == 0x000001, "Wrong alignment on ALS_AnimBP_C_CanOverlayTransition");
static_assert(sizeof(ALS_AnimBP_C_CanOverlayTransition) == 0x000004, "Wrong size on ALS_AnimBP_C_CanOverlayTransition");
static_assert(offsetof(ALS_AnimBP_C_CanOverlayTransition, ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_CanOverlayTransition::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanOverlayTransition, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'ALS_AnimBP_C_CanOverlayTransition::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanOverlayTransition, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000002, "Member 'ALS_AnimBP_C_CanOverlayTransition::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanOverlayTransition, CallFunc_BooleanAND_ReturnValue) == 0x000003, "Member 'ALS_AnimBP_C_CanOverlayTransition::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CanRotateInPlace
// 0x0004 (0x0004 - 0x0000)
struct ALS_AnimBP_C_CanRotateInPlace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CanRotateInPlace) == 0x000001, "Wrong alignment on ALS_AnimBP_C_CanRotateInPlace");
static_assert(sizeof(ALS_AnimBP_C_CanRotateInPlace) == 0x000004, "Wrong size on ALS_AnimBP_C_CanRotateInPlace");
static_assert(offsetof(ALS_AnimBP_C_CanRotateInPlace, ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_CanRotateInPlace::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanRotateInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'ALS_AnimBP_C_CanRotateInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanRotateInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000002, "Member 'ALS_AnimBP_C_CanRotateInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanRotateInPlace, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'ALS_AnimBP_C_CanRotateInPlace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.CanTurnInPlace
// 0x0018 (0x0018 - 0x0000)
struct ALS_AnimBP_C_CanTurnInPlace final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_CanTurnInPlace) == 0x000008, "Wrong alignment on ALS_AnimBP_C_CanTurnInPlace");
static_assert(sizeof(ALS_AnimBP_C_CanTurnInPlace) == 0x000018, "Wrong size on ALS_AnimBP_C_CanTurnInPlace");
static_assert(offsetof(ALS_AnimBP_C_CanTurnInPlace, ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_CanTurnInPlace::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanTurnInPlace, CallFunc_GetCurveValue_ReturnValue) == 0x000004, "Member 'ALS_AnimBP_C_CanTurnInPlace::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanTurnInPlace, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_CanTurnInPlace::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanTurnInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000009, "Member 'ALS_AnimBP_C_CanTurnInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanTurnInPlace, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x00000A, "Member 'ALS_AnimBP_C_CanTurnInPlace::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanTurnInPlace, CallFunc_BooleanAND_ReturnValue) == 0x00000B, "Member 'ALS_AnimBP_C_CanTurnInPlace::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanTurnInPlace, CallFunc_BooleanAND_ReturnValue_1) == 0x00000C, "Member 'ALS_AnimBP_C_CanTurnInPlace::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_CanTurnInPlace, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000010, "Member 'ALS_AnimBP_C_CanTurnInPlace::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.DynamicTransitionCheck
// 0x0068 (0x0068 - 0x0000)
struct ALS_AnimBP_C_DynamicTransitionCheck final
{
public:
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams;            // 0x0000(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue; // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_1;          // 0x0028(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue_1;         // 0x0048(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1; // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_DynamicTransitionCheck) == 0x000008, "Wrong alignment on ALS_AnimBP_C_DynamicTransitionCheck");
static_assert(sizeof(ALS_AnimBP_C_DynamicTransitionCheck) == 0x000068, "Wrong size on ALS_AnimBP_C_DynamicTransitionCheck");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, K2Node_MakeStruct_DynamicMontageParams) == 0x000000, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::K2Node_MakeStruct_DynamicMontageParams' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_GetOwningComponent_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, K2Node_MakeStruct_DynamicMontageParams_1) == 0x000028, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::K2Node_MakeStruct_DynamicMontageParams_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000040, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_GetOwningComponent_ReturnValue_1) == 0x000048, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_GetOwningComponent_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1) == 0x000050, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_K2_DistanceBetweenTwoSocketsAndMapRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000054, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000058, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DynamicTransitionCheck, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x000060, "Member 'ALS_AnimBP_C_DynamicTransitionCheck::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.ExecuteUbergraph_ALS_AnimBP
// 0x0B78 (0x0B78 - 0x0000)
struct ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_1;        // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_2;        // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_3;        // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_1;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_4;        // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable;                              // 0x0020(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_5;        // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      Temp_object_Variable_1;                            // 0x0038(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_6;        // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_7;        // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_8;        // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_2;                  // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_9;        // 0x004A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_10;       // 0x004B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_11;       // 0x004C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D[0x3];                                       // 0x004D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue; // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue;      // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_1;    // 0x0064(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_65[0x3];                                       // 0x0065(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2; // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue;     // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_2;    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_3;    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_72[0x2];                                       // 0x0072(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue; // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_1;   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x007C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue;        // 0x007D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x007E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F[0x1];                                       // 0x007F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1; // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3; // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_4;    // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_1;                 // 0x008A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_8B[0x1];                                       // 0x008B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4; // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_5;    // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_91[0x3];                                       // 0x0091(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2; // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_2;       // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x009D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_2;                 // 0x009E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_12;       // 0x009F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_3;                 // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5; // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_5;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_6;    // 0x00AC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_7;    // 0x00AD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_13;       // 0x00AE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_14;       // 0x00AF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_3;                  // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1[0x3];                                       // 0x00B1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_2;   // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_8;    // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_15;       // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_4;                 // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_16;       // 0x00BB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_4;                  // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceMachineWeight_ReturnValue_3;   // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_1;      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_5;                 // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3; // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_3;       // 0x00CC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_6;                 // 0x00CD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_CE[0x2];                                       // 0x00CE(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_6;              // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_4;       // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_7;              // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_9;    // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_17;       // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_EA[0x6];                                       // 0x00EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_18;       // 0x00F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_FA[0x2];                                       // 0x00FA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue;       // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_10;   // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_2;      // 0x0101(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable;                 // 0x0102(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0103(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_1;     // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_11;   // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_1;          // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_7;                 // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_2;          // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_3;          // 0x010C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_4;          // 0x010D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_5;          // 0x010E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10F[0x1];                                      // 0x010F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_2;     // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_5;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_12;   // 0x0115(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_116[0x2];                                      // 0x0116(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_3;     // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue_1;                // 0x011C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_13;   // 0x011D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_8;                 // 0x011E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_5;       // 0x011F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_8;              // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_124[0x4];                                      // 0x0124(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_2;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_6;          // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_3;          // 0x0131(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_132[0x2];                                      // 0x0132(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6; // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_6;                  // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_14;   // 0x0139(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_7;                  // 0x013A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_8;                  // 0x013B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_9;              // 0x013C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_15;   // 0x0140(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_141[0x3];                                      // 0x0141(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_10;             // 0x0144(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_19;       // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_4;          // 0x0149(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_14A[0x2];                                      // 0x014A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_11;             // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_12;             // 0x0150(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_6;       // 0x0154(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_155[0x3];                                      // 0x0155(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_3;                        // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2;  // 0x0160(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_161[0x3];                                      // 0x0161(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_13;             // 0x0164(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_4;                        // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_5;          // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_20;       // 0x0171(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_21;       // 0x0172(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_7;          // 0x0173(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_22;       // 0x0174(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_9;                  // 0x0175(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_176[0x2];                                      // 0x0176(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_14;             // 0x0178(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_6;          // 0x017C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_17D[0x3];                                      // 0x017D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_4;     // 0x0180(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_9;                 // 0x0184(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_16;   // 0x0185(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_10;                // 0x0186(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_23;       // 0x0187(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_15;             // 0x0188(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_18C[0x4];                                      // 0x018C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_5;                        // 0x0190(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_7;          // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x3];                                      // 0x0199(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_16;             // 0x019C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_17;   // 0x01A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1A1[0x3];                                      // 0x01A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_17;             // 0x01A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_18;   // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_24;       // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_8;          // 0x01AA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1AB[0x1];                                      // 0x01AB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_18;             // 0x01AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_19;   // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable; // 0x01B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_11;                // 0x01B2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B3[0x1];                                      // 0x01B3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4; // 0x01B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_7;       // 0x01C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_12;                // 0x01C1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1C2[0x6];                                      // 0x01C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue;                        // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_25;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_8;          // 0x01D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D2[0x6];                                      // 0x01D2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue;           // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_9;          // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_2;                // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_8;       // 0x0240(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue_1;                      // 0x0248(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_9;          // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_VSize_ReturnValue_2;                      // 0x0260(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_10;         // 0x0268(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_13;                // 0x0269(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_14;                // 0x026A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_26;       // 0x026B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_27;       // 0x026C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_28;       // 0x026D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_26E[0x2];                                      // 0x026E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_5;     // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_10;                 // 0x0274(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_3;      // 0x0275(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_276[0x2];                                      // 0x0276(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5; // 0x0278(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_27C[0x4];                                      // 0x027C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0280(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0288(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_9;       // 0x0290(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue;           // 0x0291(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_15;                // 0x0292(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_16;                // 0x0293(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_6;     // 0x0294(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_4;      // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_1;         // 0x02B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_17;                // 0x02B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2B2[0x6];                                      // 0x02B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x02B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x02C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_2;         // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x3];                                      // 0x02C9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_7;     // 0x02CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_5;      // 0x02D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2D1[0x7];                                      // 0x02D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_4;                        // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_4;                        // 0x02F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_3;         // 0x02F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_4;         // 0x02F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_18;                // 0x02FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2FB[0x1];                                      // 0x02FB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6; // 0x02FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_8;     // 0x0300(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_10;      // 0x0304(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_DoubleDouble_ReturnValue_6;      // 0x0305(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_306[0x2];                                      // 0x0306(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_5;                        // 0x0308(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_5;                        // 0x0310(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_10;         // 0x0318(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_5;         // 0x0319(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_11;                 // 0x031A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_19;                // 0x031B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_31C[0x4];                                      // 0x031C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_6;                        // 0x0320(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_6;                        // 0x0328(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_InRange_FloatFloat_ReturnValue_6;         // 0x0330(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_29;       // 0x0331(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_332[0x2];                                      // 0x0332(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_19;             // 0x0334(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_12;                 // 0x0338(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_20;   // 0x0339(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_13;                 // 0x033A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_20;                // 0x033B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_9;     // 0x033C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_21;   // 0x0340(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_341[0x3];                                      // 0x0341(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_20;             // 0x0344(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_21;                // 0x0348(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_22;   // 0x0349(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_22;                // 0x034A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_30;       // 0x034B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_23;                // 0x034C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34D[0x3];                                      // 0x034D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_21;             // 0x0350(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_23;   // 0x0354(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_355[0x3];                                      // 0x0355(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_22;             // 0x0358(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_24;                // 0x035C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_11;      // 0x035D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_35E[0x2];                                      // 0x035E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_23;             // 0x0360(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_364[0x4];                                      // 0x0364(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams;            // 0x0368(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_24;   // 0x0380(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_25;                // 0x0381(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_382[0x6];                                      // 0x0382(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_1;          // 0x0388(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_2;          // 0x03A0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_3;          // 0x03B8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_4;          // 0x03D0(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_5;          // 0x03E8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_6;          // 0x0400(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_7;          // 0x0418(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_8;          // 0x0430(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_9;          // 0x0448(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_10;         // 0x0460(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_11;         // 0x0478(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_12;         // 0x0490(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_MakeStruct_DynamicMontageParams_13;         // 0x04A8(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_24;             // 0x04C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4C4[0x4];                                      // 0x04C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue_6;                        // 0x04C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_10;    // 0x04D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_11;         // 0x04D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_25;   // 0x04D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_26;                // 0x04D6(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4D7[0x1];                                      // 0x04D7(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_25;             // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_26;             // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_26;   // 0x04E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_12;         // 0x04E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_27;                // 0x04E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4E3[0x1];                                      // 0x04E3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_27;             // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_27;   // 0x04E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_28;                // 0x04E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_31;       // 0x04EA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_32;       // 0x04EB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_11;         // 0x04EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_33;       // 0x04ED(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_34;       // 0x04EE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_35;       // 0x04EF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_12;         // 0x04F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_13;         // 0x04F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_14;         // 0x04F2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_15;         // 0x04F3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_28;             // 0x04F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_28;   // 0x04F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_16;         // 0x04F9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_17;         // 0x04FA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_18;         // 0x04FB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_19;         // 0x04FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_20;         // 0x04FD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_21;         // 0x04FE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_22;         // 0x04FF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_23;         // 0x0500(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_501[0x3];                                      // 0x0501(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_29;             // 0x0504(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_29;   // 0x0508(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_24;         // 0x0509(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_25;         // 0x050A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_36;       // 0x050B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_37;       // 0x050C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_38;       // 0x050D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_50E[0x2];                                      // 0x050E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceStateWeight_ReturnValue_11;    // 0x0510(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_30;   // 0x0514(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_515[0x3];                                      // 0x0515(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_30;             // 0x0518(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_39;       // 0x051C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_31;   // 0x051D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_29;                // 0x051E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_12;      // 0x051F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_40;       // 0x0520(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_13;         // 0x0521(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_14;                 // 0x0522(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_523[0x5];                                      // 0x0523(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimSequenceBase*                      K2Node_Select_Default;                             // 0x0528(0x0008)(ZeroConstructor, NoDestructor, UObjectWrapper, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_41;       // 0x0530(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_42;       // 0x0531(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_43;       // 0x0532(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_533[0x1];                                      // 0x0533(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0534(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0538(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x053C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_5;            // 0x0540(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_6;            // 0x0548(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_44;       // 0x0550(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_45;       // 0x0551(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_15;                 // 0x0552(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_46;       // 0x0553(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_47;       // 0x0554(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_555[0x3];                                      // 0x0555(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_31;             // 0x0558(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_32;   // 0x055C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55D[0x3];                                      // 0x055D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0560(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0578(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0590(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_3;                // 0x05A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_RandomFloatInRange_ReturnValue_1;         // 0x05B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_4;                // 0x05B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_48;       // 0x05C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C1[0x7];                                      // 0x05C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_5;                // 0x05C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_49;       // 0x05D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5D1[0x7];                                      // 0x05D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x05D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_7;            // 0x05E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_50;       // 0x05E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5E9[0x7];                                      // 0x05E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector_X_2;                          // 0x05F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x05F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0600(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_51;       // 0x0608(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_609[0x3];                                      // 0x0609(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x060C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x0610(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0614(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0618(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_52;       // 0x0620(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_621[0x7];                                      // 0x0621(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0628(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_3;           // 0x0630(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0638(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_53;       // 0x0650(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_651[0x3];                                      // 0x0651(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0654(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0658(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x065C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_32;             // 0x0660(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_664[0x4];                                      // 0x0664(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0668(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue_1;                // 0x0670(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0688(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x06A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x06B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_54;       // 0x06D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_55;       // 0x06D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_56;       // 0x06D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6D3[0x1];                                      // 0x06D3(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_33;             // 0x06D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue_16;                 // 0x06D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_30;                // 0x06D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_31;                // 0x06DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_57;       // 0x06DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_32;                // 0x06DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_58;       // 0x06DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_59;       // 0x06DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_6DF[0x1];                                      // 0x06DF(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_6;                // 0x06E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_7;                // 0x06E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_8;                // 0x06F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x06F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0710(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0728(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0730(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0738(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x0740(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_60;       // 0x0758(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_759[0x3];                                      // 0x0759(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_34;             // 0x075C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_9;                // 0x0760(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_7;                        // 0x0768(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_14;         // 0x0770(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_33;                // 0x0771(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_34;                // 0x0772(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_26;         // 0x0773(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_61;       // 0x0774(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_62;       // 0x0775(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_776[0x2];                                      // 0x0776(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7; // 0x0778(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_13;      // 0x077C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_35;                // 0x077D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x077E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanDynamicTransition_ReturnValue;         // 0x077F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanTurnInPlace_ReturnValue;               // 0x0780(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_27;         // 0x0781(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_782[0x2];                                      // 0x0782(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_35;             // 0x0784(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_63;       // 0x0788(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_14;      // 0x0789(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_78A[0x2];                                      // 0x078A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_36;             // 0x078C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanRotateInPlace_ReturnValue;             // 0x0790(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_791[0x3];                                      // 0x0791(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0794(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8; // 0x0798(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_15;      // 0x079C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_ShouldMoveCheck_Return_Value;             // 0x079D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue_64;       // 0x079E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable;                       // 0x079F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_RandomBool_ReturnValue;                   // 0x07A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7A1[0x7];                                      // 0x07A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_RandomFloatInRange_ReturnValue_2;         // 0x07A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue_28;         // 0x07B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7B1[0x7];                                      // 0x07B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x07B8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBodycam_Interface_C>  K2Node_DynamicCast_AsBodycam_Interface;            // 0x07C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x07D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7D1[0x7];                                      // 0x07D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue_10;               // 0x07D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UWW_RagdollSystem_C*                    CallFunc_GetRagdollSystem_Ragdoll_System;          // 0x07E0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x07E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7E9[0x7];                                      // 0x07E9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x07F0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x07F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_7F9[0x7];                                      // 0x07F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AALS_Base_CharacterBP_C*                K2Node_DynamicCast_AsALS_Base_Character_BP;        // 0x0800(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x0808(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_809[0x7];                                      // 0x0809(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             K2Node_DynamicCast_AsCharacter;                    // 0x0810(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x0818(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0819(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81A[0x6];                                      // 0x081A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FDynamicMontageParams                  K2Node_CustomEvent_Parameters_1;                   // 0x0820(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0838(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_8;            // 0x0840(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EGroundedEntryState                           K2Node_Event_GroundedEntryState;                   // 0x0848(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_1;               // 0x0849(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Has_Been_Initd_Variable_2;               // 0x084A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue;         // 0x084B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_1;       // 0x084C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_2;       // 0x084D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_3;       // 0x084E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_4;       // 0x084F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_5;       // 0x0850(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_1;                     // 0x0851(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_852[0x2];                                      // 0x0852(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_37;             // 0x0854(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_DoubleDouble_ReturnValue_33;   // 0x0858(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue_36;                // 0x0859(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_85A[0x6];                                      // 0x085A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_CustomEvent_ReTriggerDelay;                 // 0x0860(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  K2Node_CustomEvent_Parameters;                     // 0x0868(0x0018)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_15;         // 0x0880(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_881[0x7];                                      // 0x0881(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1; // 0x0888(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	int32                                         K2Node_Event_OverlayOverrideState;                 // 0x0890(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_6;       // 0x0894(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_CanOverlayTransition_ReturnValue_7;       // 0x0895(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_IsClosed_Variable_2;                     // 0x0896(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_897[0x1];                                      // 0x0897(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_StructMemberSet___FloatProperty_2_ImplicitCast; // 0x0898(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_89C[0x4];                                      // 0x089C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast; // 0x08A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast;         // 0x08A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1; // 0x08B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_1;       // 0x08B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast;   // 0x08C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1; // 0x08C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2; // 0x08D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3; // 0x08D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x08E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast;     // 0x08E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_1;    // 0x08F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4; // 0x08F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5; // 0x0900(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_2;    // 0x0908(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_2;       // 0x0910(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6; // 0x0918(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7; // 0x0920(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8; // 0x0928(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1;   // 0x0930(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_3;    // 0x0938(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast;         // 0x0940(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_944[0x4];                                      // 0x0944(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_4;    // 0x0948(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9; // 0x0950(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet_Alpha_ImplicitCast_1;       // 0x0958(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_95C[0x4];                                      // 0x095C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10; // 0x0960(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11; // 0x0968(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12; // 0x0970(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13; // 0x0978(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x0980(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14; // 0x0988(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15; // 0x0990(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_3;       // 0x0998(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_5;    // 0x09A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x09A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_2;                     // 0x09B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_4;       // 0x09B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16; // 0x09C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_3;                     // 0x09C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17; // 0x09D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18; // 0x09D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19; // 0x09E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_6;    // 0x09E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_94_ImplicitCast; // 0x09F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast;              // 0x09F4(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_1;            // 0x09F8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_97_ImplicitCast; // 0x09FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_101_ImplicitCast; // 0x0A00(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_99_ImplicitCast; // 0x0A04(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_2;            // 0x0A08(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_3;            // 0x0A0C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_5;       // 0x0A10(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2;   // 0x0A18(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_7;    // 0x0A20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3;   // 0x0A28(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4;   // 0x0A30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_8;    // 0x0A38(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5;   // 0x0A40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20; // 0x0A48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21; // 0x0A50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22; // 0x0A58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23; // 0x0A60(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_9;    // 0x0A68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24; // 0x0A70(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_4;                     // 0x0A78(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25; // 0x0A80(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26; // 0x0A88(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Less_DoubleDouble_A_ImplicitCast_6;       // 0x0A90(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27; // 0x0A98(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28; // 0x0AA0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_29; // 0x0AA8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_30; // 0x0AB0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_31; // 0x0AB8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x0AC0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_1;     // 0x0AC8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0AD0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AD4[0x4];                                      // 0x0AD4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast_2;     // 0x0AD8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_32; // 0x0AE0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_4;            // 0x0AE8(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_5;            // 0x0AEC(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_6;            // 0x0AF0(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_AF4[0x4];                                      // 0x0AF4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0AF8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_1;        // 0x0B00(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast_2;        // 0x0B08(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x0B10(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x0B14(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast_1;          // 0x0B18(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B1C[0x4];                                      // 0x0B1C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0B20(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast_1;         // 0x0B28(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_7;            // 0x0B2C(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_A_ImplicitCast_5;                     // 0x0B30(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Array_Set_Item_ImplicitCast_8;            // 0x0B38(0x0004)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B3C[0x4];                                      // 0x0B3C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_10;   // 0x0B40(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_11;   // 0x0B48(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_DeltaTimeX_ImplicitCast;        // 0x0B50(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast_12;   // 0x0B58(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast;              // 0x0B60(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_StructMemberSet___FloatProperty_7_ImplicitCast; // 0x0B64(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_33; // 0x0B68(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_Delay_Duration_ImplicitCast_1;            // 0x0B70(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP) == 0x000008, "Wrong alignment on ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP");
static_assert(sizeof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP) == 0x000B78, "Wrong size on ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, EntryPoint) == 0x000000, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::EntryPoint' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000004, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue) == 0x000010, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_1) == 0x000014, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000015, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_2) == 0x000016, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_3) == 0x000017, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_IsLocallyControlled_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_1) == 0x00001A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_4) == 0x00001B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_object_Variable) == 0x000020, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_5) == 0x000028, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_1) == 0x00002C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000030, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_object_Variable_1) == 0x000038, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_object_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_2) == 0x000040, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000044, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_6) == 0x000045, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_bool_Variable) == 0x000046, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_7) == 0x000047, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_8) == 0x000048, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_2) == 0x000049, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_9) == 0x00004A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_10) == 0x00004B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_11) == 0x00004C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_3) == 0x000050, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000054, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue) == 0x00005C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1) == 0x000060, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_1) == 0x000064, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2) == 0x000068, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue) == 0x00006C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_2) == 0x000070, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_3) == 0x000071, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue) == 0x000074, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_1) == 0x000078, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00007C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue) == 0x00007D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue) == 0x00007E, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1) == 0x000080, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3) == 0x000084, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000088, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_4) == 0x000089, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_1) == 0x00008A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4) == 0x00008C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_5) == 0x000090, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2) == 0x000094, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_4) == 0x000098, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_2) == 0x00009C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x00009D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_2) == 0x00009E, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_12) == 0x00009F, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_3) == 0x0000A0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5) == 0x0000A4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_5) == 0x0000A8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_6) == 0x0000AC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_7) == 0x0000AD, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_13) == 0x0000AE, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_14) == 0x0000AF, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_3) == 0x0000B0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_2) == 0x0000B4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_8) == 0x0000B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_15) == 0x0000B9, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_4) == 0x0000BA, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_16) == 0x0000BB, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_4) == 0x0000BC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceMachineWeight_ReturnValue_3) == 0x0000C0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceMachineWeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_1) == 0x0000C4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_5) == 0x0000C5, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3) == 0x0000C8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_3) == 0x0000CC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_6) == 0x0000CD, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_ReturnValue) == 0x0000D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x0000D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_6) == 0x0000DC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_4) == 0x0000E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_7) == 0x0000E4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_9) == 0x0000E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_17) == 0x0000E9, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_ReturnValue_1) == 0x0000F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_IsValid_ReturnValue) == 0x0000F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_18) == 0x0000F9, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue) == 0x0000FC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_10) == 0x000100, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_2) == 0x000101, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable) == 0x000102, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Not_PreBool_ReturnValue) == 0x000103, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_1) == 0x000104, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_11) == 0x000108, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_1) == 0x000109, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_7) == 0x00010A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_2) == 0x00010B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_3) == 0x00010C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_4) == 0x00010D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_5) == 0x00010E, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_2) == 0x000110, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_5) == 0x000114, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_12) == 0x000115, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_3) == 0x000118, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Not_PreBool_ReturnValue_1) == 0x00011C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Not_PreBool_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_13) == 0x00011D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_8) == 0x00011E, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_5) == 0x00011F, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_8) == 0x000120, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_ReturnValue_2) == 0x000128, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_6) == 0x000130, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_3) == 0x000131, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6) == 0x000134, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetRelevantAnimTimeRemaining_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_6) == 0x000138, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_14) == 0x000139, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_7) == 0x00013A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_8) == 0x00013B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_9) == 0x00013C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_15) == 0x000140, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_10) == 0x000144, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_19) == 0x000148, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_4) == 0x000149, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_11) == 0x00014C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_12) == 0x000150, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_6) == 0x000154, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_ReturnValue_3) == 0x000158, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2) == 0x000160, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_13) == 0x000164, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_ReturnValue_4) == 0x000168, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_5) == 0x000170, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_20) == 0x000171, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_21) == 0x000172, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_7) == 0x000173, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_22) == 0x000174, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_9) == 0x000175, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_14) == 0x000178, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_6) == 0x00017C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_4) == 0x000180, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_9) == 0x000184, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_16) == 0x000185, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_10) == 0x000186, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_23) == 0x000187, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_15) == 0x000188, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_ReturnValue_5) == 0x000190, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_7) == 0x000198, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_16) == 0x00019C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_17) == 0x0001A0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_17) == 0x0001A4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_18) == 0x0001A8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_24) == 0x0001A9, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_8) == 0x0001AA, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_18) == 0x0001AC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_19) == 0x0001B0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable) == 0x0001B1, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_bool_Whether_the_gate_is_currently_open_or_close_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_11) == 0x0001B2, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4) == 0x0001B4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_1) == 0x0001B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_7) == 0x0001C0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_12) == 0x0001C1, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_VSize_ReturnValue) == 0x0001C8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_25) == 0x0001D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_8) == 0x0001D1, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_RandomFloatInRange_ReturnValue) == 0x0001D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_9) == 0x0001E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_2) == 0x0001E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_X) == 0x0001F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_Y) == 0x0001F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_Z) == 0x000200, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_X_1) == 0x000208, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_Y_1) == 0x000210, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_Z_1) == 0x000218, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue) == 0x000220, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000228, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000230, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000238, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_8) == 0x000240, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_VSize_ReturnValue_1) == 0x000248, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_VSize_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000250, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_9) == 0x000258, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_VSize_ReturnValue_2) == 0x000260, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_VSize_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_10) == 0x000268, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_13) == 0x000269, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_14) == 0x00026A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_26) == 0x00026B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_27) == 0x00026C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_28) == 0x00026D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_5) == 0x000270, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_10) == 0x000274, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_3) == 0x000275, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5) == 0x000278, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_X) == 0x000280, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_Y) == 0x000288, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_9) == 0x000290, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue) == 0x000291, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_15) == 0x000292, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_16) == 0x000293, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_6) == 0x000294, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_4) == 0x000298, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_X_1) == 0x0002A0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_Y_1) == 0x0002A8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_1) == 0x0002B0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_17) == 0x0002B1, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_X_2) == 0x0002B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_Y_2) == 0x0002C0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_2) == 0x0002C8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_7) == 0x0002CC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_5) == 0x0002D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_X_3) == 0x0002D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_Y_3) == 0x0002E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_X_4) == 0x0002E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_X_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_Y_4) == 0x0002F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_Y_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_3) == 0x0002F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_4) == 0x0002F9, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_18) == 0x0002FA, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6) == 0x0002FC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_8) == 0x000300, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_10) == 0x000304, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_ReturnValue_6) == 0x000305, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_X_5) == 0x000308, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_X_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_Y_5) == 0x000310, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_Y_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_10) == 0x000318, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_5) == 0x000319, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_11) == 0x00031A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_19) == 0x00031B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_X_6) == 0x000320, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_X_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector2D_Y_6) == 0x000328, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector2D_Y_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_InRange_FloatFloat_ReturnValue_6) == 0x000330, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_InRange_FloatFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_29) == 0x000331, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_19) == 0x000334, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_12) == 0x000338, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_20) == 0x000339, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_13) == 0x00033A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_20) == 0x00033B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_9) == 0x00033C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_21) == 0x000340, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_20) == 0x000344, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_21) == 0x000348, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_22) == 0x000349, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_22) == 0x00034A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_30) == 0x00034B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_23) == 0x00034C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_21) == 0x000350, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_23) == 0x000354, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_22) == 0x000358, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_24) == 0x00035C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_11) == 0x00035D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_23) == 0x000360, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams) == 0x000368, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_24) == 0x000380, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_25) == 0x000381, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_1) == 0x000388, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_2) == 0x0003A0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_3) == 0x0003B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_4) == 0x0003D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_5) == 0x0003E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_6) == 0x000400, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_7) == 0x000418, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_8) == 0x000430, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_9) == 0x000448, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_10) == 0x000460, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_11) == 0x000478, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_12) == 0x000490, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_MakeStruct_DynamicMontageParams_13) == 0x0004A8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_MakeStruct_DynamicMontageParams_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_24) == 0x0004C0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_ReturnValue_6) == 0x0004C8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_10) == 0x0004D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_11) == 0x0004D4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_25) == 0x0004D5, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_26) == 0x0004D6, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_25) == 0x0004D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_26) == 0x0004DC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_26) == 0x0004E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_12) == 0x0004E1, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_27) == 0x0004E2, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_27) == 0x0004E4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_27) == 0x0004E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_28) == 0x0004E9, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_31) == 0x0004EA, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_32) == 0x0004EB, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_11) == 0x0004EC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_33) == 0x0004ED, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_34) == 0x0004EE, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_35) == 0x0004EF, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_12) == 0x0004F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_13) == 0x0004F1, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_14) == 0x0004F2, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_15) == 0x0004F3, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_28) == 0x0004F4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_28) == 0x0004F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_16) == 0x0004F9, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_17) == 0x0004FA, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_17' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_18) == 0x0004FB, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_18' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_19) == 0x0004FC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_19' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_20) == 0x0004FD, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_20' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_21) == 0x0004FE, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_21' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_22) == 0x0004FF, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_22' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_23) == 0x000500, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_23' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_29) == 0x000504, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_29) == 0x000508, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_24) == 0x000509, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_24' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_25) == 0x00050A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_25' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_36) == 0x00050B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_37) == 0x00050C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_38) == 0x00050D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_38' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceStateWeight_ReturnValue_11) == 0x000510, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceStateWeight_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_30) == 0x000514, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_30) == 0x000518, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_39) == 0x00051C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_39' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_31) == 0x00051D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_29) == 0x00051E, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_29' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_12) == 0x00051F, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_40) == 0x000520, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_40' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_13) == 0x000521, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_14) == 0x000522, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_Select_Default) == 0x000528, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_41) == 0x000530, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_41' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_42) == 0x000531, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_42' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_43) == 0x000532, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_43' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Roll) == 0x000534, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Pitch) == 0x000538, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Yaw) == 0x00053C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_5) == 0x000540, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_6) == 0x000548, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_44) == 0x000550, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_44' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_45) == 0x000551, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_45' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_15) == 0x000552, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_46) == 0x000553, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_46' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_47) == 0x000554, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_47' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_31) == 0x000558, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_32) == 0x00055C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakTransform_Location) == 0x000560, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakTransform_Rotation) == 0x000578, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakTransform_Scale) == 0x000590, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_3) == 0x0005A8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_RandomFloatInRange_ReturnValue_1) == 0x0005B0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_RandomFloatInRange_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_4) == 0x0005B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_48) == 0x0005C0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_48' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_5) == 0x0005C8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_49) == 0x0005D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_49' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0005D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_7) == 0x0005E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_50) == 0x0005E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_50' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_X_2) == 0x0005F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_Y_2) == 0x0005F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_Z_2) == 0x000600, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_51) == 0x000608, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_51' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Roll_1) == 0x00060C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Pitch_1) == 0x000610, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Yaw_1) == 0x000614, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000618, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_52) == 0x000620, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_52' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000628, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Add_DoubleDouble_ReturnValue_3) == 0x000630, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Add_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeRotator_ReturnValue) == 0x000638, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_53) == 0x000650, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_53' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Roll_2) == 0x000654, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Pitch_2) == 0x000658, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakRotator_Yaw_2) == 0x00065C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_32) == 0x000660, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000668, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeRotator_ReturnValue_1) == 0x000670, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakTransform_Location_1) == 0x000688, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakTransform_Rotation_1) == 0x0006A0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakTransform_Scale_1) == 0x0006B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_54) == 0x0006D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_54' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_55) == 0x0006D1, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_55' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_56) == 0x0006D2, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_56' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_33) == 0x0006D4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanOR_ReturnValue_16) == 0x0006D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanOR_ReturnValue_16' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_30) == 0x0006D9, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_30' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_31) == 0x0006DA, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_31' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_57) == 0x0006DB, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_57' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_32) == 0x0006DC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_32' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_58) == 0x0006DD, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_58' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_59) == 0x0006DE, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_59' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_6) == 0x0006E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_7) == 0x0006E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_8) == 0x0006F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeVector_ReturnValue) == 0x0006F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeVector_ReturnValue_1) == 0x000710, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_X_3) == 0x000728, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_Y_3) == 0x000730, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BreakVector_Z_3) == 0x000738, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeVector_ReturnValue_2) == 0x000740, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_60) == 0x000758, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_60' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_34) == 0x00075C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_9) == 0x000760, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_ReturnValue_7) == 0x000768, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_14) == 0x000770, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_33) == 0x000771, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_34) == 0x000772, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_34' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_26) == 0x000773, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_26' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_61) == 0x000774, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_61' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_62) == 0x000775, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_62' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7) == 0x000778, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_13) == 0x00077C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_35) == 0x00077D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_SwitchEnum_CmpSuccess) == 0x00077E, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanDynamicTransition_ReturnValue) == 0x00077F, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanDynamicTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanTurnInPlace_ReturnValue) == 0x000780, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanTurnInPlace_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_27) == 0x000781, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_27' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_35) == 0x000784, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_35' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_63) == 0x000788, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_63' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_14) == 0x000789, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_36) == 0x00078C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanRotateInPlace_ReturnValue) == 0x000790, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanRotateInPlace_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_Event_DeltaTimeX) == 0x000794, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8) == 0x000798, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetInstanceCurrentStateElapsedTime_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_ReturnValue_15) == 0x00079C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_ShouldMoveCheck_Return_Value) == 0x00079D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_ShouldMoveCheck_Return_Value' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_ByteByte_ReturnValue_64) == 0x00079E, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_ByteByte_ReturnValue_64' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_bool_IsClosed_Variable) == 0x00079F, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_RandomBool_ReturnValue) == 0x0007A0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_RandomBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_RandomFloatInRange_ReturnValue_2) == 0x0007A8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_RandomFloatInRange_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_ByteByte_ReturnValue_28) == 0x0007B0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_ByteByte_ReturnValue_28' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_TryGetPawnOwner_ReturnValue) == 0x0007B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_DynamicCast_AsBodycam_Interface) == 0x0007C0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_DynamicCast_AsBodycam_Interface' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_DynamicCast_bSuccess) == 0x0007D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_SelectFloat_ReturnValue_10) == 0x0007D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_SelectFloat_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetRagdollSystem_Ragdoll_System) == 0x0007E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetRagdollSystem_Ragdoll_System' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_IsValid_ReturnValue_1) == 0x0007E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x0007F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_DynamicCast_bSuccess_1) == 0x0007F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_DynamicCast_AsALS_Base_Character_BP) == 0x000800, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_DynamicCast_AsALS_Base_Character_BP' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_DynamicCast_bSuccess_2) == 0x000808, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_DynamicCast_AsCharacter) == 0x000810, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_DynamicCast_AsCharacter' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_DynamicCast_bSuccess_3) == 0x000818, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_IsValid_ReturnValue_2) == 0x000819, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_CustomEvent_Parameters_1) == 0x000820, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_CustomEvent_Parameters_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000838, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_ReturnValue_8) == 0x000840, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_Event_GroundedEntryState) == 0x000848, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_Event_GroundedEntryState' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable_1) == 0x000849, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_bool_Has_Been_Initd_Variable_2) == 0x00084A, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_bool_Has_Been_Initd_Variable_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue) == 0x00084B, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_1) == 0x00084C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_2) == 0x00084D, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_3) == 0x00084E, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_4) == 0x00084F, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_5) == 0x000850, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_bool_IsClosed_Variable_1) == 0x000851, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_bool_IsClosed_Variable_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GetCurveValue_ReturnValue_37) == 0x000854, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GetCurveValue_ReturnValue_37' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_ReturnValue_33) == 0x000858, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_ReturnValue_33' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_BooleanAND_ReturnValue_36) == 0x000859, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_BooleanAND_ReturnValue_36' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_CustomEvent_ReTriggerDelay) == 0x000860, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_CustomEvent_ReTriggerDelay' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_CustomEvent_Parameters) == 0x000868, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_CustomEvent_Parameters' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_ReturnValue_15) == 0x000880, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_ReturnValue_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1) == 0x000888, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_Event_OverlayOverrideState) == 0x000890, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_Event_OverlayOverrideState' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_6) == 0x000894, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_CanOverlayTransition_ReturnValue_7) == 0x000895, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_CanOverlayTransition_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, Temp_bool_IsClosed_Variable_2) == 0x000896, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::Temp_bool_IsClosed_Variable_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_2_ImplicitCast) == 0x000898, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_2_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast) == 0x0008A0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast) == 0x0008A8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1) == 0x0008B0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_GreaterEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_1) == 0x0008B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast) == 0x0008C0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1) == 0x0008C8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2) == 0x0008D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3) == 0x0008D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0008E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast) == 0x0008E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_1) == 0x0008F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4) == 0x0008F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5) == 0x000900, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_2) == 0x000908, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_2) == 0x000910, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6) == 0x000918, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7) == 0x000920, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8) == 0x000928, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1) == 0x000930, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_3) == 0x000938, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_StructMemberSet_Alpha_ImplicitCast) == 0x000940, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_StructMemberSet_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_4) == 0x000948, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9) == 0x000950, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_StructMemberSet_Alpha_ImplicitCast_1) == 0x000958, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_StructMemberSet_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10) == 0x000960, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11) == 0x000968, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12) == 0x000970, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13) == 0x000978, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast) == 0x000980, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14) == 0x000988, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15) == 0x000990, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_15' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_3) == 0x000998, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_5) == 0x0009A0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_1) == 0x0009A8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_2) == 0x0009B0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_4) == 0x0009B8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16) == 0x0009C0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_16' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_3) == 0x0009C8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17) == 0x0009D0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_17' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18) == 0x0009D8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_18' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19) == 0x0009E0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_19' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_6) == 0x0009E8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_94_ImplicitCast) == 0x0009F0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_94_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast) == 0x0009F4, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast_1) == 0x0009F8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_97_ImplicitCast) == 0x0009FC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_97_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_101_ImplicitCast) == 0x000A00, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_101_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_99_ImplicitCast) == 0x000A04, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_99_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast_2) == 0x000A08, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast_3) == 0x000A0C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_5) == 0x000A10, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2) == 0x000A18, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_7) == 0x000A20, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3) == 0x000A28, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4) == 0x000A30, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_8) == 0x000A38, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5) == 0x000A40, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_NotEqual_DoubleDouble_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20) == 0x000A48, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_20' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21) == 0x000A50, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_21' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22) == 0x000A58, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_22' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23) == 0x000A60, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_23' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_9) == 0x000A68, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24) == 0x000A70, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_24' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_4) == 0x000A78, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25) == 0x000A80, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_25' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26) == 0x000A88, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_26' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Less_DoubleDouble_A_ImplicitCast_6) == 0x000A90, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Less_DoubleDouble_A_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27) == 0x000A98, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_27' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28) == 0x000AA0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_28' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_29) == 0x000AA8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_29' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_30) == 0x000AB0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_30' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_31) == 0x000AB8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_31' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x000AC0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_Value_ImplicitCast_1) == 0x000AC8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_Value_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000AD0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MapRangeClamped_Value_ImplicitCast_2) == 0x000AD8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MapRangeClamped_Value_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_32) == 0x000AE0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_32' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast_4) == 0x000AE8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast_5) == 0x000AEC, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast_6) == 0x000AF0, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000AF8, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Add_DoubleDouble_A_ImplicitCast_1) == 0x000B00, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Add_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Add_DoubleDouble_A_ImplicitCast_2) == 0x000B08, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Add_DoubleDouble_A_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x000B10, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x000B14, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeRotator_Roll_ImplicitCast_1) == 0x000B18, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeRotator_Roll_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000B20, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_MakeRotator_Pitch_ImplicitCast_1) == 0x000B28, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_MakeRotator_Pitch_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast_7) == 0x000B2C, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Abs_A_ImplicitCast_5) == 0x000B30, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Abs_A_ImplicitCast_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Array_Set_Item_ImplicitCast_8) == 0x000B38, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Array_Set_Item_ImplicitCast_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_10) == 0x000B40, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_11) == 0x000B48, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_VariableSet_DeltaTimeX_ImplicitCast) == 0x000B50, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_VariableSet_DeltaTimeX_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Greater_DoubleDouble_A_ImplicitCast_12) == 0x000B58, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Greater_DoubleDouble_A_ImplicitCast_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Delay_Duration_ImplicitCast) == 0x000B60, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Delay_Duration_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, K2Node_StructMemberSet___FloatProperty_7_ImplicitCast) == 0x000B64, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::K2Node_StructMemberSet___FloatProperty_7_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_33) == 0x000B68, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_EqualEqual_DoubleDouble_A_ImplicitCast_33' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP, CallFunc_Delay_Duration_ImplicitCast_1) == 0x000B70, "Member 'ALS_AnimBP_C_ExecuteUbergraph_ALS_AnimBP::CallFunc_Delay_Duration_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.Foot IK
// 0x0020 (0x0020 - 0x0000)
struct ALS_AnimBP_C_Foot_IK final
{
public:
	struct FPoseLink                              InPose;                                            // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Foot_IK_0;                                         // 0x0010(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C_Foot_IK) == 0x000008, "Wrong alignment on ALS_AnimBP_C_Foot_IK");
static_assert(sizeof(ALS_AnimBP_C_Foot_IK) == 0x000020, "Wrong size on ALS_AnimBP_C_Foot_IK");
static_assert(offsetof(ALS_AnimBP_C_Foot_IK, InPose) == 0x000000, "Member 'ALS_AnimBP_C_Foot_IK::InPose' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Foot_IK, Foot_IK_0) == 0x000010, "Member 'ALS_AnimBP_C_Foot_IK::Foot_IK_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.GetDebugTraceType
// 0x0038 (0x0038 - 0x0000)
struct ALS_AnimBP_C_GetDebugTraceType final
{
public:
	EDrawDebugTrace                               ShowTraceType;                                     // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               DebugType;                                         // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IALS_Controller_BPI_C> K2Node_DynamicCast_AsALS_Controller_BPI;           // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ACharacter*                             CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter;    // 0x0028(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_DebugView;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowHUD;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowTraces;             // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowDebugShapes;        // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowLayerColors;        // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_Slomo;                  // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo;      // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_GetDebugTraceType) == 0x000008, "Wrong alignment on ALS_AnimBP_C_GetDebugTraceType");
static_assert(sizeof(ALS_AnimBP_C_GetDebugTraceType) == 0x000038, "Wrong size on ALS_AnimBP_C_GetDebugTraceType");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, ShowTraceType) == 0x000000, "Member 'ALS_AnimBP_C_GetDebugTraceType::ShowTraceType' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, DebugType) == 0x000001, "Member 'ALS_AnimBP_C_GetDebugTraceType::DebugType' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_GetPlayerController_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, K2Node_DynamicCast_AsALS_Controller_BPI) == 0x000010, "Member 'ALS_AnimBP_C_GetDebugTraceType::K2Node_DynamicCast_AsALS_Controller_BPI' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ALS_AnimBP_C_GetDebugTraceType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter) == 0x000028, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_DebugFocusCharacter' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_DebugView) == 0x000030, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_DebugView' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowHUD) == 0x000031, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowHUD' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowTraces) == 0x000032, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowTraces' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowDebugShapes) == 0x000033, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowDebugShapes' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowLayerColors) == 0x000034, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowLayerColors' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_Slomo) == 0x000035, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_Slomo' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_GetDebugTraceType, CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo) == 0x000036, "Member 'ALS_AnimBP_C_GetDebugTraceType::CallFunc_BPI_Get_DebugInfo_ShowCharacterInfo' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.InterpLeanAmount
// 0x0068 (0x0068 - 0x0000)
struct ALS_AnimBP_C_InterpLeanAmount final
{
public:
	struct FLeanAmount                            Current;                                           // 0x0000(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            Target;                                            // 0x0008(0x0008)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            ReturnValue;                                       // 0x0020(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_1;          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_InterpLeanAmount) == 0x000008, "Wrong alignment on ALS_AnimBP_C_InterpLeanAmount");
static_assert(sizeof(ALS_AnimBP_C_InterpLeanAmount) == 0x000068, "Wrong size on ALS_AnimBP_C_InterpLeanAmount");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, Current) == 0x000000, "Member 'ALS_AnimBP_C_InterpLeanAmount::Current' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, Target) == 0x000008, "Member 'ALS_AnimBP_C_InterpLeanAmount::Target' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, InterpSpeed) == 0x000010, "Member 'ALS_AnimBP_C_InterpLeanAmount::InterpSpeed' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, DeltaTime) == 0x000018, "Member 'ALS_AnimBP_C_InterpLeanAmount::DeltaTime' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_InterpLeanAmount::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_ReturnValue) == 0x000028, "Member 'ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_ReturnValue_1) == 0x000030, "Member 'ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_LeanAmount) == 0x000038, "Member 'ALS_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000040, "Member 'ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Target_ImplicitCast_1) == 0x000048, "Member 'ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Target_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000050, "Member 'ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000058, "Member 'ALS_AnimBP_C_InterpLeanAmount::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x000060, "Member 'ALS_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpLeanAmount, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x000064, "Member 'ALS_AnimBP_C_InterpLeanAmount::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.InterpVelocityBlend
// 0x00C0 (0x00C0 - 0x0000)
struct ALS_AnimBP_C_InterpVelocityBlend final
{
public:
	struct FVelocityBlend                         Current;                                           // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         Target;                                            // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        InterpSpeed;                                       // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        DeltaTime;                                         // 0x0028(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         ReturnValue;                                       // 0x0030(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         K2Node_MakeStruct_VelocityBlend;                   // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_1;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_2;          // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Target_ImplicitCast_3;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_1;         // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_2;         // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_Current_ImplicitCast_3;         // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast; // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast; // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast; // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast; // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_InterpVelocityBlend) == 0x000008, "Wrong alignment on ALS_AnimBP_C_InterpVelocityBlend");
static_assert(sizeof(ALS_AnimBP_C_InterpVelocityBlend) == 0x0000C0, "Wrong size on ALS_AnimBP_C_InterpVelocityBlend");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, Current) == 0x000000, "Member 'ALS_AnimBP_C_InterpVelocityBlend::Current' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, Target) == 0x000010, "Member 'ALS_AnimBP_C_InterpVelocityBlend::Target' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, InterpSpeed) == 0x000020, "Member 'ALS_AnimBP_C_InterpVelocityBlend::InterpSpeed' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, DeltaTime) == 0x000028, "Member 'ALS_AnimBP_C_InterpVelocityBlend::DeltaTime' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, ReturnValue) == 0x000030, "Member 'ALS_AnimBP_C_InterpVelocityBlend::ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue) == 0x000040, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_1) == 0x000048, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_2) == 0x000050, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_ReturnValue_3) == 0x000058, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_VelocityBlend) == 0x000060, "Member 'ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_VelocityBlend' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast) == 0x000070, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_1) == 0x000078, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_2) == 0x000080, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Target_ImplicitCast_3) == 0x000088, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Target_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast) == 0x000090, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_1) == 0x000098, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_2) == 0x0000A0, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, CallFunc_FInterpTo_Current_ImplicitCast_3) == 0x0000A8, "Member 'ALS_AnimBP_C_InterpVelocityBlend::CallFunc_FInterpTo_Current_ImplicitCast_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast) == 0x0000B0, "Member 'ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_F_3_2154ABAD4BD15DAC904154B63D704219_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast) == 0x0000B4, "Member 'ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_R_9_79E6E09B4A52B442B9FE6DB7192CFBEE_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast) == 0x0000B8, "Member 'ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_L_8_DFEBB8584D28F158D2562CA60EB07B6D_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_InterpVelocityBlend, K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast) == 0x0000BC, "Member 'ALS_AnimBP_C_InterpVelocityBlend::K2Node_MakeStruct_B_5_0A0855774CB13BB3E4B0A6847E7154F6_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.LayerBlending
// 0x0040 (0x0040 - 0x0000)
struct ALS_AnimBP_C_LayerBlending final
{
public:
	struct FPoseLink                              Base_Layer_Input;                                  // 0x0000(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Overlay_Layer_Input;                               // 0x0010(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              Base_Poses_Input;                                  // 0x0020(0x0010)(BlueprintVisible, BlueprintReadOnly, Parm, NoDestructor)
	struct FPoseLink                              LayerBlending_0;                                   // 0x0030(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C_LayerBlending) == 0x000008, "Wrong alignment on ALS_AnimBP_C_LayerBlending");
static_assert(sizeof(ALS_AnimBP_C_LayerBlending) == 0x000040, "Wrong size on ALS_AnimBP_C_LayerBlending");
static_assert(offsetof(ALS_AnimBP_C_LayerBlending, Base_Layer_Input) == 0x000000, "Member 'ALS_AnimBP_C_LayerBlending::Base_Layer_Input' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_LayerBlending, Overlay_Layer_Input) == 0x000010, "Member 'ALS_AnimBP_C_LayerBlending::Overlay_Layer_Input' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_LayerBlending, Base_Poses_Input) == 0x000020, "Member 'ALS_AnimBP_C_LayerBlending::Base_Poses_Input' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_LayerBlending, LayerBlending_0) == 0x000030, "Member 'ALS_AnimBP_C_LayerBlending::LayerBlending_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.OverlayLayer
// 0x0010 (0x0010 - 0x0000)
struct ALS_AnimBP_C_OverlayLayer final
{
public:
	struct FPoseLink                              OverlayLayer_0;                                    // 0x0000(0x0010)(Parm, OutParm, NoDestructor)
};
static_assert(alignof(ALS_AnimBP_C_OverlayLayer) == 0x000008, "Wrong alignment on ALS_AnimBP_C_OverlayLayer");
static_assert(sizeof(ALS_AnimBP_C_OverlayLayer) == 0x000010, "Wrong size on ALS_AnimBP_C_OverlayLayer");
static_assert(offsetof(ALS_AnimBP_C_OverlayLayer, OverlayLayer_0) == 0x000000, "Member 'ALS_AnimBP_C_OverlayLayer::OverlayLayer_0' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.PlaceInFrontOfCamera
// 0x0380 (0x0380 - 0x0000)
struct ALS_AnimBP_C_PlaceInFrontOfCamera final
{
public:
	struct FTransform                             InTransform;                                       // 0x0000(0x0060)(ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             FinalTransform;                                    // 0x0060(0x0060)(Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0160(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x01C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x01C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1CC[0x4];                                      // 0x01CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x01D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class APlayerCameraManager*                   CallFunc_GetPlayerCameraManager_ReturnValue;       // 0x01D8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x01E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x01E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1EC[0x4];                                      // 0x01EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetTransform_ReturnValue;                 // 0x01F0(0x0060)(ConstParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location_1;                // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation_1;                // 0x0280(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale_1;                   // 0x0298(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue_1;              // 0x02B0(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTransform                             CallFunc_ComposeTransforms_ReturnValue;            // 0x0310(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0370(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_PlaceInFrontOfCamera) == 0x000010, "Wrong alignment on ALS_AnimBP_C_PlaceInFrontOfCamera");
static_assert(sizeof(ALS_AnimBP_C_PlaceInFrontOfCamera) == 0x000380, "Wrong size on ALS_AnimBP_C_PlaceInFrontOfCamera");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, InTransform) == 0x000000, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::InTransform' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, FinalTransform) == 0x000060, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::FinalTransform' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakTransform_Location) == 0x0000C0, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakTransform_Rotation) == 0x0000D8, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakTransform_Scale) == 0x0000F0, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakVector_X) == 0x000108, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakVector_Y) == 0x000110, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakVector_Z) == 0x000118, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakVector_X_1) == 0x000120, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakVector_Y_1) == 0x000128, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakVector_Z_1) == 0x000130, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000138, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000140, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_MakeVector_ReturnValue) == 0x000148, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_MakeTransform_ReturnValue) == 0x000160, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakRotator_Roll) == 0x0001C0, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakRotator_Pitch) == 0x0001C4, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakRotator_Yaw) == 0x0001C8, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x0001D0, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_GetPlayerCameraManager_ReturnValue) == 0x0001D8, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_GetPlayerCameraManager_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakRotator_Roll_1) == 0x0001E0, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakRotator_Pitch_1) == 0x0001E4, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakRotator_Yaw_1) == 0x0001E8, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_GetTransform_ReturnValue) == 0x0001F0, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_GetTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_MakeRotator_ReturnValue) == 0x000250, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakTransform_Location_1) == 0x000268, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakTransform_Location_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakTransform_Rotation_1) == 0x000280, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakTransform_Rotation_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_BreakTransform_Scale_1) == 0x000298, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_BreakTransform_Scale_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_MakeTransform_ReturnValue_1) == 0x0002B0, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_MakeTransform_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_ComposeTransforms_ReturnValue) == 0x000310, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_ComposeTransforms_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000370, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlaceInFrontOfCamera, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000378, "Member 'ALS_AnimBP_C_PlaceInFrontOfCamera::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.PlayDynamicTransition
// 0x0020 (0x0020 - 0x0000)
struct ALS_AnimBP_C_PlayDynamicTransition final
{
public:
	double                                        ReTriggerDelay;                                    // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FDynamicMontageParams                  Parameters;                                        // 0x0008(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_PlayDynamicTransition) == 0x000008, "Wrong alignment on ALS_AnimBP_C_PlayDynamicTransition");
static_assert(sizeof(ALS_AnimBP_C_PlayDynamicTransition) == 0x000020, "Wrong size on ALS_AnimBP_C_PlayDynamicTransition");
static_assert(offsetof(ALS_AnimBP_C_PlayDynamicTransition, ReTriggerDelay) == 0x000000, "Member 'ALS_AnimBP_C_PlayDynamicTransition::ReTriggerDelay' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_PlayDynamicTransition, Parameters) == 0x000008, "Member 'ALS_AnimBP_C_PlayDynamicTransition::Parameters' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.PlayTransition
// 0x0018 (0x0018 - 0x0000)
struct ALS_AnimBP_C_PlayTransition final
{
public:
	struct FDynamicMontageParams                  Parameters;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_PlayTransition) == 0x000008, "Wrong alignment on ALS_AnimBP_C_PlayTransition");
static_assert(sizeof(ALS_AnimBP_C_PlayTransition) == 0x000018, "Wrong size on ALS_AnimBP_C_PlayTransition");
static_assert(offsetof(ALS_AnimBP_C_PlayTransition, Parameters) == 0x000000, "Member 'ALS_AnimBP_C_PlayTransition::Parameters' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.ResetIKOffsets
// 0x0070 (0x0070 - 0x0000)
struct ALS_AnimBP_C_ResetIKOffsets final
{
public:
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue_1;                  // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast_1;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_ResetIKOffsets) == 0x000008, "Wrong alignment on ALS_AnimBP_C_ResetIKOffsets");
static_assert(sizeof(ALS_AnimBP_C_ResetIKOffsets) == 0x000070, "Wrong size on ALS_AnimBP_C_ResetIKOffsets");
static_assert(offsetof(ALS_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_ReturnValue_1) == 0x000030, "Member 'ALS_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_ReturnValue_1) == 0x000048, "Member 'ALS_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x000060, "Member 'ALS_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000064, "Member 'ALS_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ResetIKOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x000068, "Member 'ALS_AnimBP_C_ResetIKOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ResetIKOffsets, CallFunc_RInterpTo_DeltaTime_ImplicitCast_1) == 0x00006C, "Member 'ALS_AnimBP_C_ResetIKOffsets::CallFunc_RInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.RotateInPlaceCheck
// 0x0058 (0x0058 - 0x0000)
struct ALS_AnimBP_C_RotateInPlaceCheck final
{
public:
	struct FRotateInPlace_Asset                   TargetRotateAsset;                                 // 0x0000(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X;                          // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_4A[0x6];                                       // 0x004A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_RotateInPlaceCheck) == 0x000008, "Wrong alignment on ALS_AnimBP_C_RotateInPlaceCheck");
static_assert(sizeof(ALS_AnimBP_C_RotateInPlaceCheck) == 0x000058, "Wrong size on ALS_AnimBP_C_RotateInPlaceCheck");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, TargetRotateAsset) == 0x000000, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::TargetRotateAsset' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BooleanOR_ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_X) == 0x000028, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_Y) == 0x000030, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_X_1) == 0x000038, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_BreakVector2D_Y_1) == 0x000040, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000049, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_RotateInPlaceCheck, CallFunc_MapRangeClamped_ReturnValue) == 0x000050, "Member 'ALS_AnimBP_C_RotateInPlaceCheck::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.SetFootLocking
// 0x0140 (0x0140 - 0x0000)
struct ALS_AnimBP_C_SetFootLocking final
{
public:
	class FName                                   Enable_FootIK_Curve;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   FootLockCurve;                                     // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IKFootBone;                                        // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CurrentFootLockAlpha;                              // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentFootLockLocation;                           // 0x0020(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentFootLockRotation;                           // 0x0038(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	double                                        FootLockCurveValue;                                // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x005D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x005E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5F[0x1];                                       // 0x005F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0060(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_68[0x8];                                       // 0x0068(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x0070(0x0060)(IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x00D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x00E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0100(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue;    // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1;  // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0121(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_HasAuthority_ReturnValue;                 // 0x0122(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_123[0x5];                                      // 0x0123(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_FootLockCurveValue_ImplicitCast; // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_SetFootLocking) == 0x000010, "Wrong alignment on ALS_AnimBP_C_SetFootLocking");
static_assert(sizeof(ALS_AnimBP_C_SetFootLocking) == 0x000140, "Wrong size on ALS_AnimBP_C_SetFootLocking");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, Enable_FootIK_Curve) == 0x000000, "Member 'ALS_AnimBP_C_SetFootLocking::Enable_FootIK_Curve' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, FootLockCurve) == 0x000008, "Member 'ALS_AnimBP_C_SetFootLocking::FootLockCurve' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, IKFootBone) == 0x000010, "Member 'ALS_AnimBP_C_SetFootLocking::IKFootBone' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CurrentFootLockAlpha) == 0x000018, "Member 'ALS_AnimBP_C_SetFootLocking::CurrentFootLockAlpha' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CurrentFootLockLocation) == 0x000020, "Member 'ALS_AnimBP_C_SetFootLocking::CurrentFootLockLocation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CurrentFootLockRotation) == 0x000038, "Member 'ALS_AnimBP_C_SetFootLocking::CurrentFootLockRotation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, FootLockCurveValue) == 0x000050, "Member 'ALS_AnimBP_C_SetFootLocking::FootLockCurveValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_GetCurveValue_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x00005C, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_IsLocallyControlled_ReturnValue) == 0x00005D, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x00005E, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_GetOwningComponent_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_GetSocketTransform_ReturnValue) == 0x000070, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Location) == 0x0000D0, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Rotation) == 0x0000E8, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_BreakTransform_Scale) == 0x000100, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_GreaterEqual_DoubleDouble_ReturnValue) == 0x000118, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_GreaterEqual_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000119, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_GetCurveValue_ReturnValue_1) == 0x00011C, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1) == 0x000120, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_GreaterEqual_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_BooleanOR_ReturnValue) == 0x000121, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_HasAuthority_ReturnValue) == 0x000122, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_HasAuthority_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x000128, "Member 'ALS_AnimBP_C_SetFootLocking::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLocking, K2Node_VariableSet_FootLockCurveValue_ImplicitCast) == 0x000130, "Member 'ALS_AnimBP_C_SetFootLocking::K2Node_VariableSet_FootLockCurveValue_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.SetFootLockOffsets
// 0x0160 (0x0160 - 0x0000)
struct ALS_AnimBP_C_SetFootLockOffsets final
{
public:
	struct FVector                                LocalLocation;                                     // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               LocalRotation;                                     // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FVector                                LocationDifference;                                // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               RotationDifference;                                // 0x0048(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0060(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_84[0x4];                                       // 0x0084(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0088(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0090(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_RotateAngleAxis_ReturnValue;              // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_LessLess_VectorRotator_ReturnValue;       // 0x00F8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_GetLastUpdateRotation_ReturnValue;        // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsMovingOnGround_ReturnValue;             // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_SetFootLockOffsets) == 0x000008, "Wrong alignment on ALS_AnimBP_C_SetFootLockOffsets");
static_assert(sizeof(ALS_AnimBP_C_SetFootLockOffsets) == 0x000160, "Wrong size on ALS_AnimBP_C_SetFootLockOffsets");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, LocalLocation) == 0x000000, "Member 'ALS_AnimBP_C_SetFootLockOffsets::LocalLocation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, LocalRotation) == 0x000018, "Member 'ALS_AnimBP_C_SetFootLockOffsets::LocalRotation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, LocationDifference) == 0x000030, "Member 'ALS_AnimBP_C_SetFootLockOffsets::LocationDifference' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, RotationDifference) == 0x000048, "Member 'ALS_AnimBP_C_SetFootLockOffsets::RotationDifference' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Roll) == 0x000078, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Pitch) == 0x00007C, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_BreakRotator_Yaw) == 0x000080, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_GetOwningComponent_ReturnValue) == 0x000088, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000090, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x0000A8, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_RotateAngleAxis_ReturnValue) == 0x0000C0, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_RotateAngleAxis_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x0000D8, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x0000E0, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_LessLess_VectorRotator_ReturnValue) == 0x0000F8, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_LessLess_VectorRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_GetLastUpdateRotation_ReturnValue) == 0x000110, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_GetLastUpdateRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000128, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x000140, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootLockOffsets, CallFunc_IsMovingOnGround_ReturnValue) == 0x000158, "Member 'ALS_AnimBP_C_SetFootLockOffsets::CallFunc_IsMovingOnGround_ReturnValue' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.SetFootOffsets
// 0x04F0 (0x04F0 - 0x0000)
struct ALS_AnimBP_C_SetFootOffsets final
{
public:
	class FName                                   Enable_FootIK_Curve;                               // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   IKFootBone;                                        // 0x0008(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   RootBone;                                          // 0x0010(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocationTarget;                             // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CurrentLocationOffset;                             // 0x0030(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CurrentRotationOffset;                             // 0x0048(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
	struct FRotator                               TargetRotationOffset;                              // 0x0060(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                ImpactNormal;                                      // 0x0078(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                ImpactPoint;                                       // 0x0090(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                IKFootFloorLocation;                               // 0x00A8(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C4[0x4];                                       // 0x00C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class AActor*>                         Temp_object_Variable;                              // 0x00C8(0x0010)(ConstParm, ReferenceParm)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x00E0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue;                   // 0x0110(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_1;                 // 0x0128(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x0140(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue;        // 0x0158(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0170(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x0188(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x01A0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector_X_1;                          // 0x01B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x01D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D1[0x7];                                      // 0x01D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x01D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue;                     // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_DegAtan2_ReturnValue_1;                   // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0220(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue_1;       // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Subtract_VectorVector_ReturnValue_1;      // 0x0268(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EDrawDebugTrace                               CallFunc_GetDebugTraceType_DebugType;              // 0x0280(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_281[0x7];                                      // 0x0281(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FHitResult                             CallFunc_LineTraceSingle_OutHit;                   // 0x0288(0x00E8)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_ReturnValue;              // 0x0370(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bBlockingHit;              // 0x0371(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BreakHitResult_bInitialOverlap;           // 0x0372(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_373[0x1];                                      // 0x0373(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakHitResult_Time;                      // 0x0374(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakHitResult_Distance;                  // 0x0378(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37C[0x4];                                      // 0x037C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_Location;                  // 0x0380(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactPoint;               // 0x0398(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_Normal;                    // 0x03B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_ImpactNormal;              // 0x03C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UPhysicalMaterial*                      CallFunc_BreakHitResult_PhysMat;                   // 0x03E0(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class AActor*                                 CallFunc_BreakHitResult_HitActor;                  // 0x03E8(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	class UPrimitiveComponent*                    CallFunc_BreakHitResult_HitComponent;              // 0x03F0(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_HitBoneName;               // 0x03F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class FName                                   CallFunc_BreakHitResult_BoneName;                  // 0x0400(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_HitItem;                   // 0x0408(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_ElementIndex;              // 0x040C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_BreakHitResult_FaceIndex;                 // 0x0410(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_414[0x4];                                      // 0x0414(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakHitResult_TraceStart;                // 0x0418(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BreakHitResult_TraceEnd;                  // 0x0430(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsWalkable_ReturnValue;                   // 0x0448(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_449[0x7];                                      // 0x0449(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class USkeletalMeshComponent*                 CallFunc_GetOwningComponent_ReturnValue;           // 0x0450(0x0008)(ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue;            // 0x0458(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetSocketLocation_ReturnValue_1;          // 0x0470(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x0488(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x0490(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x0498(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_4;                          // 0x04A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_4;                          // 0x04A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_4;                          // 0x04B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_MakeVector_ReturnValue_2;                 // 0x04B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Greater_DoubleDouble_A_ImplicitCast;      // 0x04D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x04D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x04DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x04E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x04E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Pitch_ImplicitCast;           // 0x04E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_SetFootOffsets) == 0x000008, "Wrong alignment on ALS_AnimBP_C_SetFootOffsets");
static_assert(sizeof(ALS_AnimBP_C_SetFootOffsets) == 0x0004F0, "Wrong size on ALS_AnimBP_C_SetFootOffsets");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, Enable_FootIK_Curve) == 0x000000, "Member 'ALS_AnimBP_C_SetFootOffsets::Enable_FootIK_Curve' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, IKFootBone) == 0x000008, "Member 'ALS_AnimBP_C_SetFootOffsets::IKFootBone' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, RootBone) == 0x000010, "Member 'ALS_AnimBP_C_SetFootOffsets::RootBone' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CurrentLocationTarget) == 0x000018, "Member 'ALS_AnimBP_C_SetFootOffsets::CurrentLocationTarget' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CurrentLocationOffset) == 0x000030, "Member 'ALS_AnimBP_C_SetFootOffsets::CurrentLocationOffset' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CurrentRotationOffset) == 0x000048, "Member 'ALS_AnimBP_C_SetFootOffsets::CurrentRotationOffset' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, TargetRotationOffset) == 0x000060, "Member 'ALS_AnimBP_C_SetFootOffsets::TargetRotationOffset' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, ImpactNormal) == 0x000078, "Member 'ALS_AnimBP_C_SetFootOffsets::ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, ImpactPoint) == 0x000090, "Member 'ALS_AnimBP_C_SetFootOffsets::ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, IKFootFloorLocation) == 0x0000A8, "Member 'ALS_AnimBP_C_SetFootOffsets::IKFootFloorLocation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_GetCurveValue_ReturnValue) == 0x0000C0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, Temp_object_Variable) == 0x0000C8, "Member 'ALS_AnimBP_C_SetFootOffsets::Temp_object_Variable' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x0000D8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_VInterpTo_ReturnValue) == 0x0000E0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X) == 0x0000F8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y) == 0x000100, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z) == 0x000108, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_MakeVector_ReturnValue) == 0x000110, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_MakeVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_MakeVector_ReturnValue_1) == 0x000128, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_MakeVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Add_VectorVector_ReturnValue) == 0x000140, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Subtract_VectorVector_ReturnValue) == 0x000158, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Subtract_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000170, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Add_VectorVector_ReturnValue_1) == 0x000188, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_RInterpTo_ReturnValue) == 0x0001A0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X_1) == 0x0001B8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y_1) == 0x0001C0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z_1) == 0x0001C8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0001D0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_VInterpTo_ReturnValue_1) == 0x0001D8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X_2) == 0x0001F0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y_2) == 0x0001F8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z_2) == 0x000200, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_DegAtan2_ReturnValue) == 0x000208, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_DegAtan2_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_DegAtan2_ReturnValue_1) == 0x000210, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_DegAtan2_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000218, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_MakeRotator_ReturnValue) == 0x000220, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Multiply_VectorFloat_ReturnValue_1) == 0x000238, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Multiply_VectorFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Add_VectorVector_ReturnValue_2) == 0x000250, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Subtract_VectorVector_ReturnValue_1) == 0x000268, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Subtract_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_GetDebugTraceType_DebugType) == 0x000280, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_GetDebugTraceType_DebugType' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_LineTraceSingle_OutHit) == 0x000288, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_LineTraceSingle_OutHit' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_LineTraceSingle_ReturnValue) == 0x000370, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_LineTraceSingle_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_bBlockingHit) == 0x000371, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_bBlockingHit' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_bInitialOverlap) == 0x000372, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_bInitialOverlap' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_Time) == 0x000374, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_Time' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_Distance) == 0x000378, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_Distance' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_Location) == 0x000380, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_Location' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_ImpactPoint) == 0x000398, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_ImpactPoint' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_Normal) == 0x0003B0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_Normal' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_ImpactNormal) == 0x0003C8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_ImpactNormal' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_PhysMat) == 0x0003E0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_PhysMat' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_HitActor) == 0x0003E8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_HitActor' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_HitComponent) == 0x0003F0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_HitComponent' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_HitBoneName) == 0x0003F8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_HitBoneName' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_BoneName) == 0x000400, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_BoneName' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_HitItem) == 0x000408, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_HitItem' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_ElementIndex) == 0x00040C, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_ElementIndex' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_FaceIndex) == 0x000410, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_FaceIndex' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_TraceStart) == 0x000418, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_TraceStart' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakHitResult_TraceEnd) == 0x000430, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakHitResult_TraceEnd' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_IsWalkable_ReturnValue) == 0x000448, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_IsWalkable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_GetOwningComponent_ReturnValue) == 0x000450, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_GetOwningComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_GetSocketLocation_ReturnValue) == 0x000458, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_GetSocketLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_GetSocketLocation_ReturnValue_1) == 0x000470, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_GetSocketLocation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X_3) == 0x000488, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y_3) == 0x000490, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z_3) == 0x000498, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_X_4) == 0x0004A0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_X_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Y_4) == 0x0004A8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Y_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_BreakVector_Z_4) == 0x0004B0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_BreakVector_Z_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_MakeVector_ReturnValue_2) == 0x0004B8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_MakeVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_Greater_DoubleDouble_A_ImplicitCast) == 0x0004D0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_Greater_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x0004D8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x0004DC, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0004E0, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x0004E4, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetFootOffsets, CallFunc_MakeRotator_Pitch_ImplicitCast) == 0x0004E8, "Member 'ALS_AnimBP_C_SetFootOffsets::CallFunc_MakeRotator_Pitch_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.SetPelvisIKOffset
// 0x0120 (0x0120 - 0x0000)
struct ALS_AnimBP_C_SetPelvisIKOffset final
{
public:
	struct FVector                                FootOffset_L_Target;                               // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOffset_R_Target;                               // 0x0018(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                PelvisTarget;                                      // 0x0030(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_VInterpTo_ReturnValue;                    // 0x0048(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_VInterpTo_ReturnValue_1;                  // 0x0068(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x00B4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B5[0x3];                                       // 0x00B5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_BC[0x4];                                       // 0x00BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_2;                          // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_2;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_2;                          // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_3;                          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_3;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_3;                          // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_101[0x3];                                      // 0x0101(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast;         // 0x0104(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_VInterpTo_DeltaTime_ImplicitCast_1;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Add_DoubleDouble_A_ImplicitCast;          // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_B_ImplicitCast;          // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_SetPelvisIKOffset) == 0x000008, "Wrong alignment on ALS_AnimBP_C_SetPelvisIKOffset");
static_assert(sizeof(ALS_AnimBP_C_SetPelvisIKOffset) == 0x000120, "Wrong size on ALS_AnimBP_C_SetPelvisIKOffset");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, FootOffset_L_Target) == 0x000000, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::FootOffset_L_Target' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, FootOffset_R_Target) == 0x000018, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::FootOffset_R_Target' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, PelvisTarget) == 0x000030, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::PelvisTarget' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_ReturnValue_1) == 0x000068, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X) == 0x000080, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y) == 0x000088, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z) == 0x000090, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_1) == 0x000098, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_1) == 0x0000A0, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_1) == 0x0000A8, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_GetCurveValue_ReturnValue) == 0x0000B0, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x0000B4, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_GetCurveValue_ReturnValue_1) == 0x0000B8, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_ReturnValue) == 0x0000C0, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x0000C8, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_2) == 0x0000D0, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_2) == 0x0000D8, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_2) == 0x0000E0, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_X_3) == 0x0000E8, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_X_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Y_3) == 0x0000F0, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Y_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_BreakVector_Z_3) == 0x0000F8, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_BreakVector_Z_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000100, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_DeltaTime_ImplicitCast) == 0x000104, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_VInterpTo_DeltaTime_ImplicitCast_1) == 0x000108, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_VInterpTo_DeltaTime_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_A_ImplicitCast) == 0x000110, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_SetPelvisIKOffset, CallFunc_Add_DoubleDouble_B_ImplicitCast) == 0x000118, "Member 'ALS_AnimBP_C_SetPelvisIKOffset::CallFunc_Add_DoubleDouble_B_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.ShouldMoveCheck
// 0x0004 (0x0004 - 0x0000)
struct ALS_AnimBP_C_ShouldMoveCheck final
{
public:
	bool                                          Return_Value;                                      // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_ShouldMoveCheck) == 0x000001, "Wrong alignment on ALS_AnimBP_C_ShouldMoveCheck");
static_assert(sizeof(ALS_AnimBP_C_ShouldMoveCheck) == 0x000004, "Wrong size on ALS_AnimBP_C_ShouldMoveCheck");
static_assert(offsetof(ALS_AnimBP_C_ShouldMoveCheck, Return_Value) == 0x000000, "Member 'ALS_AnimBP_C_ShouldMoveCheck::Return_Value' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ShouldMoveCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000001, "Member 'ALS_AnimBP_C_ShouldMoveCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ShouldMoveCheck, CallFunc_BooleanAND_ReturnValue) == 0x000002, "Member 'ALS_AnimBP_C_ShouldMoveCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_ShouldMoveCheck, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'ALS_AnimBP_C_ShouldMoveCheck::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.test
// 0x0098 (0x0098 - 0x0000)
struct ALS_AnimBP_C_Test final
{
public:
	struct FRotator                               Rotation_0;                                        // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               RotationReturn;                                    // 0x0018(0x0018)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Add_Rotators_Value;                       // 0x0050(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Roll_ImplicitCast;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_Test) == 0x000008, "Wrong alignment on ALS_AnimBP_C_Test");
static_assert(sizeof(ALS_AnimBP_C_Test) == 0x000098, "Wrong size on ALS_AnimBP_C_Test");
static_assert(offsetof(ALS_AnimBP_C_Test, Rotation_0) == 0x000000, "Member 'ALS_AnimBP_C_Test::Rotation_0' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, RotationReturn) == 0x000018, "Member 'ALS_AnimBP_C_Test::RotationReturn' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000030, "Member 'ALS_AnimBP_C_Test::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'ALS_AnimBP_C_Test::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_Add_Rotators_Value) == 0x000050, "Member 'ALS_AnimBP_C_Test::CallFunc_Add_Rotators_Value' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'ALS_AnimBP_C_Test::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000070, "Member 'ALS_AnimBP_C_Test::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000078, "Member 'ALS_AnimBP_C_Test::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000080, "Member 'ALS_AnimBP_C_Test::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_FInterpTo_ReturnValue) == 0x000088, "Member 'ALS_AnimBP_C_Test::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_Test, CallFunc_MakeRotator_Roll_ImplicitCast) == 0x000090, "Member 'ALS_AnimBP_C_Test::CallFunc_MakeRotator_Roll_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.TurnInPlace
// 0x0118 (0x0118 - 0x0000)
struct ALS_AnimBP_C_TurnInPlace final
{
public:
	struct FRotator                               TargetRotation;                                    // 0x0000(0x0018)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        PlayRateScale;                                     // 0x0018(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        StartTime;                                         // 0x0020(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          OverrideCurrent;                                   // 0x0028(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTurnInPlace_Asset                     TargetTurnAsset;                                   // 0x0030(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	double                                        TurnAngle;                                         // 0x0050(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class UAnimMontage*                           CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue; // 0x0070(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_2;      // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsPlayingSlotAnimation_ReturnValue;       // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_3;      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_1;          // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_2;                    // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_3;                    // 0x0097(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue_2;          // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast; // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_B_ImplicitCast;       // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_B_ImplicitCast;     // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1;   // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast; // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        K2Node_VariableSet_TurnAngle_ImplicitCast;         // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_TurnInPlace) == 0x000008, "Wrong alignment on ALS_AnimBP_C_TurnInPlace");
static_assert(sizeof(ALS_AnimBP_C_TurnInPlace) == 0x000118, "Wrong size on ALS_AnimBP_C_TurnInPlace");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, TargetRotation) == 0x000000, "Member 'ALS_AnimBP_C_TurnInPlace::TargetRotation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, PlayRateScale) == 0x000018, "Member 'ALS_AnimBP_C_TurnInPlace::PlayRateScale' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, StartTime) == 0x000020, "Member 'ALS_AnimBP_C_TurnInPlace::StartTime' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, OverrideCurrent) == 0x000028, "Member 'ALS_AnimBP_C_TurnInPlace::OverrideCurrent' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, TargetTurnAsset) == 0x000030, "Member 'ALS_AnimBP_C_TurnInPlace::TargetTurnAsset' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, TurnAngle) == 0x000050, "Member 'ALS_AnimBP_C_TurnInPlace::TurnAngle' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x000068, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue) == 0x000070, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_2) == 0x000078, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_IsPlayingSlotAnimation_ReturnValue) == 0x000080, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_IsPlayingSlotAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_ReturnValue_3) == 0x000088, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Not_PreBool_ReturnValue) == 0x000090, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_BooleanOR_ReturnValue) == 0x000091, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000092, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue_1) == 0x000093, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess) == 0x000094, "Member 'ALS_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_1) == 0x000095, "Member 'ALS_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_2) == 0x000096, "Member 'ALS_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, K2Node_SwitchEnum_CmpSuccess_3) == 0x000097, "Member 'ALS_AnimBP_C_TurnInPlace::K2Node_SwitchEnum_CmpSuccess_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Abs_ReturnValue) == 0x000098, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Less_DoubleDouble_ReturnValue_2) == 0x0000A0, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Less_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_K2_GetActorRotation_ReturnValue) == 0x0000A8, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x0000C0, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Roll) == 0x0000D8, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Pitch) == 0x0000DC, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_BreakRotator_Yaw) == 0x0000E0, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast) == 0x0000E4, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_InTimeToStartMontageAt_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x0000E8, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Divide_DoubleDouble_B_ImplicitCast) == 0x0000F0, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Divide_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_B_ImplicitCast) == 0x0000F8, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1) == 0x000100, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_Multiply_DoubleDouble_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast) == 0x000108, "Member 'ALS_AnimBP_C_TurnInPlace::CallFunc_PlaySlotAnimationAsDynamicMontage_InPlayRate_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlace, K2Node_VariableSet_TurnAngle_ImplicitCast) == 0x000110, "Member 'ALS_AnimBP_C_TurnInPlace::K2Node_VariableSet_TurnAngle_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.TurnInPlaceCheck
// 0x00A0 (0x00A0 - 0x0000)
struct ALS_AnimBP_C_TurnInPlaceCheck final
{
public:
	double                                        AngleMulti;                                        // 0x0000(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FTurnInPlace_Asset                     TargetTurnAsset;                                   // 0x0008(0x0020)(Edit, BlueprintVisible, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue;         // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Greater_DoubleDouble_ReturnValue_1;       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Less_DoubleDouble_ReturnValue;            // 0x0099(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x009A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_TurnInPlaceCheck) == 0x000008, "Wrong alignment on ALS_AnimBP_C_TurnInPlaceCheck");
static_assert(sizeof(ALS_AnimBP_C_TurnInPlaceCheck) == 0x0000A0, "Wrong size on ALS_AnimBP_C_TurnInPlaceCheck");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, AngleMulti) == 0x000000, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::AngleMulti' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, TargetTurnAsset) == 0x000008, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::TargetTurnAsset' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Roll) == 0x000028, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Pitch) == 0x00002C, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakRotator_Yaw) == 0x000030, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_MakeRotator_ReturnValue) == 0x000038, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_X) == 0x000050, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_Y) == 0x000058, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Abs_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_MapRangeClamped_ReturnValue) == 0x000068, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue) == 0x000070, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Abs_ReturnValue_1) == 0x000088, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000090, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Greater_DoubleDouble_ReturnValue_1) == 0x000098, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Greater_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_Less_DoubleDouble_ReturnValue) == 0x000099, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_Less_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_TurnInPlaceCheck, CallFunc_BooleanAND_ReturnValue) == 0x00009A, "Member 'ALS_AnimBP_C_TurnInPlaceCheck::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.DownRifleEffect
// 0x0080 (0x0080 - 0x0000)
struct ALS_AnimBP_C_DownRifleEffect final
{
public:
	double                                        Current;                                           // 0x0000(0x0008)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        Return;                                            // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue;             // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_1;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Add_DoubleDouble_ReturnValue_2;           // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_DownRifleEffect) == 0x000008, "Wrong alignment on ALS_AnimBP_C_DownRifleEffect");
static_assert(sizeof(ALS_AnimBP_C_DownRifleEffect) == 0x000080, "Wrong size on ALS_AnimBP_C_DownRifleEffect");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, Current) == 0x000000, "Member 'ALS_AnimBP_C_DownRifleEffect::Current' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, Return) == 0x000008, "Member 'ALS_AnimBP_C_DownRifleEffect::Return' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_SelectFloat_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_Add_DoubleDouble_ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_Add_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_SelectFloat_ReturnValue_1) == 0x000028, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_MapRangeClamped_ReturnValue) == 0x000030, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000038, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_Abs_ReturnValue) == 0x000040, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000048, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000050, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_Add_DoubleDouble_ReturnValue_1) == 0x000058, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_Add_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_Add_DoubleDouble_ReturnValue_2) == 0x000060, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_Add_DoubleDouble_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_FInterpTo_ReturnValue) == 0x000068, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000070, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_DownRifleEffect, CallFunc_FInterpTo_ReturnValue_1) == 0x000078, "Member 'ALS_AnimBP_C_DownRifleEffect::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.UpdateAimingValues
// 0x01E8 (0x01E8 - 0x0000)
struct ALS_AnimBP_C_UpdateAimingValues final
{
public:
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess_1;                    // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3[0x5];                                        // 0x0003(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue;          // 0x0020(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0038(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X;                          // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y;                          // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_1;                        // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_1;                        // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_1;            // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Divide_DoubleDouble_ReturnValue;          // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x0098(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_1;        // 0x00B0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_1;     // 0x00C8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_F4[0x4];                                       // 0x00F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x00F8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_2;                        // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_2;                        // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_2;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_X_3;                        // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector2D_Y_3;                        // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_3;            // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue_4;            // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_K2_GetActorRotation_ReturnValue_2;        // 0x0148(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue_2;     // 0x0160(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0178(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_2;                      // 0x0190(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_2;                     // 0x0194(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_2;                       // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue_1;               // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_Value_ImplicitCast;       // 0x01B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_InterpSpeed_ImplicitCast;       // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_MakeRotator_Yaw_ImplicitCast;             // 0x01BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast;              // 0x01C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast;              // 0x01C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x01D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1D4[0x4];                                      // 0x01D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_MakeVector2D_Y_ImplicitCast_1;            // 0x01D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MakeVector2D_X_ImplicitCast_1;            // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_UpdateAimingValues) == 0x000008, "Wrong alignment on ALS_AnimBP_C_UpdateAimingValues");
static_assert(sizeof(ALS_AnimBP_C_UpdateAimingValues) == 0x0001E8, "Wrong size on ALS_AnimBP_C_UpdateAimingValues");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, K2Node_SwitchEnum_CmpSuccess) == 0x000000, "Member 'ALS_AnimBP_C_UpdateAimingValues::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, K2Node_SwitchEnum_CmpSuccess_1) == 0x000002, "Member 'ALS_AnimBP_C_UpdateAimingValues::K2Node_SwitchEnum_CmpSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_K2_GetActorRotation_ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_K2_GetActorRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000038, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll) == 0x000050, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch) == 0x000054, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw) == 0x000058, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X) == 0x000068, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y) == 0x000070, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_1) == 0x000078, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_1) == 0x000080, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_1) == 0x000088, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_Divide_DoubleDouble_ReturnValue) == 0x000090, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_Divide_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeRotator_ReturnValue) == 0x000098, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_K2_GetActorRotation_ReturnValue_1) == 0x0000B0, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_K2_GetActorRotation_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue_1) == 0x0000C8, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_FInterpTo_ReturnValue) == 0x0000E0, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll_1) == 0x0000E8, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch_1) == 0x0000EC, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw_1) == 0x0000F0, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_ReturnValue) == 0x0000F8, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_2) == 0x000108, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_2) == 0x000110, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_2) == 0x000118, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_X_3) == 0x000120, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_X_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakVector2D_Y_3) == 0x000128, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakVector2D_Y_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_Abs_ReturnValue) == 0x000130, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_3) == 0x000138, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_ReturnValue_4) == 0x000140, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_K2_GetActorRotation_ReturnValue_2) == 0x000148, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_K2_GetActorRotation_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_NormalizedDeltaRotator_ReturnValue_2) == 0x000160, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_NormalizedDeltaRotator_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_ReturnValue) == 0x000178, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Roll_2) == 0x000190, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Roll_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Pitch_2) == 0x000194, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Pitch_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_BreakRotator_Yaw_2) == 0x000198, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_BreakRotator_Yaw_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_ReturnValue_1) == 0x0001A0, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MapRangeClamped_Value_ImplicitCast) == 0x0001B0, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MapRangeClamped_Value_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_InterpSpeed_ImplicitCast) == 0x0001B8, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_InterpSpeed_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeRotator_Yaw_ImplicitCast) == 0x0001BC, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeRotator_Yaw_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_Y_ImplicitCast) == 0x0001C0, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_Y_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_X_ImplicitCast) == 0x0001C8, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_X_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0001D0, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_Y_ImplicitCast_1) == 0x0001D8, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_Y_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateAimingValues, CallFunc_MakeVector2D_X_ImplicitCast_1) == 0x0001E0, "Member 'ALS_AnimBP_C_UpdateAimingValues::CallFunc_MakeVector2D_X_ImplicitCast_1' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.UpdateCharacterInfo
// 0x0308 (0x0308 - 0x0000)
struct ALS_AnimBP_C_UpdateCharacterInfo final
{
public:
	bool                                          CallFunc_IsLocallyControlled_ReturnValue;          // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_K2_GetComponentRotation_ReturnValue;      // 0x0008(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue;                  // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_ReturnValue;                          // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_1;       // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_SelectFloat_ReturnValue_1;                // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_2;       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_1;                    // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue;                    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_2;                    // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AActor*                                 CallFunc_HandleItem_Handle_Actor;                  // 0x0088(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IBPI_Grenade_C>        K2Node_DynamicCast_AsBPI_Grenade;                  // 0x0090(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Blow__Blow_;                              // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_A2[0x6];                                       // 0x00A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x00A8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_1;           // 0x00C0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_2;           // 0x00D8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_3;           // 0x00F0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_4;           // 0x0108(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_5;           // 0x0120(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_6;           // 0x0138(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_7;           // 0x0150(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue_8;           // 0x0168(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_1;                  // 0x0180(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_GetWorldDeltaSeconds_ReturnValue_3;       // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	class AALS_AnimMan_CharacterBP_C*             K2Node_DynamicCast_AsALS_Anim_Man_Character_BP;    // 0x0190(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_1;                     // 0x0198(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_199[0x7];                                      // 0x0199(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IALS_Character_BPI_C>  K2Node_DynamicCast_AsALS_Character_BPI;            // 0x01A0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_2;                     // 0x01B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1B1[0x7];                                      // 0x01B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BPI_Get_EssentialValues_Velocity;         // 0x01B8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BPI_Get_EssentialValues_Acceleration;     // 0x01D0(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_BPI_Get_EssentialValues_MovementInput;    // 0x01E8(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_IsMoving;         // 0x0200(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_BPI_Get_EssentialValues_HasMovementInput; // 0x0201(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_202[0x6];                                      // 0x0202(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_BPI_Get_EssentialValues_Speed;            // 0x0208(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BPI_Get_EssentialValues_MovementInputAmount; // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_BPI_Get_EssentialValues_AimingRotation;   // 0x0218(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_BPI_Get_EssentialValues_AimYawRate;       // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_SelectVector_ReturnValue;                 // 0x0238(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FRotator                               CallFunc_Vector_To_Rotator_Out;                    // 0x0250(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll_1;                      // 0x0268(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch_1;                     // 0x026C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw_1;                       // 0x0270(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_274[0x4];                                      // 0x0274(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FRotator                               CallFunc_RInterpTo_ReturnValue;                    // 0x0278(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue;        // 0x0290(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Abs_ReturnValue_1;                        // 0x0298(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x02A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_ReturnValue_1;      // 0x02A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_FInterpTo_ReturnValue_2;                  // 0x02B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	TScriptInterface<class IALS_Character_BPI_C>  K2Node_DynamicCast_AsALS_Character_BPI_1;          // 0x02B8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_DynamicCast_bSuccess_3;                     // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_FInterpTo_ReturnValue_3;                  // 0x02D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementMode                                 CallFunc_BPI_Get_CurrentStates_PawnMovementMode;   // 0x02D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            CallFunc_BPI_Get_CurrentStates_MovementState;      // 0x02D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementState                            CallFunc_BPI_Get_CurrentStates_PrevMovementState;  // 0x02DA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_MovementAction                           CallFunc_BPI_Get_CurrentStates_MovementAction;     // 0x02DB(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_RotationMode                             CallFunc_BPI_Get_CurrentStates_RotationMode;       // 0x02DC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Gait                                     CallFunc_BPI_Get_CurrentStates_ActualGait;         // 0x02DD(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_Stance                                   CallFunc_BPI_Get_CurrentStates_ActualStance;       // 0x02DE(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_ViewMode                                 CallFunc_BPI_Get_CurrentStates_ViewMode;           // 0x02DF(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             CallFunc_BPI_Get_CurrentStates_OverlayState;       // 0x02E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EALS_OverlayState                             CallFunc_BPI_Get_CurrentStates_OverlayState__Client_; // 0x02E1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_IsValid_ReturnValue_3;                    // 0x02E2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2E3[0x5];                                      // 0x02E3(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast;                       // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_RInterpTo_DeltaTime_ImplicitCast;         // 0x02F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_2F4[0x4];                                      // 0x02F4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Abs_A_ImplicitCast_1;                     // 0x02F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Multiply_DoubleDouble_A_ImplicitCast;     // 0x0300(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_UpdateCharacterInfo) == 0x000008, "Wrong alignment on ALS_AnimBP_C_UpdateCharacterInfo");
static_assert(sizeof(ALS_AnimBP_C_UpdateCharacterInfo) == 0x000308, "Wrong size on ALS_AnimBP_C_UpdateCharacterInfo");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_IsLocallyControlled_ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_IsLocallyControlled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_K2_GetComponentRotation_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_K2_GetComponentRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000020, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x000028, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_SelectFloat_ReturnValue) == 0x000030, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_SelectFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BreakRotator_Roll) == 0x000038, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BreakRotator_Pitch) == 0x00003C, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BreakRotator_Yaw) == 0x000040, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Abs_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000050, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_GetWorldDeltaSeconds_ReturnValue_1) == 0x000058, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_GetWorldDeltaSeconds_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_SelectFloat_ReturnValue_1) == 0x000060, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_SelectFloat_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_GetWorldDeltaSeconds_ReturnValue_2) == 0x000068, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_GetWorldDeltaSeconds_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_IsValid_ReturnValue_1) == 0x000070, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_IsValid_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_FInterpTo_ReturnValue) == 0x000078, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_FInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_IsValid_ReturnValue_2) == 0x000080, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_IsValid_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_HandleItem_Handle_Actor) == 0x000088, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_HandleItem_Handle_Actor' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsBPI_Grenade) == 0x000090, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsBPI_Grenade' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess) == 0x0000A0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Blow__Blow_) == 0x0000A1, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Blow__Blow_' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue) == 0x0000A8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue_1) == 0x0000C0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue_2) == 0x0000D8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue_3) == 0x0000F0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue_4) == 0x000108, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue_5) == 0x000120, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue_6) == 0x000138, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue_7) == 0x000150, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Add_VectorVector_ReturnValue_8) == 0x000168, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Add_VectorVector_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_FInterpTo_ReturnValue_1) == 0x000180, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_FInterpTo_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_GetWorldDeltaSeconds_ReturnValue_3) == 0x000188, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_GetWorldDeltaSeconds_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsALS_Anim_Man_Character_BP) == 0x000190, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsALS_Anim_Man_Character_BP' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_1) == 0x000198, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsALS_Character_BPI) == 0x0001A0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsALS_Character_BPI' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_2) == 0x0001B0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Velocity) == 0x0001B8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Velocity' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Acceleration) == 0x0001D0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Acceleration' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_MovementInput) == 0x0001E8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_MovementInput' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_IsMoving) == 0x000200, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_IsMoving' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_HasMovementInput) == 0x000201, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_HasMovementInput' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_Speed) == 0x000208, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_Speed' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_MovementInputAmount) == 0x000210, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_MovementInputAmount' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_AimingRotation) == 0x000218, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_AimingRotation' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_EssentialValues_AimYawRate) == 0x000230, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_EssentialValues_AimYawRate' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_SelectVector_ReturnValue) == 0x000238, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_SelectVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Vector_To_Rotator_Out) == 0x000250, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Vector_To_Rotator_Out' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BreakRotator_Roll_1) == 0x000268, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BreakRotator_Roll_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BreakRotator_Pitch_1) == 0x00026C, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BreakRotator_Pitch_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BreakRotator_Yaw_1) == 0x000270, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BreakRotator_Yaw_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_RInterpTo_ReturnValue) == 0x000278, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_RInterpTo_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Multiply_DoubleDouble_ReturnValue) == 0x000290, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Multiply_DoubleDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Abs_ReturnValue_1) == 0x000298, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Abs_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_MapRangeClamped_ReturnValue) == 0x0002A0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Multiply_DoubleDouble_ReturnValue_1) == 0x0002A8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Multiply_DoubleDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_FInterpTo_ReturnValue_2) == 0x0002B0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_FInterpTo_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_AsALS_Character_BPI_1) == 0x0002B8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_AsALS_Character_BPI_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, K2Node_DynamicCast_bSuccess_3) == 0x0002C8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::K2Node_DynamicCast_bSuccess_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_FInterpTo_ReturnValue_3) == 0x0002D0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_FInterpTo_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_PawnMovementMode) == 0x0002D8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_PawnMovementMode' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_MovementState) == 0x0002D9, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_MovementState' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_PrevMovementState) == 0x0002DA, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_PrevMovementState' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_MovementAction) == 0x0002DB, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_MovementAction' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_RotationMode) == 0x0002DC, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_RotationMode' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ActualGait) == 0x0002DD, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ActualGait' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ActualStance) == 0x0002DE, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ActualStance' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_ViewMode) == 0x0002DF, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_ViewMode' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_OverlayState) == 0x0002E0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_OverlayState' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_BPI_Get_CurrentStates_OverlayState__Client_) == 0x0002E1, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_BPI_Get_CurrentStates_OverlayState__Client_' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_IsValid_ReturnValue_3) == 0x0002E2, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_IsValid_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Abs_A_ImplicitCast) == 0x0002E8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Abs_A_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_RInterpTo_DeltaTime_ImplicitCast) == 0x0002F0, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_RInterpTo_DeltaTime_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Abs_A_ImplicitCast_1) == 0x0002F8, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Abs_A_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateCharacterInfo, CallFunc_Multiply_DoubleDouble_A_ImplicitCast) == 0x000300, "Member 'ALS_AnimBP_C_UpdateCharacterInfo::CallFunc_Multiply_DoubleDouble_A_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.UpdateFootIK
// 0x0038 (0x0038 - 0x0000)
struct ALS_AnimBP_C_UpdateFootIK final
{
public:
	struct FVector                                FootOffset_R_Target;                               // 0x0000(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                FootOffset_L_Target;                               // 0x0018(0x0018)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_UpdateFootIK) == 0x000008, "Wrong alignment on ALS_AnimBP_C_UpdateFootIK");
static_assert(sizeof(ALS_AnimBP_C_UpdateFootIK) == 0x000038, "Wrong size on ALS_AnimBP_C_UpdateFootIK");
static_assert(offsetof(ALS_AnimBP_C_UpdateFootIK, FootOffset_R_Target) == 0x000000, "Member 'ALS_AnimBP_C_UpdateFootIK::FootOffset_R_Target' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateFootIK, FootOffset_L_Target) == 0x000018, "Member 'ALS_AnimBP_C_UpdateFootIK::FootOffset_L_Target' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateFootIK, K2Node_SwitchEnum_CmpSuccess) == 0x000030, "Member 'ALS_AnimBP_C_UpdateFootIK::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.UpdateInAirValues
// 0x0030 (0x0030 - 0x0000)
struct ALS_AnimBP_C_UpdateInAirValues final
{
public:
	struct FLeanAmount                            CallFunc_CalculateInAirLeanAmount_LeanAmount;      // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            CallFunc_InterpLeanAmount_ReturnValue;             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateLandPrediction_LandPrediction;   // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_UpdateInAirValues) == 0x000008, "Wrong alignment on ALS_AnimBP_C_UpdateInAirValues");
static_assert(sizeof(ALS_AnimBP_C_UpdateInAirValues) == 0x000030, "Wrong size on ALS_AnimBP_C_UpdateInAirValues");
static_assert(offsetof(ALS_AnimBP_C_UpdateInAirValues, CallFunc_CalculateInAirLeanAmount_LeanAmount) == 0x000000, "Member 'ALS_AnimBP_C_UpdateInAirValues::CallFunc_CalculateInAirLeanAmount_LeanAmount' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateInAirValues, CallFunc_InterpLeanAmount_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_UpdateInAirValues::CallFunc_InterpLeanAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateInAirValues, CallFunc_CalculateLandPrediction_LandPrediction) == 0x000010, "Member 'ALS_AnimBP_C_UpdateInAirValues::CallFunc_CalculateLandPrediction_LandPrediction' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_X) == 0x000018, "Member 'ALS_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_Y) == 0x000020, "Member 'ALS_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateInAirValues, CallFunc_BreakVector_Z) == 0x000028, "Member 'ALS_AnimBP_C_UpdateInAirValues::CallFunc_BreakVector_Z' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.UpdateLayerValues
// 0x00F8 (0x00F8 - 0x0000)
struct ALS_AnimBP_C_UpdateLayerValues final
{
public:
	float                                         CallFunc_GetCurveValue_ReturnValue;                // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_1;              // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_2;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue;                         // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_3;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_4;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_5;              // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_6;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_ReturnValue_1;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_7;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Lerp_ReturnValue_2;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_8;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_9;              // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_10;             // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_11;             // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_12;             // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_13;             // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_GetCurveValue_ReturnValue_14;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_64[0x4];                                       // 0x0064(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        CallFunc_Conv_IntToDouble_ReturnValue;             // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_FFloor_ReturnValue_1;                     // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue_1;            // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Conv_IntToDouble_ReturnValue_1;           // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast;                      // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_L_LS_ImplicitCast;          // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast;                  // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_R_LS_ImplicitCast;          // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_B_ImplicitCast_1;                    // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BasePose_N_ImplicitCast;        // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_1;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_Lerp_Alpha_ImplicitCast_2;                // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_BasePose_CLF_ImplicitCast;      // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_R_Add_ImplicitCast;         // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Arm_L_Add_ImplicitCast;         // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Spine_Add_ImplicitCast;         // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Hand_R_ImplicitCast;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Head_Add_ImplicitCast;          // 0x00E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        K2Node_VariableSet_Hand_L_ImplicitCast;            // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_UpdateLayerValues) == 0x000008, "Wrong alignment on ALS_AnimBP_C_UpdateLayerValues");
static_assert(sizeof(ALS_AnimBP_C_UpdateLayerValues) == 0x0000F8, "Wrong size on ALS_AnimBP_C_UpdateLayerValues");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_1) == 0x000004, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_2) == 0x000008, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue) == 0x000010, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_3) == 0x000018, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_3' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_4) == 0x00001C, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_4' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_5) == 0x000020, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_5' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_6) == 0x000024, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_6' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue_1) == 0x000028, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_7) == 0x000030, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_7' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_ReturnValue_2) == 0x000038, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_ReturnValue_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_8) == 0x000040, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_8' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_9) == 0x000044, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_9' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_10) == 0x000048, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_10' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_11) == 0x00004C, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_11' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_12) == 0x000050, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_12' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_13) == 0x000054, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_13' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_FFloor_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_GetCurveValue_ReturnValue_14) == 0x00005C, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_GetCurveValue_ReturnValue_14' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Subtract_IntInt_ReturnValue) == 0x000060, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Conv_IntToDouble_ReturnValue) == 0x000068, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Conv_IntToDouble_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_FFloor_ReturnValue_1) == 0x000070, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_FFloor_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Subtract_IntInt_ReturnValue_1) == 0x000074, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Subtract_IntInt_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Conv_IntToDouble_ReturnValue_1) == 0x000078, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Conv_IntToDouble_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_B_ImplicitCast) == 0x000080, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_B_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_L_LS_ImplicitCast) == 0x000088, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_L_LS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast) == 0x000090, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_R_LS_ImplicitCast) == 0x000098, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_R_LS_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_B_ImplicitCast_1) == 0x0000A0, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_B_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_BasePose_N_ImplicitCast) == 0x0000A8, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_BasePose_N_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast_1) == 0x0000B0, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, CallFunc_Lerp_Alpha_ImplicitCast_2) == 0x0000B8, "Member 'ALS_AnimBP_C_UpdateLayerValues::CallFunc_Lerp_Alpha_ImplicitCast_2' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_BasePose_CLF_ImplicitCast) == 0x0000C0, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_BasePose_CLF_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_R_Add_ImplicitCast) == 0x0000C8, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_R_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Arm_L_Add_ImplicitCast) == 0x0000D0, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Arm_L_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Spine_Add_ImplicitCast) == 0x0000D8, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Spine_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Hand_R_ImplicitCast) == 0x0000E0, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Hand_R_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Head_Add_ImplicitCast) == 0x0000E8, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Head_Add_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateLayerValues, K2Node_VariableSet_Hand_L_ImplicitCast) == 0x0000F0, "Member 'ALS_AnimBP_C_UpdateLayerValues::K2Node_VariableSet_Hand_L_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.UpdateMovementValues
// 0x00A0 (0x00A0 - 0x0000)
struct ALS_AnimBP_C_UpdateMovementValues final
{
public:
	struct FVelocityBlend                         TargetVelocityBlend;                               // 0x0000(0x0010)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_CalculateRelativeAccelerationAmount_ReturnValue; // 0x0010(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            K2Node_MakeStruct_LeanAmount;                      // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateDiagonalScaleAmount_ReturnValue; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateCrouchingPlayRate_PlayRate;      // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateStrideBlend_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateWalkRunBlend_WalkRunBlend;       // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         CallFunc_CalculateVelocityBlend_ReturnValue;       // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLeanAmount                            CallFunc_InterpLeanAmount_ReturnValue;             // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVelocityBlend                         CallFunc_InterpVelocityBlend_ReturnValue;          // 0x0080(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_CalculateStandingPlayRate_PlayRate;       // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast; // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast; // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_UpdateMovementValues) == 0x000008, "Wrong alignment on ALS_AnimBP_C_UpdateMovementValues");
static_assert(sizeof(ALS_AnimBP_C_UpdateMovementValues) == 0x0000A0, "Wrong size on ALS_AnimBP_C_UpdateMovementValues");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, TargetVelocityBlend) == 0x000000, "Member 'ALS_AnimBP_C_UpdateMovementValues::TargetVelocityBlend' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateRelativeAccelerationAmount_ReturnValue) == 0x000010, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateRelativeAccelerationAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_X) == 0x000028, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_Y) == 0x000030, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_BreakVector_Z) == 0x000038, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_LeanAmount) == 0x000040, "Member 'ALS_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_LeanAmount' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateDiagonalScaleAmount_ReturnValue) == 0x000048, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateDiagonalScaleAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateCrouchingPlayRate_PlayRate) == 0x000050, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateCrouchingPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateStrideBlend_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateStrideBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateWalkRunBlend_WalkRunBlend) == 0x000060, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateWalkRunBlend_WalkRunBlend' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateVelocityBlend_ReturnValue) == 0x000068, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateVelocityBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_InterpLeanAmount_ReturnValue) == 0x000078, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_InterpLeanAmount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_InterpVelocityBlend_ReturnValue) == 0x000080, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_InterpVelocityBlend_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, CallFunc_CalculateStandingPlayRate_PlayRate) == 0x000090, "Member 'ALS_AnimBP_C_UpdateMovementValues::CallFunc_CalculateStandingPlayRate_PlayRate' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast) == 0x000098, "Member 'ALS_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_FB_15_297866804FB14F4B81FB4A976A7F57D1_ImplicitCast' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateMovementValues, K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast) == 0x00009C, "Member 'ALS_AnimBP_C_UpdateMovementValues::K2Node_MakeStruct_LR_17_ADF99333493B27F5B49BA89100DC4C05_ImplicitCast' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.UpdateRagdollValues
// 0x0010 (0x0010 - 0x0000)
struct ALS_AnimBP_C_UpdateRagdollValues final
{
public:
	double                                        CallFunc_VSize_ReturnValue;                        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_MapRangeClamped_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_UpdateRagdollValues) == 0x000008, "Wrong alignment on ALS_AnimBP_C_UpdateRagdollValues");
static_assert(sizeof(ALS_AnimBP_C_UpdateRagdollValues) == 0x000010, "Wrong size on ALS_AnimBP_C_UpdateRagdollValues");
static_assert(offsetof(ALS_AnimBP_C_UpdateRagdollValues, CallFunc_VSize_ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_UpdateRagdollValues::CallFunc_VSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRagdollValues, CallFunc_MapRangeClamped_ReturnValue) == 0x000008, "Member 'ALS_AnimBP_C_UpdateRagdollValues::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");

// Function ALS_AnimBP.ALS_AnimBP_C.UpdateRotationValues
// 0x00B8 (0x00B8 - 0x0000)
struct ALS_AnimBP_C_UpdateRotationValues final
{
public:
	struct FRotator                               CallFunc_GetControlRotation_ReturnValue;           // 0x0000(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_Conv_VectorToRotator_ReturnValue;         // 0x0018(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_NormalizedDeltaRotator_ReturnValue;       // 0x0030(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EMovementDirection                            CallFunc_CalculateMovementDirection_ReturnValues;  // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_GetVectorValue_ReturnValue;               // 0x0058(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X;                            // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y;                            // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z;                            // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector                                CallFunc_GetVectorValue_ReturnValue_1;             // 0x0088(0x0018)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_X_1;                          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Y_1;                          // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        CallFunc_BreakVector_Z_1;                          // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(ALS_AnimBP_C_UpdateRotationValues) == 0x000008, "Wrong alignment on ALS_AnimBP_C_UpdateRotationValues");
static_assert(sizeof(ALS_AnimBP_C_UpdateRotationValues) == 0x0000B8, "Wrong size on ALS_AnimBP_C_UpdateRotationValues");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_GetControlRotation_ReturnValue) == 0x000000, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_GetControlRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_Conv_VectorToRotator_ReturnValue) == 0x000018, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_Conv_VectorToRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_NormalizedDeltaRotator_ReturnValue) == 0x000030, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_NormalizedDeltaRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Roll) == 0x000048, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Pitch) == 0x00004C, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakRotator_Yaw) == 0x000050, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_CalculateMovementDirection_ReturnValues) == 0x000054, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_CalculateMovementDirection_ReturnValues' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_GetVectorValue_ReturnValue) == 0x000058, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_GetVectorValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_X) == 0x000070, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Y) == 0x000078, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Z) == 0x000080, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_GetVectorValue_ReturnValue_1) == 0x000088, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_GetVectorValue_ReturnValue_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_X_1) == 0x0000A0, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_X_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Y_1) == 0x0000A8, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Y_1' has a wrong offset!");
static_assert(offsetof(ALS_AnimBP_C_UpdateRotationValues, CallFunc_BreakVector_Z_1) == 0x0000B0, "Member 'ALS_AnimBP_C_UpdateRotationValues::CallFunc_BreakVector_Z_1' has a wrong offset!");

}

