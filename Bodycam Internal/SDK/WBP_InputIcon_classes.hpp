#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_InputIcon

#include "Basic.hpp"

#include "WBP_GlobalInteractableUserWidget_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "InputCore_structs.hpp"
#include "Engine_structs.hpp"
#include "EInputDeviceType_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_InputIcon.WBP_InputIcon_C
// 0x00D8 (0x03E8 - 0x0310)
class UWBP_InputIcon_C final : public UWBP_GlobalInteractableUserWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_InputIcon_C;                    // 0x0310(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 BackgroundMask;                                    // 0x0318(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 InnerIcon;                                         // 0x0320(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               InnerSizeBox;                                      // 0x0328(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             KeyText;                                           // 0x0330(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UImage*                                 OuterIcon;                                         // 0x0338(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UBorder*                                OuterKeyBorder;                                    // 0x0340(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class USizeBox*                               OuterSizeBox;                                      // 0x0348(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UInputMappingContext*                   InputMappingContext;                               // 0x0350(0x0008)(Edit, BlueprintVisible, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	struct FKey                                   MappedKey;                                         // 0x0358(0x0018)(Edit, BlueprintVisible, HasGetValueTypeHash)
	FMulticastInlineDelegateProperty_             OnHoveredKeyboardKey;                              // 0x0370(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	bool                                          bDisplayWithNoneInput;                             // 0x0380(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bDisplayNoneTextFromDataTable;                     // 0x0381(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bHideWhenInputDeviceDoesNotMatchKey;               // 0x0382(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bRemoveNumpadPrefix;                               // 0x0383(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           BackgroundColor;                                   // 0x0384(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           HighlightColor;                                    // 0x0394(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FLinearColor                           ExtraHightlightColor;                              // 0x03A4(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3B4[0x4];                                      // 0x03B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              DefaultSize;                                       // 0x03B8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FVector2D                              DefaultSizeLarge;                                  // 0x03C8(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         WidthOverride;                                     // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	float                                         HeightOverride;                                    // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          bUpdateIconOnInputDeviceChange;                    // 0x03E0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn, HasGetValueTypeHash)

public:
	void ActiveInputDeviceChanged(EInputDeviceType InputDeviceType);
	void ChangeMappedKey(const struct FKey& NewKey);
	void Construct();
	void DisplayKeyBackgroundAndInnerIcon(const struct FSlateBrush& Brush);
	void DisplayKeyBackgroundAndText(class FName InText);
	void DisplayOuterIconOnly(const struct FSlateBrush& Brush);
	void ExecuteUbergraph_WBP_InputIcon(int32 EntryPoint);
	void OnHoveredKeyboardKey__DelegateSignature(const struct FKey& InKey);
	void OverrideWidgetStyleFromConfig();
	void PreConstruct(bool IsDesignTime);
	void RemoveNumpadPrefix(class FName InputName, class FName* ConvertedName);
	void ResetToDefaultSize();
	void SetIconFromMappedKey();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_InputIcon_C">();
	}
	static class UWBP_InputIcon_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_InputIcon_C>();
	}
};
static_assert(alignof(UWBP_InputIcon_C) == 0x000008, "Wrong alignment on UWBP_InputIcon_C");
static_assert(sizeof(UWBP_InputIcon_C) == 0x0003E8, "Wrong size on UWBP_InputIcon_C");
static_assert(offsetof(UWBP_InputIcon_C, UberGraphFrame_WBP_InputIcon_C) == 0x000310, "Member 'UWBP_InputIcon_C::UberGraphFrame_WBP_InputIcon_C' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, BackgroundMask) == 0x000318, "Member 'UWBP_InputIcon_C::BackgroundMask' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, InnerIcon) == 0x000320, "Member 'UWBP_InputIcon_C::InnerIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, InnerSizeBox) == 0x000328, "Member 'UWBP_InputIcon_C::InnerSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, KeyText) == 0x000330, "Member 'UWBP_InputIcon_C::KeyText' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, OuterIcon) == 0x000338, "Member 'UWBP_InputIcon_C::OuterIcon' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, OuterKeyBorder) == 0x000340, "Member 'UWBP_InputIcon_C::OuterKeyBorder' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, OuterSizeBox) == 0x000348, "Member 'UWBP_InputIcon_C::OuterSizeBox' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, InputMappingContext) == 0x000350, "Member 'UWBP_InputIcon_C::InputMappingContext' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, MappedKey) == 0x000358, "Member 'UWBP_InputIcon_C::MappedKey' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, OnHoveredKeyboardKey) == 0x000370, "Member 'UWBP_InputIcon_C::OnHoveredKeyboardKey' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bDisplayWithNoneInput) == 0x000380, "Member 'UWBP_InputIcon_C::bDisplayWithNoneInput' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bDisplayNoneTextFromDataTable) == 0x000381, "Member 'UWBP_InputIcon_C::bDisplayNoneTextFromDataTable' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bHideWhenInputDeviceDoesNotMatchKey) == 0x000382, "Member 'UWBP_InputIcon_C::bHideWhenInputDeviceDoesNotMatchKey' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bRemoveNumpadPrefix) == 0x000383, "Member 'UWBP_InputIcon_C::bRemoveNumpadPrefix' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, BackgroundColor) == 0x000384, "Member 'UWBP_InputIcon_C::BackgroundColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, HighlightColor) == 0x000394, "Member 'UWBP_InputIcon_C::HighlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, ExtraHightlightColor) == 0x0003A4, "Member 'UWBP_InputIcon_C::ExtraHightlightColor' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, DefaultSize) == 0x0003B8, "Member 'UWBP_InputIcon_C::DefaultSize' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, DefaultSizeLarge) == 0x0003C8, "Member 'UWBP_InputIcon_C::DefaultSizeLarge' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, WidthOverride) == 0x0003D8, "Member 'UWBP_InputIcon_C::WidthOverride' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, HeightOverride) == 0x0003DC, "Member 'UWBP_InputIcon_C::HeightOverride' has a wrong offset!");
static_assert(offsetof(UWBP_InputIcon_C, bUpdateIconOnInputDeviceChange) == 0x0003E0, "Member 'UWBP_InputIcon_C::bUpdateIconOnInputDeviceChange' has a wrong offset!");

}

