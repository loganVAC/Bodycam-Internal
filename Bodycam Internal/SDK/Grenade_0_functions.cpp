#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: Grenade_0

#include "Basic.hpp"

#include "Grenade_0_classes.hpp"
#include "Grenade_0_parameters.hpp"


namespace SDK
{

// Function Grenade.Grenade_C.Aim
// (BlueprintCallable, BlueprintEvent)

void AGrenade_C::Aim()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Aim");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.Blow?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Blow__0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::Blow_(bool* Blow__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Blow?");

	Params::Grenade_C_Blow_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Blow__0 != nullptr)
		*Blow__0 = Parms.Blow__0;
}


// Function Grenade.Grenade_C.BndEvt__Grenade_SK_G67_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature
// (HasOutParams, BlueprintEvent)
// Parameters:
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class AActor*                           OtherActor                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              OtherComp                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// struct FVector                          NormalImpulse                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       Hit                                                    (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AGrenade_C::BndEvt__Grenade_SK_G67_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature(class UPrimitiveComponent* HitComponent, class AActor* OtherActor, class UPrimitiveComponent* OtherComp, const struct FVector& NormalImpulse, const struct FHitResult& Hit)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "BndEvt__Grenade_SK_G67_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature");

	Params::Grenade_C_BndEvt__Grenade_SK_G67_K2Node_ComponentBoundEvent_0_ComponentHitSignature__DelegateSignature Parms{};

	Parms.HitComponent = HitComponent;
	Parms.OtherActor = OtherActor;
	Parms.OtherComp = OtherComp;
	Parms.NormalImpulse = std::move(NormalImpulse);
	Parms.Hit = std::move(Hit);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.CanInterract
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Interract_                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::CanInterract(bool* Interract_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "CanInterract");

	Params::Grenade_C_CanInterract Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Interract_ != nullptr)
		*Interract_ = Parms.Interract_;
}


// Function Grenade.Grenade_C.CanPickup
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AALS_AnimMan_CharacterBP_C*       Player                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// bool                                    Pickup_                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::CanPickup(class AALS_AnimMan_CharacterBP_C* Player, bool* Pickup_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "CanPickup");

	Params::Grenade_C_CanPickup Parms{};

	Parms.Player = Player;

	UObject::ProcessEvent(Func, &Parms);

	if (Pickup_ != nullptr)
		*Pickup_ = Parms.Pickup_;
}


// Function Grenade.Grenade_C.CanSwap?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsItemSwap_                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::CanSwap_(bool* IsItemSwap_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "CanSwap?");

	Params::Grenade_C_CanSwap_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsItemSwap_ != nullptr)
		*IsItemSwap_ = Parms.IsItemSwap_;
}


// Function Grenade.Grenade_C.Drop
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::Drop(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Drop");

	Params::Grenade_C_Drop Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.Drop (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AGrenade_C::Drop__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Drop (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.ExecuteUbergraph_Grenade
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::ExecuteUbergraph_Grenade(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "ExecuteUbergraph_Grenade");

	Params::Grenade_C_ExecuteUbergraph_Grenade Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.Explosion (Mulitcast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void AGrenade_C::Explosion__Mulitcast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Explosion (Mulitcast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.Explosion (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)

void AGrenade_C::Explosion__Server_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Explosion (Server)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.GetItemPriority
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   Priority                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::GetItemPriority(int32* Priority)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "GetItemPriority");

	Params::Grenade_C_GetItemPriority Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Priority != nullptr)
		*Priority = Parms.Priority;
}


// Function Grenade.Grenade_C.GetOffset
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FTransform                       Offset                                                 (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::GetOffset(struct FTransform* Offset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "GetOffset");

	Params::Grenade_C_GetOffset Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Offset != nullptr)
		*Offset = std::move(Parms.Offset);
}


// Function Grenade.Grenade_C.GetOverlay
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EALS_OverlayState                       Overlay                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::GetOverlay(EALS_OverlayState* Overlay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "GetOverlay");

	Params::Grenade_C_GetOverlay Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Overlay != nullptr)
		*Overlay = Parms.Overlay;
}


// Function Grenade.Grenade_C.GetSocketToAttach
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             SocketToAttach                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::GetSocketToAttach(class FName* SocketToAttach)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "GetSocketToAttach");

	Params::Grenade_C_GetSocketToAttach Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SocketToAttach != nullptr)
		*SocketToAttach = Parms.SocketToAttach;
}


// Function Grenade.Grenade_C.GrenadeActivation
// (Public, BlueprintCallable, BlueprintEvent)

void AGrenade_C::GrenadeActivation()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "GrenadeActivation");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.GrenadeExplosion
// (Public, BlueprintCallable, BlueprintEvent)

void AGrenade_C::GrenadeExplosion()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "GrenadeExplosion");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.Interract
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APawn*                            Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::Interract(class APawn* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Interract");

	Params::Grenade_C_Interract Parms{};

	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.InterractDoor
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Z_Angle                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    ResetDoor                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::InterractDoor(double Z_Angle, bool ResetDoor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "InterractDoor");

	Params::Grenade_C_InterractDoor Parms{};

	Parms.Z_Angle = Z_Angle;
	Parms.ResetDoor = ResetDoor;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.IsDefaultHandle
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsDefaultHandle_                                       (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::IsDefaultHandle(bool* IsDefaultHandle_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "IsDefaultHandle");

	Params::Grenade_C_IsDefaultHandle Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsDefaultHandle_ != nullptr)
		*IsDefaultHandle_ = Parms.IsDefaultHandle_;
}


// Function Grenade.Grenade_C.Item Focus
// (Public, BlueprintCallable, BlueprintEvent)

void AGrenade_C::Item_Focus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Item Focus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.LeftClickEvent
// (Public, BlueprintCallable, BlueprintEvent)

void AGrenade_C::LeftClickEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "LeftClickEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.LeftClickReleaseEvent
// (Public, BlueprintCallable, BlueprintEvent)

void AGrenade_C::LeftClickReleaseEvent()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "LeftClickReleaseEvent");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.Pickup
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AALS_AnimMan_CharacterBP_C*       Owner_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::Pickup(class AALS_AnimMan_CharacterBP_C* Owner_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Pickup");

	Params::Grenade_C_Pickup Parms{};

	Parms.Owner_0 = Owner_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.Pickup (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class AALS_AnimMan_CharacterBP_C*       PlayerAttached_0                                       (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::Pickup__Server_(class AALS_AnimMan_CharacterBP_C* PlayerAttached_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Pickup (Server)");

	Params::Grenade_C_Pickup__Server_ Parms{};

	Parms.PlayerAttached_0 = PlayerAttached_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void AGrenade_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function Grenade.Grenade_C.ReceivePointDamage
// (BlueprintAuthorityOnly, Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// float                                   Damage                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UDamageType*                      DamageType                                             (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          HitNormal                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class UPrimitiveComponent*              HitComponent                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)
// class FName                             BoneName                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          ShotFromDirection                                      (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class AController*                      InstigatedBy                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class AActor*                           DamageCauser                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// struct FHitResult                       HitInfo                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, IsPlainOldData, NoDestructor, ContainsInstancedReference)

void AGrenade_C::ReceivePointDamage(float Damage, const class UDamageType* DamageType, const struct FVector& HitLocation, const struct FVector& HitNormal, class UPrimitiveComponent* HitComponent, class FName BoneName, const struct FVector& ShotFromDirection, class AController* InstigatedBy, class AActor* DamageCauser, const struct FHitResult& HitInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "ReceivePointDamage");

	Params::Grenade_C_ReceivePointDamage Parms{};

	Parms.Damage = Damage;
	Parms.DamageType = DamageType;
	Parms.HitLocation = std::move(HitLocation);
	Parms.HitNormal = std::move(HitNormal);
	Parms.HitComponent = HitComponent;
	Parms.BoneName = BoneName;
	Parms.ShotFromDirection = std::move(ShotFromDirection);
	Parms.InstigatedBy = InstigatedBy;
	Parms.DamageCauser = DamageCauser;
	Parms.HitInfo = std::move(HitInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.Set Simulate Physics (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bSimulate                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::Set_Simulate_Physics__Multicast_(bool bSimulate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Set Simulate Physics (Multicast)");

	Params::Grenade_C_Set_Simulate_Physics__Multicast_ Parms{};

	Parms.bSimulate = bSimulate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.SwitchAnimation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UAnimMontage*                     In                                                     (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class UAnimMontage*                     Out                                                    (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        InSound                                                (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// class USoundCue*                        OutSound                                               (Parm, OutParm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::SwitchAnimation(class UAnimMontage** In, class UAnimMontage** Out, class USoundCue** InSound, class USoundCue** OutSound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "SwitchAnimation");

	Params::Grenade_C_SwitchAnimation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (In != nullptr)
		*In = Parms.In;

	if (Out != nullptr)
		*Out = Parms.Out;

	if (InSound != nullptr)
		*InSound = Parms.InSound;

	if (OutSound != nullptr)
		*OutSound = Parms.OutSound;
}


// Function Grenade.Grenade_C.Throw (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::Throw__Multicast_(const struct FVector& NewLocation, const struct FVector& InVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Throw (Multicast)");

	Params::Grenade_C_Throw__Multicast_ Parms{};

	Parms.NewLocation = std::move(NewLocation);
	Parms.InVector = std::move(InVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.Throw (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector                          NewLocation                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FVector                          InVector                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void AGrenade_C::Throw__Server_(const struct FVector& NewLocation, const struct FVector& InVector)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "Throw (Server)");

	Params::Grenade_C_Throw__Server_ Parms{};

	Parms.NewLocation = std::move(NewLocation);
	Parms.InVector = std::move(InVector);

	UObject::ProcessEvent(Func, &Parms);
}


// Function Grenade.Grenade_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AGrenade_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("Grenade_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

