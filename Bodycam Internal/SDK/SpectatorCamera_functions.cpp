#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpectatorCamera

#include "Basic.hpp"

#include "SpectatorCamera_classes.hpp"
#include "SpectatorCamera_parameters.hpp"


namespace SDK
{

// Function SpectatorCamera.SpectatorCamera_C.ExecuteUbergraph_SpectatorCamera
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ASpectatorCamera_C::ExecuteUbergraph_SpectatorCamera(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "ExecuteUbergraph_SpectatorCamera");

	Params::SpectatorCamera_C_ExecuteUbergraph_SpectatorCamera Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpectatorCamera.SpectatorCamera_C.GetPlayerValid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_PCInfo>              ValidPlayer_Return                                     (Parm, OutParm)

void ASpectatorCamera_C::GetPlayerValid(TArray<struct FSTR_PCInfo>* ValidPlayer_Return)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "GetPlayerValid");

	Params::SpectatorCamera_C_GetPlayerValid Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ValidPlayer_Return != nullptr)
		*ValidPlayer_Return = std::move(Parms.ValidPlayer_Return);
}


// Function SpectatorCamera.SpectatorCamera_C.Init
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASpectatorCamera_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpectatorCamera.SpectatorCamera_C.InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASpectatorCamera_C::InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1");

	Params::SpectatorCamera_C_InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpectatorCamera.SpectatorCamera_C.InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (BlueprintVisible, BlueprintReadOnly, Parm, HasGetValueTypeHash)

void ASpectatorCamera_C::InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0");

	Params::SpectatorCamera_C_InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpectatorCamera.SpectatorCamera_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASpectatorCamera_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "ReceivePossessed");

	Params::SpectatorCamera_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpectatorCamera.SpectatorCamera_C.ReceiveUnpossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      OldController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ASpectatorCamera_C::ReceiveUnpossessed(class AController* OldController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "ReceiveUnpossessed");

	Params::SpectatorCamera_C_ReceiveUnpossessed Parms{};

	Parms.OldController = OldController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function SpectatorCamera.SpectatorCamera_C.RemoveHud(Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ASpectatorCamera_C::RemoveHud_Multicast_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "RemoveHud(Multicast)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpectatorCamera.SpectatorCamera_C.SpawnHUD (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASpectatorCamera_C::SpawnHUD__Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "SpawnHUD (Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function SpectatorCamera.SpectatorCamera_C.Switch (client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ASpectatorCamera_C::Switch__client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("SpectatorCamera_C", "Switch (client)");

	UObject::ProcessEvent(Func, nullptr);
}

}

