#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: STR_GamemodeWinInfo

#include "Basic.hpp"

#include "GameMode_structs.hpp"


namespace SDK
{

// UserDefinedStruct STR_GamemodeWinInfo.STR_GamemodeWinInfo
// 0x0040 (0x0040 - 0x0000)
struct FSTR_GamemodeWinInfo final
{
public:
	EGameMode                                     Gamemode_10_D2AF17924EF823C406E8F884E3296EAE;      // 0x0000(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         RankWin_12_360590724FDBF4E3F1D1D0B17B1CD12F;       // 0x0004(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         RankLoose_14_E5B39B85464EC720314F9C8E3F4004A8;     // 0x0008(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ReissadWin_16_BC7374D84675E15A7CF653A159CEF0B2;    // 0x000C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          TeamsGamemode__21_018195884F84291BB8E72E910ABAEA9E; // 0x0010(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          RoundBased__26_C051E7FA4E8903540AA15AB9955D9AF9;   // 0x0011(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         ScoreToWin_34_E11724CE4A6AFA984B705EBE32002975;    // 0x0014(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	double                                        GamemodeTime_24_23102CA8406A1045DAD230BC6399C64A;  // 0x0018(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MaxKill_29_E90AD68D495497F0DD959C8BB35444DA;       // 0x0020(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChooseTeam_31_88734B714E1A9B2FB763AAB4CAD5C211;    // 0x0024(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         MaxPlayer_37_0BC34AFC4DF2B3122BF2F189D60E0CA4;     // 0x0028(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         MinPlayer_39_ADD2EB3B4ED266398AB32D9555452922;     // 0x002C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          AllowGrenade__43_2B768C8B45DB56CC0B9A1985580427F4; // 0x0030(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          ChillMode_45_CACBFE844CE2CFE142D325AFF21442D6;     // 0x0031(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	double                                        DestroyActorDelay_48_3C77C0114DE26D64235070BD67918F88; // 0x0038(0x0008)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(FSTR_GamemodeWinInfo) == 0x000008, "Wrong alignment on FSTR_GamemodeWinInfo");
static_assert(sizeof(FSTR_GamemodeWinInfo) == 0x000040, "Wrong size on FSTR_GamemodeWinInfo");
static_assert(offsetof(FSTR_GamemodeWinInfo, Gamemode_10_D2AF17924EF823C406E8F884E3296EAE) == 0x000000, "Member 'FSTR_GamemodeWinInfo::Gamemode_10_D2AF17924EF823C406E8F884E3296EAE' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, RankWin_12_360590724FDBF4E3F1D1D0B17B1CD12F) == 0x000004, "Member 'FSTR_GamemodeWinInfo::RankWin_12_360590724FDBF4E3F1D1D0B17B1CD12F' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, RankLoose_14_E5B39B85464EC720314F9C8E3F4004A8) == 0x000008, "Member 'FSTR_GamemodeWinInfo::RankLoose_14_E5B39B85464EC720314F9C8E3F4004A8' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, ReissadWin_16_BC7374D84675E15A7CF653A159CEF0B2) == 0x00000C, "Member 'FSTR_GamemodeWinInfo::ReissadWin_16_BC7374D84675E15A7CF653A159CEF0B2' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, TeamsGamemode__21_018195884F84291BB8E72E910ABAEA9E) == 0x000010, "Member 'FSTR_GamemodeWinInfo::TeamsGamemode__21_018195884F84291BB8E72E910ABAEA9E' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, RoundBased__26_C051E7FA4E8903540AA15AB9955D9AF9) == 0x000011, "Member 'FSTR_GamemodeWinInfo::RoundBased__26_C051E7FA4E8903540AA15AB9955D9AF9' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, ScoreToWin_34_E11724CE4A6AFA984B705EBE32002975) == 0x000014, "Member 'FSTR_GamemodeWinInfo::ScoreToWin_34_E11724CE4A6AFA984B705EBE32002975' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, GamemodeTime_24_23102CA8406A1045DAD230BC6399C64A) == 0x000018, "Member 'FSTR_GamemodeWinInfo::GamemodeTime_24_23102CA8406A1045DAD230BC6399C64A' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, MaxKill_29_E90AD68D495497F0DD959C8BB35444DA) == 0x000020, "Member 'FSTR_GamemodeWinInfo::MaxKill_29_E90AD68D495497F0DD959C8BB35444DA' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, ChooseTeam_31_88734B714E1A9B2FB763AAB4CAD5C211) == 0x000024, "Member 'FSTR_GamemodeWinInfo::ChooseTeam_31_88734B714E1A9B2FB763AAB4CAD5C211' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, MaxPlayer_37_0BC34AFC4DF2B3122BF2F189D60E0CA4) == 0x000028, "Member 'FSTR_GamemodeWinInfo::MaxPlayer_37_0BC34AFC4DF2B3122BF2F189D60E0CA4' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, MinPlayer_39_ADD2EB3B4ED266398AB32D9555452922) == 0x00002C, "Member 'FSTR_GamemodeWinInfo::MinPlayer_39_ADD2EB3B4ED266398AB32D9555452922' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, AllowGrenade__43_2B768C8B45DB56CC0B9A1985580427F4) == 0x000030, "Member 'FSTR_GamemodeWinInfo::AllowGrenade__43_2B768C8B45DB56CC0B9A1985580427F4' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, ChillMode_45_CACBFE844CE2CFE142D325AFF21442D6) == 0x000031, "Member 'FSTR_GamemodeWinInfo::ChillMode_45_CACBFE844CE2CFE142D325AFF21442D6' has a wrong offset!");
static_assert(offsetof(FSTR_GamemodeWinInfo, DestroyActorDelay_48_3C77C0114DE26D64235070BD67918F88) == 0x000038, "Member 'FSTR_GamemodeWinInfo::DestroyActorDelay_48_3C77C0114DE26D64235070BD67918F88' has a wrong offset!");

}

