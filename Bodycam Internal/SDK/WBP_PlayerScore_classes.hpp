#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WBP_PlayerScore

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SteamCorePro_structs.hpp"
#include "WBP_InteractableMenu_classes.hpp"
#include "EInputDeviceType_structs.hpp"
#include "ETransitionAnimation_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WBP_PlayerScore.WBP_PlayerScore_C
// 0x0090 (0x0418 - 0x0388)
class UWBP_PlayerScore_C final : public UWBP_InteractableMenu_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WBP_PlayerScore_C;                  // 0x0388(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       Hover;                                             // 0x0390(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UWidgetAnimation*                       Init;                                              // 0x0398(0x0008)(BlueprintVisible, BlueprintReadOnly, ZeroConstructor, Transient, RepSkip, NoDestructor, HasGetValueTypeHash)
	class UButton*                                Button_68;                                         // 0x03A0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             LVL_POINT;                                         // 0x03A8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UOverlay*                               Overlay_Rank;                                      // 0x03B0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PlayerName;                                        // 0x03B8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PriceR;                                            // 0x03C0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             PriceRtext;                                        // 0x03C8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             RANK_PLACE;                                        // 0x03D0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_FriendPP_C*                        WBP_FriendPP;                                      // 0x03D8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UWBP_Rank_C*                            WBP_Rank;                                          // 0x03E0(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	class UTextBlock*                             XP_POINT;                                          // 0x03E8(0x0008)(BlueprintVisible, ExportObject, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, InstancedReference, RepSkip, NoDestructor, PersistentInstance, HasGetValueTypeHash)
	bool                                          bIsRefreshing;                                     // 0x03F0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	ESteamLeaderboardDataRequest                  Request;                                           // 0x03F1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_3F2[0x2];                                      // 0x03F2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         APPRENTICE;                                        // 0x03F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         VETERANT;                                          // 0x03F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ELITE;                                             // 0x03FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         PRO;                                               // 0x0400(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         ROOKIE;                                            // 0x0404(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         Master;                                            // 0x0408(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	int32                                         LEGENDARY;                                         // 0x040C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	struct FSteamID                               User_Steam_ID;                                     // 0x0410(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance, NoDestructor)

public:
	void BndEvt__WBP_PlayerScore_Button_68_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature();
	void BndEvt__WBP_PlayerScore_Button_68_K2Node_ComponentBoundEvent_1_OnButtonHoverEvent__DelegateSignature();
	void BndEvt__WBP_PlayerScore_Button_68_K2Node_ComponentBoundEvent_2_OnButtonHoverEvent__DelegateSignature();
	void Construct();
	void ExecuteUbergraph_WBP_PlayerScore(int32 EntryPoint);
	void Load_Player_Tab();
	void OnCallback_D286E4BF4350893996DCE6A0C6D7274E(const struct FLeaderboardScoresDownloadedForUsers& Data, bool bWasSuccessful);
	void OnFooterButtonBack();
	void OnNavigationEnter(class UWBP_InteractableMenu_C* NavigateFromMenu, EInputDeviceType InputDeviceType);
	void OnNavigationExit(TSoftClassPtr<class UClass> ToMenu, const class FString& MenuLayer_0, ETransitionAnimation TransitionAnimation, double TransitionSpeed, class UObject* InPayload);
	void PreConstruct(bool IsDesignTime);
	void RefreshReissadScore__WBP_PlayerScore_(int32 Value);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WBP_PlayerScore_C">();
	}
	static class UWBP_PlayerScore_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWBP_PlayerScore_C>();
	}
};
static_assert(alignof(UWBP_PlayerScore_C) == 0x000008, "Wrong alignment on UWBP_PlayerScore_C");
static_assert(sizeof(UWBP_PlayerScore_C) == 0x000418, "Wrong size on UWBP_PlayerScore_C");
static_assert(offsetof(UWBP_PlayerScore_C, UberGraphFrame_WBP_PlayerScore_C) == 0x000388, "Member 'UWBP_PlayerScore_C::UberGraphFrame_WBP_PlayerScore_C' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, Hover) == 0x000390, "Member 'UWBP_PlayerScore_C::Hover' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, Init) == 0x000398, "Member 'UWBP_PlayerScore_C::Init' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, Button_68) == 0x0003A0, "Member 'UWBP_PlayerScore_C::Button_68' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, LVL_POINT) == 0x0003A8, "Member 'UWBP_PlayerScore_C::LVL_POINT' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, Overlay_Rank) == 0x0003B0, "Member 'UWBP_PlayerScore_C::Overlay_Rank' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, PlayerName) == 0x0003B8, "Member 'UWBP_PlayerScore_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, PriceR) == 0x0003C0, "Member 'UWBP_PlayerScore_C::PriceR' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, PriceRtext) == 0x0003C8, "Member 'UWBP_PlayerScore_C::PriceRtext' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, RANK_PLACE) == 0x0003D0, "Member 'UWBP_PlayerScore_C::RANK_PLACE' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, WBP_FriendPP) == 0x0003D8, "Member 'UWBP_PlayerScore_C::WBP_FriendPP' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, WBP_Rank) == 0x0003E0, "Member 'UWBP_PlayerScore_C::WBP_Rank' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, XP_POINT) == 0x0003E8, "Member 'UWBP_PlayerScore_C::XP_POINT' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, bIsRefreshing) == 0x0003F0, "Member 'UWBP_PlayerScore_C::bIsRefreshing' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, Request) == 0x0003F1, "Member 'UWBP_PlayerScore_C::Request' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, APPRENTICE) == 0x0003F4, "Member 'UWBP_PlayerScore_C::APPRENTICE' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, VETERANT) == 0x0003F8, "Member 'UWBP_PlayerScore_C::VETERANT' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, ELITE) == 0x0003FC, "Member 'UWBP_PlayerScore_C::ELITE' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, PRO) == 0x000400, "Member 'UWBP_PlayerScore_C::PRO' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, ROOKIE) == 0x000404, "Member 'UWBP_PlayerScore_C::ROOKIE' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, Master) == 0x000408, "Member 'UWBP_PlayerScore_C::Master' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, LEGENDARY) == 0x00040C, "Member 'UWBP_PlayerScore_C::LEGENDARY' has a wrong offset!");
static_assert(offsetof(UWBP_PlayerScore_C, User_Steam_ID) == 0x000410, "Member 'UWBP_PlayerScore_C::User_Steam_ID' has a wrong offset!");

}

