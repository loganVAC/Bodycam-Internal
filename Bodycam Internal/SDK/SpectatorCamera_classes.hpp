#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SpectatorCamera

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "STR_PCInfo_structs.hpp"
#include "E_Team_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass SpectatorCamera.SpectatorCamera_C
// 0x0080 (0x0398 - 0x0318)
class ASpectatorCamera_C final : public APawn
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0318(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x0320(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USpringArmComponent*                    SpringArm;                                         // 0x0328(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x0330(0x0008)(BlueprintVisible, ZeroConstructor, InstancedReference, NonTransactional, NoDestructor, HasGetValueTypeHash)
	struct FSTR_PCInfo                            Current_Viewed_Info;                               // 0x0338(0x0040)(Edit, BlueprintVisible, Net, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	class USpectatorHud_C*                        SpectatorHud;                                      // 0x0378(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, InstancedReference, NoDestructor, HasGetValueTypeHash)
	class FString                                 Steam_ID;                                          // 0x0380(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, HasGetValueTypeHash)
	int32                                         Index_0;                                           // 0x0390(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

public:
	void ExecuteUbergraph_SpectatorCamera(int32 EntryPoint);
	void GetPlayerValid(TArray<struct FSTR_PCInfo>* ValidPlayer_Return);
	void Init();
	void InpActEvt_LeftMouseButton_K2Node_InputKeyEvent_1(const struct FKey& Key);
	void InpActEvt_RightMouseButton_K2Node_InputKeyEvent_0(const struct FKey& Key);
	void ReceivePossessed(class AController* NewController);
	void ReceiveUnpossessed(class AController* OldController);
	void RemoveHud_Multicast_();
	void SpawnHUD__Client_();
	void Switch__client_();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"SpectatorCamera_C">();
	}
	static class ASpectatorCamera_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ASpectatorCamera_C>();
	}
};
static_assert(alignof(ASpectatorCamera_C) == 0x000008, "Wrong alignment on ASpectatorCamera_C");
static_assert(sizeof(ASpectatorCamera_C) == 0x000398, "Wrong size on ASpectatorCamera_C");
static_assert(offsetof(ASpectatorCamera_C, UberGraphFrame) == 0x000318, "Member 'ASpectatorCamera_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ASpectatorCamera_C, Camera) == 0x000320, "Member 'ASpectatorCamera_C::Camera' has a wrong offset!");
static_assert(offsetof(ASpectatorCamera_C, SpringArm) == 0x000328, "Member 'ASpectatorCamera_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ASpectatorCamera_C, DefaultSceneRoot) == 0x000330, "Member 'ASpectatorCamera_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ASpectatorCamera_C, Current_Viewed_Info) == 0x000338, "Member 'ASpectatorCamera_C::Current_Viewed_Info' has a wrong offset!");
static_assert(offsetof(ASpectatorCamera_C, SpectatorHud) == 0x000378, "Member 'ASpectatorCamera_C::SpectatorHud' has a wrong offset!");
static_assert(offsetof(ASpectatorCamera_C, Steam_ID) == 0x000380, "Member 'ASpectatorCamera_C::Steam_ID' has a wrong offset!");
static_assert(offsetof(ASpectatorCamera_C, Index_0) == 0x000390, "Member 'ASpectatorCamera_C::Index_0' has a wrong offset!");

}

