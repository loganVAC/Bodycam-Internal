#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UI_ExpandableSection

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function UI_ExpandableSection.UI_ExpandableSection_C.ExecuteUbergraph_UI_ExpandableSection
// 0x0050 (0x0050 - 0x0000)
struct UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable;                                // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable;                                // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_1;                              // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          Temp_bool_Variable_1;                              // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_2;                              // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          Temp_byte_Variable_3;                              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          K2Node_Event_IsDesignTime;                         // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x000C(0x0014)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor_1;                    // 0x0020(0x0014)()
	bool                                          CallFunc_GetIsExpanded_ReturnValue;                // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default;                             // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_37[0x1];                                       // 0x0037(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue;                // 0x0038(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
	EUMGSequencePlayMode                          K2Node_Select_Default_1;                           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUMGSequencePlayer*                     CallFunc_PlayAnimation_ReturnValue_1;              // 0x0048(0x0008)(ZeroConstructor, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection) == 0x000008, "Wrong alignment on UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection");
static_assert(sizeof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection) == 0x000050, "Wrong size on UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, EntryPoint) == 0x000000, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::EntryPoint' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, Temp_bool_Variable) == 0x000004, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::Temp_bool_Variable' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, Temp_byte_Variable) == 0x000005, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::Temp_byte_Variable' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, Temp_byte_Variable_1) == 0x000006, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::Temp_byte_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, Temp_bool_Variable_1) == 0x000007, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::Temp_bool_Variable_1' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, Temp_byte_Variable_2) == 0x000008, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::Temp_byte_Variable_2' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, Temp_byte_Variable_3) == 0x000009, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::Temp_byte_Variable_3' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, K2Node_Event_IsDesignTime) == 0x00000A, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::K2Node_Event_IsDesignTime' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, K2Node_MakeStruct_SlateColor) == 0x00000C, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, K2Node_MakeStruct_SlateColor_1) == 0x000020, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::K2Node_MakeStruct_SlateColor_1' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, CallFunc_GetIsExpanded_ReturnValue) == 0x000034, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::CallFunc_GetIsExpanded_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, K2Node_Select_Default) == 0x000035, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, CallFunc_Not_PreBool_ReturnValue) == 0x000036, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, CallFunc_PlayAnimation_ReturnValue) == 0x000038, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::CallFunc_PlayAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, K2Node_Select_Default_1) == 0x000040, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::K2Node_Select_Default_1' has a wrong offset!");
static_assert(offsetof(UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection, CallFunc_PlayAnimation_ReturnValue_1) == 0x000048, "Member 'UI_ExpandableSection_C_ExecuteUbergraph_UI_ExpandableSection::CallFunc_PlayAnimation_ReturnValue_1' has a wrong offset!");

// Function UI_ExpandableSection.UI_ExpandableSection_C.PreConstruct
// 0x0001 (0x0001 - 0x0000)
struct UI_ExpandableSection_C_PreConstruct final
{
public:
	bool                                          IsDesignTime;                                      // 0x0000(0x0001)(BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
};
static_assert(alignof(UI_ExpandableSection_C_PreConstruct) == 0x000001, "Wrong alignment on UI_ExpandableSection_C_PreConstruct");
static_assert(sizeof(UI_ExpandableSection_C_PreConstruct) == 0x000001, "Wrong size on UI_ExpandableSection_C_PreConstruct");
static_assert(offsetof(UI_ExpandableSection_C_PreConstruct, IsDesignTime) == 0x000000, "Member 'UI_ExpandableSection_C_PreConstruct::IsDesignTime' has a wrong offset!");

}

