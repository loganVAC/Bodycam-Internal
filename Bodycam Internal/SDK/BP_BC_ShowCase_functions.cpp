#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_BC_ShowCase

#include "Basic.hpp"

#include "BP_BC_ShowCase_classes.hpp"
#include "BP_BC_ShowCase_parameters.hpp"


namespace SDK
{

// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Apply SAVED > TEMPORARY
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::Apply_SAVED___TEMPORARY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Apply SAVED > TEMPORARY");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Apply TEMPORARY > SAVED
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::Apply_TEMPORARY___SAVED()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Apply TEMPORARY > SAVED");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.BreakTimer
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::BreakTimer()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "BreakTimer");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.CanCreateKickVote
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    CanCreateKickVote_                                     (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::CanCreateKickVote(bool* CanCreateKickVote_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "CanCreateKickVote");

	Params::BP_BC_ShowCase_C_CanCreateKickVote Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CanCreateKickVote_ != nullptr)
		*CanCreateKickVote_ = Parms.CanCreateKickVote_;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.CanKickThisPlayer?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           PlayerID                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    True_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::CanKickThisPlayer_(const class FString& PlayerID, bool* True_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "CanKickThisPlayer?");

	Params::BP_BC_ShowCase_C_CanKickThisPlayer_ Parms{};

	Parms.PlayerID = std::move(PlayerID);

	UObject::ProcessEvent(Func, &Parms);

	if (True_ != nullptr)
		*True_ = Parms.True_;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ChangeAnim
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class ULevelSequence*                   LevelSequence                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::ChangeAnim(class ULevelSequence* LevelSequence)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "ChangeAnim");

	Params::BP_BC_ShowCase_C_ChangeAnim Parms{};

	Parms.LevelSequence = LevelSequence;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ClearMap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::ClearMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "ClearMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Create Save Local
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::Create_Save_Local()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Create Save Local");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.DestroyVOIP
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::DestroyVOIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "DestroyVOIP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Download Steam Save
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::Download_Steam_Save()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Download Steam Save");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Event Ragdoll End
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::Event_Ragdoll_End()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Event Ragdoll End");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.EventRagdollStart
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::EventRagdollStart()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "EventRagdollStart");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ExecuteUbergraph_BP_BC_ShowCase
// (Final, UbergraphFunction, HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::ExecuteUbergraph_BP_BC_ShowCase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "ExecuteUbergraph_BP_BC_ShowCase");

	Params::BP_BC_ShowCase_C_ExecuteUbergraph_BP_BC_ShowCase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Get BP Menu Controller Component
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MenuControllerComponent_C*    BP_Menu_Controller_Component                           (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::Get_BP_Menu_Controller_Component(class UBP_MenuControllerComponent_C** BP_Menu_Controller_Component)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Get BP Menu Controller Component");

	Params::BP_BC_ShowCase_C_Get_BP_Menu_Controller_Component Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BP_Menu_Controller_Component != nullptr)
		*BP_Menu_Controller_Component = Parms.BP_Menu_Controller_Component;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Get Stamina
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Stamina                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::Get_Stamina(double* Stamina)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Get Stamina");

	Params::BP_BC_ShowCase_C_Get_Stamina Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Stamina != nullptr)
		*Stamina = Parms.Stamina;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetBlured
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Blured                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetBlured(double* Blured)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetBlured");

	Params::BP_BC_ShowCase_C_GetBlured Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Blured != nullptr)
		*Blured = Parms.Blured;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetBurnedRef
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USceneComponent*                  BurnedMesh                                             (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetBurnedRef(class USceneComponent** BurnedMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetBurnedRef");

	Params::BP_BC_ShowCase_C_GetBurnedRef Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BurnedMesh != nullptr)
		*BurnedMesh = Parms.BurnedMesh;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetFlashBangEffect
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  FlashEffect                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetFlashBangEffect(double* FlashEffect)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetFlashBangEffect");

	Params::BP_BC_ShowCase_C_GetFlashBangEffect Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (FlashEffect != nullptr)
		*FlashEffect = Parms.FlashEffect;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetGameMode
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_GamemodeWinInfo             GameMode                                               (Parm, OutParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetGameMode(struct FSTR_GamemodeWinInfo* GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetGameMode");

	Params::BP_BC_ShowCase_C_GetGameMode Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GameMode != nullptr)
		*GameMode = std::move(Parms.GameMode);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetHealth
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Health                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetHealth(double* Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetHealth");

	Params::BP_BC_ShowCase_C_GetHealth Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Health != nullptr)
		*Health = Parms.Health;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetKickedPlayerVoted
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   KickplayerAlreadyVote                                  (Parm, OutParm)

void ABP_BC_ShowCase_C::GetKickedPlayerVoted(TArray<class FString>* KickplayerAlreadyVote)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetKickedPlayerVoted");

	Params::BP_BC_ShowCase_C_GetKickedPlayerVoted Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KickplayerAlreadyVote != nullptr)
		*KickplayerAlreadyVote = std::move(Parms.KickplayerAlreadyVote);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetMenuSettings
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UBP_MenuControllerComponent_C*    Bp_MenuController                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetMenuSettings(class UBP_MenuControllerComponent_C** Bp_MenuController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetMenuSettings");

	Params::BP_BC_ShowCase_C_GetMenuSettings Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Bp_MenuController != nullptr)
		*Bp_MenuController = Parms.Bp_MenuController;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetMutePlayer
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<class FString>                   MutePlayer                                             (Parm, OutParm)

void ABP_BC_ShowCase_C::GetMutePlayer(TArray<class FString>* MutePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetMutePlayer");

	Params::BP_BC_ShowCase_C_GetMutePlayer Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (MutePlayer != nullptr)
		*MutePlayer = std::move(Parms.MutePlayer);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetPlayerConnected
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_PCInfo>              PlayerConnected                                        (Parm, OutParm)

void ABP_BC_ShowCase_C::GetPlayerConnected(TArray<struct FSTR_PCInfo>* PlayerConnected)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetPlayerConnected");

	Params::BP_BC_ShowCase_C_GetPlayerConnected Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (PlayerConnected != nullptr)
		*PlayerConnected = std::move(Parms.PlayerConnected);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetPlayerKickVote
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_KickVote>            KickVotePlayer                                         (Parm, OutParm)

void ABP_BC_ShowCase_C::GetPlayerKickVote(TArray<struct FSTR_KickVote>* KickVotePlayer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetPlayerKickVote");

	Params::BP_BC_ShowCase_C_GetPlayerKickVote Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (KickVotePlayer != nullptr)
		*KickVotePlayer = std::move(Parms.KickVotePlayer);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetPlayerSkin
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_TEST                        Player_Skin                                            (Parm, OutParm, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetPlayerSkin(struct FSTR_TEST* Player_Skin, bool* Valid_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetPlayerSkin");

	Params::BP_BC_ShowCase_C_GetPlayerSkin Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Player_Skin != nullptr)
		*Player_Skin = std::move(Parms.Player_Skin);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetRagdollSystem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWW_RagdollSystem_C*              Ragdoll_System                                         (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetRagdollSystem(class UWW_RagdollSystem_C** Ragdoll_System)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetRagdollSystem");

	Params::BP_BC_ShowCase_C_GetRagdollSystem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ragdoll_System != nullptr)
		*Ragdoll_System = Parms.Ragdoll_System;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetReady?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReady_                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetReady_(bool* IsReady_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetReady?");

	Params::BP_BC_ShowCase_C_GetReady_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsReady_ != nullptr)
		*IsReady_ = Parms.IsReady_;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetServerSteamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetServerSteamID(class FString* SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetServerSteamID");

	Params::BP_BC_ShowCase_C_GetServerSteamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SteamID != nullptr)
		*SteamID = std::move(Parms.SteamID);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetStarterWeapons
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_Actor>               Weapons_0                                              (Parm, OutParm)

void ABP_BC_ShowCase_C::GetStarterWeapons(TArray<struct FSTR_Actor>* Weapons_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetStarterWeapons");

	Params::BP_BC_ShowCase_C_GetStarterWeapons Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Weapons_0 != nullptr)
		*Weapons_0 = std::move(Parms.Weapons_0);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetSteamID
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (Parm, OutParm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetSteamID(class FString* SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetSteamID");

	Params::BP_BC_ShowCase_C_GetSteamID Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SteamID != nullptr)
		*SteamID = std::move(Parms.SteamID);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetSurvivorStatuts
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWW_SurvivorStatus_C*             SurvivorComponant                                      (Parm, OutParm, ZeroConstructor, InstancedReference, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetSurvivorStatuts(class UWW_SurvivorStatus_C** SurvivorComponant)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetSurvivorStatuts");

	Params::BP_BC_ShowCase_C_GetSurvivorStatuts Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SurvivorComponant != nullptr)
		*SurvivorComponant = Parms.SurvivorComponant;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetTeam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Team                                  Team                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::GetTeam(E_Team* Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetTeam");

	Params::BP_BC_ShowCase_C_GetTeam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Team != nullptr)
		*Team = Parms.Team;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetTeamList
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Team                                  Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// TArray<struct FSTR_PCInfo>              Info                                                   (Parm, OutParm)

void ABP_BC_ShowCase_C::GetTeamList(E_Team Team, TArray<struct FSTR_PCInfo>* Info)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetTeamList");

	Params::BP_BC_ShowCase_C_GetTeamList Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);

	if (Info != nullptr)
		*Info = std::move(Parms.Info);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.GetTopScore
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FSTR_PCInfo>              TopScore                                               (Parm, OutParm)

void ABP_BC_ShowCase_C::GetTopScore(TArray<struct FSTR_PCInfo>* TopScore)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "GetTopScore");

	Params::BP_BC_ShowCase_C_GetTopScore Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (TopScore != nullptr)
		*TopScore = std::move(Parms.TopScore);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Init
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::Init()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Init");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.InitScoreBoard
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::InitScoreBoard()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "InitScoreBoard");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.InitUserName (Multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::InitUserName__Multicast_(const class FString& SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "InitUserName (Multicast)");

	Params::BP_BC_ShowCase_C_InitUserName__Multicast_ Parms{};

	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.InitUserName (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::InitUserName__Server_(const class FString& SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "InitUserName (Server)");

	Params::BP_BC_ShowCase_C_InitUserName__Server_ Parms{};

	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.InitVOIP
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::InitVOIP()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "InitVOIP");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Is Spawn Point Valid
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FTransform                       Spawn_Transform                                        (BlueprintVisible, BlueprintReadOnly, Parm, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    Valid_                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::Is_Spawn_Point_Valid(const struct FTransform& Spawn_Transform, bool* Valid_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Is Spawn Point Valid");

	Params::BP_BC_ShowCase_C_Is_Spawn_Point_Valid Parms{};

	Parms.Spawn_Transform = std::move(Spawn_Transform);

	UObject::ProcessEvent(Func, &Parms);

	if (Valid_ != nullptr)
		*Valid_ = Parms.Valid_;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsDead
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Dead_                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::IsDead(bool* Dead_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "IsDead");

	Params::BP_BC_ShowCase_C_IsDead Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Dead_ != nullptr)
		*Dead_ = Parms.Dead_;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsDestroyabe?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Destroyable_                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::IsDestroyabe_(bool* Destroyable_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "IsDestroyabe?");

	Params::BP_BC_ShowCase_C_IsDestroyabe_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Destroyable_ != nullptr)
		*Destroyable_ = Parms.Destroyable_;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsReady?
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsReady__0                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::IsReady_(bool IsReady__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "IsReady?");

	Params::BP_BC_ShowCase_C_IsReady_ Parms{};

	Parms.IsReady__0 = IsReady__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsStress
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Yes_                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::IsStress(bool* Yes_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "IsStress");

	Params::BP_BC_ShowCase_C_IsStress Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Yes_ != nullptr)
		*Yes_ = Parms.Yes_;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsTalking?
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalking__0                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::IsTalking_(bool* IsTalking__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "IsTalking?");

	Params::BP_BC_ShowCase_C_IsTalking_ Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsTalking__0 != nullptr)
		*IsTalking__0 = Parms.IsTalking__0;
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.IsTalking? (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalking__0                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::IsTalking___Server_(bool IsTalking__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "IsTalking? (Server)");

	Params::BP_BC_ShowCase_C_IsTalking___Server_ Parms{};

	Parms.IsTalking__0 = IsTalking__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Kick?
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_PCInfo                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::Kick_(const struct FSTR_PCInfo& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Kick?");

	Params::BP_BC_ShowCase_C_Kick_ Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.KickPlayer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_KickVote                    PlayerInfo                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::KickPlayer(const struct FSTR_KickVote& PlayerInfo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "KickPlayer");

	Params::BP_BC_ShowCase_C_KickPlayer Parms{};

	Parms.PlayerInfo = std::move(PlayerInfo);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.MuteID
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           SteamID                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::MuteID(const class FString& SteamID)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "MuteID");

	Params::BP_BC_ShowCase_C_MuteID Parms{};

	Parms.SteamID = std::move(SteamID);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.NewKickVote
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_PCInfo                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::NewKickVote(const struct FSTR_PCInfo& Target)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "NewKickVote");

	Params::BP_BC_ShowCase_C_NewKickVote Parms{};

	Parms.Target = std::move(Target);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnBlendOut_286DF58A484E2FD546809EACD187D7A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::OnBlendOut_286DF58A484E2FD546809EACD187D7A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnBlendOut_286DF58A484E2FD546809EACD187D7A5");

	Params::BP_BC_ShowCase_C_OnBlendOut_286DF58A484E2FD546809EACD187D7A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnCompleted_286DF58A484E2FD546809EACD187D7A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::OnCompleted_286DF58A484E2FD546809EACD187D7A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnCompleted_286DF58A484E2FD546809EACD187D7A5");

	Params::BP_BC_ShowCase_C_OnCompleted_286DF58A484E2FD546809EACD187D7A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnInterrupted_286DF58A484E2FD546809EACD187D7A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::OnInterrupted_286DF58A484E2FD546809EACD187D7A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnInterrupted_286DF58A484E2FD546809EACD187D7A5");

	Params::BP_BC_ShowCase_C_OnInterrupted_286DF58A484E2FD546809EACD187D7A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5");

	Params::BP_BC_ShowCase_C_OnNotifyBegin_286DF58A484E2FD546809EACD187D7A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             NotifyName                                             (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5(class FName NotifyName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5");

	Params::BP_BC_ShowCase_C_OnNotifyEnd_286DF58A484E2FD546809EACD187D7A5 Parms{};

	Parms.NotifyName = NotifyName;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnPlayerDeath
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class APlayerController*                PC                                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::OnPlayerDeath(class APlayerController* PC)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnPlayerDeath");

	Params::BP_BC_ShowCase_C_OnPlayerDeath Parms{};

	Parms.PC = PC;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnRep_PlayerCurrentSkin
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::OnRep_PlayerCurrentSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnRep_PlayerCurrentSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnRep_Ready?
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::OnRep_Ready_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnRep_Ready?");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnRep_Steam ID
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::OnRep_Steam_ID()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnRep_Steam ID");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.OnTrySelectTeam
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Team                                  Team                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::OnTrySelectTeam(E_Team Team)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "OnTrySelectTeam");

	Params::BP_BC_ShowCase_C_OnTrySelectTeam Parms{};

	Parms.Team = Team;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Play Sounds (Server)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USoundBase*                       Sound                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::Play_Sounds__Server_(class USoundBase* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Play Sounds (Server)");

	Params::BP_BC_ShowCase_C_Play_Sounds__Server_ Parms{};

	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.PlayerPlacement
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::PlayerPlacement()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "PlayerPlacement");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.PlayerSkin (Server)
// (Net, NetReliable, NetServer, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TArray<struct FST_DefaultSteamItem>     PlayerSkin                                             (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference)

void ABP_BC_ShowCase_C::PlayerSkin__Server_(TArray<struct FST_DefaultSteamItem>& PlayerSkin)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "PlayerSkin (Server)");

	Params::BP_BC_ShowCase_C_PlayerSkin__Server_ Parms{};

	Parms.PlayerSkin = std::move(PlayerSkin);

	UObject::ProcessEvent(Func, &Parms);

	PlayerSkin = std::move(Parms.PlayerSkin);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.PlayMontage
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::PlayMontage()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "PlayMontage");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Preview
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ShowPreview                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// struct FST_DefaultSteamItem             Item                                                   (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::Preview(bool ShowPreview, const struct FST_DefaultSteamItem& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Preview");

	Params::BP_BC_ShowCase_C_Preview Parms{};

	Parms.ShowPreview = ShowPreview;
	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ReceiveBeginPlay
// (Event, Protected, BlueprintEvent)

void ABP_BC_ShowCase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ReceivePossessed
// (BlueprintAuthorityOnly, Event, Public, BlueprintEvent)
// Parameters:
// class AController*                      NewController                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::ReceivePossessed(class AController* NewController)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "ReceivePossessed");

	Params::BP_BC_ShowCase_C_ReceivePossessed Parms{};

	Parms.NewController = NewController;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "ReceiveTick");

	Params::BP_BC_ShowCase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.RemovePreview
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::RemovePreview()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "RemovePreview");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.ServerTravel
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Delay                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::ServerTravel(double Delay)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "ServerTravel");

	Params::BP_BC_ShowCase_C_ServerTravel Parms{};

	Parms.Delay = Delay;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Slomo
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  Slomo_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::Slomo(double Slomo_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Slomo");

	Params::BP_BC_ShowCase_C_Slomo Parms{};

	Parms.Slomo_0 = Slomo_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Talk
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    IsTalking_0                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::Talk(bool IsTalking_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Talk");

	Params::BP_BC_ShowCase_C_Talk Parms{};

	Parms.IsTalking_0 = IsTalking_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateFInalSkin (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::UpdateFInalSkin__Client_()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateFInalSkin (Client)");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateGamemode
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// EGameMode                               GameMode                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateGamemode(EGameMode GameMode)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateGamemode");

	Params::BP_BC_ShowCase_C_UpdateGamemode Parms{};

	Parms.GameMode = GameMode;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateInventory
// (Net, NetReliable, HasOutParams, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_DefaultSteamItem             NewItem                                                (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateInventory(const struct FST_DefaultSteamItem& NewItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateInventory");

	Params::BP_BC_ShowCase_C_UpdateInventory Parms{};

	Parms.NewItem = std::move(NewItem);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateKickVote
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_PCInfo                      Target                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)
// bool                                    Yes_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateKickVote(const struct FSTR_PCInfo& Target, bool Yes_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateKickVote");

	Params::BP_BC_ShowCase_C_UpdateKickVote Parms{};

	Parms.Target = std::move(Target);
	Parms.Yes_ = Yes_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateMapSelection
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FName                             Selected_Level_Name                                    (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   Index_0                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateMapSelection(class FName Selected_Level_Name, int32 Index_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateMapSelection");

	Params::BP_BC_ShowCase_C_UpdateMapSelection Parms{};

	Parms.Selected_Level_Name = Selected_Level_Name;
	Parms.Index_0 = Index_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateModeInfo
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::UpdateModeInfo()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateModeInfo");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateMovement
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FST_DefaultSteamItem             ItemInfo                                               (ConstParm, BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm, ContainsInstancedReference, HasGetValueTypeHash)
// bool                                    UpdateAnim_                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    UpdateCamera_                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateMovement(const struct FST_DefaultSteamItem& ItemInfo, bool UpdateAnim_, bool UpdateCamera_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateMovement");

	Params::BP_BC_ShowCase_C_UpdateMovement Parms{};

	Parms.ItemInfo = std::move(ItemInfo);
	Parms.UpdateAnim_ = UpdateAnim_;
	Parms.UpdateCamera_ = UpdateCamera_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdatePlayerSkin (Client)
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)
// Parameters:
// EN_ShopItemSupClass                     ItemClassSup_Local_0                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// bool                                    CHANGE_ItemClassSup_Local__                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdatePlayerSkin__Client_(EN_ShopItemSupClass ItemClassSup_Local_0, bool CHANGE_ItemClassSup_Local__)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdatePlayerSkin (Client)");

	Params::BP_BC_ShowCase_C_UpdatePlayerSkin__Client_ Parms{};

	Parms.ItemClassSup_Local_0 = ItemClassSup_Local_0;
	Parms.CHANGE_ItemClassSup_Local__ = CHANGE_ItemClassSup_Local__;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateReady HUD
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Ready__0                                               (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateReady_HUD(bool Ready__0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateReady HUD");

	Params::BP_BC_ShowCase_C_UpdateReady_HUD Parms{};

	Parms.Ready__0 = Ready__0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateSaveCharacterSkin
// (Net, NetReliable, NetClient, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::UpdateSaveCharacterSkin()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateSaveCharacterSkin");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateScore
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FSTR_Score                       Score                                                  (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateScore(const struct FSTR_Score& Score)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateScore");

	Params::BP_BC_ShowCase_C_UpdateScore Parms{};

	Parms.Score = std::move(Score);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateSkel (multicast)
// (Net, NetReliable, NetMulticast, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    NewMesh                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateSkel__multicast_(class USkeletalMesh* NewMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateSkel (multicast)");

	Params::BP_BC_ShowCase_C_UpdateSkel__multicast_ Parms{};

	Parms.NewMesh = NewMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateSkel (Server)
// (Net, NetReliable, NetServer, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    NewMesh                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateSkel__Server_(class USkeletalMesh* NewMesh)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateSkel (Server)");

	Params::BP_BC_ShowCase_C_UpdateSkel__Server_ Parms{};

	Parms.NewMesh = NewMesh;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateTeamIndex (PlayerKilled)
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// E_Team                                  Team_PlayerKilled_                                     (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   MilitaryIndex                                          (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// int32                                   TerroristIndex                                         (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// E_Team                                  WiiningTeam                                            (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateTeamIndex__PlayerKilled_(E_Team Team_PlayerKilled_, int32 MilitaryIndex, int32 TerroristIndex, E_Team WiiningTeam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateTeamIndex (PlayerKilled)");

	Params::BP_BC_ShowCase_C_UpdateTeamIndex__PlayerKilled_ Parms{};

	Parms.Team_PlayerKilled_ = Team_PlayerKilled_;
	Parms.MilitaryIndex = MilitaryIndex;
	Parms.TerroristIndex = TerroristIndex;
	Parms.WiiningTeam = WiiningTeam;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateTeamXP
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Win_                                                   (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateTeamXP(bool Win_)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateTeamXP");

	Params::BP_BC_ShowCase_C_UpdateTeamXP Parms{};

	Parms.Win_ = Win_;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateTimer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// double                                  TimeCount                                              (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash)
// class FText                             NewParam                                               (BlueprintVisible, BlueprintReadOnly, Parm)

void ABP_BC_ShowCase_C::UpdateTimer(double TimeCount, const class FText& NewParam)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateTimer");

	Params::BP_BC_ShowCase_C_UpdateTimer Parms{};

	Parms.TimeCount = TimeCount;
	Parms.NewParam = std::move(NewParam);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateTransitionMap
// (Public, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::UpdateTransitionMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateTransitionMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateWarning
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           String                                                 (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, HasGetValueTypeHash)

void ABP_BC_ShowCase_C::UpdateWarning(const class FString& String)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateWarning");

	Params::BP_BC_ShowCase_C_UpdateWarning Parms{};

	Parms.String = std::move(String);

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UpdateWep (Multicast)
// (Net, NetReliable, NetMulticast, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class USkeletalMesh*                    NewMesh                                                (BlueprintVisible, BlueprintReadOnly, Parm, ZeroConstructor, NoDestructor, HasGetValueTypeHash)
// TArray<class UMaterialInterface*>       CustomMaterials                                        (BlueprintVisible, BlueprintReadOnly, Parm, OutParm, ReferenceParm)

void ABP_BC_ShowCase_C::UpdateWep__Multicast_(class USkeletalMesh* NewMesh, TArray<class UMaterialInterface*>& CustomMaterials)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UpdateWep (Multicast)");

	Params::BP_BC_ShowCase_C_UpdateWep__Multicast_ Parms{};

	Parms.NewMesh = NewMesh;
	Parms.CustomMaterials = std::move(CustomMaterials);

	UObject::ProcessEvent(Func, &Parms);

	CustomMaterials = std::move(Parms.CustomMaterials);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Upload Steam Save
// (BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::Upload_Steam_Save()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Upload Steam Save");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.Upload Steam Save Done__DelegateSignature
// (Public, Delegate, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::Upload_Steam_Save_Done__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "Upload Steam Save Done__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_BC_ShowCase.BP_BC_ShowCase_C.UserConstructionScript
// (Event, Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void ABP_BC_ShowCase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_BC_ShowCase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}

}

